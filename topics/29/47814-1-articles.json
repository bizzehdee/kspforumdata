{"TopicId":47814,"ForumId":29,"TopicTitle":"Drawing lines? Complete Noob Question","CreatedByName":"noonespecial","CreatedById":81942,"CreatedDateTime":"2013-10-09T14:08:25Z","PageNum":1,"Articles":[{"CreatedByName":"noonespecial","CreatedById":81942,"CreatedDateTime":"2013-10-09T14:08:25Z","Content":"\n\u003Cp\u003EI\u0027m rather familiar with OOP, I\u0027m more familiar with VB and C\u002B\u002B than with C#, but I\u0027m getting the hang of it, it\u0027s not too difficult.\u003C/p\u003E\u003Cp\u003EHowever, I\u0027m more of an active/visual learner and have always found examples more beneficial than documentation. I usually only use documentation as a reference to understand examples, because without a context to put something into, I often have difficulty conceptualizing things.\u003C/p\u003E\u003Cp\u003EThat being said, I have an idea for a mod and I\u0027ve been tinkering around in Visual Studio and KSP for a little over a week. I\u0027ve gotten used to the basics, and have had success building GUIs and Windows to display information and such. But the one thing that has eluded me is the ability to draw something in space. Examples, MechJeb\u0027s Landing Marker, LazerTech lasers and planet markers, Hydrotech, etc etc and so forth. \u003C/p\u003E\u003Cp\u003EThus far I\u0027ve had moderate success with using LineRenderer, but have run into a limitation as Unity only allows a single instance to be attached to a gameobject and I\u0027ve yet to figure a work around. I\u0027ve had zero success using GL. I\u0027ve tried using examples from the Unity Reference and have yet to see anything displayed on screen.\u003C/p\u003E\u003Cp\u003EI\u0027ve spent the last few days digging through MechJeb\u0027s source code to figure out how to draw something as simple as Square or Triangle in front of the vessel, but have thus far been unable to accomplish anything displaying on the screen.\u003C/p\u003E\u003Cp\u003EAnyone care to point me in the right direction or know of a simple straight forward example I can play around with to figure out how it works?\u003C/p\u003E\u003Cp\u003EThanks again, NOS\u003C/p\u003E\n"},{"CreatedByName":"noonespecial","CreatedById":81942,"CreatedDateTime":"2013-10-10T17:15:55Z","Content":"\n\u003Cp\u003EHere is an example of the test I\u0027m doing with GL. Thus far, I\u0027ve been completely unable to have anything display on the screen and no errors appear in the log. I don\u0027t know if I\u0027m doing the material wrong, the GL calls wrong, or if the position is wrong. Any advice?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[KSPAddon(KSPAddon.Startup.Flight, false)]\u003Cbr\u003E    public class GLTest : PartModule\u003Cbr\u003E    {\u003Cbr\u003E        static Material lineMaterial;\u003Cbr\u003E        static void CreateLineMaterial()\u003Cbr\u003E        {\u003Cbr\u003E            if (!lineMaterial)\u003Cbr\u003E            {\u003Cbr\u003E                lineMaterial = new Material(\u0022Shader \\\u0022Lines/Colored Blended\\\u0022 {\u0022 \u002B\u003Cbr\u003E                    \u0022SubShader { Pass { \u0022 \u002B\u003Cbr\u003E                    \u0022    Blend SrcAlpha OneMinusSrcAlpha \u0022 \u002B\u003Cbr\u003E                    \u0022    ZWrite Off Cull Off Fog { Mode Off } \u0022 \u002B\u003Cbr\u003E                    \u0022    BindChannels {\u0022 \u002B\u003Cbr\u003E                    \u0022      Bind \\\u0022vertex\\\u0022, vertex Bind \\\u0022color\\\u0022, color }\u0022 \u002B\u003Cbr\u003E                    \u0022} } }\u0022);\u003Cbr\u003E                lineMaterial.hideFlags = HideFlags.HideAndDontSave;\u003Cbr\u003E                lineMaterial.shader.hideFlags = HideFlags.HideAndDontSave;\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        public void OnPostRender() \u003Cbr\u003E        {\u003Cbr\u003E\u003Cbr\u003E            Vector3 firstPosition = transform.position;\u003Cbr\u003E\u003Cbr\u003E\t        CreateLineMaterial();\u003Cbr\u003E\t        lineMaterial.SetPass( 0 );\u003Cbr\u003E\t        GL.Begin( GL.LINES );\u003Cbr\u003E\t        GL.Color(Color.red);\u003Cbr\u003E\t        GL.Vertex3(firstPosition.x, firstPosition.y, firstPosition.z);\u003Cbr\u003E            GL.Color(Color.black);\u003Cbr\u003E            GL.Vertex3(firstPosition.x * 2, firstPosition.y * 2, firstPosition.z * 2);\u003Cbr\u003E            GL.Color(Color.blue);\u003Cbr\u003E            GL.Vertex3(firstPosition.x * 4, firstPosition.y * 4, firstPosition.z * 4);\u003Cbr\u003E            GL.Color(Color.cyan);\u003Cbr\u003E            GL.Vertex3(firstPosition.x * 8, firstPosition.y * 8, firstPosition.z * 8);\u003Cbr\u003E            GL.Color(Color.gray);\u003Cbr\u003E            GL.Vertex3(firstPosition.x * -2, firstPosition.y * -2, firstPosition.z * -2);\u003Cbr\u003E            GL.Color(Color.green);\u003Cbr\u003E            GL.Vertex3(firstPosition.x * -4, firstPosition.y * -4, firstPosition.z * -4);\u003Cbr\u003E            GL.Color(Color.magenta);\u003Cbr\u003E            GL.Vertex3(firstPosition.x * -8, firstPosition.y * -8, firstPosition.z * -8);\u003Cbr\u003E\t        GL.End();\u003Cbr\u003E        }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EP.S. Yes, I have a part on the ship. I\u0027ve had limited success with LineRenderer showing a line extending from the ship, but have been unable (yet) to figure out how to effectively manipulate the resulting line from LineRenderer.\u003C/p\u003E\n"},{"CreatedByName":"leoshnoire","CreatedById":100557,"CreatedDateTime":"2014-01-15T16:02:37Z","Content":"\n\u003Cp\u003EInteresting, I\u0027ve attempted to do the same, both in KSP and in the actual Unity engine, I have not had any luck drawing lines nor quads to any effect. Apparently the GL calls do require you to have Unity Pro, which would explain this setup not working in the engine; however, it is very peculiar that it would not work with KSP (being built in Pro), either through some fluke of its design or whatnot. \u003C/p\u003E\u003Cp\u003EIf nothing else, you may want to try using Unity\u0027s \u003Ca href=\u0022http://docs.unity3d.com/Documentation/ScriptReference/LineRenderer.html\u0022 rel=\u0022external nofollow\u0022\u003ELineRenderer \u003C/a\u003Eclass to achieve the same; it should provide similar (if not greater) functionality than what hand-coded OpenGL can achieve.\u003C/p\u003E\n"},{"CreatedByName":"owensm0132","CreatedById":100958,"CreatedDateTime":"2014-01-16T19:09:30Z","Content":"\n\u003Cp\u003EI have not tried it but the wiki has code for drawing lines (under the Visual Debugging)\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Module_code_examples\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://wiki.kerbalspaceprogram.com/wiki/Module_code_examples\u003C/a\u003E\u003C/p\u003E\n"}]}