{"TopicId":183094,"ForumId":29,"TopicTitle":"Need to rotate vessel when recovering in KCT","CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2019-03-24T20:06:26Z","PageNum":1,"Articles":[{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2019-03-24T20:06:26Z","Content":"\n\u003Cp style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003E\nHi,\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003E\nI\u0027m now supporting KCT, and there is a long-standing bug I\u0027m looking in to.\u00A0 The issue is that when KCT recovers a plane and stores it, when it is relaunched it is vertical on it\u0027s tail, same goes for when editing the stored craft.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003E\nI\u0027m pretty sure it\u0027s a result of the\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022SpacePlane Hangar\u0022\u003ESPH\u003C/abbr\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Ebeing rotated 90 degrees from the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E\u00A0(ie:\u00A0 load a vessel in the\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E, switch to the\u003Cspan\u003E\u00A0\u003C/span\u003E\u003Cabbr style=\u0022border-bottom:none;\u0022 title=\u0022SpacePlane Hangar\u0022\u003ESPH\u003C/abbr\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eand click the root part, the vessel flips 90 degrees).\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003E\nSo, what I think I need\u003Cspan\u003E\uFEFF\u003C/span\u003E\u003Cspan\u003E\u00A0\u003C/span\u003Eto do is to flip the plane -90 degrees when recovering it.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003E\nBut this is dealing with Quaternions, and I have no idea what to do.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003E\nCan anyone help?\u00A0 Assume the active vessel is being recovered (FlightGlobals.ActiveVessels) and it\u0027s a plane.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003E\nThanks in advance\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-03-26T22:42:19Z\u0022 title=\u002203/26/2019 10:42  PM\u0022 data-short=\u00225 yr\u0022\u003EMarch 26, 2019\u003C/time\u003E by linuxgurugamer\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2019-03-26T19:55:09Z","Content":"\n\u003Cp\u003E\nFollowing up on this, I\u0027ve gotten the following code:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Evar vessel = FlightGlobals.ActiveVessel;\nvessel.GoOnRails();\nvar originalUp = FlightGlobals.getUpAxis();\nvar newUp = new Vector3(90,0,0); // Get the vector of the rotation, I suppose it could be 1 here\n\n// adjust vessel rotation based on how much the up direction changed\nvar diff = Quaternion.FromToRotation(originalUp, newUp);\n\nvessel.SetRotation(diff * vessel.transform.rotation);\nvessel.GoOffRails();\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nwhich is being run just before the vessel gets recovered.\u00A0 Unfortunately, it\u0027s not doing anything that I can see.\u00A0 Right now, I just want to see it rotated in any direction, once I have that, it will be easy to get the correct rotation.\n\u003C/p\u003E\n"},{"CreatedByName":"peteletroll","CreatedById":144573,"CreatedDateTime":"2019-03-26T21:56:29Z","Content":"\n\u003Cp\u003E\nWhen a vessel is on rails, the position of the parts is stored in orgPos and orgRot. Probably they have to be changed.\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2019-03-26T22:14:44Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223569377\u0022 data-ipsquote-contentid=\u0022183094\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221553637389\u0022 data-ipsquote-userid=\u0022144573\u0022 data-ipsquote-username=\u0022peteletroll\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n17 minutes ago, peteletroll said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhen a vessel is on rails, the position of the parts is stored in orgPos and orgRot. Probably they have to be changed.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nBut I don\u0027t want the parts.\u00A0 The whole idea of putting the vessel on rails is to only change the vessel\u0027s rotation.\n\u003C/p\u003E\n"},{"CreatedByName":"peteletroll","CreatedById":144573,"CreatedDateTime":"2019-03-27T08:48:50Z","Content":"\n\u003Cp\u003E\n\u0022Vessel\u0022 is just a set of parts, connected by joints when in flight. When you go on rails, the physical part of the vessel disappears, and the vessel becomes a set of parts placed according to orgPos and orgRot. orgPos and orgRot are relative to root part, so root part has orgPos = Vector3.zero and orgRot = Quaternion.identity.\n\u003C/p\u003E\n\u003Cp\u003E\nThis applies when KSP itself puts a vessel on rails. You\u0027re calling goOnRails() explicitly, so YMMV.\n\u003C/p\u003E\n"},{"CreatedByName":"taniwha","CreatedById":57176,"CreatedDateTime":"2019-03-27T10:52:42Z","Content":"\n\u003Cp\u003E\nOnce you know their secret, rotation with quaternions is actually very easy to understand since they are compressed rotation matrices.\n\u003C/p\u003E\n\u003Cp\u003E\nThe secret: the x,y,z components form the rotation axis, but scaled by the sine of the half-angle. The w component is the cosine of the half-angle. Thus, if you want to rotate by 90 degrees around the X-axis, you set x,y,z to sqrt(0.5),0,0 and w to sqrt(0.5) (ie, sin and cos of 45 degrees because of the half angle). The direction of rotation follows the left-hand rule in Unity (because Unity defaults to a left-handed system). Thus I think the desired quaternion for this problem is sqrt(0.5), 0, 0, sqrt(0.5) (might need to negate x).\n\u003C/p\u003E\n\u003Cp\u003E\n0, 0, 0, 1 = unrotated\n\u003C/p\u003E\n\u003Cp\u003E\n0, 0, 1, 0 = 180 degrees around Z\n\u003C/p\u003E\n\u003Cp\u003E\n0, 0.5,\u00A0 0, sqrt(3)/2 = 60 degrees clockwise around Y (remember, left-hand rule, and half angle, so sin(30) and cos(30) instead of 60)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2019-03-27T12:15:12Z","Content":"\n\u003Cp\u003E\nI finally got it working properly, thanks to you.\n\u003C/p\u003E\n\u003Cp\u003E\nTurns out that there were two problems.\u00A0 The first was that I was setting the rotation in one place without realizing that further down in the code, it was resetting the rotation.\n\u003C/p\u003E\n\u003Cp\u003E\nThe second was that the original code for this was from a very old mod called InflightShipSave, by Claw.\u00A0 In that one, he doesn\u0027t bother to check to see if the vessel is a plane, and this mod and another, the Ship Save Splicer, both use the same bit of code\n\u003C/p\u003E\n\u003Cp\u003E\nFor anyone who might be interested, here is the method in question:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eprivate ConfigNode FromInFlightVessel(Vessel VesselToSave, KCT_BuildListVessel.ListType listType)\n{\n    //This code is taken from InflightShipSave by Claw, using the CC-BY-NC-SA license.\n    //This code thus is licensed under the same license, despite the GPLv3 license covering original KCT code\n    //See https://github.com/ClawKSP/InflightShipSave\n\n    string ShipName = VesselToSave.vesselName;\n    // Debug.LogWarning(\u0022Saving: \u0022 \u002B ShipName);\n\n    ShipConstruct ConstructToSave = new ShipConstruct(ShipName, \u0022\u0022, VesselToSave.parts[0]);\n\n    Quaternion OriginalRotation = VesselToSave.vesselTransform.rotation;\n    Vector3 OriginalPosition = VesselToSave.vesselTransform.position;\n\n    if (listType == ListType.SPH)\n    {\n        // This first line is from the original mod:\n        //VesselToSave.SetRotation(new Quaternion(0, 0, 0, 1)); //TODO: Figure out the orientation this should be\n\n        // This is the updated line, thanks to @Taniwha\n        VesselToSave.SetRotation(new Quaternion((float)Math.Sqrt(0.5), 0, 0, (float)Math.Sqrt(0.5)));\n    }\n    else\n    {\n        VesselToSave.SetRotation(new Quaternion(0, 0, 0, 1));\n    }\n    Vector3 ShipSize = ShipConstruction.CalculateCraftSize(ConstructToSave);\n    VesselToSave.SetPosition(new Vector3(0, Math.Min(ShipSize.y \u002B 2, 30), 0)); //Try to limit the max height we put the ship at. 60 is good for the VA but I don\u0027t know about the SPH. Lets be conservative with 30\n\n    ConfigNode CN = new ConfigNode(\u0022ShipConstruct\u0022);\n    CN = ConstructToSave.SaveShip();\n    SanitizeShipNode(CN);\n\n    VesselToSave.SetRotation(OriginalRotation);\n    VesselToSave.SetPosition(OriginalPosition);\n    //End of Claw\u0027s code. Thanks Claw!\n    return CN;\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}