{"TopicId":156959,"ForumId":29,"TopicTitle":"Vessel Modules seem to run for inactive vessels now...","CreatedByName":"soulsource","CreatedById":110576,"CreatedDateTime":"2017-02-25T17:57:20Z","PageNum":1,"Articles":[{"CreatedByName":"soulsource","CreatedById":110576,"CreatedDateTime":"2017-02-25T17:57:20Z","Content":"\n\u003Cp\u003E\nI\u0027ve been playing around with the profiler to see why my modded KSP install is stuttering, and noticed that I get more than 500 calls per frame to OnGUI() - each creating a little bit (384 bytes) of garbage. After a little digging I could track this down to vessel modules running on vessels that are not loaded (including asteroids).\n\u003C/p\u003E\n\u003Cp\u003E\nThis of course made me curious about what\u0027s going on here, so I made a test mod that does nothing but print the vessels on which it is currently running:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-javascript prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eusing \u003C/span\u003E\u003Cspan\u003EUnityEngine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nusing KSP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\nnamespace \u003C/span\u003E\u003Cspan\u003ETestmod\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eclass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ETestmod\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EVesselModule\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n       \n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EUpdate\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan\u003EDebug\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ELog\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Testmod running for vessel: \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EGetComponent\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003EVessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;());\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ethis\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eenabled \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nSure enough, after adding it to a fresh KSP installation, starting a new Sandbox game, and launching a craft, the log started showing interesting things:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n(Filename: /home/builduser/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 42)\n\nTestmod running for vessel: mk1pod (Vessel)\n \n(Filename: /home/builduser/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 42)\n\nTestmod running for vessel: Ast. HSJ-227 (unloaded) (Vessel)\n \n(Filename: /home/builduser/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 42)\n\nTestmod running for vessel: Ast. CMP-717 (unloaded) (Vessel)\u003C/pre\u003E\n\u003Cp\u003E\nBut this was not all. I would have expected the vessel module to disable itself after one frame, but the log output went on, and on, and on... Obviously KSP keeps re-enabling all vessel modules every frame, so even disabling those beasts is not an option.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nLong story short: I\u0027m pretty certain that (at least with KSP 1.2.2) vessel modules are running for all vessels and cannot be disabled easily. One has to make sure not to place any code that causes garbage or heavy load into those classes, especially bad are functions that cause garbage whenever they are being called, even if they return immediately, like \u003Ca href=\u0022https://forum.unity3d.com/threads/garbage-collector-spikes-because-of-gui.60217/\u0022 rel=\u0022external nofollow\u0022\u003EOnGUI()\u003C/a\u003E.\n\u003C/p\u003E\n"},{"CreatedByName":"MatterBeam","CreatedById":133334,"CreatedDateTime":"2017-02-25T20:45:24Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222967502\u0022 data-ipsquote-contentid=\u0022156959\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221488045440\u0022 data-ipsquote-userid=\u0022110576\u0022 data-ipsquote-username=\u0022soulsource\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, soulsource said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027ve been playing around with the profiler to see why my modded KSP install is stuttering, and noticed that I get more than 500 calls per frame to OnGUI() - each creating a little bit (384 bytes) of garbage. After a little digging I could track this down to vessel modules running on vessels that are not loaded (including asteroids).\n\u003C/p\u003E\n\u003Cp\u003E\nThis of course made me curious about what\u0027s going on here, so I made a test mod that does nothing but print the vessels on which it is currently running:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-javascript prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003Eusing \u003C/span\u003E\u003Cspan\u003EUnityEngine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nusing KSP\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\nnamespace \u003C/span\u003E\u003Cspan\u003ETestmod\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eclass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ETestmod\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EVesselModule\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n       \n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EUpdate\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan\u003EDebug\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ELog\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Testmod running for vessel: \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EGetComponent\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003EVessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;());\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ethis\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eenabled \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nSure enough, after adding it to a fresh KSP installation, starting a new Sandbox game, and launching a craft, the log started showing interesting things:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n\n(Filename: /home/builduser/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 42)\n\nTestmod running for vessel: mk1pod (Vessel)\n \n(Filename: /home/builduser/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 42)\n\nTestmod running for vessel: Ast. HSJ-227 (unloaded) (Vessel)\n \n(Filename: /home/builduser/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 42)\n\nTestmod running for vessel: Ast. CMP-717 (unloaded) (Vessel)\u003C/pre\u003E\n\u003Cp\u003E\nBut this was not all. I would have expected the vessel module to disable itself after one frame, but the log output went on, and on, and on... Obviously KSP keeps re-enabling all vessel modules every frame, so even disabling those beasts is not an option.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nLong story short: I\u0027m pretty certain that (at least with KSP 1.2.2) vessel modules are running for all vessels and cannot be disabled easily. One has to make sure not to place any code that causes garbage or heavy load into those classes, especially bad are functions that cause garbage whenever they are being called, even if they return immediately, like \u003Ca href=\u0022https://forum.unity3d.com/threads/garbage-collector-spikes-because-of-gui.60217/\u0022 rel=\u0022external nofollow\u0022\u003EOnGUI()\u003C/a\u003E.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAs a mod user experiencing stutter, what can I do to prevent OnGui from having this effect?\n\u003C/p\u003E\n\u003Cp\u003E\nHow do I even identify which mods use this function?\n\u003C/p\u003E\n"},{"CreatedByName":"soulsource","CreatedById":110576,"CreatedDateTime":"2017-02-25T20:56:05Z","Content":"\n\u003Cp\u003E\nAs a pure user, I\u0027m afraid there is not much one can do, except to wait for mod authors to provide updates....\n\u003C/p\u003E\n\u003Cp\u003E\nIf you are willing to code a bit, you can of course work around the issue yourself, once you know which mod is causing it. If you are motivated to do this, the developers surely will be happy to accept pull requests for fixes on GitHub.\n\u003C/p\u003E\n\u003Cp\u003E\nThe way I found out which mods cause the issue was by \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/102909-ksp-plugin-debugging-and-profiling-for-visual-studio-and-monodevelop-on-all-os/\u0022 rel=\u0022\u0022\u003Eprofiling\u003C/a\u003E KSP with mods installed, and checking where all the garbage came from. If you are lucky the mod causing your issues is doing this not via OnGUI(), but via some of the numerous *Update() methods. In that case, the Unity Profiler will tell you which class is causing the problem, and which function, so it\u0027s rather easy to find. If you have problems caused by too many OnGUI() calls, the situation is different. Sadly, I did not (yet) manage to get more information out of the profiler than how much garbage all OnGUI() calls together are causing, and how many OnGUI() calls there are in total, and figuring out which mods caused them was then a matter of uninstalling them one by one...\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-02-25T20:58:04Z\u0022 title=\u002202/25/2017 08:58  PM\u0022 data-short=\u00227 yr\u0022\u003EFebruary 25, 2017\u003C/time\u003E by soulsource\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2017-02-26T03:36:55Z","Content":"\n\u003Cp\u003E\nThis is concerning, I\u0027m currently working on converting all my mods over to use VesselModule as it offers me some nice options.\n\u003C/p\u003E\n\u003Cp\u003E\nNow I\u0027m also moving to the new GUI when I do this so I won\u0027t be calling OnGUI, but is there any trick for determining code that will cause garbage? I don\u0027t want to get everything finished and the profiler show me I\u0027m spilling memory everywhere.\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n"},{"CreatedByName":"soulsource","CreatedById":110576,"CreatedDateTime":"2017-02-26T10:20:24Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222968005\u0022 data-ipsquote-contentid=\u0022156959\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221488080215\u0022 data-ipsquote-userid=\u002281549\u0022 data-ipsquote-username=\u0022Diazo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 26.2.2017 at 4:36 AM, Diazo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nis there any trick for determining code that will cause garbage?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThere are some tutorials on the internet, on which things to avoid in code, the rest comes with experience. A good starting point is the \u003Ca href=\u0022https://docs.unity3d.com/Manual/UnderstandingAutomaticMemoryManagement.html\u0022 rel=\u0022external nofollow\u0022\u003EUnity Documentation about Memory Management\u003C/a\u003E, and the tutorial on \u003Ca href=\u0022https://unity3d.com/learn/tutorials/temas/performance-optimization/optimizing-garbage-collection-unity-games\u0022 rel=\u0022external nofollow\u0022\u003EOptimizing Garbage Collection in Unity Games\u003C/a\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nIn principle all sources for garbage are some kind of object creation, but many of them are not obvious, or happen under Unity\u0027s hood. Examples for non-obvious sources of garbage (apart from \u003Ca href=\u0022https://forum.unity3d.com/threads/garbage-collector-spikes-because-of-gui.60217/\u0022 rel=\u0022external nofollow\u0022\u003EOnGUI() calls\u003C/a\u003E) are string concatenation, \u003Ca href=\u0022http://jacksondunstan.com/articles/3250\u0022 rel=\u0022external nofollow\u0022\u003Eforeach\u003C/a\u003E loops, most \u003Ca href=\u0022http://theinstructionlimit.com/top-sources-of-heap-garbage\u0022 rel=\u0022external nofollow\u0022\u003ELINQ-functions\u003C/a\u003E, and \u003Ca href=\u0022https://stackoverflow.com/questions/1582754/does-using-a-delegate-create-garbage\u0022 rel=\u0022external nofollow\u0022\u003Edelegate creation\u003C/a\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nEdit (2017-04-09): \u003Cs\u003EThere is also a Visual Studio extension available through NuGet, which can highlight heap allocations in the code. Sadly I don\u0027t remember how it was called...\u003C/s\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nEdit (2017-04-10): I mixed up something. The tool I was thinking of was actually an extension to ReSharper, and it\u0027s called \u003Ca href=\u0022https://blog.jetbrains.com/dotnet/2014/06/06/heap-allocations-viewer-plugin/\u0022 rel=\u0022external nofollow\u0022\u003EHeap Allocations Viewer\u003C/a\u003E.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-04-10T08:43:38Z\u0022 title=\u002204/10/2017 08:43  AM\u0022 data-short=\u00227 yr\u0022\u003EApril 10, 2017\u003C/time\u003E by soulsource\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2017-02-26T18:28:38Z","Content":"\n\u003Cp\u003E\nFirst, yes they do. It was one of the documented feature of 1.2\n\u003C/p\u003E\n\u003Cp\u003E\nAs for the OnGUI they memory show up either under GUI.Repaint for those who do straight GUI.xxxx call or under the sub category GUI.CallWindowDelegate for those that uses\u00A0GUILayout.Window.\n\u003C/p\u003E\n\u003Cp\u003E\nHere is a screenshot of \u003Cabbr title=\u0022Mechjeb (mod)\u0022\u003EMJ\u003C/abbr\u003E uses with the profiling code enabled.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you do not want OnGUI to be called from a VesselModule then you need to not add it (or disable the object but you stop the whole module from running).\u00A0KSPAddon is a better choice than VesselModule for addon GUI, with\u00A0VesselModule you could end up with 2 GUI overlapping when you have 2 ship nearby.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022auzw7hy.png\u0022 class=\u0022ipsImage\u0022 height=\u0022493\u0022 src=\u0022https://i.imgur.com/auzw7hy.png\u0022 width=\u00221000\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Rodhern","CreatedById":144074,"CreatedDateTime":"2017-03-12T00:24:31Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222967502\u0022 data-ipsquote-contentid=\u0022156959\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221488045440\u0022 data-ipsquote-userid=\u0022110576\u0022 data-ipsquote-username=\u0022soulsource\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 2/25/2017 at 6:57 PM, soulsource said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nLong story short: I\u0027m pretty certain that (at least with KSP 1.2.2) vessel modules are running for all vessels and cannot be disabled easily.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI notice that you can override \u0027GetActivation\u0027, but I don\u0027t think it makes any difference. As far as I can tell all vessels get a node in the persistence file to represent the vessel module as well. Should I consider those nodes negligible bloat, or is it best to stay clear of vessel modules for \u0027everyday vessel tracking\u0027?\n\u003C/p\u003E\n\u003Cp\u003E\nSarbian mentioned \u0022disable the object\u0022; how would I do that?\n\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2017-03-12T04:11:28Z","Content":"\n\u003Cp\u003E\nI\u0027m just going to add a if(flightglobals.ActiveVessel == vesselmodule.vessel) check at the start of my logic and call it good enough.\n\u003C/p\u003E\n\u003Cp\u003E\nThat way the VesselModule only \u0022runs\u0022 when it\u0027s attached to the focus vessel.\n\u003C/p\u003E\n\u003Cp\u003E\nAlternatively, you can check against the OffRails state for VesselModules that you want to run on vessels that are loaded and within physics range.\n\u003C/p\u003E\n\u003Cp\u003E\nNote you need to minimized the usage of the built-in Unity methods though, those still run every frame and you don\u0027t want to call them if you don\u0027t need to.\n\u003C/p\u003E\n\u003Cp\u003E\nCompared to everything else running, a single IF statement isn\u0027t going to matter in terms of load.\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2017-03-12T09:24:21Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222983034\u0022 data-ipsquote-contentid=\u0022156959\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221489278271\u0022 data-ipsquote-userid=\u0022144074\u0022 data-ipsquote-username=\u0022Rodhern\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 hours ago, Rodhern said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI notice that you can override \u0027GetActivation\u0027, but I don\u0027t think it makes any difference. As far as I can tell all vessels get a node in the persistence file to represent the vessel module as well. Should I consider those nodes negligible bloat, or is it best to stay clear of vessel modules for \u0027everyday vessel tracking\u0027?\n\u003C/p\u003E\n\u003Cp\u003E\nSarbian mentioned \u0022disable the object\u0022; how would I do that?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003Cdiv\u003E\n\u003Cdiv\u003E\n\u003Cdiv title=\u0022Protected by Grammarly\u0022\u003E\n\u00A0\n\u003C/div\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIf you start disabling stuff that is meant to run then you will start breaking stock and modded game. For example the whole comm network requires the vessel module to run for all vessels.\n\u003C/p\u003E\n"},{"CreatedByName":"Rodhern","CreatedById":144074,"CreatedDateTime":"2017-03-12T10:50:02Z","Content":"\n\u003Cp\u003E\nThank you, Soulsource, Sarbian and Diazo,\u00A0for your answers and hints.\n\u003C/p\u003E\n"},{"CreatedByName":"dueb","CreatedById":65409,"CreatedDateTime":"2017-04-10T05:05:38Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222968183\u0022 data-ipsquote-contentid=\u0022156959\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221488104424\u0022 data-ipsquote-userid=\u0022110576\u0022 data-ipsquote-username=\u0022soulsource\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 26/02/2017 at 11:20 AM, soulsource said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nEdit (2017-04-09): There is also a Visual Studio extension available through NuGet, which can highlight heap allocations in the code. Sadly I don\u0027t remember how it was called...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI think you\u0027re referring to \u003Ca href=\u0022https://marketplace.visualstudio.com/items?itemName=MukulSabharwal.ClrHeapAllocationAnalyzer\u0022 rel=\u0022external nofollow\u0022\u003EClr Heap Allocation Analyzer\u003C/a\u003E. Am I right?\n\u003C/p\u003E\n\u003Cp\u003E\nIn any case: thank you! \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"soulsource","CreatedById":110576,"CreatedDateTime":"2017-04-10T08:44:41Z","Content":"\n\u003Cp\u003E\nNope. I mixed up something yesterday. Today, at work, I could look it up, and it\u0027s the ReSharper plugin \u0022\u003Ca href=\u0022https://blog.jetbrains.com/dotnet/2014/06/06/heap-allocations-viewer-plugin/\u0022 rel=\u0022external nofollow\u0022\u003EHeap Allocations Viewer\u003C/a\u003E\u0022.\n\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2017-04-10T09:22:14Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223016145\u0022 data-ipsquote-contentid=\u0022156959\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221491813881\u0022 data-ipsquote-userid=\u0022110576\u0022 data-ipsquote-username=\u0022soulsource\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n36 minutes ago, soulsource said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNope. I mixed up something yesterday. Today, at work, I could look it up, and it\u0027s the ReSharper plugin \u0022\u003Ca href=\u0022https://blog.jetbrains.com/dotnet/2014/06/06/heap-allocations-viewer-plugin/\u0022 rel=\u0022external nofollow\u0022\u003EHeap Allocations Viewer\u003C/a\u003E\u0022.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe VS one does it but is not maintained. The resharper one is maintained but require resharper \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"dueb","CreatedById":65409,"CreatedDateTime":"2017-04-10T09:53:24Z","Content":"\n\u003Cp\u003E\nThank you for the clarifications! \u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022;)\u0022\u003E\u003C/p\u003E\n"}]}