{"TopicId":39544,"ForumId":29,"TopicTitle":"Getting Planet Texture","CreatedByName":"tobyb121","CreatedById":76289,"CreatedDateTime":"2013-07-27T23:53:29Z","PageNum":1,"Articles":[{"CreatedByName":"tobyb121","CreatedById":76289,"CreatedDateTime":"2013-07-27T23:53:29Z","Content":"\n\u003Cp\u003EHi I\u0027m working on my first project and I\u0027ve hit a bit of a block. I\u0027m trying to build something like the chem cam on the Mars rover (it fires a high power lazer at rock and analyses the rock based on the spectrum). I\u0027ve built my part model and it imports into ksp properly and I\u0027m now working on the code.\u003C/p\u003E\u003Cp\u003ESo far I\u0027ve got my animations working and I can get it to draw a lazer when it\u0027s within range (20m) of a planet.\u003C/p\u003E\u003Cp\u003EI\u0027m using a raycast to detect if I\u0027m in range of the planet and then looking at the name of the transform of the associated collider mesh to find the name of the planet, then checking from a list of planets to see what the ray is colliding with.\u003C/p\u003E\u003Cp\u003EThe problem I\u0027m having is that I wanted to use colour of the texture at the pixel where the ray collides to generate the composition of the rock (so that for example if it was on duna and the colour was orange it would be silicon/iron based or it was white then it would ice or something), using something like \u003Ca href=\u0022http://docs.unity3d.com/Documentation/ScriptReference/RaycastHit-textureCoord.html\u0022 rel=\u0022external nofollow\u0022\u003Ethis\u003C/a\u003E. I can get a reference to the texture using hitInfo.collider.renderer.sharedMaterial.mainTexture but when I then try and access the pixel data from it I get an error:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EUnityException: Texture \u0027KerbinScaledSpace300\u0027 is not readable, the texture memory can not be accessed from scripts. You can make the texture readable in the Texture Import Settings.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESo it seems that my method isn\u0027t going to work. Does anyone have any idea of how else I might get the colour of the planet texture where my ship is? I\u0027m thinking if I can\u0027t get it work I could use the latitude and logitude and make a low-res map of the minerals of a planet, but this will bloat the mod and probably won\u0027t give great results.\u003C/p\u003E\u003Cp\u003EThis is the code I\u0027ve got so far, the error comes at the line: Color col=tex.GetPixel(x,y);\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eprivate void fireChemCam()\u003Cbr\u003E        {\u003Cbr\u003E            if (camState == ChemCamState.Open)\u003Cbr\u003E            {\u003Cbr\u003E                RaycastHit hitInfo;\u003Cbr\u003E                if (Physics.Raycast(lazerRenderer.transform.position, lazerRenderer.transform.forward, out hitInfo))\u003Cbr\u003E                {\u003Cbr\u003E                    string target = hitInfo.collider.gameObject.name;\u003Cbr\u003E                    int planetId = PlanetNames.IndexOf(target);\u003Cbr\u003E                    print(\u0022Collided With: \u0022 \u002B target);\u003Cbr\u003E                    Texture2D tex = hitInfo.collider.renderer.sharedMaterial.mainTexture as Texture2D;\u003Cbr\u003E                    print(\u0022Texture Dims: \u0022\u002Btex.width.ToString()\u002B\u0022, \u0022\u002Btex.height.ToString());\u003Cbr\u003E                    int x=tex.width*hitInfo.textureCoord.x;\u003Cbr\u003E                    int y=tex.height*hitInfo.textureCoord.y;\u003Cbr\u003E                    Color col=tex.GetPixel(x,y);\u003Cbr\u003E                    print(\u0022R:\u0022\u002Bcol.r.ToString()\u002B\u0022,G:\u0022\u002Bcol.g.ToString()\u002B\u0022,B:\u0022\u002Bcol.b.ToString());\u003Cbr\u003E                    if (planetId\u0026gt;-1\u0026amp;\u0026amp;hitInfo.distance \u0026lt; 20 \u0026amp;\u0026amp; (GetAvailableResource(\u0022ElectricCharge\u0022) \u0026gt;= 200))\u003Cbr\u003E                    {\u003Cbr\u003E                        camState = ChemCamState.Firing;\u003Cbr\u003E                        RequestResource(\u0022ElectricCharge\u0022, 200);\u003Cbr\u003E                        lazerRenderer.enabled = true;\u003Cbr\u003E                        _firing = 6;\u003Cbr\u003E                    }\u003Cbr\u003E                }\u003Cbr\u003E                else _print(\u0022no Hit\u0022);\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAny ideas would be greatly appreciated,\u003C/p\u003E\u003Cp\u003EThanks in advance,\u003C/p\u003E\u003Cp\u003Etobyb121\u003C/p\u003E\n"},{"CreatedByName":"floufy","CreatedById":81179,"CreatedDateTime":"2013-09-02T17:46:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tobyb121\u0022 data-cite=\u0022tobyb121\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThe problem I\u0027m having is that I wanted to use colour of the texture at the pixel where the ray collides to generate the composition of the rock (so that for example if it was on duna and the colour was orange it would be silicon/iron based or it was white then it would ice or something)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYour biggest problem is that ice is not an element. \u003C/p\u003E\u003Cp\u003EThe rest of it seems pretty easy to solve if you approach it from the right mindset- you just need to incorporate an \u0022if\u0022 statement after Color col=tex.GetPixel(x,y);\u003C/p\u003E\u003Cp\u003EHope you figure it out soon!\u003C/p\u003E\n"}]}