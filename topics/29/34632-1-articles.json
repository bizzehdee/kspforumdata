{"TopicId":34632,"ForumId":29,"TopicTitle":"Part vs. PartModule?","CreatedByName":"Ben314","CreatedById":67785,"CreatedDateTime":"2013-06-24T21:36:22Z","PageNum":1,"Articles":[{"CreatedByName":"Ben314","CreatedById":67785,"CreatedDateTime":"2013-06-24T21:36:22Z","Content":"\n\u003Cp\u003ESo me being totally new to modding KSP (or games for that matter, although I\u0027m a semi-experienced C\u002B\u002B programmer), I just want to know what the difference is between these two classes are. The tutorial on the wiki says that to modify a part\u0027s behaviour you override methods in PartModule, but I\u0027m at a loss as to how to use onUpdate() to do anything really when in Part there\u0027s a whole bunch of seemingly far more useful methods. Basically, what is the technique to use the methods in Part vs the methods in PartModule?\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2013-06-24T21:43:14Z","Content":"\n\u003Cp\u003EThe main difference is that a given part only has one class deriving from Part, and it can have many different classes deriving from PartModule. The latter is definitely the more flexible system. The vast majority of projects won\u0027t require Part.\u003C/p\u003E\u003Cp\u003EYou can still get a reference to the Part from a PartModule, so most of those methods are still accessible. PartModule has different (fewer) overrides, but it\u0027s not really more limited than Part; you can still get access to those events or just run checks during Update/FixedUpdate.\u003C/p\u003E\u003Cp\u003Etl;dr use PartModule, it\u0027s much more modular.\u003C/p\u003E\n"},{"CreatedByName":"Ben314","CreatedById":67785,"CreatedDateTime":"2013-06-24T22:57:34Z","Content":"\n\u003Cp\u003EThanks for your reply. I just need a bit of clarification (I have used 0 C#, so could be a total newb question): How can I access the events in Part? I want to make something that when it splashes down activates airbags, and I know I can do it using onSplashdown() or checkSplashed(), but I can\u0027t find how to actually use those.\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2013-06-25T00:08:04Z","Content":"\n\u003Cp\u003EYou can\u0027t hook into those like you would with a C# event (those exist, but KSP and Unity don\u0027t use them). You \u003Cem\u003Emight\u003C/em\u003E be able to register a callback with Vessel, but your best bet is just checking each frame for the current state of the vessel.\u003C/p\u003E\n"},{"CreatedByName":"Ben314","CreatedById":67785,"CreatedDateTime":"2013-06-25T04:07:21Z","Content":"\n\u003Cp\u003EOkay I realize (after finding out what the icons in microsoft visual studio actually mean \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_sleep.png\u0022 alt=\u0022-_-\u0022\u003E (I\u0027m used to code::blocks)) that I used the wrong terminology. I have no idea how to use C# events. What I want to do (and maybe this is just a bull-headed C\u002B\u002B way of doing it) is override onUpdate() to run part.isSplashed(), because I can\u0027t find a way to override part.onSplashdown() which seems like it would be simpler. Since the class for the plugin is in partModule, how can you refer to that partModule\u0027s instance of the part class to access isSplashed?\u003C/p\u003E\n"},{"CreatedByName":"Razchek","CreatedById":62645,"CreatedDateTime":"2013-06-25T05:43:34Z","Content":"\n\u003Cp\u003EIf you\u0027re extending the Part class, you can override onPartSplashdown() ..\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E    public class Example : Part\u003Cbr\u003E    {\u003Cbr\u003E        protected override void onPartSplashdown()\u003Cbr\u003E        {\u003Cbr\u003E            // Your code.\u003Cbr\u003E        }\u003Cbr\u003E    }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Ben314","CreatedById":67785,"CreatedDateTime":"2013-06-25T12:10:47Z","Content":"\n\u003Cp\u003EOkay that\u0027s what I thought, but is there a way to access part\u0027s methods from partModule or vice versa?\u003C/p\u003E\n"},{"CreatedByName":"EndlessWaves","CreatedById":41302,"CreatedDateTime":"2013-07-01T16:46:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ben314\u0022 data-cite=\u0022Ben314\u0022\u003E\u003Cdiv\u003EOkay that\u0027s what I thought, but is there a way to access part\u0027s methods from partModule or vice versa?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo.\u003C/p\u003E\u003Cp\u003ESome of them have equivalent calls (many unfortunately undocumented due to unity using it\u0027s own method calling system rather than overrides) such as OnPutToGround() or OnPartPart() and some are done using different methods.\u003C/p\u003E\u003Cp\u003EFor splashdown I believe there\u0027s a callback in GameEvents that covers vessel state change that you can register a function with to have called in that event.\u003C/p\u003E\n"}]}