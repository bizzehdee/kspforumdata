{"TopicId":206132,"ForumId":29,"TopicTitle":"A better way to update a module after OnStart()","CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2021-12-28T05:51:09Z","PageNum":1,"Articles":[{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2021-12-28T05:51:09Z","Content":"\n\u003Cp\u003E\nI am working on extending the TestFlight failure mod and have run into a problem with re-implementing a failure when a vessel with a failure is reloaded.\u00A0 Other failures can be redone during OnStart(), but the ModuleSAS failure has a problem.\u00A0 If it\u0027s re-implemented during OnStart() the vessel will not activate \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E again if the part is repaired.\u00A0 The repair works fine if the vessel never leaves context (i.e. you break and repair it from without reloading) and if you repair it then reload it, \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E returns.\n\u003C/p\u003E\n\u003Cp\u003E\nSomething happens soon after the vessel is loaded where it seems to pick up it\u0027s available \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E levels.\u00A0 Neither OnStart nor OnStartFinished works.\u00A0 \u00A0If I re-implement the failure using OnUpdate, add in a small 20 frame delay then \u0027fail\u0027 the part, it works correctly and sees \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E when it\u0027s repaired, but only if it delays things for a few frames.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\u003Cspan class=\u0022pln\u0022\u003E        //this one works, as long as the ticker is above 10\n        public override void OnUpdate()\n        {\n            base.OnUpdate();\n            if (failed \u0026amp;\u0026amp; ticker\u002B\u002B == 20)\n                DoFailure();\n        }\n\t\t\n        //doesn\u0027t work\n        public override void OnUpdate()\n        {\n            base.OnStart();\n            if (failed)\n                DoFailure();\n        }\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nObviously this is a really ugly hack.\u00A0 Is there a better way to run a function soon (but not too soon!) after a vessel has been loaded?\u00A0 Or maybe there\u0027s a way to update a vessel to \u0027see\u0027 it now has \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E available when the part is repaired.\n\u003C/p\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2021-12-28T10:20:47Z","Content":"\n\u003Cp\u003E\nThere is probably a better way to achieve what you want, but hard to say without seeing what your DoFailure() method does.\u003Cbr\u003E\nDepending on how you disable the \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003E\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E\u003C/abbr\u003E module, I suspect you might run into the \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003E\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E\u003C/abbr\u003E level being available again after certain events (decoupling/docking for example).\n\u003C/p\u003E\n\u003Cp\u003E\nAs for implementing a delayed callback, you can use a coroutine \u003Cspan\u003E:\u003C/span\u003E\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E override \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EOnStart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  base\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EOnStart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Efailed\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EStartCoroutine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EDoFailureDelayed\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EIEnumerator\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EDoFailureDelayed\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003Eint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E i \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E i \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E20\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E i\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u002B)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    yield \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E null\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n  \u003C/span\u003E\u003Cspan class=\u0022typ\u0022\u003EDoFailure\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222021-12-28T10:21:49Z\u0022 title=\u002212/28/2021 10:21  AM\u0022 data-short=\u00222 yr\u0022\u003EDecember 28, 2021\u003C/time\u003E by Gotmachine\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2021-12-28T17:04:00Z","Content":"\n\u003Cp\u003E\nPerfect!\u00A0 This solution does the trick.\u00A0 \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E is just being disabled/enabled with ModuleSAS.moduleIsEnabled, so definitely nothing fancy.\u00A0 \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nTechnically \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E does work (i.e. you can press the \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E button) if the reloaded vessel is repaired, it just doesn\u0027t have any \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E levels (not even 0) so it doesn\u0027t do anything.\u00A0 \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nYou are probably right about some events triggering re-evaluation for \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E.\u00A0 My other option was to find if there\u0027s an accessible function that can manually trigger this, but I wasn\u0027t able to find it.\n\u003C/p\u003E\n\u003Cp\u003E\nThanks for the help with this.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2021-12-29T21:54:53Z","Content":"\n\u003Cp\u003E\nAs a followup, while this solution works, there\u0027s an edge case that still has this issue.\u00A0 If a ModuleSAS fails and the craft is no longer infocus but still loaded (i.e. from undocking or EVA) and returned to while still loaded and then repaired, none of the \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E modes turn up.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nLeaving and returning to the craft (i.e. just pressing the \u0027[\u0027 key) fixes the problem.\u00A0 I haven\u0027t found a way to trigger the reevaluation that fixes this issue so at this point it\u0027s either bin the whole idea or live with this glitch.\n\u003C/p\u003E\n"}]}