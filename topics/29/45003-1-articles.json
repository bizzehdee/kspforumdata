{"TopicId":45003,"ForumId":29,"TopicTitle":"An Introduction to Object Oriented Programming, As Explained to a Moron. (me)","CreatedByName":"Torminator","CreatedById":78617,"CreatedDateTime":"2013-09-05T08:04:31Z","PageNum":1,"Articles":[{"CreatedByName":"Torminator","CreatedById":78617,"CreatedDateTime":"2013-09-05T08:04:31Z","Content":"\n\u003Cp\u003ESo, I am attempting to learn C#. Attempting might be too strong a word. \u003C/p\u003E\u003Cp\u003EI\u0027ve done a bit of coding in Lua, C, C\u002B\u002B, Python, etc..., but I only actually did anything with C and Lua. \u003C/p\u003E\u003Cp\u003Eso OOP is a bit alien to me, and a lot of the concepts were just confusing. I summoned my nerdly allies on the book of faces, and got what, at least to me, was a really good explanation of the concepts. I also almost started a nerd fight, but that\u0027s another story. I\u0027ll try to replicate it here as best I can, leaving out the arguments and trying to maintain context. \u003C/p\u003E\u003Cp\u003EMostly, I just thought I\u0027d put this up here for anyone else, like me, struggling with Object Oriented Programming concepts. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Will\u0022 data-cite=\u0022Will\u0022\u003E\u003Cdiv\u003E It\u0027s about modeling real world interactions between objects?\u003Cp\u003EYou have classes, which are just a collection of data (like the make, model, year, etc. of a car), and methods that the class can do (like accelerate, break, etc.).\u003C/p\u003E\u003Cp\u003EIs that good enough?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Me\u0022 data-cite=\u0022Me\u0022\u003E\u003Cdiv\u003ESo... A class is like a data type and a function rolled into one?\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Will\u0022 data-cite=\u0022Will\u0022\u003E\u003Cdiv\u003EA class IS a data type. \u003Cp\u003EAt the highest (lowest?) level, a data type is a set of data (An int can be any integer, its data set), and associated functions (addition, subtraction, multiplication, etc.).\u003C/p\u003E\u003Cp\u003EA class is a data type that you create.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Me\u0022 data-cite=\u0022Me\u0022\u003E\u003Cdiv\u003EOkay, So if we use the analogue of procedural programming ideas, an object would be a \u0022variable\u0022 of type \u0022class\u0022?\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Will\u0022 data-cite=\u0022Will\u0022\u003E\u003Cdiv\u003EYep.\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Westin\u0022 data-cite=\u0022Westin\u0022\u003E\u003Cdiv\u003E There are, at it\u0027s most basic, functional programming and object oriented programming (there is a third, but it isn\u0027t useful by itself). Functional programming is what most people think of when doing programming, and at the assembly/binary level, that is all there is. Functional programming is when you give the computer a list of instructions to be carried out in order. You can cheat a little (by writing functions, which are just named blocks of code that can be reused) but for the most part, you have to simulate whatever you are trying to achieve step by step. Depending on what you are trying to simulate, this can get hard to read. Most people don\u0027t think to simulate a car by first describing the skid of tires at the moment, multiplied by the function of momentum, and right after what the driver is experiencing, followed soon after by the radio functions. In this case, object oriented programming is more important.\u003Cp\u003EObject Oriented programming attempts to define a broad overview of items in a class. A class PERSON will contain thinks like name, height, weight, IQ, etc. From the class, instances of a class can be further defined and operated on. An instance of PERSON might have name = Westin, weight = 180, IQ = NULL, and so on. While this doesn\u0027t sound useful yet, the programmer can also add methods to a class. It is safe to say that all people Eat() and Breath(). After this, things really get cool\u003C/p\u003E\u003Cp\u003ESo already, I am saving a lot of effort by just being able to say PERSON westin(\u0022Westin\u0022, 180, null) as apposed to making a whole block of code for each person that I need to make. On top of that, most OO languages allow for dot notation, so If I want instance westin to breath, I just say westin.breath(). But just defining a person is not that useful. As we all know, everyone can\u0027t do everything. So two concepts come into play, and these are what take the cake: INHERITANCE and POLYMORPHISM.\u003C/p\u003E\u003Cp\u003EFor the sake of simplicity, lets say that PERSON is defined to have a \u0022virtual\u0022 method useComputer(). If you were to look at the implementation of useComputer(), it would likely be blank, or not go beyond { turnOn();} . I am saying that each PERSON has the ability to do something with a computer, but the average person can\u0027t do much. \u003C/p\u003E\u003Cp\u003EWe can then make another class called PROGRAMMER. PROGRAMMER is going to based off of, or INHERITS, PERSON. This implies that a PROGRAMMER has a height weight IQ, breath(), etc, but in this new class, it will also define things like debug(), languagesKnown, and other things associated with all programmers. Because PERSON also defined useComputer() as virtual, it will overwrite useComputer() with something more useful. So if instance Westin was made as a programmer, and Ozzie was... not... then when we both call useComputer(), something different happens. This is referred to as POLYMORPHISM.\u003C/p\u003E\u003Cp\u003EWhy does this matter? The easiest implication is westin and ozzie are still people, and you can collect their data objects as such, in an array if you will. If you looped through this hypothetical list of people, you can call useComputer() on all of them, but different (and hopefully more appropriate) things happen for each one. A draw loop in a video game works like this. All objects are declared drawable, and go into a list of drawable things, but their draw call is different.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Will\u0022 data-cite=\u0022Will\u0022\u003E\u003Cdiv\u003EI would like to add that the previously specified Polymorphism is RUNTIME polymorphism, and there is also COMPILE TIME polymorphism.\u003Cp\u003ECompile Time Polymorphism is the same idea, except instead of overriding a method of the same name and argument type/list, you specify a function with the same name but with different argument types/amounts/etc.\u003C/p\u003E\u003Cp\u003EFor example, you have an Add(int, int) function and an add(float, float) function. You call them the same way, but when you call Add with integers you get the first function, whereas with floats you call the second function.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Westin\u0022 data-cite=\u0022Westin\u0022\u003E\u003Cdiv\u003EOne last thing: the terms used are common to all OOP languages, so you\u0027ll never see them go away.\u003Cp\u003EAnd C# in particular has something called properties, which can thought of as methods masquerading as variables. You use them as variables, but a function is run every time you do something with them. You can also define what is done with a variable in this way, or make it read or write only. You\u0027ll likely see them a lot in your learnings, as their hella useful.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"vyarthrot","CreatedById":139212,"CreatedDateTime":"2015-03-10T08:43:48Z","Content":"\n\u003Cp\u003ETry this one......\u003Ca href=\u0022http://net-informations.com/faq/oops/oops.htm\u0022 rel=\u0022external nofollow\u0022\u003EObject Oriented Programming\u003C/a\u003E tutorial\u003C/p\u003E\u003Cp\u003EVyar\u003C/p\u003E\n"},{"CreatedByName":"ColKlonk","CreatedById":137078,"CreatedDateTime":"2015-04-01T03:16:21Z","Content":"\n\u003Cp\u003ETake a bet this is where KSP has it\u0027s memory leak...\u003C/p\u003E\u003Cp\u003EWhat is not made obvious in OOP and \u003Cem\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003Ecritically essential\u003C/span\u003E\u003C/em\u003E to prevent \u0027memory leaks\u0027..\u003C/p\u003E\u003Cp\u003E- check if the object already exists, and not create a new one.\u003C/p\u003E\u003Cp\u003E- is the need to unload the object once all child objects are \u0027deleted\u0027.\u003C/p\u003E\u003Cp\u003EIf this is not done... you\u0027ll have all these unused objects floating around in \u0027memory space\u0027.. which prevents the heap manager from doing it\u0027s job ===\u0026gt; BSOD\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2015-04-01T12:37:26Z","Content":"\n\u003Cp\u003EColKlonk : you need to read up a bit on managed memory langages. It does not work like that.\u003C/p\u003E\n"},{"CreatedByName":"ColKlonk","CreatedById":137078,"CreatedDateTime":"2015-04-02T05:38:49Z","Content":"\n\u003Cp\u003EI\u0027m aware of memory managed.. but this is about OOP and if code uses it, these are a few of the the problems.\u003C/p\u003E\u003Cp\u003EEvert DLL is essentially an OOP object and there are lots in the game, managed or not.\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2015-04-02T12:39:44Z","Content":"\n\u003Cp\u003EAnd again it does not work like you think it does. the fact you use OOP has nothing to do with \u0027memory leaks\u0027. It s even easier to leak with a classic lang like C.\u003C/p\u003E\n"},{"CreatedByName":"ColKlonk","CreatedById":137078,"CreatedDateTime":"2015-04-09T23:53:57Z","Content":"\n\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EI sort of ignored this.. wondering if it\u0027s worth pursuing... a confirmed waste of time no doubt.\u003C/p\u003E\n"}]}