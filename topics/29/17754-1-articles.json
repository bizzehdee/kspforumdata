{"TopicId":17754,"ForumId":29,"TopicTitle":"[SOLVED] OnSave(ConfigNode node) hangs the game","CreatedByName":"Kreuzung","CreatedById":21035,"CreatedDateTime":"2012-08-25T13:57:57Z","PageNum":1,"Articles":[{"CreatedByName":"Kreuzung","CreatedById":21035,"CreatedDateTime":"2012-08-25T13:57:57Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022color:#FF0000;\u0022\u003EEdit: Solved problem thanks to cybutek - Simple try-catch made it work flawless for some reason (probably null value detection was wrong)\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EHi,\u003C/p\u003E\u003Cp\u003EI\u0027ve got a problem with my OnSave function - if it\u0027s not commented out, it hangs the game on going to flight scene or going to space center.\u003C/p\u003E\u003Cp\u003EI never really did anything that included saving or loading data (except some one-line something.Load(string file) stuff), and I have no idea why it fails.\u003C/p\u003E\u003Cp\u003EresNames is a List\u0026lt;string\u0026gt; of part resource names, and this code is supposed to save and load the part resource\u0027s amount value \u0027cause automatic persistence doesn\u0027t work for them for some reason. If I comment out OnSave, OnLoad works, so OnSave has to be wrong.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E    public override void OnSave(ConfigNode node)\u003Cbr\u003E    {\u003Cbr\u003E        if (!HighLogic.LoadedSceneIsFlight) return;\u003Cbr\u003E        foreach (string r in resNames)\u003Cbr\u003E            if(part.Resources[r] != null)\u003Cbr\u003E                node.AddValue(\u0022Res\u0022, r \u002B \u0022;\u0022 \u002B part.Resources[r].amount);\u003Cbr\u003E    }\u003Cbr\u003E    public override void OnLoad(ConfigNode node)\u003Cbr\u003E    {\u003Cbr\u003E        if (!HighLogic.LoadedSceneIsFlight) return;\u003Cbr\u003E        string[] resData = node.GetValues(\u0022Res\u0022);\u003Cbr\u003E        foreach (string r in resData)\u003Cbr\u003E        {\u003Cbr\u003E            string[] s = r.Split(new char[] { \u0027;\u0027 }, StringSplitOptions.RemoveEmptyEntries);\u003Cbr\u003E            part.Resources[s[0]].amount = float.Parse(s[1]);\u003Cbr\u003E        }\u003Cbr\u003E    }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003Eusing System.Linq;\u003Cbr\u003Eusing System.Text;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003Eclass ModuleKrResourceTank : PartModule\u003Cbr\u003E{\u003Cbr\u003E [KSPField(guiActive = true, guiName = \u0022Resource mass\u0022, guiFormat = \u0022F3\u0022, guiUnits = \u0022t\u0022)]\u003Cbr\u003E public float resourceMass;\u003Cbr\u003E [KSPField(guiActive = true, guiName = \u0022Total mass\u0022, guiFormat = \u0022F3\u0022, guiUnits = \u0022t\u0022)]\u003Cbr\u003E public float totalMass;\u003Cbr\u003E [KSPField]\u003Cbr\u003E public string resources = \u0022\u0022;\u003Cbr\u003E protected List\u0026lt;string\u0026gt; resNames;\u003Cbr\u003E protected Dictionary\u0026lt;String, VInfoBox\u0026gt; resIndicators;\u003Cbr\u003E\u003Cbr\u003E /// \u0026lt;summary\u0026gt;\u003Cbr\u003E /// Initializes values\u003Cbr\u003E /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E /// \u0026lt;param name=\u0022state\u0022\u0026gt;\u0026lt;/param\u0026gt;\u003Cbr\u003E public override void OnStart(PartModule.StartState state)\u003Cbr\u003E {\u003Cbr\u003E resNames = new List\u0026lt;string\u0026gt;(resources.Split(\u0027;\u0027));\u003Cbr\u003E resIndicators = new Dictionary\u0026lt;string, VInfoBox\u0026gt;();\u003Cbr\u003E foreach (string r in resNames)\u003Cbr\u003E print(\u0022resname:\u0022 \u002B r);\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E /// \u0026lt;summary\u0026gt;\u003Cbr\u003E /// Updates context menus and info boxes\u003Cbr\u003E /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E void Update()\u003Cbr\u003E {\u003Cbr\u003E if (!HighLogic.LoadedSceneIsFlight) return;\u003Cbr\u003E\u003Cbr\u003E resourceMass = part.GetResourceMass();\u003Cbr\u003E totalMass = resourceMass \u002B part.mass;\u003Cbr\u003E foreach (string r in resNames)\u003Cbr\u003E {\u003Cbr\u003E if (part.Resources[r] == null) return;\u003Cbr\u003E if (part.Resources[r].amount \u0026gt; 1e-4)\u003Cbr\u003E {\u003Cbr\u003E if (!resIndicators.ContainsKey(r))\u003Cbr\u003E {\u003Cbr\u003E resIndicators.Add(r, part.stackIcon.DisplayInfo());\u003Cbr\u003E resIndicators[r].SetMessage(r);\u003Cbr\u003E resIndicators[r].SetMsgBgColor(Color.clear);\u003Cbr\u003E resIndicators[r].SetMsgTextColor(Color.white);\u003Cbr\u003E resIndicators[r].SetProgressBarBgColor(Color.clear);\u003Cbr\u003E resIndicators[r].SetProgressBarColor(Color.white);\u003Cbr\u003E }\u003Cbr\u003E resIndicators[r].SetValue(part.Resources[r].amount / part.Resources[r].maxAmount);\u003Cbr\u003E }\u003Cbr\u003E else if (resIndicators.ContainsKey(r))\u003Cbr\u003E {\u003Cbr\u003E part.stackIcon.RemoveInfo(resIndicators[r]);\u003Cbr\u003E resIndicators.Remove(r);\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E public override void OnSave(ConfigNode node)\u003Cbr\u003E {\u003Cbr\u003E if (!HighLogic.LoadedSceneIsFlight) return;\u003Cbr\u003E foreach (string r in resNames)\u003Cbr\u003E if(part.Resources[r] != null)\u003Cbr\u003E node.AddValue(\u0022Res\u0022, r \u002B \u0022;\u0022 \u002B part.Resources[r].amount);\u003Cbr\u003E }\u003Cbr\u003E public override void OnLoad(ConfigNode node)\u003Cbr\u003E {\u003Cbr\u003E if (!HighLogic.LoadedSceneIsFlight) return;\u003Cbr\u003E string[] resData = node.GetValues(\u0022Res\u0022);\u003Cbr\u003E foreach (string r in resData)\u003Cbr\u003E {\u003Cbr\u003E string[] s = r.Split(new char[] { \u0027;\u0027 }, StringSplitOptions.RemoveEmptyEntries);\u003Cbr\u003E part.Resources[s[0]].amount = float.Parse(s[1]);\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E}\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eusing System;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222012-08-26T08:54:04Z\u0022 title=\u002208/26/2012 08:54  AM\u0022 data-short=\u002211 yr\u0022\u003EAugust 26, 2012\u003C/time\u003E by Kreuzung\u003C/strong\u003E\n\u003C/span\u003E\n"}]}