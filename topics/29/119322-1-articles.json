{"TopicId":119322,"ForumId":29,"TopicTitle":"Loading and using custom shaders","CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-08-25T13:30:12Z","PageNum":1,"Articles":[{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-08-25T13:30:12Z","Content":"\n\u003Cp\u003EHi\u003C/p\u003E\u003Cp\u003EI found this thread \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/48840-HOW-TO-Using-custom-CG-shaders-in-KSP\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E, which explained how to load custom shaders. I\u0027ve written something I\u0027d like to load and use, and would like to write some more, but I\u0027m having trouble actually getting it assigned to a material in KSP;\u003C/p\u003E\u003Cp\u003EI\u0027ve tried various ways to load the compiled shader, the most recent of which being:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E    [KSPAddon(KSPAddon.Startup.Instantly, false)]\u003Cbr\u003E    public class ShaderLoad : MonoBehaviour\u003Cbr\u003E    {\u003Cbr\u003E        public string shaderFileName = \u0022KerbalFoundries/_Dev/KFSpec.shader\u0022;\u003Cbr\u003E        Shader _shader;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public void Start()\u003Cbr\u003E        {\u003Cbr\u003E            Debug.Log(\u0022ShaderSwap OnInit\u0022);\u003Cbr\u003E            string filename = KSPUtil.ApplicationRootPath \u002B \u0022GameData/\u0022 \u002B shaderFileName;\u003Cbr\u003E            if (shaderFileName != string.Empty \u0026amp;\u0026amp; File.Exists(filename))\u003Cbr\u003E            {\u003Cbr\u003E                Debug.Log(\u0022Found shader\u0022);\u003Cbr\u003E                try\u003Cbr\u003E                {\u003Cbr\u003E                    TextReader shaderFile = new StreamReader(filename);\u003Cbr\u003E                    string shaderText = shaderFile.ReadToEnd();\u003Cbr\u003E                    _shader = new Material(shaderText).shader;\u003Cbr\u003E                    Debug.Log(\u0022Loaded shader\u0022);\u003Cbr\u003E                }\u003Cbr\u003E                catch (Exception e)\u003Cbr\u003E                {\u003Cbr\u003E                    Debug.LogError(\u0022unable to load shader \u0022 \u002B shaderFileName \u002B \u0022 : \u0022 \u002B e);\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E            else\u003Cbr\u003E                Debug.Log(\u0022Shader not found\u0022);\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI\u0027ve also tried as a PartModule. I can assign the shader in Unity, and part tools exports successfully with it applied to some objects, but they always seem to fall back to the Diffuse shader. I was assuming, having loaded the shader, I could then do Shader.Find(\u0022ShaderName\u0022); to poke it into life and apply it, but that always returns null. The shader works perfectly in Unity.\u003C/p\u003E\u003Cp\u003EWhat am I missing?\u003C/p\u003E\u003Cp\u003EMany thanks!\u003C/p\u003E\n"},{"CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2015-08-26T04:10:01Z","Content":"\n\u003Cp\u003EI don\u0027t think using shader.find works for shader objects you gotten from that loading method. Try just putting the shader object into a dictionary or something, and load it from there.\u003C/p\u003E\u003Cp\u003EYou should also not rely on the shader being loaded with the part loader, you should manually apply the new material to the part using a PartModule or something.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-08-26T09:11:39Z","Content":"\n\u003Cp\u003EIndeed; having done some more googling, that appears to be the case... How would I put the compiled shader into a dictionary?\u003C/p\u003E\u003Cp\u003EI did try loading and applying it with a PartModule, but that didn\u0027t work either. Confused!\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-08-26T09:15:23Z\u0022 title=\u002208/26/2015 09:15  AM\u0022 data-short=\u00228 yr\u0022\u003EAugust 26, 2015\u003C/time\u003E by lo-fi\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2015-08-26T16:10:39Z","Content":"\n\u003Cp\u003EHave you actually compiled the shader? You can\u0027t just load a plain shader, you have to compile it in unity first, there\u0027s a button for it in the shader inspector in the unity editor. (make sure you\u0027re using unity 4.6.1)\u003C/p\u003E\u003Cp\u003EIf you have, are you sure you\u0027re setting the shader correctly? You\u0027re supposed to set part.renderer.sharedMaterial to a new material, using the loaded shader as a parameter in the constructor, something like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E[KSPAddon(KSPAddon.Startup.Instantly, false)]\u003Cbr\u003E    public class ShaderLoad : MonoBehaviour\u003Cbr\u003E    {\u003Cbr\u003E        public string shaderFileName = \u0022KerbalFoundries/_Dev/KFSpec.shader\u0022;\u003Cbr\u003E        public static Shader KFSpecShader;\u003Cbr\u003E\u003Cbr\u003E        public void Start()\u003Cbr\u003E        {\u003Cbr\u003E            Debug.Log(\u0022ShaderSwap OnInit\u0022);\u003Cbr\u003E            string filename = KSPUtil.ApplicationRootPath \u002B \u0022GameData/\u0022 \u002B shaderFileName;\u003Cbr\u003E            if (shaderFileName != string.Empty \u0026amp;\u0026amp; File.Exists(filename))\u003Cbr\u003E            {\u003Cbr\u003E                Debug.Log(\u0022Found shader\u0022);\u003Cbr\u003E                try\u003Cbr\u003E                {\u003Cbr\u003E                    TextReader shaderFile = new StreamReader(filename);\u003Cbr\u003E                    string shaderText = shaderFile.ReadToEnd();\u003Cbr\u003E                    KFSpecShader = new Material(shaderText).shader;\u003Cbr\u003E                    Debug.Log(\u0022Loaded shader\u0022);\u003Cbr\u003E                }\u003Cbr\u003E                catch (Exception e)\u003Cbr\u003E                {\u003Cbr\u003E                    Debug.LogError(\u0022unable to load shader \u0022 \u002B shaderFileName \u002B \u0022 : \u0022 \u002B e);\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E            else\u003Cbr\u003E                Debug.Log(\u0022Shader not found\u0022);\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E...\u003Cbr\u003E\u003Cbr\u003Epublic class CustomMaterialModule : PartModule\u003Cbr\u003E{\u003Cbr\u003E   public Material PartMaterial;\u003Cbr\u003E\u003Cbr\u003E   public override void OnStart(StartState state)\u003Cbr\u003E   {\u003Cbr\u003E      PartMaterial = new Material(ShaderLoad.KFSpecShader);\u003Cbr\u003E      //set other properties for the material, like textures and normal maps\u003Cbr\u003E\u003Cbr\u003E      part.renderer.sharedMaterial = PartMaterial;\u003Cbr\u003E   }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-08-26T16:13:33Z\u0022 title=\u002208/26/2015 04:13  PM\u0022 data-short=\u00228 yr\u0022\u003EAugust 26, 2015\u003C/time\u003E by MrHappyFace\u003C/strong\u003E\n\u003Cbr\u003Eformatting\n\u003C/span\u003E\n"}]}