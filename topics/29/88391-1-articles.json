{"TopicId":88391,"ForumId":29,"TopicTitle":"Vector3.up doesn\u0026#039;t point up, and other Vector3 questions","CreatedByName":"SuperSeniorComicGuy","CreatedById":62983,"CreatedDateTime":"2014-10-24T17:01:48Z","PageNum":1,"Articles":[{"CreatedByName":"SuperSeniorComicGuy","CreatedById":62983,"CreatedDateTime":"2014-10-24T17:01:48Z","Content":"\n\u003Cp\u003EI\u0027m having some issues with the Vector3 class as it pertains to drawing lines and triangles relative to a part. I started with the template provided by \u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Module_code_examples\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://wiki.kerbalspaceprogram.com/wiki/Module_code_examples\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EStarting with that sample code, my current code block looks like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// Create a triangle and give it a shape\u003Cbr\u003EGameObject obj3 = new GameObject( \u0022Line\u0022 );\u003Cbr\u003Egreenline = obj3.AddComponent\u0026lt; LineRenderer \u0026gt;();\u003Cbr\u003Egreenline.transform.parent = transform; \u003Cbr\u003Egreenline.useWorldSpace = true; // true = Stay static on the ground. false = Move with part\u003Cbr\u003Egreenline.material = new Material( Shader.Find(\u0022Particles/Additive\u0022) );\u003Cbr\u003Egreenline.SetColors( Color.green, Color.green ); // Make it green\u003Cbr\u003Egreenline.SetWidth(0, 2); // Make it width 0 at point 0, width 2 at point 1\u003Cbr\u003Egreenline.SetVertexCount(2); // Haven\u0027t toyed with this yet\u003Cbr\u003E\u003Cbr\u003E// Place triangle in the world relative to part that created it (a Kerbal)\u003Cbr\u003Egreenline.SetPosition(0, Vector3.zero); // Point 0 is located at Kerbal\u0027s location, Vector3.zero\u003Cbr\u003Egreenline.SetPosition(1, 5 * Vector3.left); // Point 1 is located 5 meters \u0022left\u0022 of the Kerbal\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESimilar code for the rest of the lines:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eredline.SetPosition(0, Vector3.zero);\u003Cbr\u003Eredline.SetPosition(1, 5 * Vector3.up);\u003Cbr\u003E\u003Cbr\u003Eblueline.SetPosition(0, Vector3.zero);\u003Cbr\u003Eblueline.SetPosition(1, 5 * Vector3.down);\u003Cbr\u003E\u003Cbr\u003Eyellowline.SetPosition(0, Vector3.zero);\u003Cbr\u003Eyellowline.SetPosition(1, 5 * Vector3.right);\u003Cbr\u003E\u003Cbr\u003Ewhiteline.SetPosition(0, Vector3.zero);\u003Cbr\u003Ewhiteline.SetPosition(1, 5 * Vector3.forward);\u003Cbr\u003E\u003Cbr\u003Eblackline.SetPosition(0, Vector3.zero);\u003Cbr\u003Eblackline.SetPosition(1, 5 * Vector3.back); // You can\u0027t see it. Changing it to something other than black makes it visible opposite of white\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI end up with this:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/2jQq9UI.png\u0022 alt=\u00222jQq9UI.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/NxJAH6h.png\u0022 alt=\u0022NxJAH6h.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/imDSDnm.png\u0022 alt=\u0022imDSDnm.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/kqS7t0m.png\u0022 alt=\u0022kqS7t0m.png\u0022\u003E\u003C/p\u003E\u003Cp\u003ENo matter which way the Kerbal is pointing, Vector3.up (red) points North, Vector3.down (blue) points South, and the rest are a mix of Up/Down and East/West. I\u0027ve also tried Vector3d with the same results.\u003C/p\u003E\u003Cp\u003EIf I set greenline.useWorldSpace = false; then I see the lines move with the Kerbal, but it looks like this:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/QlZRt3E.png\u0022 alt=\u0022QlZRt3E.png\u0022\u003E\u003C/p\u003E\u003Cp\u003ESo Vector3.up (red) is left relative to the Kerbal? Vector3.right (yellow) is down and behind the Kerbal?\u003C/p\u003E\u003Cp\u003EUltimately I\u0027d really like a way to create a line directly up from the Kerbal, but I feel like there\u0027s an easier way than doing some funny algebra. And given the weirdness I\u0027m seeing here I feel like I\u0027m missing something. Any ideas?\u003C/p\u003E\u003Cp\u003EPotentially useful links:\u003C/p\u003E\u003Cp\u003ECode example: \u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Module_code_examples\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://wiki.kerbalspaceprogram.com/wiki/Module_code_examples\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ECommunity API Documentation: \u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Community_API_Documentation\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://wiki.kerbalspaceprogram.com/wiki/Community_API_Documentation\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EKSP Documentation: \u003Ca href=\u0022http://anatid.github.io/XML-Documentation-for-the-KSP-API/struct_vector3d.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://anatid.github.io/XML-Documentation-for-the-KSP-API/struct_vector3d.html\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EUnity Documentation: \u003Ca href=\u0022http://docs.unity3d.com/ScriptReference/Vector3.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://docs.unity3d.com/ScriptReference/Vector3.html\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"philotical","CreatedById":109390,"CreatedDateTime":"2014-10-24T18:41:58Z","Content":"\n\u003Cp\u003EI\u0027ve had similiar troubles with similiar stuff.\u003C/p\u003E\u003Cp\u003Eso I merly subscribe to the thread to read along when answers are comming ...\u003C/p\u003E\u003Cp\u003Egood luck..\u003C/p\u003E\n"},{"CreatedByName":"Xaiier","CreatedById":22833,"CreatedDateTime":"2014-10-24T19:24:05Z","Content":"\n\u003Cp\u003EThe Vector3 constants are based on the world space, and the KSP coordinate system has a number of layers between the world space and where you are to account for all the planet stuff. It\u0027s quite complex.\u003C/p\u003E\u003Cp\u003EThat being said, if you do want to get surface relative directions, one method is via:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EVector3 gee = FlightGlobals.getGeeForceAtPosition( transform.position );\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThere\u0027s also (potentially):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EVector3d Vessel.upAxis;\u003Cbr\u003E//Which can be accessed via\u003Cbr\u003EFlightGlobals.ActiveVessel.upAxis;\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAs well as a number of other things in the Vessel class that may help you, depending on what you need.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-24T19:29:07Z\u0022 title=\u002210/24/2014 07:29  PM\u0022 data-short=\u00229 yr\u0022\u003EOctober 24, 2014\u003C/time\u003E by Xaiier\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-10-24T19:53:38Z","Content":"\n\u003Cp\u003EAlright, two things I\u0027m going to comment on. (I\u0027m not sure either of these qualify as answers.)\u003C/p\u003E\u003Cp\u003EFirst, this setting the transform here:\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Egreenline.transform.parent = transform; \u003C/pre\u003E\u003Cp\u003E What is the transform you are setting the parent as? Are you running this \u0027inside\u0027 the Kerbal so it is grabbing the Kerbal\u0027s transform? \u003C/p\u003E\u003Cp\u003ESecond, while correct, the following has some wrong assumptions that are not helping.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003ENo matter which way the Kerbal is pointing, Vector3.up (red) points North, Vector3.down (blue) points South, and the rest are a mix of Up/Down and East/West. I\u0027ve also tried Vector3d with the same results.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe co-ordinate system used by KSP is a standard box system with X being Left/Right, Y being Up/Down, Z being Forward/Back. X and Z are pretty arbitrary depending on where a planet is in it\u0027s orbit and spin, but Y is always in the same direction in that going from a planets south pole to north pole through it\u0027s center is Up movement in the Y direction.\u003C/p\u003E\u003Cp\u003ESo with worldspace=true, the red arrow is pointing up, which happens to be north as the KSP Complex is on kerbin\u0027s equator. If you ran this code at Kerbin\u0027s North Pole, the red Up arrow would be pointing straight into the sky. This is because the worldspace=true is telling KSP to use the world co-ordinates for reference.\u003C/p\u003E\u003Cp\u003EWith worldspace=false, the Vector3 directions are now relative to the kerbal\u0027s facing. On parts these are pretty straight forward but it looks like something funny is happening to directions relative to the kerbal model. (I\u0027m pretty sure Vector3.Fwd would always be the direction of travel on an SRB but double check that.)\u003C/p\u003E\u003Cp\u003ETo get an arrow drawn from the Kerbal straight \u0022up\u0022 into the sky needs something like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EVector3 SkywardsDir = FlightGlobals.ActiveVessel.body.position - Kerbal.transform.position; //get vector from world CoM to Kerbal\u0027s CoM\u003Cbr\u003Eredline.SetPosition(0, Vector3.zero); //assuming redline.transform.position has been set to the Kerbal\u0027s CoM.\u003Cbr\u003Eredline.SetPosition(1, 5 * SkywardsDir.normalized);\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI actually do a lot of this in my Vertical Velocity mod to allow players to set the Up direction. \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E theLine.transform.parent = TWR1Vessel.rootPart.transform; //set my line transform\u0027s parent to the transform of the rootPart of the current vessel.\u003Cbr\u003EtheLine.transform.localPosition = Vector3.zero; //reset location of transform\u003Cbr\u003EtheLine.transform.rotation = Quaternion.identity; //reset rotation of transform\u003Cbr\u003EtheLine.SetPosition(0, new Vector3(0, 0, 0)); //line starts at the CoM of my root part of vessel\u003Cbr\u003EtheLine.SetPosition(1, TWR1ControlUp * 50); //Extend line 50 meters in the ControlUp direction determined previously in code.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHope that helps,\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"SuperSeniorComicGuy","CreatedById":62983,"CreatedDateTime":"2014-10-24T23:19:50Z","Content":"\n\u003Cp\u003EThanks for the ideas, but nothing seems to have worked so far. Here\u0027s what I\u0027ve tried and found:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eblueline.SetPosition(1, 5 * FlightGlobals.ActiveVessel.rootPart.transform.up);\t\t\t// Short forward-left triangle\u003Cbr\u003Eblueline.SetPosition(1, 5 * FlightGlobals.getUpAxis(Vector3d.zero));\t\t\t\t// Short forward-left triangle\u003Cbr\u003Eblueline.SetPosition(1, 5 * FlightGlobals.getUpAxis());\t\t\t\t\t\t\t// Short forward-left triangle\u003Cbr\u003Eblueline.SetPosition(1, 5 * FlightGlobals.ship_upAxis);\t\t\t\t\t\t\t// Short forward-left triangle\u003Cbr\u003Eblueline.SetPosition(1, 5 * FlightGlobals.getGeeForceAtPosition (Vector3d.zero));\t\t// Long back-right triangle\u003Cbr\u003Eblueline.SetPosition(1, 5 * FlightGlobals.ActiveVessel.upAxis);\t\t\t\t\t// Long back-right or Short forward-left triangle\u003Cbr\u003Eblueline.SetPosition(1, 5 * FlightGlobals.getGeeForceAtPosition( transform.position ));\t// Long back-right or Short forward-left triangle\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI checked the code for your Vertical Velocity mod and it looks like TWR1ControlUp gets set by the SetDirection() function which looks like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Epublic Vector3 SetDirection()\u003Cbr\u003E        {\u003Cbr\u003E            if (ControlDirection == 0)\u003Cbr\u003E            {\u003Cbr\u003E                return (TWR1Vessel.rootPart.transform.up);\u003Cbr\u003E            }\u003Cbr\u003E            if (ControlDirection == 1)\u003Cbr\u003E            {\u003Cbr\u003E                return (TWR1Vessel.rootPart.transform.forward);\u003Cbr\u003E            }\u003Cbr\u003E            if (ControlDirection == 2)\u003Cbr\u003E            {\u003Cbr\u003E                return (-TWR1Vessel.rootPart.transform.up);\u003Cbr\u003E            }\u003Cbr\u003E            if (ControlDirection == 3)\u003Cbr\u003E            {\u003Cbr\u003E                return (-TWR1Vessel.rootPart.transform.forward);\u003Cbr\u003E            }\u003Cbr\u003E            if (ControlDirection == 4)\u003Cbr\u003E            {\u003Cbr\u003E                return (TWR1Vessel.rootPart.transform.right);\u003Cbr\u003E            }\u003Cbr\u003E            if (ControlDirection == 5)\u003Cbr\u003E            {\u003Cbr\u003E                return (-TWR1Vessel.rootPart.transform.right);\u003Cbr\u003E            }\u003Cbr\u003E            else\u003Cbr\u003E            {\u003Cbr\u003E                return (TWR1Vessel.rootPart.transform.up);\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThat looks a lot like my \u0022blueline.SetPosition(1, 5 * FlightGlobals.ActiveVessel.rootPart.transform.up);\u0022 attempt. So it works for you, but not me. Surely there\u0027s something else I\u0027m missing here?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-24T23:49:56Z\u0022 title=\u002210/24/2014 11:49  PM\u0022 data-short=\u00229 yr\u0022\u003EOctober 24, 2014\u003C/time\u003E by SuperSeniorComicGuy\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-10-25T00:58:17Z","Content":"\n\u003Cp\u003EThe scene is often rotated and the camera moved to make it look like \u0022up\u0022 is up when the reality is you\u0027re perched like a fly on the side of a ball at KSP. Here\u0027s an example that captures what you\u0027re trying to do (if I read the intent correctly):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E[KSPAddon(KSPAddon.Startup.Flight, false)]\u003Cbr\u003Eclass LineDrawer : MonoBehaviour\u003Cbr\u003E{\u003Cbr\u003E    LineRenderer up, right, forward, sky;\u003Cbr\u003E    Transform owner;\u003Cbr\u003E\u003Cbr\u003E    private System.Collections.IEnumerator Start()\u003Cbr\u003E    {\u003Cbr\u003E        while (!FlightGlobals.ready) yield return 0;\u003Cbr\u003E\u003Cbr\u003E        var rt = FlightGlobals.ActiveVessel.rootPart.transform;\u003Cbr\u003E\u003Cbr\u003E        forward = MakeLine(rt, Color.blue);\u003Cbr\u003E        right = MakeLine(rt, Color.red);\u003Cbr\u003E        up = MakeLine(rt, Color.green);\u003Cbr\u003E        sky = MakeLine(rt, Color.yellow);\u003Cbr\u003E\u003Cbr\u003E        sky.SetWidth(0.2f, 0.1f);\u003Cbr\u003E\u003Cbr\u003E        owner = rt;\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    private LineRenderer MakeLine(Transform parent, Color color)\u003Cbr\u003E    {\u003Cbr\u003E        GameObject line = new GameObject();\u003Cbr\u003E        line.transform.parent = parent;\u003Cbr\u003E\u003Cbr\u003E        var r = line.AddComponent\u0026lt;LineRenderer\u0026gt;();\u003Cbr\u003E\u003Cbr\u003E        r.useWorldSpace = true; // ignores own position, just use coordinates in worldspace as given\u003Cbr\u003E        r.SetWidth(1f, 0.01f);\u003Cbr\u003E        r.SetVertexCount(2);\u003Cbr\u003E\u003Cbr\u003E        r.material = new Material(Shader.Find(\u0022Particles/Additive\u0022));\u003Cbr\u003E        r.SetColors(color, color);\u003Cbr\u003E\u003Cbr\u003E        return r;\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    private void Update()\u003Cbr\u003E    {\u003Cbr\u003E        if (!FlightGlobals.ready) return;\u003Cbr\u003E\u003Cbr\u003E        up.SetPosition(0, owner.position);\u003Cbr\u003E        up.SetPosition(1, owner.position \u002B owner.up * 5f);\u003Cbr\u003E\u003Cbr\u003E        right.SetPosition(0, owner.position);\u003Cbr\u003E        right.SetPosition(1, owner.position \u002B owner.right * 5f);\u003Cbr\u003E\u003Cbr\u003E        forward.SetPosition(0, owner.position);\u003Cbr\u003E        forward.SetPosition(1, owner.position \u002B owner.forward * 5f);\u003Cbr\u003E\u003Cbr\u003E        sky.SetPosition(0, owner.position);\u003Cbr\u003E        sky.SetPosition(1, owner.position \u002B FlightGlobals.upAxis * 10f);\u003Cbr\u003E\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-25T01:32:02Z\u0022 title=\u002210/25/2014 01:32  AM\u0022 data-short=\u00229 yr\u0022\u003EOctober 25, 2014\u003C/time\u003E by xEvilReeperx\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2014-10-25T16:56:27Z","Content":"\n\u003Cp\u003EFirst, looking at my VertVel mod, I should not have linked that as I have worldCoordinates=false, you are going to have to set worldCoordiantes=true for what you are trying to do.\u003C/p\u003E\u003Cp\u003EYou are still simply looking to draw a line from the center of the Kerbal upwards into the sky correct?\u003C/p\u003E\u003Cp\u003ESecond, we are tripping over the fact that in unity, the Vector3.up is simply shorthand for Vector3(0,1,0), it is not actually \u0022up\u0022. Also, the fact that each object in the game has local-space and world-space coordinates is just making things even more confusing.\u003C/p\u003E\u003Cp\u003ESo, an expanded example I hope will work for you (modifying the example from your opening post, changes in red-bold):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E// Create a triangle and give it a shape\u003Cbr\u003EGameObject obj3 = new GameObject( \u0022Line\u0022 );\u003Cbr\u003Egreenline = obj3.AddComponent\u0026lt; LineRenderer \u0026gt;();\u003Cbr\u003Egreenline.transform.parent = transform; [B][COLOR=\u0022#FF0000\u0022]//double check that \u0027transform\u0027 is in fact the Kerbal\u0027s transform. It seems to be based on your next posts, but the code itself is not clear.[/COLOR][/B]\u003Cbr\u003Egreenline.useWorldSpace = true; // true = Stay static on the ground. false = Move with part [b][COLOR=\u0022#FF0000\u0022]Worldspace is needed as the line we are drawing will be relative to two separate objects[/COLOR][/b]\u003Cbr\u003Egreenline.material = new Material( Shader.Find(\u0022Particles/Additive\u0022) );\u003Cbr\u003Egreenline.SetColors( Color.green, Color.green ); // Make it green\u003Cbr\u003Egreenline.SetWidth(0, 2); // Make it width 0 at point 0, width 2 at point 1\u003Cbr\u003Egreenline.SetVertexCount(2); // Haven\u0027t toyed with this yet [b][COLOR=\u0022#FF0000\u0022]this is the number of Vertex\u0027s on the line. A straight line will always have 2[/COLOR][/b]\u003Cbr\u003E\u003Cbr\u003E// Place triangle in the world relative to part that created it (a Kerbal)\u003Cbr\u003E[b][COLOR=\u0022#FF0000\u0022]Vector3 skywardsDirection = Kerbal.body.position - Kerbal.transform.position; //get our vector from the center of the planet we are standing on to the center of our kerbal. Refresh this every frame since it changes when the kerbal moves[/COLOR][/b]\u003Cbr\u003Egreenline.SetPosition(0, Vector3.zero); // Point 0 is located at Kerbal\u0027s location, Vector3.zero \u003Cbr\u003Egreenline.SetPosition(1, 5 * [b][COLOR=\u0022#FF0000\u0022]skywardsDirection.normalize); //Point 1 is located 5 meters away in the direction calculated from the center of the planet to our kerbal. Vector3.normalize takes any vector and makes it 1 meter long.[/COLOR][/b]\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHopefully that is clear enough now that you can get things working.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"SuperSeniorComicGuy","CreatedById":62983,"CreatedDateTime":"2014-10-27T15:37:40Z","Content":"\n\u003Cp\u003EAha! The solution provided by xEvilReeperx is working for me! Thank you everyone!\u003C/p\u003E\n"}]}