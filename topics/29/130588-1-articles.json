{"TopicId":130588,"ForumId":29,"TopicTitle":"3D Navball Options- Crossplatform?","CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2016-01-24T00:08:10Z","PageNum":1,"Articles":[{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2016-01-24T00:08:10Z","Content":"\n\u003Cp\u003E\nSo... I\u0027ve been fiddling with building an external instrument suite application. \u00A0I started in Python, but just didn\u0027t find myself in love... so I\u0027m back to wanting to do it in C#. \u00A0 \u00A0I\u0027d classify myself as a dangerous novice in coding... \u00A0I\u0027m learning a lot as I go.\n\u003C/p\u003E\n\u003Cp\u003E\nThe part I\u0027m currently butting my head against is adding a navball. \u00A0I COULD do a simple PFD using 2D graphics... \u00A0but it seems so much more elegant to import a 3D sphere, import a base texture, draw the necessary markers on the texture, then apply it to the sphere\u00A0and rotate the sphere\u00A0to reflect pitch, roll, and yaw... \u00A0but... \u00A0I haven\u0027t done much 3D programming before. \u00A0Anyone have experience with a solution with decent tutorials that could get me up and running quickly on this task? \u00A0I\u0027d LIKE to keep it cross platform capable, so WPF, Silverlight and similar solutions wouldn\u0027t be ideal.\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s overkill, but I\u0027d honestly considered building the whole dumb app in Unity because I know it\u0027s easy to load a model and assign a rotation to it... \u00A0but that seems a little ridiculous when 90% of the app is putting text in textboxes and 2D graphics like drawing an orbit oval. \u00A0 Anyone have thoughts?\u00A0\n\u003C/p\u003E\n"}]}