{"TopicId":76347,"ForumId":29,"TopicTitle":"Gaaaah.... KSP!! Why are you claiming struts are crossfeed capable connectors???","CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-06-30T17:33:14Z","PageNum":1,"Articles":[{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-06-30T17:33:14Z","Content":"\n\u003Cp\u003EIn kOS, I\u0027m trying to fix a bug where our calculations of resources available in a stage are sometimes wrong. The algorithm is to perform a recursive node walk of the part connectivity graph, starting from all the currently active engines, to their attached parts, and their attached parts, and so on, summing up the resource as we go, and tracking visited nodes so we don\u0027t visit the same part twice. But we don\u0027t walk every part attachment, only those attachnodes which are flagged as crossfeed enabled. Therefore if you cross a decoupler during the walk, it stops there because it (probably) isn\u0027t crossfeed enabled.\u003C/p\u003E\u003Cp\u003EThe problem is coming from struts. For stability people will often strut across a decoupler, connecting a fuel tank in one stage to a fuel tank in a different stage. Those struts are being reported as attachNode connections between the fuel tanks, AND the fueltanks are NOT including those attachnodes in their NoCrossFeedNodeKey()\u0027s, meaning the fuel tanks are claiming \u0022oh sure, I can feed fuel through this connection, no problem!\u0022\u003C/p\u003E\u003Cp\u003EBut they can\u0027t.\u003C/p\u003E\u003Cp\u003EWhy do struts get reported as crossfeed nodes by the fuel tanks they\u0027re attached to?\u003C/p\u003E\n"}]}