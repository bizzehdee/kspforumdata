{"TopicId":49429,"ForumId":29,"TopicTitle":"problem with my parts and gui","CreatedByName":"kurator125","CreatedById":88171,"CreatedDateTime":"2013-10-19T14:13:22Z","PageNum":1,"Articles":[{"CreatedByName":"kurator125","CreatedById":88171,"CreatedDateTime":"2013-10-19T14:13:22Z","Content":"\n\u003Cp\u003EI have part with plugin and all part have force. I can change this force in gui and when i change force it only one part have new force. How make parts list and how control all parts? I can\u0027t find this on wiki.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003Eusing PluginTutorial.Extensions;\u003Cbr\u003Eusing KSP.IO;\u003Cbr\u003E\u003Cbr\u003Enamespace PluginTutorial\u003Cbr\u003E{\u003Cbr\u003E    public class PluginTutorial : PartModule\u003Cbr\u003E    {\u003Cbr\u003E        private static Rect _windowPosition = new Rect();\u003Cbr\u003E        private GUIStyle _windowStyle, _labelStyle;\u003Cbr\u003E        private bool _hasInitStyles = false;\u003Cbr\u003E        public  float force = 10f;\u003Cbr\u003E\u003Cbr\u003E        public override void OnStart(PartModule.StartState state)\u003Cbr\u003E        {\u003Cbr\u003E            if (state != StartState.Editor)\u003Cbr\u003E            {\u003Cbr\u003E                if (!_hasInitStyles) InitStyles();\u003Cbr\u003E                RenderingManager.AddToPostDrawQueue(0, OnDraw);\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public override void OnSave(ConfigNode node)\u003Cbr\u003E        {\u003Cbr\u003E            PluginConfiguration config = PluginConfiguration.CreateForType\u0026lt;PluginTutorial\u0026gt;();\u003Cbr\u003E\u003Cbr\u003E            config.SetValue(\u0022Window Position\u0022, _windowPosition);\u003Cbr\u003E            config.save();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        public override void OnLoad(ConfigNode node)\u003Cbr\u003E        {\u003Cbr\u003E            PluginConfiguration config = PluginConfiguration.CreateForType\u0026lt;PluginTutorial\u0026gt;();\u003Cbr\u003E\u003Cbr\u003E            config.load();\u003Cbr\u003E            _windowPosition = config.GetValue\u0026lt;Rect\u0026gt;(\u0022Window Position\u0022);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        public override void OnUpdate()\u003Cbr\u003E        {\u003Cbr\u003E            if (this.vessel == FlightGlobals.ActiveVessel)\u003Cbr\u003E            {\u003Cbr\u003E                this.rigidbody.AddRelativeForce(Vector3.up * force * FlightInputHandler.state.mainThrottle);\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        private void OnDraw()\u003Cbr\u003E        {\u003Cbr\u003E            if (this.vessel == FlightGlobals.ActiveVessel \u0026amp;\u0026amp; this.part.IsPrimary(this.vessel.parts, this.ClassID))\u003Cbr\u003E            {\u003Cbr\u003E                _windowPosition = GUILayout.Window(10, _windowPosition, OnWindow, \u0022This is a title\u0022, _windowStyle);\u003Cbr\u003E\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E        private void OnWindow(int windowId)\u003Cbr\u003E        {\u003Cbr\u003E            string sSila;\u003Cbr\u003E\u003Cbr\u003E            sSila = force.ToString();\u003Cbr\u003E            GUILayout.BeginHorizontal();\u003Cbr\u003E            GUILayout.Label(sSila, _labelStyle);\u003Cbr\u003E            GUILayout.EndHorizontal();\u003Cbr\u003E\u003Cbr\u003E            if (GUI.Button(new Rect(25, 50, 30, 30), \u0022\u002B\u0022))\u003Cbr\u003E                force \u002B= 10;\u003Cbr\u003E            if (GUI.Button(new Rect(75, 50, 30, 30), \u0022-\u0022))\u003Cbr\u003E                force -= 10;\u003Cbr\u003E\u003Cbr\u003E            GUI.DragWindow();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        private void InitStyles()\u003Cbr\u003E        {\u003Cbr\u003E            _windowStyle = new GUIStyle(HighLogic.Skin.window);\u003Cbr\u003E            _windowStyle.fixedWidth=250f;\u003Cbr\u003E            _windowStyle.fixedHeight = 250f;\u003Cbr\u003E\u003Cbr\u003E            _labelStyle = new GUIStyle(HighLogic.Skin.label);\u003Cbr\u003E            _labelStyle.stretchWidth = true;\u003Cbr\u003E\u003Cbr\u003E            _hasInitStyles = true;\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"tobyb121","CreatedById":76289,"CreatedDateTime":"2013-10-19T15:29:50Z","Content":"\n\u003Cp\u003ETry making your force a static variable\u003C/p\u003E\n"},{"CreatedByName":"kurator125","CreatedById":88171,"CreatedDateTime":"2013-10-19T16:00:35Z","Content":"\n\u003Cp\u003Ethanks, it work but how make part lists? and how to control every part of the singly? I do not want the code, only suggestions.\u003C/p\u003E\n"},{"CreatedByName":"Faark","CreatedById":69775,"CreatedDateTime":"2013-10-20T12:33:07Z","Content":"\n\u003Cp\u003EYou want to control all parts of a specific vessel? Guess the usual way most modders would do it is by looping though vessel.parts, check whether it has your part module and do whatever they want with it. Ofc doing sth like this frequently does not make the game scale very well. Just imagine a vessel with 10k parts... well, code like this is one of the reasons we most likely won\u0027t have such large vessels.\u003C/p\u003E\u003Cp\u003EJust using a static variable isn\u0027t good, since it can create issues with saveing/loading and you cannot have different values for different vessels.\u003C/p\u003E\u003Cp\u003EAnother approach could be to keep a static dictionary with VesselIds or even PartIds as index up to date and look up your object whenever you need it. Dict\u0027s aren\u0027t the fastest, but they pretty much do they job in the same speed no matter how many objects are in them.\u003C/p\u003E\u003Cp\u003EAnyway, i think in your case it might be simpler to keep a ref to a single data-object per vessel in all your part modules. Sth like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Epublic class TutDataObject{\u003Cbr\u003E  public float force;\u003Cbr\u003E}\u003Cbr\u003Epublic class TutPartModule: PartModule{\u003Cbr\u003E  TutDataObject tutData;\u003Cbr\u003E  bool isPrimary = false;\u003Cbr\u003E  void Start(){ // or awake?\u003Cbr\u003E    tutData = vessel.parts.SelectMany(part =\u0026gt; part.Modules.OfType\u0026lt;TutPartModule\u0026gt;()).Where(tutMod =\u0026gt; tutMod.tutData != null).FirstOrDefault();\u003Cbr\u003E    if( tutData == null ){\u003Cbr\u003E      isPrimary = true;\u003Cbr\u003E      tutData = new ...\u003Cbr\u003E    }\u003Cbr\u003E  }\u003Cbr\u003E  void OnSave(...){\u003Cbr\u003E    if(isPrimary){\u003Cbr\u003E      //save data...\u003Cbr\u003E    } \u003Cbr\u003E  }\u003Cbr\u003E  void OnLoad(...){\u003Cbr\u003E    // load data if there is such a node\u003Cbr\u003E  }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOfc its not that easy... since a vessels can be split into multiple vessels, e.g. by staging and merged by e.g. docking. A way to handle such situtations would be to store the latestest VesselId in TutDataObject and check whether its up to date via the GameEvents.onVesselChange.\u003C/p\u003E\n"}]}