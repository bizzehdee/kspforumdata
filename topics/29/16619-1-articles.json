{"TopicId":16619,"ForumId":29,"TopicTitle":"OnPack in PartModule?","CreatedByName":"Tosh","CreatedById":11055,"CreatedDateTime":"2012-08-11T13:44:19Z","PageNum":1,"Articles":[{"CreatedByName":"Tosh","CreatedById":11055,"CreatedDateTime":"2012-08-11T13:44:19Z","Content":"\n\u003Cp\u003EIs there a way for \u003Cem\u003EPartModule \u003C/em\u003Eto be notified when a \u003Cem\u003EPart \u003C/em\u003Egets packed for orbit? \u003C/p\u003E\u003Cp\u003ESurely I can override the \u003Cem\u003EPart \u003C/em\u003Eitself and make its \u003Cem\u003EOnPack() \u003C/em\u003Emethod raise some \u003Cem\u003EEvent...\u003C/em\u003E but I want my PartModule \u003Cem\u003Euniversal \u003C/em\u003Eand connectible to \u003Cem\u003Eany \u003C/em\u003EPart...\u003C/p\u003E\n"},{"CreatedByName":"Romfarer","CreatedById":20387,"CreatedDateTime":"2012-08-11T15:47:46Z","Content":"\n\u003Cp\u003EI\u0027m pretty sure onPack is called at the same time as another \u0022on\u0022 method. I was fiddeling a lot with that when i was making remote control. Maybe onSave does it?\u003C/p\u003E\u003Cp\u003EYou could also check every frame if the Part.pack is set.\u003C/p\u003E\u003Cp\u003EOr ask Mu to add a onPack method to PartModules.\u003C/p\u003E\n"},{"CreatedByName":"Tosh","CreatedById":11055,"CreatedDateTime":"2012-08-11T15:59:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Romfarer\u0022 data-cite=\u0022Romfarer\u0022\u003E\u003Cdiv\u003EYou could also check every frame if the Part.pack is set.\u003C/div\u003E\u003C/blockquote\u003ESomething tells me that this won\u0027t work... When part goes \u0022packed\u0022 KSP expects it has all the joints and rigidbodies deleted \u003Cem\u003Eimmediately; \u003C/em\u003Eincluding those ones that plugin might have created. Doing that in OnUpadate or OnFixedUpdate may be a bit too late \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Romfarer\u0022 data-cite=\u0022Romfarer\u0022\u003E\u003Cdiv\u003EOr ask Mu to add a onPack method to PartModules.\u003C/div\u003E\u003C/blockquote\u003EFrom my experience of \u0022asking Mu\u0022 -- most likely he won\u0027t do \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\n"},{"CreatedByName":"Romfarer","CreatedById":20387,"CreatedDateTime":"2012-08-11T16:05:13Z","Content":"\n\u003Cp\u003EWhat are you trying to accomplish?\u003C/p\u003E\n"},{"CreatedByName":"Tosh","CreatedById":11055,"CreatedDateTime":"2012-08-11T16:13:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Romfarer\u0022 data-cite=\u0022Romfarer\u0022\u003E\u003Cdiv\u003EWhat are you trying to accomplish?\u003C/div\u003E\u003C/blockquote\u003EApparently, a PartModule that adds some joints and rigidbodies to any part it\u0027s attached to. Specifically, it would automatically spawn struts (i.e. joints) linking all the SymmetryCounterparts together. \u003Cp\u003EI need it for my new landing gear (so I could easily implement strut spawning in Part class itself) -- but I\u0027d like this \u0027strut-spawner\u0027 to be universal. Just imagine you\u0027re side-mounting 8 SRBs -- and they automatically get all the struts they need! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003EMain problem originates from \u003Cem\u003E\u0022packing-for-orbit\u0022 \u003C/em\u003Emechanism: all the \u003Cem\u003Eadditional \u003C/em\u003Ejoints and rigidbodies \u003Cem\u003Emust \u003C/em\u003Ebe removed before Part\u0027s main rigidbody is. \u003Cem\u003EPart \u003C/em\u003Eclass descendant overrides \u003Cem\u003EPart.onPack\u003C/em\u003E for doing it; \u003Cem\u003EPartModule \u003C/em\u003Ecannot.\u003C/p\u003E\n"},{"CreatedByName":"Romfarer","CreatedById":20387,"CreatedDateTime":"2012-08-11T17:25:00Z","Content":"\n\u003Cp\u003EI dont think i really understand the problem. \u003C/p\u003E\u003Cp\u003ESo when you add the landing gear (rocket or airplane landing gear?) to a vessel in VAB or SPH you use onAttach to also add struts linking the landing gear to the part it is attached to or struts linking the landing gear counterparts together. Why do you then need to remove the rigidbodies from the joints? Is it imaginary struts or actual struts?\u003C/p\u003E\n"},{"CreatedByName":"Tosh","CreatedById":11055,"CreatedDateTime":"2012-08-11T17:31:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Romfarer\u0022 data-cite=\u0022Romfarer\u0022\u003E\u003Cdiv\u003ESo when you add the landing gear (rocket or airplane landing gear?) to a vessel in VAB or SPH you use onAttach to also add struts linking the landing gear to the part it is attached to or struts linking the landing gear counterparts together. Why do you then need to remove the rigidbodies from the joints? Is it imaginary struts or actual struts?\u003C/div\u003E\u003C/blockquote\u003EThey\u0027re pontoons \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E. Just a new version, with working wheels.\u003Cp\u003E\u003Cimg src=\u0022http://www.mineun.com/Northwest/seaplane.jpg\u0022 alt=\u0022seaplane.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EAnd they just \u003Cem\u003Emust \u003C/em\u003Ebe linked \u003Cem\u003Etogether \u003C/em\u003E(not only to craft\u0027s hull! See two horizontal bars in the bottom.), if I don\u0027t want the plane to break apart when landing on the ground. And -- yep, they must be \u003Cem\u003Eactual \u003C/em\u003Estruts... i.e. Unity \u003Cem\u003EJoint \u003C/em\u003Eobjects. \u003C/p\u003E\u003Cp\u003EJoints connect rigidbodies. KSP delete rigidbodies in OnPack. If there\u0027s a joint still connected there, then KSP fails.\u003C/p\u003E\u003Cp\u003ECurrently, I\u0027m using KSP \u003Cem\u003EStrut \u003C/em\u003Eparts to fix pontoons in place, and I\u0027m just tired of adding them manually. I\u0027d like some automation here.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222012-08-11T17:35:01Z\u0022 title=\u002208/11/2012 05:35  PM\u0022 data-short=\u002211 yr\u0022\u003EAugust 11, 2012\u003C/time\u003E by Tosh\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Romfarer","CreatedById":20387,"CreatedDateTime":"2012-08-11T17:51:51Z","Content":"\n\u003Cp\u003EThis is something i would definately add to my planes \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EIt seems to me that the problem here is: How to programmatically add struts in the SPH. Struts that appear automatically when you add the pontoons to a plane, linking the pontoons to the part they are attached to and between the pontoons. After they are placed they will look and operate exactly as if the user added the struts themselves.\u003C/p\u003E\u003Cp\u003EYou should probably consider to just leave that up to the user as there are \u0022infinite\u0022 ways to connect those things. And even if you do manage to add them programmaticly, the structure of the plane will probably requre additional struts anyways.\u003C/p\u003E\n"},{"CreatedByName":"Tosh","CreatedById":11055,"CreatedDateTime":"2012-08-11T18:00:11Z","Content":"\n\u003Cp\u003EDarn, I\u0027m tired of \u0027em sliding apart on landing every time I descend just a lil\u0027 too fast. I need \u0027em stronger. \u003C/p\u003E\u003Cp\u003ENext, I\u0027m tired of adding struts \u003Cem\u003Emanually \u003C/em\u003Eeach time I change pontoon placement just a tiny bit. Struts are \u003Cem\u003Ealways\u003C/em\u003E needed here.\u003C/p\u003E\u003Cp\u003EMoreover, everytime I create a rocket with side-attached SRBs, I link those SRBs together with struts. I could really use strut auto-spawning.\u003C/p\u003E\u003Cp\u003EAnd there\u0027s\u003Cem\u003E not \u003C/em\u003Ea problem to add joints programmatically. It\u0027s even not a problem to destroy them right in time when overriding \u003Cem\u003EPart\u003C/em\u003E class. I\u0027ve already implemented that cr... stuff a couple of times. \u003C/p\u003E\u003Cp\u003EBut as soon as it comes to \u003Cem\u003EPartModule...\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003EFFFFFUUUUUUU \u003C/p\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_angry.gif\u0022 alt=\u0022:mad:\u0022\u003E\u003C/blockquote\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222012-08-11T18:04:42Z\u0022 title=\u002208/11/2012 06:04  PM\u0022 data-short=\u002211 yr\u0022\u003EAugust 11, 2012\u003C/time\u003E by Tosh\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2012-08-12T11:37:10Z","Content":"\n\u003Cp\u003EThat\u0027s stupid. PartModules don\u0027t have half of the events (you can\u0027t even make something passive for an activatable part!), Part can\u0027t read IConfigNodes from part.cfg (PartModule reads them, but they aren\u0027t copied when spawning an actual part, too). What do they want from us to do? Mixing these things to get at least something to work? I don\u0027t get it when new better system works even worse\u003C/p\u003E\n"},{"CreatedByName":"Tosh","CreatedById":11055,"CreatedDateTime":"2012-08-12T13:03:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Alchemist\u0022 data-cite=\u0022Alchemist\u0022\u003E\u003Cdiv\u003EWhat do they want from us to do?\u003C/div\u003E\u003C/blockquote\u003EApparently, nothing \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003Cp\u003EThere\u0027s not a question like this. \u003Cem\u003E\u0022They\u0022 \u003C/em\u003E(KSP developers) want the system to be convenient \u003Cem\u003Efor themselves\u003C/em\u003E in the first place. \u0022One function per part\u0022 principle (i.e. using \u003Cem\u003EPart \u003C/em\u003Eclass only) might become a limiting factor at some point; so Mu started \u003Cem\u003Egame engine refactoring,\u003C/em\u003E proposing his \u003Cem\u003EPartModule \u003C/em\u003Esystem. But then, refactoring was somehow postponed in favor of adding new functionality...\u003C/p\u003E\u003Cp\u003EThat\u0027s quite a common situation in software development. I\u0027m currently facing exactly the same one in \u003Cem\u003Emy own \u003C/em\u003Ebusiness \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E: I\u0027d like to ditch some code I wrote in 1998 (!!!) and redo it from scratch -- but I haven\u0027t gotten time to do that...\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Alchemist\u0022 data-cite=\u0022Alchemist\u0022\u003E\u003Cdiv\u003EI don\u0027t get it when new better system works even worse\u003C/div\u003E\u003C/blockquote\u003EMaybe we gotta give it some time to \u003Cem\u003Eevolve? \u003C/em\u003EOr to be ditched completely in favor of something more appropriate; generally it\u0027s hard to tell beforehand.\n"},{"CreatedByName":"Romfarer","CreatedById":20387,"CreatedDateTime":"2012-08-12T14:23:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tosh\u0022 data-cite=\u0022Tosh\u0022\u003E\u003Cdiv\u003EMaybe we gotta give it some time to \u003Cem\u003Eevolve? \u003C/em\u003EOr to be ditched completely in favor of something more appropriate; generally it\u0027s hard to tell beforehand.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI mainly use part modules for persistance purposes and i think it is brilliant at that. For example making the kerbals on EVA remember what vessel they came out of. \u003C/p\u003E\u003Cp\u003EThen again, i completely agree that more onSomething methods are needed in the part module class.\u003C/p\u003E\n"},{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2012-08-12T15:38:57Z","Content":"\n\u003Cp\u003EThe feature is that the stock classes really can be converted to PartModules (or at least most of them, not sure about the strut connectors if there is this issue). If the ability is passive, just autoactivate the part - results in inability to stick active and passive abilities on one part. \u003C/p\u003E\u003Cp\u003EBut most of the things we are creating are over this level, so they can depend too much on some specific cases. And here is the difference between editing your own project and adding modules to something closed - if they run into limitations of their own system they can change it, when we get into such trouble we can either abandon this idea or make it in a rather unsafe and glitchy way. So here\u0027s where we are given something that doesn\u0027t wok at all in half of the cases.\u003C/p\u003E\u003Cp\u003EAs I understood, the devs tried to make something with simplier interface for it to be more efficient, but it ended incapable of some of the important things we had in Part. And all this configNode system proved to be very unfinished, too.\u003C/p\u003E\u003Cp\u003EIt would be okay if this system was really evolving with feedback from plugin developers - this way we\u0027d make it capable of everything in just a couple versions, but the developers are too busy adding new features.\u003C/p\u003E\u003Cp\u003EAnd here\u0027s what I hate about programming for something like this: instead of actually developing something you are forced to be searching for hacky ways around some badly placed corners.\u003C/p\u003E\n"},{"CreatedByName":"Tosh","CreatedById":11055,"CreatedDateTime":"2012-08-12T16:26:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Alchemist\u0022 data-cite=\u0022Alchemist\u0022\u003E\u003Cdiv\u003EIt would be okay if this system was really evolving with feedback from plugin developers - this way we\u0027d make it capable of everything in just a couple versions, but the developers are too busy adding new features.\u003C/div\u003E\u003C/blockquote\u003EI reiterate once again: the system ever exists \u003Cem\u003Efor devs in the first place.\u003C/em\u003E And they\u0027re busy enough with feedback \u003Cem\u003Efrom the gamers\u003C/em\u003E (yep, with so-called \u0022bug reports\u0022... including those on \u003Cem\u003Egame-breaking \u003C/em\u003Ebugs). \u003Cp\u003EI believe there\u0027s helluva lot of things having much higher priority than creating an \u0022ideal plugin interface\u0022. And that \u0022priority\u0022 is the matter of \u003Cem\u003Emanagement, \u003C/em\u003Erather than programming itself. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Alchemist\u0022 data-cite=\u0022Alchemist\u0022\u003E\u003Cdiv\u003EAnd here\u0027s what I hate about programming for something like this: instead of actually developing something you are forced to be searching for hacky ways around some badly placed corners.\u003C/div\u003E\u003C/blockquote\u003EAll I can say here: deal with it. \u0022Actual development\u0022 \u003Cem\u003Efor 80%\u003C/em\u003E consists of passing around that darn corners... even in most thought-out and well-designed systems. Sadly I \u003Cem\u003Ereally \u003C/em\u003Edo know what am I talking about; I\u0027ve seen a lot of them systems...\u003Cp\u003E\u003C/p\u003E\u003Chr\u003E\u003Cp\u003EUh, guys, I hate the discussion derails to generic programming/management problems.\u003C/p\u003E\u003Cp\u003EOnce again, is there any chance (or hack \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E) that class A could be notified on class B calling its protected method, \u003Cem\u003Ewithout \u003C/em\u003Emodifying B\u0027s code? Quick search through \u003Cem\u003ESystem.Reflection\u003C/em\u003E assembly reference gave me nothing...\u003C/p\u003E\u003Cblockquote\u003E...and KSP is \u003Cem\u003Enot\u003C/em\u003E the one having the prize for Most Ugly Software Design. KSP\u0027s near \u003Cem\u003Ethe end \u003C/em\u003Eof that list, to be honest \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"Kreuzung","CreatedById":21035,"CreatedDateTime":"2012-08-12T17:05:55Z","Content":"\n\u003Cp\u003E@Alchemist, you can have passive code in \u003Cspan style=\u0022color:#FF0000;\u0022\u003Evoid Update()\u003C/span\u003E and \u003Cspan style=\u0022color:#FF0000;\u0022\u003Evoid FixedUpdate()\u003C/span\u003E (it\u0027s not an override, just define them yourself and they will be called).\u003C/p\u003E\u003Cp\u003ENote that they are also called in the VAB, I always use \u003Cspan style=\u0022color:#FF0000;\u0022\u003Eif(!HighLogic.LoadedSceneIsFlight) return;\u003C/span\u003E to prevent that.\u003C/p\u003E\n"},{"CreatedByName":"HarvesteR","CreatedById":4,"CreatedDateTime":"2012-08-14T23:55:13Z","Content":"\n\u003Cp\u003EPartModules don\u0027t have a virtual method that gets called when the vessel packs and unpacks, but parts send the \u003Cstrong\u003EOnPartPack \u003C/strong\u003Eand \u003Cstrong\u003EOnPartUnpack \u003C/strong\u003Emessages to all components attached to the same game object, so if you have public void methods with those names, they should get called when the parts pack and unpack.\u003C/p\u003E\u003Cp\u003ECheers\u003C/p\u003E\n"},{"CreatedByName":"Tosh","CreatedById":11055,"CreatedDateTime":"2012-08-15T00:07:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022HarvesteR\u0022 data-cite=\u0022HarvesteR\u0022\u003E\u003Cdiv\u003EPartModules don\u0027t have a virtual method that gets called when the vessel packs and unpacks, but parts send the \u003Cstrong\u003EOnPartPack \u003C/strong\u003Eand \u003Cstrong\u003EOnPartUnpack \u003C/strong\u003Emessages to all components attached to the same game object, so if you have public void methods with those names, they should get called when the parts pack and unpack.\u003Cp\u003ECheers\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003EAh-ha. \u003Cp\u003EThanks a lot, I\u0027ll give it a try \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Kreuzung","CreatedById":21035,"CreatedDateTime":"2012-08-15T00:10:55Z","Content":"\n\u003Cp\u003E@HarvesteR:\u003C/p\u003E\u003Cp\u003EWhould it be possible to get a list of all messages Part and all stock parts / part modules send? I\u0027m curious if I don\u0027t know something that whould make things a lot easier...\u003C/p\u003E\n"},{"CreatedByName":"HarvesteR","CreatedById":4,"CreatedDateTime":"2012-08-16T14:42:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kreuzung\u0022 data-cite=\u0022Kreuzung\u0022\u003E\u003Cdiv\u003E@HarvesteR:\u003Cp\u003EWhould it be possible to get a list of all messages Part and all stock parts / part modules send? I\u0027m curious if I don\u0027t know something that whould make things a lot easier...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECurrently, there aren\u0027t many of these messages, as they\u0027re part of the new PartModule interface, which we are slowly building up to replace Part subclasses. I\u0027ve been adding them as needed here, but here\u0027s what we have now:\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EOnPartPack \u003C/strong\u003E- sent when a part is packed\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EOnPartUnpack \u003C/strong\u003E- sent when a part is unpacked\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EOnVesselPack \u003C/strong\u003E- sent to the vessel object (the root part on the ship), when it packs \u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EOnVesselUnpack \u003C/strong\u003E- sent to the vessel object (the root part on the ship), when it unpacks\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EOnVesselLoad \u003C/strong\u003E- sent to the vessel object (the root part on the ship), when it loads its parts\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EOnVesselUnload \u003C/strong\u003E- sent to the vessel object (the root part on the ship), when it unloads its parts\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EOnVesselDie \u003C/strong\u003E- sent to the vessel object (the root part on the ship), when it dies\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EOnPutToGround(PartHeightQuery)\u003C/strong\u003E - sent to all parts on a ship when it\u0027s placed at the runway or launchpad. Used to override the default ground-finding algorithm, for instance, in case of a landing gear that is supposed to start deployed, or the launch clamps.\u003C/p\u003E\u003Cp\u003EComing in 0.17:\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EOnCenterOfThrustQuery(CenterOfThrustQuery)\u003C/strong\u003E - used in the editor scenes to find the center of thrust for the whole vessel. Parts that produce thrust are required to fill in the values in the query object.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EOnCenterOfLiftQuery(CenterOfLiftQuery)\u003C/strong\u003E - used in the editor scenes to find the center of lift for the vessel. Part that produce lift are required to return a lift force value based on the reference velocity vector on the query object.\u003C/p\u003E\u003Cp\u003EIIRC, that\u0027s all of them for now.\u003C/p\u003E\u003Cp\u003ECheers\u003C/p\u003E\n"},{"CreatedByName":"Tosh","CreatedById":11055,"CreatedDateTime":"2012-08-16T15:05:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022HarvesteR\u0022 data-cite=\u0022HarvesteR\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003EOnPutToGround(PartHeightQuery)\u003C/strong\u003E - sent to all parts on a ship when it\u0027s placed at the runway or launchpad. Used to override the default ground-finding algorithm, for instance, in case of a landing gear that is supposed to start deployed, or the launch clamps.\u003C/div\u003E\u003C/blockquote\u003EOh. That\u0027s useful indeed in my case... Thanks for an information!\n"},{"CreatedByName":"Arrowstar","CreatedById":2521,"CreatedDateTime":"2012-08-17T00:43:57Z","Content":"\n\u003Cp\u003EHarv, are those new messages going to break backwards compatibility with currently available add-ons?\u003C/p\u003E\n"},{"CreatedByName":"Tosh","CreatedById":11055,"CreatedDateTime":"2012-08-17T02:12:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Arrowstar\u0022 data-cite=\u0022Arrowstar\u0022\u003E\u003Cdiv\u003EHarv, are those new messages going to break backwards compatibility with currently available add-ons?\u003C/div\u003E\u003C/blockquote\u003EThey\u0027re \u003Cem\u003Emessages. \u003C/em\u003EClass \u003Cem\u003Emay \u003C/em\u003Ehave a message handler if it wishes to, but it may just omit it.\u003Cp\u003EUPD. \u003Cstrong\u003Ew00t!\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EHere are them auto-struts:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://kerbalspaceprogram.com/forum/attachment.php?attachmentid=31377\u0022 alt=\u0022attachment.php?attachmentid=31377\u0022\u003E\u003C/p\u003E\u003Cp\u003EThey work exactly as intended.\u003C/p\u003E\u003Cp\u003EThe funny thing is that they don\u0027t need no \u003Cem\u003EOnPack \u003C/em\u003Eat all \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_rolleyes.gif\u0022 alt=\u0022:rolleyes:\u0022\u003E. It turns out that, unlike some other physical components, \u003Cem\u003EFixedJoint \u003C/em\u003Eand \u003Cem\u003EConfigurableJoint \u003C/em\u003Edo not give a dang are their \u003Cem\u003Erigidbodies \u003C/em\u003Estill alive. My apologies: false alarm, eh... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_embarrassed.gif\u0022 alt=\u0022:blush:\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222012-08-17T04:37:36Z\u0022 title=\u002208/17/2012 04:37  AM\u0022 data-short=\u002211 yr\u0022\u003EAugust 17, 2012\u003C/time\u003E by Tosh\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"HarvesteR","CreatedById":4,"CreatedDateTime":"2012-08-17T14:51:28Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tosh\u0022 data-cite=\u0022Tosh\u0022\u003E\u003Cdiv\u003EThey\u0027re \u003Cem\u003Emessages. \u003C/em\u003EClass \u003Cem\u003Emay \u003C/em\u003Ehave a message handler if it wishes to, but it may just omit it.\u003Cp\u003EThe funny thing is that they don\u0027t need no \u003Cem\u003EOnPack \u003C/em\u003Eat all \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_rolleyes.gif\u0022 alt=\u0022:rolleyes:\u0022\u003E. It turns out that, unlike some other physical components, \u003Cem\u003EFixedJoint \u003C/em\u003Eand \u003Cem\u003EConfigurableJoint \u003C/em\u003Edo not give a dang are their \u003Cem\u003Erigidbodies \u003C/em\u003Estill alive. My apologies: false alarm, eh... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_embarrassed.gif\u0022 alt=\u0022:blush:\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAhh yeah, this is why we didn\u0027t bother much with packing and unpacking for the new PartModules. Joints are only active while their rigidbodies are non-kinematic. When vessels pack up, their joints get paused automatically (This is the beauty of the new part packing/unpacking system we created in 0.16. It\u0027s that much simpler now).\u003C/p\u003E\u003Cp\u003ECheers\u003C/p\u003E\n"},{"CreatedByName":"Tosh","CreatedById":11055,"CreatedDateTime":"2012-08-17T15:03:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022HarvesteR\u0022 data-cite=\u0022HarvesteR\u0022\u003E\u003Cdiv\u003EThis is the beauty of the new part packing/unpacking system we created in 0.16. It\u0027s that much simpler now.\u003C/div\u003E\u003C/blockquote\u003EAh, it\u0027s the packing system that has changed? I didn\u0027t even know that. \u003Cp\u003E\u003Cem\u003EWheelColliders \u003C/em\u003Enow don\u0027t need to pack too; so I could finally remove packing code from the Cart :thumbsup:\u003C/p\u003E\u003Cp\u003ETopic closed, thanks. I\u0027ve no more questions about onPack \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"}]}