{"TopicId":57210,"ForumId":29,"TopicTitle":"Change PART{} from \u0026quot;mesh = \u0026quot; to MODEL{} form?","CreatedByName":"JumpsterG","CreatedById":63396,"CreatedDateTime":"2013-12-21T19:59:00Z","PageNum":1,"Articles":[{"CreatedByName":"JumpsterG","CreatedById":63396,"CreatedDateTime":"2013-12-21T19:59:00Z","Content":"\n\u003Cp\u003EHi everybody. This problem seemed simple at first, but it has me pulling my hair out at the moment.\u003C/p\u003E\u003Cp\u003EAs part of a \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/27541-Win-0-22%2A-Kerbal-Orderly-Parts-Update-in-the-works\u0022 rel=\u0022external nofollow\u0022\u003Ebigger project\u003C/a\u003E, I\u0027m trying to create an automated procedure to change all parts in GameData to using URL references to their resources.\u003C/p\u003E\u003Cp\u003EBasically, converting from:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Emesh = model.mu\u003Cbr\u003Escale = 0.01\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eto this form:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODEL\u003Cbr\u003E{\u003Cbr\u003Emodel = Squad/Parts/FuelTank/MK1Fuselage/model\u003Cbr\u003Eposition = 0.0, 0.0, 0.0\u003Cbr\u003Escale = 1.0, 1.0, 1.0\u003Cbr\u003Erotation = 0, 0, 0\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESimply commenting out the \u0022mesh = \u0022 line and adding in the MODEL{} node as above works to some extent, but some sizes seem off and some parts are missing visible attachment nodes and/or attach strangely in the VAB/SPH. This is using the model node exactly as above with what I understand are basic settings.\u003C/p\u003E\u003Cp\u003EObviously, I\u0027m failing to set scale, rescaleFactor, the MODEL{} variables (pos, scale, rot), and/or the attachment node properties to reflect the changeover to the MODEL format. Can anyone help me understand what are equivalent sets of values between a minimally-defined PART{} and one that explicitly defines MODEL{}?\u003C/p\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2013-12-21T20:33:31Z","Content":"\n\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EMODEL\u003Cbr\u003E{\u003Cbr\u003E  model = Squad/Parts/FuelTank/MK1Fuselage/model\u003Cbr\u003E  position = 0.0, 0.0, 0.0\u003Cbr\u003E  scale = 1.0, 1.0, 1.0\u003Cbr\u003E  rotation = 0.0, 0.0, 0.0\u003Cbr\u003E}\u003Cbr\u003Escale = 0.01\u003Cbr\u003ErescaleFactor=1\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Escale doesn\u0027t do what you think and rescaleFactor\u0027s default value is not 1, so they must be set explicitly or the result will not be the same; there are also some conflicts between scale, rescaleFactor, and MODEL{scale} that you\u0027ll have to experience and account for.\u003C/p\u003E\u003Cp\u003Escale directly impacts the coordinate space that attachment nodes are defined in; if it was supposed to be 0.01 and you leave it out, the default value is either 1 or a value near 1, and your nodes will be 100 times farther away from the part origin than intended.\u003C/p\u003E\n"},{"CreatedByName":"JumpsterG","CreatedById":63396,"CreatedDateTime":"2013-12-22T01:15:54Z","Content":"\n\u003Cp\u003EThanks, Greys. I think I just needed some more eyes on this, since I have no experience making models or adjusting part sizes and such. I assumed there would be just a 1-to-1 conversion between implementations, but this seems not to be the case. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\u003Cp\u003EI understand that scale needs to stay the same, regardless of whether MODEL{} is being used. Does it\u0027s behavior change in any way though?\u003C/p\u003E\u003Cp\u003EIf rescaleFactor was not present in the original \u0022mesh = \u0022 implementation, I assume this meant it was using KSP\u0027s default for that value. (1.25 I think is what I read elsewhere). I wouldn\u0027t think that switching to MODEL{} would require rescaleFactor to be adjusted or explicitly set, but I\u0027ll play with a couple of settings and see if something works.\u003C/p\u003E\u003Cp\u003EMy fear is that even if I experiment and figure out good values for one part (say, the MK1Fuselage I was experimenting with), that I might not be able to find a recognizable pattern that can be automated for performing the same transformation on arbitrary parts.\u003C/p\u003E\u003Cp\u003EDoes anyone know of a reference describing the class KSP loads these values into? I guess I should probably bite the bullet and dig into the .dlls myself...\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2013-12-22T02:58:23Z","Content":"\n\u003Cp\u003EExcept there\u0027s a bug whereby a model using MODEL node is scaled by rescaleFactor * rescaleFactor. So you will need to set, in model node, scale = 1/rF, 1/rF, 1/rF (for any rF), where rF = 1.25 if not present in cfg.\u003C/p\u003E\n"},{"CreatedByName":"JumpsterG","CreatedById":63396,"CreatedDateTime":"2013-12-22T03:46:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NathanKell\u0022 data-cite=\u0022NathanKell\u0022\u003E\u003Cdiv\u003EExcept there\u0027s a bug whereby a model using MODEL node is scaled by rescaleFactor * rescaleFactor. So you will need to set, in model node, scale = 1/rF, 1/rF, 1/rF (for any rF), where rF = 1.25 if not present in cfg.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI get it now! I had read about this elsewhere, but it didn\u0027t click in my head as the issue I was dealing with until you wrote it out this way. The way I saw it, I was already scaling 1-to-1, but now it\u0027s obvious that I need to be compensating. Some testing now with stock parts switched to MODEL{} confirms that adjusting scale as you suggested results in those stock parts appearing as expected in the VAB/SPH. Funny that I\u0027m excited about seeing the exact same parts I started with!\u003C/p\u003E\u003Cp\u003EI\u0027m writing out the following in case it helps someone else as dense as I am who winds up reading this thread:\u003C/p\u003E\u003Cp\u003EThis works as a simple 1-to-1 conversion for parts without a rescaleFactor:\u003C/p\u003E\u003Cp\u003EReplace just this line\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Emesh = model.mu\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ewith\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODEL\u003Cbr\u003E{\u003Cbr\u003Emodel = Squad/Parts/FuelTank/MK1Fuselage/model\u003Cbr\u003Escale = 0.8, 0.8, 0.8\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe MODEL{scale} values will need to be set differently for PART{}\u0027s with a rescaleFactor set to any value other than 1.25, but that is simple math (1 divided by rescaleFactor). Allowing Position and Rotation defaults seems to work fine, but I\u0027m going to play with some test cases to find out if there are situations these need to be set to ensure 1-to-1 conversion.\u003C/p\u003E\u003Cp\u003EThank you both for helping out here in the addon development subforums! I\u0027m sure I\u0027m not the only one flailing around in the pool.\u003C/p\u003E\n"},{"CreatedByName":"MisterFister","CreatedById":85686,"CreatedDateTime":"2013-12-22T22:14:10Z","Content":"\n\u003Cp\u003EI\u0027m not sure if you\u0027re trying to accomplish your project a certain way in terms of folder structure, but what about keeping the endemic \u0022mesh =\u0022 format and just renaming the mesh files so they\u0027re unique and able to be consolidated in the same folder with no conflicts? I still don\u0027t think I\u0027ll quite understand why almost all parts, even tock squad parts, ALL use the part.cfg / model.mu filenaming scheme, except to artificially necessitate subfolders. I understand that having subfolders has some advantages, and that artifically necessitating the use of repetitive subfolders is one way to realize such advantages; I just can\u0027t imagine that the advantages are so monumental, or so impossible by alternate means. (I recognize that modding is made easier by grouping modpaks into their own folders, I speak only of the enforced need to nest folders and subfolders within each modpak on pretty much a per-part basis.\u003C/p\u003E\n"},{"CreatedByName":"JumpsterG","CreatedById":63396,"CreatedDateTime":"2013-12-22T23:24:06Z","Content":"\n\u003Cp\u003EThe idea is that I want to leave all resources where they are in whatever folder structure was designed by the mod maker. This way, if a plugin or a welded part or something refers to that location, the file and folder structure will be there. I also suspect it would be an additional headache to track those renamed resources in addition to the part data I\u0027m already moving around.\u003C/p\u003E\u003Cp\u003EMod makers have options now, but still tend toward putting each part and its resources into its own folder, which is a neat and tidy way of doing things. Otherwise, everything needs to be named uniquely, which I bet can actually get annoying. Standards are also nice, as everyone can more easily recognize what is going on with a group of files. Consider the filename: \u0022starmaker.cfg\u0022. It\u0027s not clear what\u0027s in there. It could be a single part, it could contain multiple PART{} nodes, it could contain resource definitions, or it could be a .cfg used by a plugin and not by KSP. Naming it \u0022part.cfg\u0022 is surprisingly LESS ambiguous than uniquely naming it. Model files might be a different story, but I think the same applies.\u003C/p\u003E\u003Cp\u003EI\u0027m happy to say, I\u0027m passed the hurdle of this thread. Parts are now working while placed in the unique sorting folder structure, separate from their resources. I\u0027m coding the management side of things now, and hope to have something usable posted before Christmas.\u003C/p\u003E\n"}]}