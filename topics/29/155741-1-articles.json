{"TopicId":155741,"ForumId":29,"TopicTitle":"[ANSWERED] Throttle event","CreatedByName":"Warezcrawler","CreatedById":145377,"CreatedDateTime":"2017-01-29T10:38:04Z","PageNum":1,"Articles":[{"CreatedByName":"Warezcrawler","CreatedById":145377,"CreatedDateTime":"2017-01-29T10:38:04Z","Content":"\n\u003Cp\u003E\nDoes KSP have an event for when the throttle changes, that I can call in my plugin?\n\u003C/p\u003E\n\u003Cp\u003E\nIf not, what are the alternatives - how can I do calculations when the player changes the throttle in flight?\n\u003C/p\u003E\n\u003Cp\u003E\n-----------------------------------------------------------------------------------------------------\n\u003C/p\u003E\n\u003Cp\u003E\nAnswer: No KSP does not have an event for throttle yet. But I have created one, which will be part of my next release of GTIndustries mod.\n\u003C/p\u003E\n\u003Ciframe data-embedcontent=\u0022\u0022 frameborder=\u00220\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/155741-throttle-event/\u0026amp;do=embed\u0026amp;comment=2943970\u0026amp;embedComment=2943970\u0026amp;embedDo=findComment#comment-2943970\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-02-03T23:05:50Z\u0022 title=\u002202/03/2017 11:05  PM\u0022 data-short=\u00227 yr\u0022\u003EFebruary 3, 2017\u003C/time\u003E by Warezcrawler\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Li0n","CreatedById":142527,"CreatedDateTime":"2017-01-29T14:44:03Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222937965\u0022 data-ipsquote-contentid=\u0022155741\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485686284\u0022 data-ipsquote-userid=\u0022145377\u0022 data-ipsquote-username=\u0022Warezcrawler\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, Warezcrawler said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nDoes KSP have an event for when the throttle changes, that I can call in my plugin?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNot that I am aware of, but you can now create your own event :\n\u003C/p\u003E\n\u003Ciframe data-embedcontent=\u0022\u0022 frameborder=\u00220\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/153112-ksp-122-gameevents-extension/\u0026amp;do=embed\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222937965\u0022 data-ipsquote-contentid=\u0022155741\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485686284\u0022 data-ipsquote-userid=\u0022145377\u0022 data-ipsquote-username=\u0022Warezcrawler\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, Warezcrawler said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIf not, what are the alternatives - how can I do calculations when the player changes the throttle in flight?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou can check the state of \u0022vessel.ctrlState.mainThrottle\u0022 in every Update() or less frequently with a coroutine.\n\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2017-01-29T15:24:09Z","Content":"\n\u003Cp\u003E\nIf this is per vessel, just monitor the mentioned vessel.ctrlState.mainThrottle. The overhead of an event isn\u0027t worth imo.\n\u003C/p\u003E\n\u003Cp\u003E\nNote the throttle gauge seen on screen is a different object, FlightInputHandler.state.mainThrottle.\n\u003C/p\u003E\n\u003Cp\u003E\nEither way:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003Efloat\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E savedThrottle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EFixedUpdate\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EsavedThrottle \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EFlightInputHandler\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estate\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EmainThrottle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//run code on throttle change here.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    savedThrottle \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EFlightInputHandler\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estate\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EmainThrottle\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nNote that because throttle change happens over several update frames, the above code will fire several times for the \u0022same\u0022 throttle change.\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-29T15:24:46Z\u0022 title=\u002201/29/2017 03:24  PM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 29, 2017\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Warezcrawler","CreatedById":145377,"CreatedDateTime":"2017-01-29T16:43:16Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222938069\u0022 data-ipsquote-contentid=\u0022155741\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485701043\u0022 data-ipsquote-userid=\u0022142527\u0022 data-ipsquote-username=\u0022Li0n\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Li0n said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou can check the state of \u0022vessel.ctrlState.mainThrottle\u0022 in every Update() or less frequently with a coroutine.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOk, I\u0027ve been avoiding using onUpdate() and onFixedUpdate() because I really do not want to end up with a mod that is hitting performance.\n\u003C/p\u003E\n\u003Cp\u003E\nWould a coroutine be better for performance? Or would the overhead of having the coroutine runnning be worse than just doing as Diazo is suggesting and just checking the throttlestate every frame?\n\u003C/p\u003E\n\u003Cp\u003E\n(now I would be happy if I knew how to create and independent tread to run this process in - taking the load of the main tread)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222938098\u0022 data-ipsquote-contentid=\u0022155741\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485703449\u0022 data-ipsquote-userid=\u002281549\u0022 data-ipsquote-username=\u0022Diazo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Diazo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIf this is per vessel, just monitor the mentioned vessel.ctrlState.mainThrottle. The overhead of an event isn\u0027t worth imo.\n\u003C/p\u003E\n\u003Cp\u003E\nNote the throttle gauge seen on screen is a different object, FlightInputHandler.state.mainThrottle.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWhat is the difference between these two? Is it that the bottom one would fire for all loaded vessels if I do this in a parts module, while the top one would only fire for the specific vessel?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-29T17:10:10Z\u0022 title=\u002201/29/2017 05:10  PM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 29, 2017\u003C/time\u003E by Warezcrawler\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Li0n","CreatedById":142527,"CreatedDateTime":"2017-01-29T17:08:19Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222938169\u0022 data-ipsquote-contentid=\u0022155741\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485708196\u0022 data-ipsquote-userid=\u0022145377\u0022 data-ipsquote-username=\u0022Warezcrawler\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n26 minutes ago, Warezcrawler said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOk, I\u0027ve been avoiding using onUpdate() and onFixedUpdate() because I really do not want to end up with a mod that is hitting performance.\n\u003C/p\u003E\n\u003Cp\u003E\nWould a coroutine be better for performance? Or would the overhead of having the coroutine runnning be worse than just doing as Diazo is suggesting and just checking the throttlestate every frame?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNo idea what is better performance wise. In my opinion, using one or the other depends on how often do you need to interact with the \u0022throttlestate\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\nCan you speak more about the mod you\u0027re planing ?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-29T17:09:49Z\u0022 title=\u002201/29/2017 05:09  PM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 29, 2017\u003C/time\u003E by Li0n\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2017-01-29T17:36:03Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222938169\u0022 data-ipsquote-contentid=\u0022155741\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485708196\u0022 data-ipsquote-userid=\u0022145377\u0022 data-ipsquote-username=\u0022Warezcrawler\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n53 minutes ago, Warezcrawler said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOk, I\u0027ve been avoiding using onUpdate() and onFixedUpdate() because I really do not want to end up with a mod that is hitting performance.\n\u003C/p\u003E\n\u003Cp\u003E\nWould a coroutine be better for performance? Or would the overhead of having the coroutine runnning be worse than just doing as Diazo is suggesting and just checking the throttlestate every frame?\n\u003C/p\u003E\n\u003Cp\u003E\n(now I would be happy if I knew how to create and independent tread to run this process in - taking the load of the main tread)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWhat is the difference between these two? Is it that the bottom one would fire for all loaded vessels if I do this in a parts module, while the top one would only fire for the specific vessel?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nKeep in mind that you have to run background logic of some sort to check the throttle to either throw an event or check in a coroutine anyway and I would lay odds that either of those would just be checking current throttle against a saved value anyway. A coroutine that checks once every 5 seconds would probably be lower overhead,\u00A0 but I don\u0027t know how long a delay would be required for the coroutine to be less overhead then just checking every frame.\n\u003C/p\u003E\n\u003Cp\u003E\nAs for the two throttle objects, every vessel (including focus vessel) have a vessel.ctrlStat.mainThrottle.\n\u003C/p\u003E\n\u003Cp\u003E\nHowever, the throttle UI object seen on screen is FlightInputHandler.state.mainThrottle and the vessel.ctrlState.mainThrottle seems to get slaved to this for the focus vessel. So any changes made to vessel.ctrlState.mainThrottle on the focus vessel don\u0027t take as the value in FlightInputHandler.state.mainThrtottle overwrites it.\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s been a few KSP versions since I tested that, but it is since KSP 1.0 or newer so I have no reason to think its changed.\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-01-29T17:37:09Z\u0022 title=\u002201/29/2017 05:37  PM\u0022 data-short=\u00227 yr\u0022\u003EJanuary 29, 2017\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Warezcrawler","CreatedById":145377,"CreatedDateTime":"2017-01-30T20:11:26Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222938220\u0022 data-ipsquote-contentid=\u0022155741\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485711363\u0022 data-ipsquote-userid=\u002281549\u0022 data-ipsquote-username=\u0022Diazo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 29/01/2017 at 6:36 PM, Diazo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nKeep in mind that you have to run background logic of some sort to check the throttle to either throw an event or check in a coroutine anyway and I would lay odds that either of those would just be checking current throttle against a saved value anyway. A coroutine that checks once every 5 seconds would probably be lower overhead,\u00A0 but I don\u0027t know how long a delay would be required for the coroutine to be less overhead then just checking every frame.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe overhead of checking all the time in update (main processing thread) bother me. I really get your point, and hope Squad will implement a stock event I can subscribe to.\n\u003C/p\u003E\n\u003Cp\u003E\nIn the meantime, I did some research and think I can implement this as a separate thread running in parallel with the main one for KSP/Unity. I\u0027m thinking throwing a coroutine the continuously listens for the throttle in the parallel thread. I just tried it out in another plugin I have, where I use a coroutine to listens for an animation to finish before implementing the manipulations of the partModule, and it seems to work fine, even if I am aggressive in my execution of it. (basically the point of multithreads)\n\u003C/p\u003E\n\u003Cp\u003E\nI will look something like this (might be errors)\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Epublic void SomeMethod()\n{\n  ....logic\n\n  Thread parallelThread = new Thread(() =\u0026gt; threadExecution(0.0f, 0.1f));\n  parallelThread.Start();\n\n  ..more logic\n}\n\n//The threading method have to return void I think\nprivate void threadExecution(float starttime, float waitingtime)\n{\n  StartCoroutine(myCoroutine(starttime, waitingtime));\n}\n\npublic float savedThrottle;\nprivate IEnumerator myCoroutine(float starttime, float waitingtime)\n{\n  yield return new WaitForSeconds(starttime);\n  while(true)\n  {\n\tif (!HighLogic.LoadedSceneIsFlight) break;\n\t\n\t...coroutine logic\n\n    if(savedThrottle != FlightInputHandler.state.mainThrottle)\n    {\n      //run code on throttle change here.\n      savedThrottle = FlightInputHandler.state.mainThrottle;\n      yield return new WaitForSeconds(waitingtime);\n    }\n\telse yield return new WaitForSeconds(waitingtime);\n  }\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nI think this approach could take the load of the main thread.... Maybe this is helpful to other mods as well, as an alternative to using Update() or OnUpdate(), if synchronous timing with main processes is not needed.\n\u003C/p\u003E\n"},{"CreatedByName":"Warezcrawler","CreatedById":145377,"CreatedDateTime":"2017-01-30T20:22:48Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222938188\u0022 data-ipsquote-contentid=\u0022155741\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221485709699\u0022 data-ipsquote-userid=\u0022142527\u0022 data-ipsquote-username=\u0022Li0n\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 29/01/2017 at 6:08 PM, Li0n said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nCan you speak more about the mod you\u0027re planing ?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nMy mod (collection) evolves around versatility of engines, converters and intake - and maybe more will come. Pretty much multimode of several modules. The engine one exists in stock, but only have two modes, while mine have as many as is configured. Most of the time I stop at 4, but whatever one feels like is possible.\n\u003C/p\u003E\n\u003Cp\u003E\nThe intake one is intended for removing the need of having multiple intake modules in an intake, just because you want IntakeAir and IntakeAtm as possibilities.\n\u003C/p\u003E\n\u003Cp\u003E\nThe converter switch (multimode) is for when you want the \u003Cabbr title=\u0022In-Situ Resource Utilization\u0022\u003EISRU\u003C/abbr\u003E to have multiple mode, while thinking that having 10 different modes running simultaneously is just plain weird. This on restricts it to only have on running at any one time, and possibly only possible to change in \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E/\u003Cabbr title=\u0022SpacePlane Hangar\u0022\u003ESPH\u003C/abbr\u003E if you thus desire for your mod.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd, I\u0027ve been looking into having the \u003Cabbr title=\u0022Specific Impulse (rocketry) or Internet Service Provider\u0022\u003EISP\u003C/abbr\u003E curve be tied to the throttle ever since a fellow suggested it the thread of my mod. I originally turned it down since KSP 1.2 had an implementation of this. But I\u0027ve been testing on it, and it does not seem to work.... If it does work, I can say I have been unsuccessful in getting it to work.\n\u003C/p\u003E\n\u003Cp\u003E\nI posted a question in this regard, but got no answer\n\u003C/p\u003E\n\u003Ciframe data-embedcontent=\u0022\u0022 frameborder=\u00220\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/151751-adventures-in-using-minthrust/\u0026amp;do=embed\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\nSince then I have been considering implementing this feature in my mod, and this thread was to find the best way to get the information regarding the throttle.\n\u003C/p\u003E\n"},{"CreatedByName":"Warezcrawler","CreatedById":145377,"CreatedDateTime":"2017-02-03T23:04:13Z","Content":"\n\u003Cp\u003E\nI managed to create my first event, and it is even running in a separate thread.\u00A0So event if I stress it, KSP keeps running smoothly, which it does not do if I do the same using coroutines.\n\u003C/p\u003E\n\u003Cp\u003E\nI sharing it, for all those who are struggling with event\u0027s, thinking it could help somebody.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/WarezCrawler/Guybrush101/blob/master/GTI_Utilities/GTI_Events.cs\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/WarezCrawler/Guybrush101/blob/master/GTI_Utilities/GTI_Events.cs\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nFirst I initialize the event in it\u0027s own static class, which runs at the main menu.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E    [KSPAddon(KSPAddon.Startup.MainMenu, true)]\n    public class GTI_EventCreator : MonoBehaviour\n    {\n        public static EventVoid onThrottleChange;\n\n        private void Awake()\n        {\n            Debug.Log(\u0022[GTI] Event \u0027onThrottleChange\u0027 Created\u0022);\n            if (onThrottleChange == null) onThrottleChange = new EventVoid(\u0022onThrottleChange\u0022);\n        }\n    }\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThen in another class, I start the detection of the throttle to change. It starts a parallel process when in flight, which is cycling and checking the state of the throttle while in flight.\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003E    [KSPAddon(KSPAddon.Startup.Flight, false)]\n    public class GTI_Events : MonoBehaviour\n    {\n        private static float savedThrottle;\n        private EventVoid onThrottleChangeEvent;\n        public static bool EventDetectorRunning = false;\n        private bool initEvent;\n        private ConfigNode EventConfig;\n\n        private void Awake()\n        {\n            //Load Config\n            EventConfig = GetConfigurationsCFG();\n            if (!bool.TryParse(EventConfig.GetValue(\u0022initEvent\u0022), out initEvent)) initEvent = true;\n\n            onThrottleChangeEvent = GameEvents.FindEvent\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;EventVoid\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E(\u0022onThrottleChange\u0022);\n            \n            //Starting the thread which will continuously check and raise the Throttle Event if interaction was detected\n            startThread();\n        }\n\n        private void startThread()\n        {\n            if (initEvent)\n            {\n                if (!EventDetectorRunning)\n                {\n                    Thread EventThread = new Thread(() =\u0026gt;\n                    {\n                        //StartCoroutine(UpdateEvent());\n                        EventDetectorRunning = true;\n                        GTI_inFlightEventDetector();\n                    });\n                    Debug.Log(\u0022[GTI] Starting GTI Event thread\u0022);\n                    EventThread.Start();\n                }\n                else Debug.Log(\u0022[GTI] GTI onThrottle event detector allready runnning. New Activation Cancelled.\u0022);\n            }\n            else\n            {\n                Debug.Log(\u0022[GTI] The GTI Event \u0027onThrottleChange\u0027 deactivated. initEvent was set to \u0027false\u0027\u0022);\n                Destroy(this.gameObject);\n            }\n        }\n        private void GTI_inFlightEventDetector()        //For threaded execution --\u0026gt; Detects the basis for event\n        {\n            Debug.Log(\u0022[GTI] GTI_inFlightEventDetector Started in new thread\u0022);\n            int EventCheckFreqIdle, EventCheckFreqActive;\n            if (!int.TryParse(EventConfig.GetValue(\u0022EventCheckFreqIdle\u0022),   out EventCheckFreqIdle  ))      EventCheckFreqIdle   = 500;\n            if (!int.TryParse(EventConfig.GetValue(\u0022EventCheckFreqActive\u0022), out EventCheckFreqActive))      EventCheckFreqActive = 100;\n            int wait = EventCheckFreqIdle;\n\n            //Stopwatch for timing how long the event checking is running\n            System.Diagnostics.Stopwatch stopwatch;\n            stopwatch = System.Diagnostics.Stopwatch.StartNew();\n\n            Debug.Log(\u0022[GTI] Event thread GTI_inFlightEventDetector started\\nEventCheckFreqIdle: \u0022 \u002B EventCheckFreqIdle \u002B \u0022\\nEventCheckFreqActive: \u0022 \u002B EventCheckFreqActive);\n            while (EventDetectorRunning)\n            {\n                if (savedThrottle != FlightInputHandler.state.mainThrottle)\n                {\n                    //run code on throttle change here.\n                    savedThrottle = FlightInputHandler.state.mainThrottle;\n                    onThrottleChangeEvent.Fire();\n                    wait = EventCheckFreqActive;\n                }\n                else { wait = EventCheckFreqIdle; }\n\n                Thread.Sleep(wait);\n            }\n            stopwatch.Stop();\n            var ts = stopwatch.Elapsed;\n            string elapsedTime = string.Format(\u0022{0:00}:{1:00}:{2:00}.{3:00}\u0022, ts.Hours, ts.Minutes, ts.Seconds, ts.Milliseconds / 10);\n            Debug.Log(\u0022[GTI] GTI_inFlightEventDetector Stopped.\\tRuntime = \u0022 \u002B elapsedTime);\n        }\n        \n        private void OnDestroy()\n        {\n            Debug.Log(\u0022[GTI] GTI_Events destroyed\u0022);\n            EventDetectorRunning = false;\n        }\n\n        private ConfigNode GetConfigurationsCFG()\n        {\n            ConfigNode node;\n            try\n            {\n                node = ConfigNode.Load(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) \u002B \u0022/GTI_Config.cfg\u0022);\n                node = node.GetNode(\u0022EventConfig\u0022);\n            }\n            catch\n            {\n                Debug.LogError(\u0022[GTI] \u0022 \u002B Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) \u002B \u0022/GTI_Config.cfg NOT FOUND\u0022);\n                //manage NRE errors\n              \tnode = new ConfigNode();\n            }\n            return node;\n        }\n    }\n}\u003C/span\u003E\u003C/pre\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}