{"TopicId":151489,"ForumId":29,"TopicTitle":"KSP/ScreenSpaceMask Shader Source? (used on Part icons in editor)","CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-11-04T16:45:59Z","PageNum":1,"Articles":[{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-11-04T16:45:59Z","Content":"\n\u003Cp\u003E\nHi all,\n\u003C/p\u003E\n\u003Cp\u003E\nWhile working through using custom shaders on parts in KSP I ran into a bit of a hitch related to the editor part icons.\u00A0 Apparently all models used for Part Icons are stripped of their original shader/materials, and a custom material/shader combination is applied to them using the \u0027KSP/ScreenSpaceMask\u0027 shader.\u00A0 I cannot locate this shader in any of the PartTools distributions (0.20, 0.23, 1.1, 1.2-porkjet parts).\n\u003C/p\u003E\n\u003Cp\u003E\nI would like to override whatever shader is forced onto the Part Icon models back to the custom shaders that the actual parts have assigned to them.\u00A0 However before I do such a hacky/heavy handed move, I would like to take a look at the source of the shader currently in use on the icons to see if there is anything special required of that shader (I would assume so, else why use a custom shader for part-icons?).\u00A0 As stated above though, I cannot locate the source for that shader anywhere.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nBasically I\u0027ve created custom shaders with RGB specular maps and AO as a separate texture slot, but all of these features get stripped on the part-icons, resulting in dull and washed-out (and in some cases, just wrong) looking parts for the icons (missing their specular map entirely, lacking AO and detail maps).\u00A0 Not really a showstopper, and far from game-breaking, but none the less a problem I would like to solve.\n\u003C/p\u003E\n\u003Cp\u003E\nThe first step would be to look at the existing shader source for what features are used specifically for part-icons.\u00A0 The next step would be to create new plugin code that updates the shaders on the part icons after all of the parts have been compiled (either through a hook in one of my custom PartModules, or a more generic KSPAddon solution hooking into the database events).\u00A0 Might be necessary to write my own customized version of the KSP/ScreenSpaceMask shader with support for the custom texture slots, but cannot know without looking at the existing shader.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nDoes anyone have any information on that shader -- what it does, why it exists, and where to find the source?\n\u003C/p\u003E\n\u003Cp\u003E\nThanks in advance,\n\u003C/p\u003E\n\u003Cp\u003E\nShadowmage\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-08-04T15:19:02Z","Content":"\n\u003Cp\u003E\nEhh... since nobody else bothered to post with info, I managed to kludge my way through a re-implementation of said shader.\n\u003C/p\u003E\n\u003Cp\u003E\nWhat it does:\u00A0 Clips the rendering bounds into a specific area based on screen-space.\u00A0 E.g. only render within a specific sub-window.\u00A0 Analogous to openGL scissor function\n\u003C/p\u003E\n\u003Cp\u003E\nWhy it exists:\u00A0 As a very hacky workaround to only rendering editor-part-list part-icons within the bounds of the editor-part-list scroll area.\u00A0 Probably could have been handled more properly by a separate camera and render-texture.\n\u003C/p\u003E\n\u003Cp\u003E\nHow it does it:\u00A0 Uses a couple of shader properties to setup the clip bounds.\u00A0 In the shader, checks if the output coordinate is within the desired bounds, else discards the fragment without rendering it.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nLinks to working implementation -- note the explicit handling of directX vs. openGL screen-space coordinates in the shader.\u00A0 Without this the clip space will have inverted Y coordinates between the two rendering systems.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/shadowmage45/SSTULabs/blob/master/CustomShaders/SSTUMaskedIcon.shader\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/shadowmage45/SSTULabs/blob/master/CustomShaders/SSTUMaskedIcon.shader\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nMods -- if reading, you can probably close this thread.\u00A0 It has served its purpose, and the information sought has been figured out.\n\u003C/p\u003E\n"}]}