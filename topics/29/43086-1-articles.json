{"TopicId":43086,"ForumId":29,"TopicTitle":"[Solved] Engine \u0026#039;Running\u0026#039; in editor. How to stop?","CreatedByName":"ecat","CreatedById":68747,"CreatedDateTime":"2013-08-19T10:00:31Z","PageNum":1,"Articles":[{"CreatedByName":"ecat","CreatedById":68747,"CreatedDateTime":"2013-08-19T10:00:31Z","Content":"\n\u003Cp\u003EI have a little plugin that can be applied to engines via part.cfg\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E\tname = ecCoMAdjPart\u003Cbr\u003E\tmaxPosError = 0.005\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe plugin overrides OnStart\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E        \u003Cbr\u003Epublic override void OnStart(StartState state)\u003Cbr\u003E        {\u003Cbr\u003E            base.OnStart(state);\u003Cbr\u003E...\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E \u003C/p\u003E\u003Cp\u003Eand implements \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E        \u003Cbr\u003Epublic void FixedUpdate()\u003Cbr\u003E        {\u003Cbr\u003E...\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIt\u0027s really quite simple code and appears to work fine with one cosmetic exception: when I add a modified engine in SPH or VAB or load a craft file containing one or more modified engines they appear with fully animated exhaust/thrust tails. Once I switch to \u0027Flight\u0027 everything is fine and on reverting from Flight to the editor building the engines \u0027go out\u0027. It looks very much like an initialisation problem.\u003C/p\u003E\u003Cp\u003EI\u0027ve looked around for examples and poked and prodded my code to no avail. What do I need to do to ensure that when an engine is added in the editor it appears without the eyeball burning animation?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-19T17:42:43Z\u0022 title=\u002208/19/2013 05:42  PM\u0022 data-short=\u002210 yr\u0022\u003EAugust 19, 2013\u003C/time\u003E by ecat\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"pizzaoverhead","CreatedById":26349,"CreatedDateTime":"2013-08-19T10:22:25Z","Content":"\n\u003Cp\u003EDoes your plugin modify anything relating to the ModuleEngines? You can try checking if you\u0027re in editor mode when OnStart is called and exiting if this is the case:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Epublic override void OnStart(StartState state)\u003Cbr\u003E{\u003Cbr\u003E\tif (state == StartState.Editor || state == StartState.None) return;\u003Cbr\u003E\t...\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"ecat","CreatedById":68747,"CreatedDateTime":"2013-08-19T10:35:54Z","Content":"\n\u003Cp\u003EThanks for the reply. \u003C/p\u003E\u003Cp\u003EI don\u0027t think I modify anything to do with the stock part, I just use its position for reference and access its parent node. Also I do have a test for Editor mode, so I think I have that covered.\u003C/p\u003E\u003Cp\u003EHere\u0027s the meat of the code. It\u0027s messy and full of debug and reveals the fact that I only know how to work in two dimensions but it will save time. \u003C/p\u003E\u003Cp\u003EThis work is licensed under a \u003Ca href=\u0022http://creativecommons.org/licenses/by-nc/3.0/deed.en_GB\u0022 rel=\u0022external nofollow\u0022\u003ECreative Commons Attribution-NonCommercial 3.0 Unported License\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E        //\u003Cbr\u003E        // Start States\u003Cbr\u003E        //  None = 0, Editor = 1, PreLaunch = 2, Landed = 4, Docked = 8,\u003Cbr\u003E        //  Flying = 16, Splashed = 32, SubOrbital = 64, Orbital = 128\u003Cbr\u003E        //\u003Cbr\u003E        public override void OnStart(StartState state)\u003Cbr\u003E        {\u003Cbr\u003E            base.OnStart(state);\u003Cbr\u003E\u003Cbr\u003E            actionActivate = new KSPActionParam(0, KSPActionType.Activate);\u003Cbr\u003E            actionDeactivate = new KSPActionParam(0, KSPActionType.Deactivate);\u003Cbr\u003E\u003Cbr\u003E            UnityEngine.Vector3 debugCoM = FlightGlobals.ActiveVessel.localCoM;\u003Cbr\u003E            Vector3 coMOffset = this.part.CoMOffset;        // orgPos;\u003Cbr\u003E\u003Cbr\u003E//            maxPosError = 0.005f;\u003Cbr\u003E            Debug.Log(\u0022ecCoMAdj maxPosError \u0022 \u002B maxPosError);\u003Cbr\u003E//            trackCoM = false;\u003Cbr\u003E\u003Cbr\u003E            currentMovement = 0;\u003Cbr\u003E\u003Cbr\u003E//            GUICoMTrkOff();\u003Cbr\u003E\u003Cbr\u003E            SetGUICoMTrkEvents();\u003Cbr\u003E\u003Cbr\u003E            Debug.Log(\u0022ecCoMAdj StartState \u0022 \u002B (int)state );\u003Cbr\u003E\u003Cbr\u003E            if (state != StartState.None \u0026amp;\u0026amp; state != StartState.Editor)\u003Cbr\u003E            {\u003Cbr\u003E                Debug.Log(\u0022ecCoMAdj Starting Part data1 P() R() (\u0022 \u002B this.part.orgPos.x \u002B \u0022, \u0022 \u002B this.part.orgPos.y \u002B \u0022, \u0022 \u002B this.part.orgPos.z \u002B \u0022) (\u0022 \u002B this.part.orgRot.x \u002B \u0022, \u0022 \u002B this.part.orgRot.y \u002B \u0022, \u0022 \u002B this.part.orgRot.z \u002B\u003Cbr\u003E                    \u0022)\u0022);\u003Cbr\u003E\u003Cbr\u003E                Debug.Log(\u0022ecCoMAdj Starting CoM data1 V() P() (\u0022 \u002B debugCoM.x \u002B \u0022, \u0022 \u002B debugCoM.y \u002B \u0022, \u0022 \u002B debugCoM.z \u002B \u0022) (\u0022 \u002B coMOffset.x \u002B \u0022, \u0022 \u002B coMOffset.y \u002B \u0022, \u0022 \u002B coMOffset.z \u002B\u003Cbr\u003E                    \u0022)\u0022);\u003Cbr\u003E\u003Cbr\u003E                debugCoM = FlightGlobals.ActiveVessel.localCoM;\u003Cbr\u003E                Vector3 coMOffset2 = this.part.orgPos;\u003Cbr\u003E\u003Cbr\u003E                Debug.Log(\u0022ecCoMAdj Starting CoM data2 V() P() (\u0022 \u002B debugCoM.x \u002B \u0022, \u0022 \u002B debugCoM.y \u002B \u0022, \u0022 \u002B debugCoM.z \u002B \u0022) (\u0022 \u002B coMOffset2.x \u002B \u0022, \u0022 \u002B coMOffset2.y \u002B \u0022, \u0022 \u002B coMOffset2.z \u002B\u003Cbr\u003E                    \u0022)\u0022);\u003Cbr\u003E\u003Cbr\u003E                Debug.Log(\u0022ecCoMAdj Starting Parent partName, ClassName \u0022 \u002B this.part.parent.partName \u002B \u0022, \u0022 \u002B this.part.parent.ClassName);\u003Cbr\u003E                Debug.Log(\u0022ecCoMAdj Starting Parent Q rotation (\u0022 \u002B this.part.parent.orgRot.x \u002B \u0022, \u0022 \u002B this.part.parent.orgRot.y \u002B \u0022, \u0022 \u002B this.part.parent.orgRot.z \u002B \u0022)\u0022);\u003Cbr\u003E                Debug.Log(\u0022ecCoMAdj Starting Parent E rotation (\u0022 \u002B this.part.parent.orgRot.eulerAngles.x \u002B \u0022, \u0022 \u002B this.part.parent.orgRot.eulerAngles.y \u002B \u0022, \u0022 \u002B this.part.parent.orgRot.eulerAngles.z \u002B \u0022)\u0022);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EEdit:\u003C/p\u003E\u003Cp\u003EI\u0027ve just noticed that when the engine is first added as mentioned above, it does \u003Cstrong\u003Ehave \u003C/strong\u003Ethe thrust animation but it \u003Cstrong\u003Edoes not have\u003C/strong\u003E an engine staging icon! The icon appears correctly in Flight and after a Revert.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-19T17:42:13Z\u0022 title=\u002208/19/2013 05:42  PM\u0022 data-short=\u002210 yr\u0022\u003EAugust 19, 2013\u003C/time\u003E by ecat\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ecat","CreatedById":68747,"CreatedDateTime":"2013-08-19T17:41:26Z","Content":"\n\u003Cp\u003Eheh!\u003C/p\u003E\u003Cp\u003EThe reason I couldn\u0027t find any glaring errors when compared to the code used in B9 etc is that there are no glaring errors... Apart from one...\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EUnityEngine.Vector3 debugCoM = FlightGlobals.ActiveVessel.localCoM;\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EActiveVessel is not valid first time through the editor so the code failed to complete which for some reason broke the default engine initialisation.\u003C/p\u003E\u003Cp\u003EAfter the first flight all appeared well.\u003C/p\u003E\n"}]}