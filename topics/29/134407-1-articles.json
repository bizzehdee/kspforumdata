{"TopicId":134407,"ForumId":29,"TopicTitle":"[RESOLVED] Axis-Limited RCS - Not responding after control transform change","CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-03-17T20:12:05Z","PageNum":1,"Articles":[{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-03-17T20:12:05Z","Content":"\n\u003Cp\u003E\nHi all,\n\u003C/p\u003E\n\u003Cp\u003E\nI have a few parts where I have multiple RCS modules on the part; each module is limited to input from specific axis through the RCSModule.enableXXX config fields.\u00A0 This is done so that specific RCS blocks only fire when they are supposed to / fire only for their specific input (e.g. to stop angled pitch thrusters that might try and fire for yaw or translation commands).\u00A0 Mostly used on service modules and command pods so far.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThis all works great.... until you set a custom control transform for the vessel.\u00A0 As soon as you switch control transforms to one that is not aligned perfectly with the parts default control transform, most of the RCS ports stop responding;\u00A0 this is because they are \u0027seeing\u0027 a different input axis being passed in -- an input axis relative to the vessels current control transform rather than relative to the parts orientation.\n\u003C/p\u003E\n\u003Cp\u003E\nNow, I can manually remap the \u0027enableXXX\u0027 fields in the ModuleRCS for various control inputs -- if I had a way to tell when the control transform has changed.\u00A0 Is anyone aware of a vessel event that is fired when the vessels control transform is set or changed?\u00A0 I tried subscribing to nearly every event and never got any hits from changing transforms....\u00A0 (even if I do this, I still would only be able to handle axis-aligned transforms; anything that was not on 90\u0027 angles to the part would not work out properly...)\n\u003C/p\u003E\n\u003Cp\u003E\nAlternatively, it would be nice if the RCS module code responsible for this were \u0027fixed\u0027, so that it respected the -parts- orientation rather than the vessels orientation.\u00A0 Or at least a bool in the module so that they can be setup to use that method.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIn the end, the question comes down to -- how to fix the stock RCS module so that it respects the part-relative-input axis rather than control-transform-relative? (e.g. the actual transform should be ..transformed.. relative to the parts transform, so that the vessel-relative input (pitch) is seen by the RCS module as a part-relative input (yaw))\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-03-18T14:40:37Z\u0022 title=\u002203/18/2016 02:40  PM\u0022 data-short=\u00228 yr\u0022\u003EMarch 18, 2016\u003C/time\u003E by Shadowmage\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2016-03-17T21:02:52Z","Content":"\n\u003Cp\u003E\nDid you try to use 1 RCS module with more transforms ? AFAIK there is not limit in the number of RCS transform on one model\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-03-17T21:25:05Z","Content":"\n\u003Cp\u003E\nThat was the original setup.. which... works... sloppily.\u00A0 Many of the RCS transforms would respond to incorrect inputs (though, correct as far as the part/module are concerned), which would result in unwanted translation during rotation, or unwanted rotation during translation.\n\u003C/p\u003E\n\u003Cp\u003E\nWhich is why I split the transforms up to be controlled by different RCS modules with per-axis-input limiting.\u00A0 So a set of transforms that should only respond to a \u0027translate forward\u0027 command will not respond to a yaw or roll command, and vice-versa.\u00A0 This fixed up the inputs and allowed for a balanced RCS setup for the parts, as long as the vessel is controlled from the proper part/transform orientation.\n\u003C/p\u003E\n\u003Cp\u003E\nFor example, take the Orion ESM:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00228513327513_4bd34cffea_o.jpg\u0022 class=\u0022ipsImage\u0022 height=\u0022562\u0022 src=\u0022http://www.nasa.gov/sites/default/files/thumbnails/image/8513327513_4bd34cffea_o.jpg\u0022 width=\u00221000\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWith a default stock setup (all transforms controlled by a single module) the bottom-most RCS quads (pitch/yaw quads) on this part will respond to translation inputs as well as pitch/yaw inputs-- which is undesired, and results in incorrect rotation for a translation input; those bottom blocks are not intended for translation, but rotation only, and should not respond to translation inputs at all.\u00A0 The same happens to the roll/translation blocks on the upper/middle of the SM -- they will respond to yaw and/or pitch inputs incorrectly (they should only respond to translation and roll inputs).\n\u003C/p\u003E\n\u003Cp\u003E\nSo.. the multi-RCS-module setup fixes all those problems, but exposes the new problem of lack of proper input/response when the control transform is changed away from the part default transform.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-03-17T21:28:39Z\u0022 title=\u002203/17/2016 09:28  PM\u0022 data-short=\u00228 yr\u0022\u003EMarch 17, 2016\u003C/time\u003E by Shadowmage\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2016-03-17T23:18:35Z","Content":"\n\u003Cp\u003E\nThe stock code now is basically identical to my ModuleRCS fork if you want to dig into that.\n\u003C/p\u003E\n\u003Cp\u003E\nThat said, I\u0027m not sure I\u0027m understanding the problem. The issue is that you want an RCS port to only fire along a fixed axis of actuation, regardless of whether that is pitch, yaw, or half-n-half at a given time (due to reference transform shifts)? That would need a completely different setup, and ask \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022http://forum.kerbalspaceprogram.com/index.php?/profile/21328-ferram4/\u0026amp;do=hovercard\u0022 data-mentionid=\u002221328\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/21328-ferram4/\u0022\u003E@ferram4\u003C/a\u003E how hard it is to determine the main axis of a vessel. \u003Cimg alt=\u0022:P\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 title=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-03-18T00:17:57Z","Content":"\n\u003Cp\u003E\nIt comes down to after a control-transform change, an RCS port that should only fire for \u0027yaw\u0027 input may not have any thrust transforms that are actually aligned for the new \u0027yaw\u0027 direction for the vessel.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m encountering this on a low-part shuttle fuselage with integrated docking port, where the RCS are setup for axis-limitation for the normal flight-direction.\u00A0 If you switch to the docking ports control transform, the RCS that are labeled to respond to Y\u002B/- translation input are now oriented towards the vessels Z\u002B/- translation axis;\u00A0 however, they will not respond to input for Z\u002B/- translation.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe highlighted RCS thrusters are set to respond to only Y\u002B/- input for translation, and pitch for rotation. (light blue arrows from RCSBuildAid)\n\u003C/p\u003E\n\u003Cp\u003E\nPicture 1: default control transform.\u00A0 The thrusters are oriented along vessel Y\u002B/- (blue), and respond properly to input for Y translation or pitch (w/s / i/k input keys).\u003Cbr\u003E\n(note that parts align with Y=vessel forward, vessel aligns with Z=vessel forward; so in the images blue corresponds to vessel Y\u002B and green to vessel Z\u002B)\u003Cbr\u003E\u003Cimg alt=\u0022zTpC73L.png\u0022 class=\u0022ipsImage\u0022 height=\u0022562\u0022 src=\u0022http://i.imgur.com/zTpC73L.png\u0022 width=\u00221000\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nPicture 2: controlled from docking port.\u00A0 Thrusters are now oriented along the vessel Z\u002B/- (green), but do not respond to input for Z translation (as they are set to only respond to Y translation).\u00A0 They do still respond to pitch input.\u00A0 They also no longer effectively respond to Y translation input, as they are now actually oriented Z\u002B/-.\u003Cbr\u003E\u003Cimg alt=\u0022u1nrv0L.png\u0022 class=\u0022ipsImage\u0022 height=\u0022562\u0022 src=\u0022http://i.imgur.com/u1nrv0L.png\u0022 width=\u00221000\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSome (or all?) of this might actually come down to the fact that I\u0027m changing the reference transform for the single part fuselage from its normal transform due to the integrated docking port (docking port has a custom control transform specified); so I will do some investigation to see if the problem persists from an external docking port part.\u00A0 The solution to that might be a bit simpler (reading through the posted code now), though I still don\u0027t think I can work around it on my end.\n\u003C/p\u003E\n\u003Cp\u003E\nEdit:\u00A0 The problem persists regardless of if I use the integrated docking port or one as an attached part; as soon as the vessel-control transform changes the RCS stop responding to input as per above.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nBut yeah, I understand the... fun... of different reference frames.\u00A0 It took me awhile just to get my head around what was actually going on that could cause this problem, and how to visualize it properly in some manner that would make sense.\u00A0 I even got about halfway through writing a module that would re-map the RCS module\u0027s enableXXX flags based on the current control relative to vessel control but then hit the question of \u0027how to handle a non-axis aligned transform?\u0027 (e.g. rotated 15\u0027 on an axis relative to the parts default transform);\u00A0 I couldn\u0027t think of a way other than \u0027enable everything that faces even partially in the right direction\u0027... which is mostly what the stock module already does when the input is not limited by config settings.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-03-18T00:26:34Z\u0022 title=\u002203/18/2016 12:26  AM\u0022 data-short=\u00228 yr\u0022\u003EMarch 18, 2016\u003C/time\u003E by Shadowmage\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2016-03-18T04:30:34Z","Content":"\n\u003Cp\u003E\nYep, exactly. I don\u0027t have any bright ideas either there, I\u0027m sorry to say. And besides, if I added a flag to use vesselTransform instead of ReferenceTransfrom, then what you got when you hit pitch wouldn\u0027t actually be pitch if those transforms didn\u0027t align! (i.e. doing it without a rotation to the new space). The alternative (doing the rotation) would be as you say: actuate if the dot is \u0026gt;0, but then axis-limiting isn\u0027t doing you much good.\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-03-18T14:44:11Z","Content":"\n\u003Cp\u003E\nNo worries, and thanks for your input and information \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nI tend to push the boundaries of what the game can do given its intended setup, so I expect to run into unworkable stuff once in awhile.\u00A0 I\u0027ve a couple other ideas for that part that might alleviate the problems -- such as...I don\u0027t think I actually need the axis limiting on that part.\u00A0 It\u0027ll have some pitch and/or yaw component with roll input, but it already has some roll with the yaw due to the thruster locations.. so a bit more off balance would probably not even be noticeable.\n\u003C/p\u003E\n\u003Cp\u003E\nMarking as resolved for now, and I\u0027ll keep in mind the limitations of the RCS-axis-limiting stuff when designing future parts.\n\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2016-03-18T19:53:45Z","Content":"\n\u003Cp\u003E\nIn the very, very special case where axes _are_ aligned, i.e. your example where roll is swapped with yaw, you can get away with doing things that way. And I can certainly add an event for reference transform switch.\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-03-18T20:23:54Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222463073\u0022 data-ipsquote-contentid=\u0022134407\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221458330825\u0022 data-ipsquote-userid=\u002275006\u0022 data-ipsquote-username=\u0022NathanKell\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n22 minutes ago, NathanKell said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIn the very, very special case where axes _are_ aligned, i.e. your example where roll is swapped with yaw, you can get away with doing things that way. And I can certainly add an event for reference transform switch.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe event would likely be useful more generically/applicable to more mods/situations; likely a few others would get use out of it as well (contrast to the RCS stuff... where as far as I know I\u0027m the only one using those features).\n\u003C/p\u003E\n\u003Cp\u003E\nSo, aye, if you add that event I\u0027ll take another look over the RCS/control swapping stuff after/during the 1.1 update \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2016-03-18T20:39:38Z","Content":"\n\u003Cp\u003E\nOk. This will now fire an event showing the old transform and the new transform. \u003Cstrong\u003EHowever\u003C/strong\u003E due to how vessel stores the old transform, in the case where the old transform and new transform are on the same part, all you\u0027ll get will be two references to the new transform. You\u0027ll still know it\u0027s happening though.\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-03-18T20:46:30Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222463158\u0022 data-ipsquote-contentid=\u0022134407\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221458333578\u0022 data-ipsquote-userid=\u002275006\u0022 data-ipsquote-username=\u0022NathanKell\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, NathanKell said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOk. This will now fire an event showing the old transform and the new transform. \u003Cstrong\u003EHowever\u003C/strong\u003E due to how vessel stores the old transform, in the case where the old transform and new transform are on the same part, all you\u0027ll get will be two references to the new transform. You\u0027ll still know it\u0027s happening though.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAwesome, the event triggering is all I would need.\u00A0 \u003Cem\u003ETechnically\u003C/em\u003E it could be done through per-tick polling... but I generally reserve that for where absolutely necessary.\n\u003C/p\u003E\n\u003Cp\u003E\nSo, thanks, much appreciated \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Jso","CreatedById":154231,"CreatedDateTime":"2016-03-18T21:54:42Z","Content":"\n\u003Cp\u003E\nCouldn\u0027t you stash a copy of the transform away on initialization and compare that to the new transform when the event fires? Then assuming it\u0027s a 90 degree rotation remap the appropriate enableXYZ fields.\n\u003C/p\u003E\n"}]}