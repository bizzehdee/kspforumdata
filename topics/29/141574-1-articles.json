{"TopicId":141574,"ForumId":29,"TopicTitle":"KSPField questions","CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2016-06-10T20:38:49Z","PageNum":1,"Articles":[{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2016-06-10T20:38:49Z","Content":"\n\u003Cp\u003E\nIs it possible to have an array or list of information stored as a persistent field in the game file? \u00A0I know I can do strings, ints, etc. \u00A0I\u0027d like to avoid having to convert an array of ints to a string and then decode it back when the game loads.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Bonus Eventus","CreatedById":115722,"CreatedDateTime":"2016-06-10T21:12:21Z","Content":"\n\u003Cp\u003E\nas far as I know the only way to do this is by hacking FxNode\u00A0or \u00A0using string.split(\u0022,\u0022)\n\u003C/p\u003E\n\u003Cp\u003E\nfor FxNode hacking check KAS source\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/KospY/KAS/blob/master/Plugins/Source/KASModuleAttachCore.cs\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KospY/KAS/blob/master/Plugins/Source/KASModuleAttachCore.cs\u003C/a\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2016-06-10T21:45:15Z","Content":"\n\u003Cp\u003E\nThere\u0027s no built in way to parse and save lists, but you can do it manually with not that much code. \u00A0Something like:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Epublic class MyModule : PartModule\n{\n    public List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;int\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E theList = new List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;int\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E();\n    \n    public override void OnLoad(ConfigNode node)\n    {\n        base.OnLoad(node);\n        \n        foreach (string value in node.GetValues(\u0022nameInNode\u0022))\n        {\n            theList.Add(int.Parse(value));\n        }\n    }\n    \n    public override void OnSave(ConfigNode node)\n    {\n        base.OnSave(node);\n        \n        foreach (int value in theList)\n        {\n            node.AddValue(\u0022nameInNode\u0022, value);\n        }\n    }\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis is pretty quick and dirty and you\u0027d probably want to have at least a bit of error handling in there, but hopefully you get the idea.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-06-10T21:46:21Z\u0022 title=\u002206/10/2016 09:46  PM\u0022 data-short=\u00228 yr\u0022\u003EJune 10, 2016\u003C/time\u003E by blowfish\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2016-06-10T22:19:09Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222625777\u0022 data-ipsquote-contentid=\u0022141574\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221465595115\u0022 data-ipsquote-userid=\u0022119688\u0022 data-ipsquote-username=\u0022blowfish\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n32 minutes ago, blowfish said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThere\u0027s no built in way to parse and save lists, but you can do it manually with not that much code. \u00A0Something like:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003Epublic class MyModule : PartModule\n{\n    public List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;int\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E theList = new List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;int\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E();\n    \n    public override void OnLoad(ConfigNode node)\n    {\n        base.OnLoad(node);\n        \n        foreach (string value in node.GetValues(\u0022nameInNode\u0022))\n        {\n            theList.Add(int.Parse(value));\n        }\n    }\n    \n    public override void OnSave(ConfigNode node)\n    {\n        base.OnSave(node);\n        \n        foreach (int value in theList)\n        {\n            node.AddValue(\u0022nameInNode\u0022, value);\n        }\n    }\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis is pretty quick and dirty and you\u0027d probably want to have at least a bit of error handling in there, but hopefully you get the idea.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat works for parts and part modules, but I want to do this for a game; \u00A0I\u0027ve used the following successfully in other mods:\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E\t[KSPScenario (ScenarioCreationOptions.AddToAllGames, new GameScenes[] {\n\t\tGameScenes.SPACECENTER,\n\t\tGameScenes.EDITOR,\n\t\tGameScenes.FLIGHT,\n\t\tGameScenes.TRACKSTATION,\n\t\tGameScenes.SPACECENTER\n\t})]\n\tpublic class PDPNPersistent : ScenarioModule\n\t{\n\t\tpublic static bool inited = false;\n\n\t\t[KSPField (isPersistant = true)]\n\t\tpublic int c1 = 0;\n    \u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nWill your method work for this as well?\n\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2016-06-10T22:23:55Z","Content":"\n\u003Cp\u003E\n[Persistent] supports Lists and arrays. Simple example:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n    class PersistentPartModuleExample : PartModule\n    {\n        [Persistent] private string[] _testArray = { \u0022Apple\u0022, \u0022Pear\u0022 };\n        [Persistent] private List\u0026lt;string\u0026gt; _testList = new List\u0026lt;string\u0026gt; { \u0022Cucumber\u0022, \u0022Carrot\u0022 };\n\n        public override void OnSave(ConfigNode node)\n        {\n            node.AddNode(ConfigNode.CreateConfigFromObject(this));\n        }\n\n        public override void OnLoad(ConfigNode node)\n        {\n            ConfigNode.LoadObjectFromConfig(this, node.GetNode(GetType().FullName));\n        }\n    }\u003C/pre\u003E\n\u003Cp\u003E\nIt also executes methods before and after serializing the object if the object implements IPersistenceSave and IPersistenceLoad. You can easily save a dictionary (or resolve a reference, set a field, etc) this way:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n    class PersistentPartModuleExample : PartModule, IPersistenceSave, IPersistenceLoad\n    {\n        // can\u0027t be serialized\n        private Dictionary\u0026lt;string, string\u0026gt; _myDictionary = new Dictionary\u0026lt;string, string\u0026gt;();\n\n        [Persistent] private List\u0026lt;string\u0026gt; _dictionaryKeys = new List\u0026lt;string\u0026gt;();\n        [Persistent] private List\u0026lt;string\u0026gt; _dictionaryValues = new List\u0026lt;string\u0026gt;(); \n\n        public override void OnSave(ConfigNode node)\n        {\n            node.AddNode(ConfigNode.CreateConfigFromObject(this));\n        }\n\n        public override void OnLoad(ConfigNode node)\n        {\n            ConfigNode.LoadObjectFromConfig(this, node.GetNode(GetType().FullName));\n        }\n\n        // just before serializing\n        public void PersistenceSave()\n        {\n            _dictionaryKeys = _myDictionary.Keys.ToList();\n            _dictionaryValues = _myDictionary.Values.ToList();\n        }\n\n        // just after deserializing\n        public void PersistenceLoad()\n        {\n            _myDictionary = Enumerable.Range(0, _dictionaryKeys.Count)\n                .ToDictionary(idx =\u0026gt; _dictionaryKeys[idx], idx =\u0026gt; _dictionaryValues[idx]);\n        }\n    }\u003C/pre\u003E\n\u003Cp\u003E\nYou can also serialize somewhat complex types with it. Maybe you have a class defining some information you want to persist. This particular one would be somewhat unpleasant to serialize manually (note its recursive nature):\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\nclass PersistentPartModuleExample : PartModule\n{\n    class ImportantDataToPersist\n    {\n        [Persistent] public string ImportantThing = string.Empty;\n        [Persistent] public double ImportantNumber; // note how it\u0027s a double? handled!\n        [Persistent] public List\u0026lt;ImportantDataToPersist\u0026gt; Children = new List\u0026lt;ImportantDataToPersist\u0026gt;();\n    }\n\n    [Persistent] private ImportantDataToPersist _importantStuff = new ImportantDataToPersist();\n\n\n    public override void OnLoad(ConfigNode node)\n    {\n        ConfigNode.LoadObjectFromConfig(this, node.GetNode(GetType().FullName));\n    }\n\n    public override void OnSave(ConfigNode node)\n    {\n        node.AddNode(ConfigNode.CreateConfigFromObject(this));\n    }\n}\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2016-06-10T22:27:38Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222625810\u0022 data-ipsquote-contentid=\u0022141574\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221465597149\u0022 data-ipsquote-userid=\u0022129964\u0022 data-ipsquote-username=\u0022linuxgurugamer\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 minutes ago, linuxgurugamer said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat works for parts and part modules, but I want to do this for a game; \u00A0I\u0027ve used the following successfully in other mods:\n\u003C/p\u003E\n\u003Cp\u003E\n*snip*\n\u003C/p\u003E\n\u003Cp\u003E\nWill your method work for this as well?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThere\u0027s nothing really PartModule specific in the code I gave, it was just a convenient example. \u00A0ScenarioModule has the same method names OnSave and OnLoad, so yes, it will work.\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2016-06-10T22:58:49Z","Content":"\n\u003Cp\u003E\nThank you all !\n\u003C/p\u003E\n"}]}