{"TopicId":168389,"ForumId":29,"TopicTitle":"How to detect part menu is open?","CreatedByName":"agrock","CreatedById":182774,"CreatedDateTime":"2017-12-10T08:16:44Z","PageNum":1,"Articles":[{"CreatedByName":"agrock","CreatedById":182774,"CreatedDateTime":"2017-12-10T08:16:44Z","Content":"\n\u003Cp\u003E\nI have a PartModule that adds labels (KSPFields) to a part menu. Since computing the info to be displayed on that label is expensive, I would like to detect if the menu is actually open so I can skip computation.\u00A0How do I detect if part menu is open?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-12-11T20:29:33Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223240027\u0022 data-ipsquote-contentid=\u0022168389\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221512893804\u0022 data-ipsquote-userid=\u0022182774\u0022 data-ipsquote-username=\u0022agrock\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 12/10/2017 at 1:16 AM, agrock said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI have a PartModule that adds labels (KSPFields) to a part menu. Since computing the info to be displayed on that label is expensive, I would like to detect if the menu is actually open so I can skip computation.\u00A0How do I detect if part menu is open?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Ebool windowOpen = UIPartActionController.Instance.ItemListContains(part, false));\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nShould be able to be called from within your PartModule code, likely just prior to updating your UI fields in Update/etc.\n\u003C/p\u003E\n\u003Cp\u003E\nShould return true if the part-action window for the chosen part is open/active/being updated.\u00A0 Untested personally, but will likely be implementing it in some of my part-modules as well (to reduce GC from string manipulation during UI field updates).\n\u003C/p\u003E\n\u003Cp\u003E\nHas a full method signature of:\u00A0 public bool ItemListContains(Part part, bool includeSymmetryCounterparts)\n\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2017-12-12T00:43:37Z","Content":"\n\u003Cp\u003E\nYou can do that, or, if you really want to avoid unnecessary checks in the Update method you can attach a little listener script to the UI window prefab. The script then fires an event whenever it is created alongside the part action window, then your Part Module can subscribe to that event to turn on\u00A0whatever it needs to update the field.\n\u003C/p\u003E\n\u003Cp\u003E\nScript:\u00A0\u003Ca href=\u0022https://github.com/CobaltWolf/Surface-Experiment-Pack/blob/master/Source/SEPScience/SEP_UIWindow.cs\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/CobaltWolf/Surface-Experiment-Pack/blob/master/Source/SEPScience/SEP_UIWindow.cs\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nCode to attach the script (just run it sometime after the flight scene has started):\u00A0\u003Ca href=\u0022https://github.com/CobaltWolf/Surface-Experiment-Pack/blob/master/Source/SEPScience/SEP_Utilities.cs#L131-L142\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/CobaltWolf/Surface-Experiment-Pack/blob/master/Source/SEPScience/SEP_Utilities.cs#L131-L142\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nPart Module subscribing to the window creation event (just a simple Game Event defined at the top of\u00A0the previously linked file) with the methods to check if the window belongs to its part, and the code in LateUpdate to fiddle with the window (adding an EC counter to a part clicked on while on EVA):\u00A0\u003Ca href=\u0022https://github.com/CobaltWolf/Surface-Experiment-Pack/blob/master/Source/SEPScience/ModuleSEPECViewer.cs\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/CobaltWolf/Surface-Experiment-Pack/blob/master/Source/SEPScience/ModuleSEPECViewer.cs\u003C/a\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"agrock","CreatedById":182774,"CreatedDateTime":"2017-12-12T05:20:22Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223241664\u0022 data-ipsquote-contentid=\u0022168389\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221513024173\u0022 data-ipsquote-userid=\u0022138730\u0022 data-ipsquote-username=\u0022Shadowmage\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 hours ago, Shadowmage said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n(to reduce GC from string manipulation during UI field updates).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOn side note, I think the GC trashing is overrated problem due to fact that .NET uses a generational GC. Short lived objects go away easily and cheaply. .NET was designed with such high object churn in mind.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nUsing StringBuilder also minimizes the problem.\n\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2017-12-12T18:29:08Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223242060\u0022 data-ipsquote-contentid=\u0022168389\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221513056022\u0022 data-ipsquote-userid=\u0022182774\u0022 data-ipsquote-username=\u0022agrock\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n13 hours ago, agrock said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223241664\u0022 data-ipsquote-contentid=\u0022168389\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221513024173\u0022 data-ipsquote-userid=\u0022138730\u0022 data-ipsquote-username=\u0022Shadowmage\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n21 hours ago, Shadowmage said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n(to reduce GC from string manipulation during UI field updates).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOn side note, I think the GC trashing is overrated problem due to fact that .NET uses a generational GC. Short lived objects go away easily and cheaply. .NET was designed with such high object churn in mind.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nUnity runs on a really old mono, not MS .NET. It does not have a generational GC. It has a plain mark and sweep.\u00A0\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"agrock","CreatedById":182774,"CreatedDateTime":"2017-12-12T23:58:48Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223241664\u0022 data-ipsquote-contentid=\u0022168389\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221513024173\u0022 data-ipsquote-userid=\u0022138730\u0022 data-ipsquote-username=\u0022Shadowmage\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 11.12.2017 at 9:29 PM, Shadowmage said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cpre style=\u0022border:1px solid #888888;color:#353c41;font-size:14px;padding:2px;\u0022\u003E\n\n\u003Cspan style=\u0022color:#000000;\u0022\u003Ebool windowOpen = UIPartActionController.Instance.ItemListContains(part, false));\u003C/span\u003E\u003C/pre\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nConfirming it works.\n\u003C/p\u003E\n"}]}