{"TopicId":75709,"ForumId":29,"TopicTitle":"What does this mean? (Visual Studio C# 2010)","CreatedByName":"FiresThatBurn","CreatedById":74154,"CreatedDateTime":"2014-06-22T15:57:01Z","PageNum":1,"Articles":[{"CreatedByName":"FiresThatBurn","CreatedById":74154,"CreatedDateTime":"2014-06-22T15:57:01Z","Content":"\n\u003Cp\u003E\u003Ca href=\u0022http://gyazo.com/87ae0d828f00f74cd52f7e577218a8a2\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://gyazo.com/87ae0d828f00f74cd52f7e577218a8a2\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ECan someone explain what happened? I am using a class library with the files referenced and everything. This appears when I try to debug.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-22T15:57:39Z\u0022 title=\u002206/22/2014 03:57  PM\u0022 data-short=\u002210 yr\u0022\u003EJune 22, 2014\u003C/time\u003E by Some_Random_Guy\u003C/strong\u003E\n\u003Cbr\u003EIMG wont work with gyazo :P\n\u003C/span\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2014-06-22T17:32:13Z","Content":"\n\u003Cp\u003Ewhat\u0027s a gyazo\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-06-22T17:50:35Z","Content":"\n\u003Cp\u003EYou don\u0027t need to bump a post that\u0027s still at the top of the list...\u003C/p\u003E\u003Cp\u003EIn my experience debugging doesn\u0027t work on VS. Using a setup that works on Monodevelop doesn\u0027t work on VS and gives me an error similar to the one you\u0027re seeing. It\u0027s not exactly the same message though, and I\u0027ve never really tried to get it working, so I have no advice other than to try something similar on Monodevelop.\u003C/p\u003E\n"},{"CreatedByName":"tobyb121","CreatedById":76289,"CreatedDateTime":"2014-06-22T20:42:51Z","Content":"\n\u003Cp\u003EThis error is when you are trying to debug a class library project. A class library is a dll file which includes classes that can be used by another program. For example when you reference UnityEngine.dll in your KSP add-on I allows you to access lots of the unity classes like Vector3 and GameObject. A dll has no entry point, meaning the code doesn\u0027t create a program, it is just available to be used by one. In order to test your dll you need to build it (under Build\u0026gt;Build Solution) find the output dll (under Project Directory/bin/Debug) and copy this into your KSP directory for your mod, then run KSP. You can use batch files to do all of this and change your project settings in VS to run the batch file when you press the debug button.\u003C/p\u003E\n"},{"CreatedByName":"Echo 8 \u00C3\u0192\u00E2\u20AC\u00B0R\u00C3\u0192\u00E2\u201A\u00AC","CreatedById":37973,"CreatedDateTime":"2014-06-22T23:33:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tobyb121\u0022 data-cite=\u0022tobyb121\u0022\u003E\u003Cdiv\u003EThis error is when you are trying to debug a class library project. A class library is a dll file which includes classes that can be used by another program. For example when you reference UnityEngine.dll in your KSP add-on I allows you to access lots of the unity classes like Vector3 and GameObject. A dll has no entry point, meaning the code doesn\u0027t create a program, it is just available to be used by one. In order to test your dll you need to build it (under Build\u0026gt;Build Solution) find the output dll (under Project Directory/bin/Debug) and copy this into your KSP directory for your mod, then run KSP. You can use batch files to do all of this and change your project settings in VS to run the batch file when you press the debug button.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOr you could just use MSBuild Tasks and accomplish the same thing without the hassle of dealing with batch files:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/q-kKfOQGmZg?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/q-kKfOQGmZg?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-22T23:36:51Z\u0022 title=\u002206/22/2014 11:36  PM\u0022 data-short=\u002210 yr\u0022\u003EJune 22, 2014\u003C/time\u003E by Echo 8 \u00C3\u0192\u00E2\u20AC\u00B0R\u00C3\u0192\u00E2\u201A\u00AC\u003C/strong\u003E\n\u003Cbr\u003EAdded link since embedded videos don\u0026#039;t seem to have a full screen option\n\u003C/span\u003E\n"},{"CreatedByName":"pizzaoverhead","CreatedById":26349,"CreatedDateTime":"2014-06-23T14:13:13Z","Content":"\n\u003Cp\u003EThe reason you\u0027re getting the \u0022A project with an Output Type of Class Library cannot be started directly.\u0022 error is that you have Visual Studio set to try and run the plugin. Plugins can\u0027t run on their own. You can change it by right-clicking your plugin\u0027s project in the Solution Explorer window and clicking Properties. On the Debug tab, you can change the Start Action from \u0022Start project\u0022 to \u0022Start external program\u0022 and browse to the location of KSP.exe. Now, any time you press F5, KSP will start.\u003C/p\u003E\u003Cp\u003EEven though it starts, your plugin is still in your project directory, not the KSP directory, so you won\u0027t see the changes you\u0027ve made in-game. To fix this, you\u0027d need to copy the DLL into the KSP directory after every build. You can do this automatically by clicking on the Build Events tab in the project\u0027s properties, and adding a Post-build event command line. This command will copy your DLL to the given plugin folder in the KSP directory every time you build. Change the path to point to your own KSP and plugin location:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Excopy /y \u0022$(TargetPath)\u0022 \u0022C:\\Games\\Kerbal Space Program\\GameData\\PluginName\\Plugins\u0022\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E$(TargetPath) is a magic Visual Studio variable that contains the full path to the plugin, including its filename. You can see what variables are available and what they mean in the Build Events tab by clicking \u0022Edit Post-build ...\u0022 and clicking the \u0022Macros \u0026gt;\u0026gt;\u0022 button.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-23T14:46:00Z\u0022 title=\u002206/23/2014 02:46  PM\u0022 data-short=\u002210 yr\u0022\u003EJune 23, 2014\u003C/time\u003E by pizzaoverhead\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2014-06-23T23:18:40Z","Content":"\n\u003Cp\u003EI like to keep a copy of my plugin directory with the source (so any related assets can be added to source control) so my post build event looks like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset ksp=full_ksp_path_to_gamedata_here\u003Cbr\u003Erobocopy \u0022$(ProjectDir)bin\\$(Configuration)\u0022 \u0022$(ProjectDir)GameData\\$(ProjectName)\u0022 $(TargetFileName)\u003Cbr\u003Erobocopy \u0022$(ProjectDir)GameData\\$(ProjectName)\u0022 \u0022%ksp%\\$(ProjectName)\u0022 /E /xo\u003Cbr\u003E\u003Cbr\u003EREM a little hack because robocopy reports code 1 on file copy success\u003Cbr\u003EREM build process will interpret non-zero as an error and report failed build\u003Cbr\u003Eset rce=%errorlevel%\u003Cbr\u003E\u003Cbr\u003Eif %rce%==1 exit 0\u003Cbr\u003Eif %rce%==2 GOTO ExtraFiles\u003Cbr\u003Eif %rce%==3 GOTO ExtraFiles\u003Cbr\u003Eif not %rce%==1 exit %rce% else exit 0\u003Cbr\u003E\u003Cbr\u003E:ExtraFiles\u003Cbr\u003Eecho WARNING: Extra files in output dir\u003Cbr\u003Eexit 0\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThen any time I work with any assets, I keep them in $(ProjectDir)GameData\\$(ProjectName)\\ and can edit them at will. Any changes will be moved into the KSP directory next time I rebuild. It\u0027s convenient, and I can delete any directory in my dev install as I like without worrying about accidentally losing something important\u003C/p\u003E\n"}]}