{"TopicId":139480,"ForumId":29,"TopicTitle":"Rescue Contracts - Restricting Available Pod types (how to get target of a contract?)","CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-05-10T20:00:41Z","PageNum":1,"Articles":[{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-05-10T20:00:41Z","Content":"\n\u003Cp\u003E\nHi all;\n\u003C/p\u003E\n\u003Cp\u003E\nIt has always bugged me that the rescue Kerbal contracts spawn using a random part with crew capacity \u0026gt; 1.\u00A0 As can be seen in numerous modded situations this causes many (sometimes hillarious) problems regarding kerbals being spawned in parts in invalid states (non-inflated inflatable modules) or that do not have hatches at all.\n\u003C/p\u003E\n\u003Cp\u003E\nSo.. I\u0027m thinking about ways to -fix- this by restricting what pods a kerbal may be spawned in down to a manually curated list (initially just the stock pods, but end-users may add parts from other mods as they see fit).\n\u003C/p\u003E\n\u003Cp\u003E\nMy current idea is to subscribe to the \u0027new vessel created\u0027 event, and if that vessel was created by a rescue contract and is using a pod not on the \u0027approved pods\u0027 list, change that part out for one that is approved.\u00A0 However... I am having difficulty locating any information that will link a specific vessel to a specific contract.\u00A0 I cannot find any GameObject, Part, or Vessel fields in any of the contract related classes, nor any information in the vessel class that says it is a target of a contract.\u00A0 I have already found how to pull a list of just the rescue contracts out of the contract system, but cannot tell what vessels they are linked to.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIs anyone aware of a method to get the target of a specific contract?\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThanks in advance for any information on this problem,\n\u003C/p\u003E\n\u003Cp\u003E\nShadowmage\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-05-11T17:40:15Z\u0022 title=\u002205/11/2016 05:40  PM\u0022 data-short=\u00228 yr\u0022\u003EMay 11, 2016\u003C/time\u003E by Shadowmage\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"wgering","CreatedById":146247,"CreatedDateTime":"2016-06-05T00:07:05Z","Content":"\n\u003Cp\u003E\nHaven\u0027t looked at the code, but could you try adding criteria to the pod selection? Something like \u0022ElectricCharge \u0026gt; 0\u0022 and/or \u0022Monopropellant \u0026gt; 0\u0022 might help cut out parts like the inflatables.\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-06-06T16:37:47Z","Content":"\n\u003Cp\u003E\nSadly I\u0027m still stuck on the \u0027identifying vessels which were created for rescue contracts\u0027 stage...\u00A0 Might be a few weeks/months before I get this one figured out.\u00A0 I could probably get it done faster by bugging a dev to include the config in stock \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2016-06-06T17:27:08Z","Content":"\n\u003Cp\u003E\nThe rescue contracts save a \u0022partID\u0022 field, that might be the flight id of the part itself, but I don\u0027t think there is anything specific about the vessel. So I guess you could watch the onNewVesselCreated event and check for that id, but the only way to actually get that id is to manually parse the save file (HighLogic.CurrentGame.config), which can be a bit of a pain.\n\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2016-06-06T21:23:28Z","Content":"\n\u003Cp\u003E\nIt\u0027s a lot easier to catch them when they\u0027re offered rather than after the contract has been accepted and the related parts have spawned. You can get around parsing HighLogic.CurrentGame by saving (and editing) the contract yourself to change those private variables\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n[KSPAddon(KSPAddon.Startup.SpaceCentre, false)]\nclass RescueContractsUseLanderCans : MonoBehaviour\n{\n    private void Start()\n    {\n        GameEvents.Contract.onOffered.Add(OnContractOffered);\n    }\n\n    private void OnDestroy()\n    {\n        GameEvents.Contract.onOffered.Remove(OnContractOffered);\n    }\n\n\n    private enum RecoveryContractType\n    {\n        Kerbal = 1, // lone Kerbal, maybe in a part\n        Part = 2, // Recover a part\n        Compound = 3 // lone kerbal, plus also recover a part(s)\n    }\n\n    private class RecoveryContractInfo\n    {\n        [Persistent] public RecoveryContractType recoveryType;\n        [Persistent] public string partName;\n        [Persistent] public uint partID;\n\n        private static bool EnumWithinRange\u0026lt;TEnum\u0026gt;(TEnum value)\n        {\n            return Enum.GetValues(typeof (TEnum)).Cast\u0026lt;TEnum\u0026gt;().Contains(value);\n        }\n\n        public bool IsValid()\n        {\n            return partID == 0 /* otherwise the contract was generated already */\n                    \u0026amp;\u0026amp; !string.IsNullOrEmpty(partName)\n                    \u0026amp;\u0026amp; EnumWithinRange(recoveryType);\n        }\n    }\n\n\n    private static void OnContractOffered(Contract data)\n    {\n        var recoveryContract = data as RecoverAsset;\n        if (recoveryContract == null)\n            return;\n\n        var contractConfig = new ConfigNode(\u0022Contract\u0022);\n        data.Save(contractConfig);\n\n        var info = new RecoveryContractInfo();\n        if (!ConfigNode.LoadObjectFromConfig(info, contractConfig) || !info.IsValid())\n        {\n            Log.Error(\u0022Something went wrong while inspecting a recovery contract!\u0022);\n            return;\n        }\n\n        if (info.recoveryType == RecoveryContractType.Part)\n            return; // standard part recovery, if it doesn\u0027t involve a kerbal we don\u0027t care\n\n        // All kerbal and compound recovery missions shall henceforth use the venerable landerCabinSmall\n        contractConfig.SetValue(\u0022partName\u0022, \u0022landerCabinSmall\u0022);\n\n        Contract.Load(data, contractConfig);\n    }\n}\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-06-06T21:34:12Z","Content":"\n\u003Cp\u003E\nAwesome, thanks for the info guys;\u00A0 I\u0027ll see about throwing together a small modlet/micro-addon when I have time to sit down and go through what you\u0027ve presented.\n\u003C/p\u003E\n\u003Cp\u003E\nI was pretty sure there had to be a reasonable way to do this... but I\u0027ve not spent any time learning/using/working with the contract system on the plugin side of things.\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-06-08T14:48:19Z","Content":"\n\u003Cp\u003E\nHave thrown together the following for fixing rescue pods; untested so far...\u00A0\u00A0 will do some testing over the next few days/week, then recompile and pack it up as a separate add-on for general use.\u00A0 Will have to in-line some utility methods, but should convert pretty easily.\n\u003C/p\u003E\n\u003Cp\u003E\nIt should randomly select a pod from the \u0027approvedPodTypes\u0027 array, which is constructed via root-level config nodes; so the approved list could easily be modified via MM patch for various mods\u0027 pods.\u00A0 The array can have duplicate names added to it as a sort of weighting system (though was not the original intent).\u003Cbr\u003E\u003Cbr\u003E\nI\u0027m also operating directly on the ConfigNode level and skipping the intermediate data class, as the Enum that was referenced appears to be private/inaccessible (at least in the .dll\u0027s I\u0027m using).\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eusing System;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing Contracts;\n\nnamespace SSTUTools\n{\n    [KSPAddon(KSPAddon.Startup.Instantly | KSPAddon.Startup.EveryScene, true)]\n    class SSTURescueContractPartSelector : MonoBehaviour\n    {\n\n        private static string[] approvedPodTypes;\n        private static System.Random rng;\n\n        public void Start()\n        {\n            DontDestroyOnLoad(this);//persist this addon across scenes\n            GameEvents.Contract.onOffered.Add(OnContractOffered);\n            rng = new System.Random();\n        }\n\n        public void OnDestroy()\n        {\n            GameEvents.Contract.onOffered.Remove(OnContractOffered);\n        }\n\n        public void ModuleManagerPostLoad()\n        {\n            List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;string\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E typesList = new List\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;string\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E();\n            ConfigNode[] approvedPods = GameDatabase.Instance.GetConfigNodes(\u0022RESCUE_POD_TYPES\u0022);\n            int len1 = approvedPods.Length;\n            for (int i = 0; i \u0026lt; len1; i\u002B\u002B)\n            {\n                string[] types = approvedPods[i].GetStringValues(\u0022pod\u0022);\n                typesList.AddRange(types);\n            }\n            approvedPodTypes = typesList.ToArray();\n        }\n\n        public void OnContractOffered(Contract contract)\n        {\n            //TODO initial validation pass, reject all accepted, completed, rejected, etc contracts\n            //if(contract.ContractState==Contract.State.??)\n\n            ConfigNode contractData = new ConfigNode(\u0022CONTRACT\u0022);\n            contract.Save(contractData);\n\n            MonoBehaviour.print(\u0022Rescue Contract Part Validator examining offered contract: \u0022 \u002B contract \u002B \u0022\\n\u0022 \u002B contractData);\n\n            int partID = contractData.GetIntValue(\u0022partID\u0022);\n            if (partID != 0)//part already assigned, contract is already accepted?\n            {\n                return;\n            }\n\n\n            // apparently this is a private enum somewhere, cannot reference at run-time through plugin code\n            // instead have to rely on manually examining the enum.ordinal value (integer representation)\n            // experimentations have shown that \u00272\u0027 is the recoveryType value for \u0027parts\u0027\n            // key = recoveryType\n            // enum values:\n            // 0 = ?  invalid/none?\n            // 1 = ?  lone kerbal?\n            // 2 = part\n            // 3 = ?  1\u002B2 (kerbal \u002B part?)\n\n            int type = contractData.GetIntValue(\u0022recoveryType\u0022);\n            if (type != 2) { return; }//only care about part-recovery contracts\n\n            string partName = contractData.GetStringValue(\u0022partName\u0022);\n            if (!isValidRecoveryPod(partName))\n            {\n                contractData.SetValue(\u0022partName\u0022, getRandomRecoveyPod(), false);                \n                Contract.Load(contract, contractData);\n            }\n        }\n\n        private bool isValidRecoveryPod(string name)\n        {\n            //quick and dirty array.contains test for the input name\n            return Array.Exists(approvedPodTypes, m =\u0026gt; m == name);\n        }\n\n        private string getRandomRecoveyPod()\n        {\n            if (approvedPodTypes.Length \u0026lt;= 0) { return \u0022landerCabinSmall\u0022; }\n            int chosen = rng.Next(approvedPodTypes.Length);\n            return approvedPodTypes[chosen];\n        }\n\n    }\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThanks again for the info and examples, would have taken me weeks-to-months to track this stuff down on my own.\n\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2016-06-08T20:26:37Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222622267\u0022 data-ipsquote-contentid=\u0022139480\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221465397299\u0022 data-ipsquote-userid=\u0022138730\u0022 data-ipsquote-username=\u0022Shadowmage\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, Shadowmage said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nas the Enum that was referenced appears to be private/inaccessible (at least in the .dll\u0027s I\u0027m using).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt is, that\u0027s why I defined my own (also in code above). You might want to be more discerning about the contracts you save, though. The player can\u0027t accept contracts in flight barring some kind of mod and saving the contracts can be garbagey and slow. I\u0027ve seen a mod at some point that constantly rejected certain contracts which would be a performance and garbage collection nightmare for you\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-06-08T21:29:56Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222622786\u0022 data-ipsquote-contentid=\u0022139480\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221465417597\u0022 data-ipsquote-userid=\u002275857\u0022 data-ipsquote-username=\u0022xEvilReeperx\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, xEvilReeperx said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt is, that\u0027s why I defined my own (also in code above). You might want to be more discerning about the contracts you save, though. The player can\u0027t accept contracts in flight barring some kind of mod and saving the contracts can be garbagey and slow. I\u0027ve seen a mod at some point that constantly rejected certain contracts which would be a performance and garbage collection nightmare for you\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNoted;\u00A0 its mostly prototype code at this point, haven\u0027t even compiled it to test it yet.\u00A0 I\u0027ll do some profiling/debugging to see where/how it can be optimized; reducing/minimizing garbage generation is always a concern for me, and will be doing the same for this after I verify functionality.\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-06-10T15:25:11Z","Content":"\n\u003Cp\u003E\nHave posted this as a stand-alone mod release, available here:\n\u003C/p\u003E\n\u003Ciframe data-embedcontent=\u0022\u0022 frameborder=\u00220\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/141560-112-ksp-rescue-pod-validator-no-more-kerbals-spawning-in-inflatable-modules/\u0026amp;do=embed\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}