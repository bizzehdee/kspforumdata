{"TopicId":43480,"ForumId":36,"TopicTitle":"ISA MapSat \u0026quot;Legacy\u0026quot; discussion","CreatedByName":"Benzschwagel","CreatedById":75790,"CreatedDateTime":"2013-08-19T01:19:47Z","PageNum":5,"Articles":[{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2013-09-03T04:01:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AncientGammoner\u0022 data-cite=\u0022AncientGammoner\u0022\u003E\u003Cdiv\u003EPlease stop editing your old posts to add new stuff to them, its annoying. And to answer your question, both maps were 2048x1024 when I cropped them. They were both scaled up x2 so you could actually see the differences better.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOh, I see. You didn\u0027t mention the part where you scaled it down after making the 16k version.\u003C/p\u003E\u003Cp\u003EAnd replying to your own posts in series is, as a general rule, against the rules of most forums and apt to get you banned. I\u0027ve seen mods on here chastise people for it and tell them to edit their previous post instead.\u003C/p\u003E\u003Cp\u003EIn short, to add more information when nobody\u0027s replied, editing is the REQUIRED behavior.\u003C/p\u003E\u003Cp\u003EI sometimes think of things faster than other people reply (bloody ADHD), so I end up doing that rather than waiting for someone to reply. I stop editing it and carry on below when someone else DOES finally reply.\u003C/p\u003E\u003Cp\u003EWhich means, in short, the only way it could change on you is if: A.) You opened the thread a substantial time before replying and didn\u0027t refresh, in which case missing edits is the least of your worries. B.) I happen to do an edit in the middle of you posting something, which isn\u0027t particularly any different than if I made a new post while you were typing.\u003C/p\u003E\u003Cp\u003EAs a general rule I mark my edits with headings for just this reason, to make it obvious which is which. Except for a short period right after I post, which is mostly just grammatical corrections I didn\u0027t catch initially.\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2013-09-03T04:25:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tiron\u0022 data-cite=\u0022Tiron\u0022\u003E\u003Cdiv\u003EI meant a lot of CELLS. The current ISA maps are 2048x1024 (although the polars map obviously has substantial areas that aren\u0027t part of the actual map because it has two round bits in a rectangular texture.) Easy enough to set up logically, but I can just imagine that setting it up graphically could be a real pain.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t understand what you mean by cells... are you saying we\u0027d need a large array? Yes, but likely smaller than the one required to store a texture.\u003C/p\u003E\u003Cp\u003EAt this point, I don\u0027t think memory consumption is really the greatest concern, but I think it\u0027s worth mentioning what techniques exist for milking the most out of the memory we have because it opens up other possibilities.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tiron\u0022 data-cite=\u0022Tiron\u0022\u003E\u003Cdiv\u003EIt\u0027s the method he uses for his Kethane Hex Map. It stores the scan data basically as a mask in the savefile, with a single character indicating if each segment\u0027s been scanned or not. There\u0027s some other data in there which I\u0027m not sure exactly what it\u0027s for, but it\u0027s a really simple solution that only requires 1 byte per cell. He\u0027s also got it set up to have the cell colors be based on the amount of Kethane in the cell, and there\u0027s no actual on-disk textures for any of it. So far as I can tell, he generates them on the fly too. It\u0027s very slick.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EEach character actually contains data for \u003Cem\u003Esix\u003C/em\u003E cells. Each grid cell has a unique index, so the scan flags are concatenated as 10,242 bits which are then Base64-encoded. My local copy uses Deflate compression to make the whole thing even smaller on disk. They\u0027re not compressed in main memory, but the entire solar system of scan masks only uses about 21 \u003Cstrong\u003Ekilobytes\u003C/strong\u003E in RAM.\u003C/p\u003E\u003Cp\u003EIf I manage to get my new geodesic code working, I\u0027ll probably want to crank up the resolution to the point where partial loading will be necessary. With Kethane, I decided to be incredibly careful with \u003Cem\u003Ewhat\u003C/em\u003E I store, and that affords me a lot of flexibility in \u003Cem\u003Ehow much\u003C/em\u003E of it I store. All the data on every planet remains in memory at all times because it all adds up to just a couple megabytes.\u003C/p\u003E\n"},{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2013-09-03T04:49:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Majiir\u0022 data-cite=\u0022Majiir\u0022\u003E\u003Cdiv\u003EI don\u0027t understand what you mean by cells... are you saying we\u0027d need a large array? Yes, but likely smaller than the one required to store a texture.\u003Cp\u003EAt this point, I don\u0027t think memory consumption is really the greatest concern, but I think it\u0027s worth mentioning what techniques exist for milking the most out of the memory we have because it opens up other possibilities.\u003C/p\u003E\u003Cp\u003EEach character actually contains data for \u003Cem\u003Esix\u003C/em\u003E cells. Each grid cell has a unique index, so the scan flags are concatenated as 10,242 bits which are then Base64-encoded. My local copy uses Deflate compression to make the whole thing even smaller on disk. They\u0027re not compressed in main memory, but the entire solar system of scan masks only uses about 21 \u003Cstrong\u003Ekilobytes\u003C/strong\u003E in RAM.\u003C/p\u003E\u003Cp\u003EIf I manage to get my new geodesic code working, I\u0027ll probably want to crank up the resolution to the point where partial loading will be necessary. With Kethane, I decided to be incredibly careful with \u003Cem\u003Ewhat\u003C/em\u003E I store, and that affords me a lot of flexibility in \u003Cem\u003Ehow much\u003C/em\u003E of it I store. All the data on every planet remains in memory at all times because it all adds up to just a couple megabytes.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAhhh, I WONDERED why \u0027fully scanned\u0027 showed up as a long list of As. Makes sense. Very shiny.\u003C/p\u003E\u003Cp\u003EAnd what I really was referring to was the fact that getting such a large array to show up nicely as a rectangular grid would probably be a pain, just because you\u0027re basically substituting entries in the array for pixels. While you could easily use the array indexes to figure out which goes where, getting the entire thing to display and line up properly, particularly in a movable UI item, would probably bit a bit of a bother, just because of the sheer complexity.\u003C/p\u003E\u003Cp\u003EI have no doubt whatsoever it\u0027d use a LOT less memory, simply because you\u0027d only have to load a series of single-pixel textures that are used over and over, as opposed to 30 very large textures that are each used once.\u003C/p\u003E\u003Cp\u003EAs for getting the memory usage down not being a huge concern, I tend to agree...but it seems to be the number 1 complaint against the current version of mapsat, and the primary reason the topic that became this thread came up in the first place: People with a lot of mods have problems with crashes due to out of memory errors, and identify Mapsat as being a huge memory hog(which it is, although I think it\u0027s only because the game\u0027s caching all the intermediate steps in the \u0027get it to the vram\u0027 pipeline unnecessarily) and the cause of their problems.\u003C/p\u003E\u003Cp\u003EThat misidentification as being the cause of crashes seems to stem from one thing: They have more problems when they use a ship with a Mapsat part on it than they do if they don\u0027t use the mapsat parts. Which ultimately seems to stem from the fact that it doesn\u0027t even load the maps unless the mapsat module is loaded, which it obviously isn\u0027t if none of the parts that use it are loaded. This causes the total working set to be about 600MB higher when using a craft with mapsat than without it, and that pushes their already marginal memory usage right up to or over the edge.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-03T04:51:43Z\u0022 title=\u002209/03/2013 04:51  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 3, 2013\u003C/time\u003E by Tiron\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Torminator","CreatedById":78617,"CreatedDateTime":"2013-09-03T05:10:52Z","Content":"\n\u003Cp\u003EI\u0027m still trying to figure out what a \u0022Class\u0022 is and where they put my beloved functions in c#, but if I\u0027m interpreting Majiir correctly, here\u0027s what I think might be a good way to do it.\u003C/p\u003E\u003Cp\u003EMapsat scans the planet, by whatever means, and returns an elevation value for each point, depending on selected resolution. This information is stored as plain-text, or something similarly simple. I.E. lat/long/elv.\u003C/p\u003E\u003Cp\u003EWhen you choose to view a map in, let\u0027s say a 512x512 window, the plugin generates (is this even possible?) a texture file that is only 512x512 for the region you want to view, based on the relevant data points in the plain-text file (which could be unloaded from memory when not needed, no?). The detail is less, but since you couldn\u0027t see more detail anyway, it doesn\u0027t matter. If you zoom in, it dumps the previous image and reconstructs a new one at a higher level of detail. If you zoom out, it does the same thing, but regenerating a less detailed map. In this way, the \u0022maps\u0022 are never stored as images, only their raw information, and the textures that are generated are fully procedural and much smaller than a full map image. Perhaps prevent the plugin from \u0022Releasing\u0022 the data file unless there have been no user inputs for ~2 seconds or so, to prevent jerkiness while panning/scrolling. \u003C/p\u003E\u003Cp\u003ESo, vector images, more or less. I\u0027ll admit to not QUITE being able to keep up with the coding talk, so maybe somebody already said exactly this, but hey.\u003C/p\u003E\n"},{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2013-09-03T13:18:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Torminator\u0022 data-cite=\u0022Torminator\u0022\u003E\u003Cdiv\u003EI\u0027m still trying to figure out what a \u0022Class\u0022 is and where they put my beloved functions in c#, but if I\u0027m interpreting Majiir correctly, here\u0027s what I think might be a good way to do it.\u003Cp\u003EMapsat scans the planet, by whatever means, and returns an elevation value for each point, depending on selected resolution. This information is stored as plain-text, or something similarly simple. I.E. lat/long/elv.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt \u003Cem\u003Ekinda\u003C/em\u003E can already do that. There\u0027s an option that allows you to save the raw data, which is lumped into a CSV file, which you could use an included program on to generate a map of any size you wanted, with configurable options for the colorscheme et-al that was used. The dev version still includes the option and still generates a file out of it, but didn\u0027t include the program to use the data. I forget why, need to re-read Innsewerants\u0027 post on the subject, heh. It was never a feature I paid much mind to.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EWhen you choose to view a map in, let\u0027s say a 512x512 window, the plugin generates (is this even possible?) a texture file that is only 512x512 for the region you want to view, based on the relevant data points in the plain-text file (which could be unloaded from memory when not needed, no?). The detail is less, but since you couldn\u0027t see more detail anyway, it doesn\u0027t matter. If you zoom in, it dumps the previous image and reconstructs a new one at a higher level of detail. If you zoom out, it does the same thing, but regenerating a less detailed map. In this way, the \u0022maps\u0022 are never stored as images, only their raw information, and the textures that are generated are fully procedural and much smaller than a full map image. Perhaps prevent the plugin from \u0022Releasing\u0022 the data file unless there have been no user inputs for ~2 seconds or so, to prevent jerkiness while panning/scrolling. \u003Cp\u003ESo, vector images, more or less. I\u0027ll admit to not QUITE being able to keep up with the coding talk, so maybe somebody already said exactly this, but hey.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell what Majiir was talking about more or less was storing the data as a grid instead of an image. You don\u0027t even really create a full map texture at all: You create a whole series of 1 pixel tiny ones that are shown for each point in the grid. This is actually exactly how an image actually works: Each pixel is a point with a defined color. In this case you\u0027d be reconstructing the image with just the control data for it. The memory savings would be because you\u0027d only have to generate a single 1x1 texture of each color you were using, and then re-use that for each grid point/pixel where that color occurs. It\u0027s the same basic method he uses for the current incarnation of the Kethane map, just a lot higher resolution and with a different layout.\u003C/p\u003E\u003Cp\u003EI suspect it\u0027d be a pain to get it working properly, in terms of time and effort, but there\u0027s no reason it couldn\u0027t be done (as he\u0027s amply demonstrated).\u003C/p\u003E\n"},{"CreatedByName":"macegee","CreatedById":38721,"CreatedDateTime":"2013-09-15T13:58:22Z","Content":"\n\u003Cp\u003EAny news on the subject, guys?\u003C/p\u003E\n"},{"CreatedByName":"Benzschwagel","CreatedById":75790,"CreatedDateTime":"2013-09-18T10:02:29Z","Content":"\n\u003Cp\u003Eso, been in the field doing training exercises, what\u0027s been happening while I\u0027ve been away? Someone mentioned something about having the maps loaded outside of KSP and the Unity engine, is this even possible? it would definitely help, unless the unloading issue gets solved. by the way, did innsewerants ever return? and I hope we can all get along, we are trying to make something cool to benefit everyone.\u003C/p\u003E\n"},{"CreatedByName":"ThirdHorseman","CreatedById":77825,"CreatedDateTime":"2013-09-25T21:55:05Z","Content":"\n\u003Cp\u003EI\u0027ve been trying to simply replace the images in the PluginData folder with high-res maps, since I\u0027m more concerned about getting my current position using the GPS part rather than scanning the terrain. Every time I replace the topo images with my own, they get all corrupted. I have scanning turned off on all my mapsats, but it seems like as soon as I toggle on the mod using the GUI it tries to alter the maps.\u003C/p\u003E\u003Cp\u003EIs there a simple way to replace the maps?\u003C/p\u003E\u003Cp\u003EI\u0027m using the old 3.3.4 version BTW...\u003C/p\u003E\n"},{"CreatedByName":"Benzschwagel","CreatedById":75790,"CreatedDateTime":"2013-10-10T05:39:53Z","Content":"\n\u003Cp\u003EI think the mapsat mod built maps off the planet\u0027s current surface as soon as the scanning sat was within a certain range. or maybe I have that a little messed up, but it\u0027s basically like that. I forget how it worked, but it basically loaded up a map it had created. It would create the map at some point, whether as needed or all at once I\u0027m not sure, but when the planet was being scanned it would list areas as \u0022scanned\u0022. I guess if there was a way to just tell it, \u0022stop building your own map, use mine instead,\u0022 you could make something work. It\u0027s main problem was the fact that it wouldn\u0027t unload any maps from memory, causing it to crash KSP because it would reach Unity\u0027s 32-bit memory limit. I heard that Unity was planning on looking at the viability of a 64-bit version, but not sure if anything actually happened...\u003C/p\u003E\u003Cp\u003ESo, if you made some really low memory footprint maps, and forced mapsat to use those instead of creating new ones and overwriting yours, and then edited something to say that all maps were already fully scanned (like some sort of on/off or true/false feature) you could make something work. don\u0027t forget about that hilo.dat file, I believe that does something with reloading maps after a planet change. there may not be a simple way to replace the maps, then again, look through the code if you know how, maybe he set up a way to use manual maps.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-10-10T05:52:27Z\u0022 title=\u002210/10/2013 05:52  AM\u0022 data-short=\u002210 yr\u0022\u003EOctober 10, 2013\u003C/time\u003E by Benzschwagel\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Benzschwagel","CreatedById":75790,"CreatedDateTime":"2013-10-17T08:42:23Z","Content":"\n\u003Cp\u003Ebump, new info in first post\u003C/p\u003E\n"},{"CreatedByName":"zalzane","CreatedById":29831,"CreatedDateTime":"2013-10-20T18:26:54Z","Content":"\n\u003Cp\u003Ewait so let me get this straight - he\u0027s keeping the mod open source, but with all rights reserved, and doesn\u0027t want anyone to build on it?\u003C/p\u003E\u003Cp\u003Ejesus christ it\u0027s like a high school programming course\u003C/p\u003E\n"},{"CreatedByName":"sal_vager","CreatedById":16426,"CreatedDateTime":"2013-10-20T18:29:31Z","Content":"\n\u003Cp\u003EIt\u0027s his right, have to accept it I\u0027m afraid.\u003C/p\u003E\n"},{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2013-10-21T00:35:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022zalzane\u0022 data-cite=\u0022zalzane\u0022\u003E\u003Cdiv\u003Ewait so let me get this straight - he\u0027s keeping the mod open source, but with all rights reserved, and doesn\u0027t want anyone to build on it?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EReleasing the source is a Squad Requirement to post it on the forums or Spaceport.\u003C/p\u003E\u003Cp\u003ENote that making the source available is not the same thing as \u0027Open Source\u0027. \u0027Open Source\u0027 implies that the rights to modify and redistribute are included. Fact is though, there\u0027s two different, unrelated things and you can do one without the other.\u003C/p\u003E\u003Cp\u003EHe\u0027s not hardly the only modder that released the source to satisfy Squad\u0027s requirements but reserved all rights.\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2013-10-21T10:45:06Z","Content":"\n\u003Cp\u003ESo we are back where we were in the middle of the thread with having to come up with something NOT based on the code for MapSat.\u003C/p\u003E\u003Cp\u003ESo, if the actual scanning is CPU intensive and in game we want to scan without disrupting our framerate, why not write a little bit of code that runs outside of KSP that \u0060scans\u0060 all the planets and generates files which can be \u0060scanned\u0060 in-game quickly? Then it can run in the background if you have spare cores\u002Bram causing no slowdown in KSP and still full sized maps (or maps that can be scaled to match your memory profile)\u003C/p\u003E\u003Cp\u003EThis solves the issue of finding anomalies, waiting for a patch for the current maps, CPU intense scanning, and memory.\u003C/p\u003E\u003Cp\u003EAncient and majiir, have you had any progress?\u003C/p\u003E\n"},{"CreatedByName":"OrtwinS","CreatedById":19144,"CreatedDateTime":"2013-10-21T12:36:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022John FX\u0022 data-cite=\u0022John FX\u0022\u003E\u003Cdiv\u003ESo we are back where we were in the middle of the thread with having to come up with something NOT based on the code for MapSat.\u003Cp\u003E-snip-\u003C/p\u003E\u003Cp\u003EAncient and majiir, have you had any progress?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe tech part of this thread died 2 months ago. \u003C/p\u003E\u003Cp\u003EIn an attempt to refocus the discussion from \u0027ISA Support\u0027 or \u0027ISA legacy\u0027 towards \u0027new mapping plugin\u0027 I created a new thread:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/54422-REQUEST-ISA-Mapsat-replacement-with-area-indication?p=717870#post717870\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/54422-REQUEST-ISA-Mapsat-replacement-with-area-indication?p=717870#post717870\u003C/a\u003E\u003C/p\u003E\n"}]}