{"TopicId":34442,"ForumId":29,"TopicTitle":"part.RequestResource: draining a resource","CreatedByName":"tek_604","CreatedById":59699,"CreatedDateTime":"2013-06-23T15:13:30Z","PageNum":1,"Articles":[{"CreatedByName":"tek_604","CreatedById":59699,"CreatedDateTime":"2013-06-23T15:13:30Z","Content":"\n\u003Cp\u003EI\u0027ve just noticed that part.RequestResource doesn\u0027t seem to drain a resource down to 0? I\u0027ve worked around it for my own resources, but when it comes to electric charge, trying to set the amount to 0 doesn\u0027t seem to work (probably because electric charge is a property of the vessel?).\u003C/p\u003E\u003Cp\u003ESo, how can I set the amount of electric charge to 0, or, preferably, have the function drain whatever resource I request to 0?\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2013-06-23T16:09:20Z","Content":"\n\u003Cp\u003EYou can use Part.GetConnectedResources (I believe that\u0027s the name) to get a list (it\u0027s an awkward pass-by-ref syntax) of objects which represent a resource capacity and current amount for each connected part. This takes fuel routing into account, but for ElectricCharge the routing rules allow you to get access to any part so you can just call this on the vessel root. Then you can set the current amount on each of those to zero.\u003C/p\u003E\u003Cp\u003EIf I may suggest: you could use this to build an improved RequestResource, which many of us would love to see!\u003C/p\u003E\n"},{"CreatedByName":"jheriko","CreatedById":67666,"CreatedDateTime":"2013-06-24T19:30:55Z","Content":"\n\u003Cp\u003Ei have also seen some poor behaviour from this function. might i suggest that it has bugs and it would be nice if they were fixed? other than the fuel feeds and connectivity issues there isn\u0027t anything fantastically difficult about implementing this that i can see (looking naively from the outside)...\u003C/p\u003E\n"}]}