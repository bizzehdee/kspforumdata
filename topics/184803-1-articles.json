{"TopicId":184803,"ForumId":44,"TopicTitle":"Numerical methods to calculate solidification/melting fronts","CreatedByName":"Nivee~","CreatedById":183478,"CreatedDateTime":"2019-05-28T07:44:08Z","PageNum":1,"Articles":[{"CreatedByName":"Nivee~","CreatedById":183478,"CreatedDateTime":"2019-05-28T07:44:08Z","Content":"\n\u003Cp\u003E\nSo, it\u0027s summer vacations and I have an assignment. It\u0027s to write a C program to calculate the solidification/melting front of a calculation domain using the Finite Volume Method. I have no idea where to begin, to be honest.. Can someone please tell me what I should do, how I should proceed?\n\u003C/p\u003E\n"},{"CreatedByName":"kerbiloid","CreatedById":129408,"CreatedDateTime":"2019-05-28T10:15:34Z","Content":"\n\u003Cp\u003E\nProbably first try to google\u003Cbr\u003E\n\u0022calculate the solidification/melting front\u0022\u003Cbr\u003E\nat have a look at first 2-3 links.\n\u003C/p\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2019-05-28T11:39:16Z","Content":"\n\u003Cp\u003E\nAnd when that doesn\u0027t work (Google in general being\u00A0completely worthless for serious research), try looking for a textbook on numerical methods. First thing to understand is always the method itself. Implementing it, even in such a primitive language as C, tends to be comparatively straightforward. I assume you already have the differential equations you need to solve, if you don\u0027t, then you\u0027ll need something on thermodynamics, as well.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-05-28T11:41:19Z\u0022 title=\u002205/28/2019 11:41  AM\u0022 data-short=\u00225 yr\u0022\u003EMay 28, 2019\u003C/time\u003E by Guest\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"kerbiloid","CreatedById":129408,"CreatedDateTime":"2019-05-28T12:04:13Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223606321\u0022 data-ipsquote-contentid=\u0022184803\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221559043556\u0022 data-ipsquote-userid=\u002217022\u0022 data-ipsquote-username=\u0022Dragon01\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n24 minutes ago, Dragon01 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAnd when that doesn\u0027t work (Google in general being\u00A0completely worthless for serious research), try looking for a textbook on numerical methods.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe first mentioned link was a very large piece of text with charts, formulas, and description.\u003Cbr\u003E\nSo, I guessed it\u0027s a starting point./\n\u003C/p\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2019-05-28T12:22:35Z","Content":"\n\u003Cp\u003E\nThere\u0027s no guarantee it\u0027ll pop up\u00A0for him, this being Google. If it decides to show you useless crap, it will only show you useless crap. Even if you disable its \u0022search improvements\u0022, results can and will vary across countries and sometimes across computers.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-05-28T12:23:22Z\u0022 title=\u002205/28/2019 12:23  PM\u0022 data-short=\u00225 yr\u0022\u003EMay 28, 2019\u003C/time\u003E by Guest\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"kerbiloid","CreatedById":129408,"CreatedDateTime":"2019-05-28T12:33:01Z","Content":"\n\u003Cp\u003E\n\u003Ca href=\u0022https://www.sciencedirect.com/science/article/pii/S0307904X05001460\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.sciencedirect.com/science/article/pii/S0307904X05001460\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Selective Genius","CreatedById":197502,"CreatedDateTime":"2019-05-28T16:31:02Z","Content":"\n\u003Cp\u003E\nDon\u0027t use google for looking up serious research articles. Use scholar.google.com\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, ResearchGate is another useful source of research material. It\u0027s like facebook for researchers. Do a thorough literature review of existing research, organize them and maybe, you will find a research gap! You may try to fill in the gap with your own research, should you be inclined to do so.\n\u003C/p\u003E\n\u003Cp\u003E\nI would suggest you first understand the basics of using numerical methods for calculating integrals, solutions of ordinary and partial differential equations etc. Solidification/melting problems, if you also want to study the behavior of the liquid part, will incorporate a lot of partial differential equations, each having to be solved numerically.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, decide on what scheme you would be using. From what I have observed, Finite Volume Method is the most accurate, but difficult to implement, and Finite Difference Method is the easiest to implement.\n\u003C/p\u003E\n\u003Cp\u003E\nMOST IMPORTANTLY,\u00A0 learn C properly. If you know how to implement file handling in C, you can do so much more than you can imagine. However, take one step at a time.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223606321\u0022 data-ipsquote-contentid=\u0022184803\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221559043556\u0022 data-ipsquote-userid=\u002217022\u0022 data-ipsquote-username=\u0022Dragon01\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, Dragon01 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nprimitive language as C\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt may be decades old, but there\u0027s a reason why it\u0027s still around. I would rather call it \u0027vintage\u0027. \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-05-28T19:18:32Z\u0022 title=\u002205/28/2019 07:18  PM\u0022 data-short=\u00225 yr\u0022\u003EMay 28, 2019\u003C/time\u003E by Selective Genius\u003C/strong\u003E\n\u003Cbr\u003Etypso!\n\u003C/span\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2019-05-28T21:26:18Z","Content":"\n\u003Cp\u003E\nThere\u0027s a reason, and that reason is that it\u0027s literally one step from being assembler while actually being somewhat portable. If you want performance, you go with FORTRAN (itself an ancient thing, but supercomputer people love it). If you want ease of use, you go with Wolfram (my own language of choice) or maybe C#.\u00A0C, with its heisenbug-inducing pointers, linear execution and general lack of many useful abstractions,\u00A0is only good for writing drivers and learning how the computers work under the hood.\n\u003C/p\u003E\n\u003Cp\u003E\nGoogle Scholar can be handy, but I\u0027m\u00A0generally wary of using anything by Google for anything that\u0027s not exactly in line with the most popular use. Anything by Google tends to be so dumbed down that if it wasn\u0027t for sheer convenience, it wouldn\u0027t be worth using.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-05-28T21:33:21Z\u0022 title=\u002205/28/2019 09:33  PM\u0022 data-short=\u00225 yr\u0022\u003EMay 28, 2019\u003C/time\u003E by Guest\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"IncongruousGoat","CreatedById":157062,"CreatedDateTime":"2019-05-29T00:09:36Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223606628\u0022 data-ipsquote-contentid=\u0022184803\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221559078778\u0022 data-ipsquote-userid=\u002217022\u0022 data-ipsquote-username=\u0022Dragon01\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nJust now, Dragon01 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nC, with its heisenbug-inducing pointers, linear execution and general lack of many useful abstractions,\u00A0is only good for writing drivers and learning how the computers work under the hood.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWait, what? C\u0027s execution is as linear or non-linear as you want it to be, and if pointers are causing Heisenbugs then you need to seriously re-assess your code. Also, there\u0027s plenty it\u0027s good for other than just drivers. Kernels, operating systems, servers, compilers, interpreters, VMs... Anything that needs to perform low-level interactions quickly and efficiently. It\u0027s also not half-bad for supercomputing applications.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/183478-nivee~/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022183478\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/183478-nivee~/\u0022 rel=\u0022\u0022\u003E@Nivee~\u003C/a\u003E To address the original question... what part of it do you need help with? If it\u0027s the numerical analysis, I can\u0027t really help you, but if it\u0027s help with C you\u0027re after then I can answer questions all day.\n\u003C/p\u003E\n"},{"CreatedByName":"Cunjo Carl","CreatedById":162109,"CreatedDateTime":"2019-05-30T00:15:54Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/183478-nivee~/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022183478\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/183478-nivee~/\u0022 rel=\u0022\u0022\u003E@Nivee~\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI had to write one of these about 15 years ago, I\u0027ll do my best to remember what\u0027s up and get you going in the right direction. Come to think of it, computers are like 20 times faster now. That should be extremely handy. Unfortunately, I\u0027ve long since forgotten C semantics beyond the basics!\n\u003C/p\u003E\n\u003Cp\u003E\nOk, so to get started, we need to pin down more precisely what your goal is. Then, depending on the specifics we can pick which of the 50 bajillion kinds of FEA (numerical method) we want to use for the job! I\u0027ll go over a bit of the basics just to get conversation rolling. I don\u0027t know what level you\u0027re at, but I\u0027m assuming this is a grad course?\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022vh5gtYI.png\u0022 class=\u0022ipsImage\u0022 height=\u0022389\u0022 src=\u0022https://i.imgur.com/vh5gtYI.png\u0022 width=\u0022474\u0022\u003E\u003Cbr\u003E\u003Cspan style=\u0022font-size:10px;\u0022\u003EA. Vakrushev, M. Wu, et al. \u003Ca href=\u0022https://www.researchgate.net/publication/263026712_Numerical_Investigation_of_Shell_Formation_in_Thin_Slab_Casting_of_Funnel-Type_Mold\u0022 rel=\u0022external nofollow\u0022\u003ENumerical Investigation of Shell Formation in Thin Slab Casting of Funnel-Type Mold\u003C/a\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E1. Pick the system we\u0027re trying to model\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nSo if you\u0027re doing this for a class, the good news is you just need to make good looking results! It doesn\u0027t need to predict anything, you can instead massage the program to make results like how you want them to look. But we need to find out what kind of materials we\u0027re trying to model. In other words, do we want to see a very simple solidification like in plastic, a somewhat interesting solidification like water\u002Bice, or a more complicated one like the dendritic solidification of metal castings shown above? Specifically, the things we need to nail down:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nIs our model 2D or 3D\n\u003C/li\u003E\n\u003Cli\u003E\nWhat size/time scale of effects do we want to see\n\u003C/li\u003E\n\u003Cli\u003E\nDo we need to model nucleation\n\u003C/li\u003E\n\u003Cli\u003E\nIs the solid crystaline or amorphous\n\u003C/li\u003E\n\u003Cli\u003E\nDo we need to model different solidification rates on different solid crystal faces\n\u003C/li\u003E\n\u003Cli\u003E\nDo we need to model different thermal conductivities in different directions of the solid\n\u003C/li\u003E\n\u003Cli\u003E\nDo we need to model dissolved materials (like solutes or dopants)\n\u003C/li\u003E\n\u003Cli\u003E\nDo we need to model bulk flow or convection in the fluid (like for injection molding or extremely high temperature differentials)\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nSince this is for a class if you\u0027ve never heard about some of these things, then we don\u0027t need to worry about them. Hooray! Easier=better.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E2. Pick mesh type\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThe mesh is the shape of the little cells we\u0027ve divided the world into so we can compute it. We can go with 3 kinds of mesh: Fixed uniform, Fixed, or Dynamic. Then, we can go with 2 basic kinds of shapes: triangles/tetrahedrals, or squares/cubes. If at all possible, we\u0027ll go with a fixed uniform mesh of square cells, which makes life so much easier. With one of these, we divide the world into a big square grid, and all the programming and mathematics work out nice and simple. For small/simple systems these are fast to write and fast to run, but they have a really hard time with things like dendritic solidification fronts. Next in line are fixed non-uniform meshes, where you can make smaller cells (= more accurate results) in areas where you think you\u0027ll need it, like on sharp corners of a melting ice cube. Finally is the dynamic mesh where the computer automatically makes smaller cells where it detects they\u0027re needed. This is hard because it makes information tricky to find in memory- as a side note, how fast your FEA runs has much more to do with how hard it is for the computer to find things in memory than it does with how many commands the computer needs to run. If your program makes the processor \u0027unexpectedly\u0027 look something up from your RAM it can take 75-100 computer cycles to do it, and when it happens a lot this time delay (called cache thrashing) plagues most FEA designs including my nemesis COMSOL. Anyways, if we do simple squares in a fixed uniform grid for a mesh we get to avoid all the hassle. Hooray! Easier-better.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E3. Pick governing equations\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nSpecifically, we need an equation of state for the solidification (most simply just the enthalpy of melting), equations for heat and mass flow (most simply just thermal conduction and negligable fluid flows), and equations for materials properties like density at different temperatures (most simply just ignored and assumed constant). We\u0027ll probably pick our governing equations based very specifically on what we\u0027re trying to model and what mesh we went for. It\u0027s always tempting to get really fancy with how to do your governing equations because SCIENCE, but to be honest, it\u0027s typically fastest easiest and most effective to just precalculate whatever we need and toss it into a lookup table \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E . Once again, Hooray! Easier=better.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EIt\u0027s a lot, but hopefully enough to start thinking? Always remember that bottom line. Easier=better! \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-05-30T04:01:39Z\u0022 title=\u002205/30/2019 04:01  AM\u0022 data-short=\u00225 yr\u0022\u003EMay 30, 2019\u003C/time\u003E by Cunjo Carl\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Nivee~","CreatedById":183478,"CreatedDateTime":"2019-05-30T16:11:58Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223607426\u0022 data-ipsquote-contentid=\u0022184803\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221559175354\u0022 data-ipsquote-userid=\u0022162109\u0022 data-ipsquote-username=\u0022Cunjo Carl\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n14 hours ago, Cunjo Carl said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027m assuming this is a grad course?\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022vh5gtYI.png\u0022 class=\u0022ipsImage\u0022 height=\u0022389\u0022 src=\u0022https://i.imgur.com/vh5gtYI.png\u0022 width=\u0022474\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYes, Yes I am in a grad course... and while the melting problem that I have been told to solve involves a pure metal (Gallium)(\u003Ca href=\u0022https://www.tandfonline.com/doi/abs/10.1080/10407788808913615\u0022 rel=\u0022external nofollow\u0022\u003EENTHALPY-POROSITY TECHNIQUE FOR MODELING CONVECTION-DIFFUSION PHASE CHANGE: APPLICATION TO THE MELTING OF A PURE METAL\u003C/a\u003E), a universal method applicable for both alloys and pure metals would be great.\n\u003C/p\u003E\n\u003Cp\u003E\nThis is what I want my program to exhibit:\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\n\u003Cimg alt=\u00221ccyhJg.png\u0022 class=\u0022ipsImage\u0022 height=\u0022461\u0022 src=\u0022https://i.imgur.com/1ccyhJg.png\u0022 width=\u0022735\u0022\u003E\u003C/p\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\n\u003Cimg alt=\u0022kV8eG1M.png\u0022 class=\u0022ipsImage\u0022 height=\u0022719\u0022 src=\u0022https://i.imgur.com/kV8eG1M.png\u0022 width=\u0022417\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nThe calculation domain is 2D,rectangular. The material is crystalline, and is assumed to be anisotropic,so different thermophysical values in each direction. It does not have any impurities or solutes, so that\u0027s one problem out of the way. Although I would really like to go one step further and include impurities, let\u0027s go one step at a time. And yeah, convection in the calculation domain (beyond a certain value of liquid fraction) will also be required.\n\u003C/p\u003E\n\u003Cp\u003E\nWhile the problem linked in the paper above is relatively simple, I want to go a lil further than that..\n\u003C/p\u003E\n\u003Cp\u003E\nAbout modelling solidification process, I came across the Enthalpy Porosity Method and the Effective Heat Capacity method. Which one do you think will be more suitable??\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223606712\u0022 data-ipsquote-contentid=\u0022184803\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221559088576\u0022 data-ipsquote-userid=\u0022157062\u0022 data-ipsquote-username=\u0022IncongruousGoat\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 5/29/2019 at 5:39 AM, IncongruousGoat said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nTo address the original question... what part of it do you need help with? If it\u0027s the numerical analysis, I can\u0027t really help you, but if it\u0027s help with C you\u0027re after then I can answer questions all day.\u003Cspan\u003E\uFEFF\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThanks, you are too kind! \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E But I first need to sort out the numerical foundation of this problem before I venture into C...\n\u003C/p\u003E\n"},{"CreatedByName":"Cunjo Carl","CreatedById":162109,"CreatedDateTime":"2019-05-31T22:52:50Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223607919\u0022 data-ipsquote-contentid=\u0022184803\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221559232718\u0022 data-ipsquote-userid=\u0022183478\u0022 data-ipsquote-username=\u0022Nivee~\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 5/30/2019 at 9:11 AM, Nivee~ said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYes, Yes I am in a grad course... and while the melting problem that I have been told to solve involves a pure metal (Gallium)(\u003Ca href=\u0022https://www.tandfonline.com/doi/abs/10.1080/10407788808913615\u0022 rel=\u0022external nofollow\u0022\u003EENTHALPY-POROSITY TECHNIQUE FOR MODELING CONVECTION-DIFFUSION PHASE CHANGE: APPLICATION TO THE MELTING OF A PURE METAL\u003C/a\u003E), a universal method applicable for both alloys and pure metals would be great.\n\u003C/p\u003E\n\u003Cp\u003E\nThis is what I want my program to exhibit:\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\n*snip*\n\u003C/p\u003E\n\u003Cp\u003E\nThe calculation domain is 2D,rectangular. The material is crystalline, and is assumed to be anisotropic,so different thermophysical values in each direction. It does not have any impurities or solutes, so that\u0027s one problem out of the way. Although I would really like to go one step further and include impurities, let\u0027s go one step at a time. And yeah, convection in the calculation domain (beyond a certain value of liquid fraction) will also be required.\n\u003C/p\u003E\n\u003Cp\u003E\nWhile the problem linked in the paper above is relatively simple, I want to go a lil further than that..\n\u003C/p\u003E\n\u003Cp\u003E\nAbout modelling solidification process, I came across the Enthalpy Porosity Method and the Effective Heat Capacity method. Which one do you think will be more suitable??\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nLooks good so far! Gallium is a nice choice because it has a huge energy barrier to nucleation, so we should be safe just assuming the one front. Also nice for Gallium, it doesn\u0027t change density much when it melts and doesn\u0027t form complex macroscopic shapes when solidifying, which are all big blessings.\u00A0The model shown appears to be with nice low temperature differentials (10C) on large size scales (2-20cm) and long-ish times (~~1s timesteps.) Also, for larger systems, the trick in this paper became a standard- modeling all the complexities of those dendrites at the solid-liquid interface as just a thin \u0027mush\u0027 with scalable properties. All of this works together to make the square grid a great choice for the materials, time, temp and size scales. I like it.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve never heard of the two techniques before. That said, I\u0027m happy to take a look! Just looking at how they\u0027re derived, I think the enthalpy porosity model is more appropriate to us here, whereas the effective heat capacity model would be more at home with polymers or amorphous materials which have low nucleation energy barriers and wide melting temperature ranges.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ll give your paper a quick read and see if I can learn more what it\u0027s up to.\n\u003C/p\u003E\n\u003Cp\u003E\nNext is choosing what we want each loop to look like. We need to calculate a bunch of different physical processes like conduction, convection, phase change, etc and all of these can happen on different time scales. What\u0027s more, if we have sharp geometries or very nonlinear governing equations, it\u0027s possible to accidentally overshoot what should happen in a given timestep and cause crazy oscillations or divergences. To explain divergences, let\u0027s consider KSP. Here think of a rocket glitching and falling through Kerbin. When it touches the center, the model \u0027diverges\u0027 = miss calculates and launches our craft off to infinity at light speed despite this being a thing that wouldn\u0027t physically happen. Physically our craft should just get stuck at the center but because the timestep was too long and the physics too nonlinear, the program miscalculated what should happen. Alternatively, a bit more complicated, any time a craft wiggles itself to death while just hanging out in space, that would be an oscillating divergence. We need to deal with the same sorts of problems in our models too. The options for dealing with this are:\n\u003C/p\u003E\n\u003Cp\u003E\nSingle physics loop with short timesteps: We have all of our physics being run on the same timescale (in the same for loop), allowing for quick execution and clean code. However, we choose timesteps that are short enough to always avoid divergence for our model, which can be wastefully slow. It\u0027s typically not the most efficient way to go computationally, but in the cases where it\u0027s close enough it\u0027s definitely worth it for the simplicity. KSP uses this structure. Because they rely on rapid simple calculations, these setups benefit hugely from precomputed heuristics and lookup tables. My very favorite approach is to use one of these and have the setup calculate the optimal timestep on the fly.\n\u003C/p\u003E\n\u003Cp\u003E\nNested physics loops: Those parts of physics that are more prone to divergence are run with much shorter timesteps than the rest of physics. This requires nested forloops and is much slower computationally. However, if there\u0027s only one part of your physics giving divergence problems it\u0027s typically faster than slowing down everything. I tend to avoid these though, in general.\n\u003C/p\u003E\n\u003Cp\u003E\nConvergence loops: We full on embrace the terrible non-linear nature of our system and for each cell we have a solver (often similar to Newton\u0027s method) determine what the values of the next timestep should be. These solvers are specifically tuned (by you) approach their value slowly enough to never have each solver step diverge, but quickly enough it doesn\u0027t need to run until next week. Though they\u0027re often necessary, these are extremely cumbersome computationally.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nGiven our specific system, I can happily recommend the single physics loop for starters. And though there\u0027s a lot more to the details, if we went with the single physics loop the shape would look like:\n\u003C/p\u003E\n\u003Cp\u003E\nCreate two two arrays called \u0022old\u0022 and \u003Cspan\u003E\u0022new\u0022 representing our system as \u003C/span\u003Egrids of square cells, both identical and with the correct starting conditions\u003Cbr\u003E\nfor (each timestep) {\u003Cbr\u003E\n\u00A0 for (each cell in \u0022old\u0022) {\u003Cbr\u003E\n\u00A0\u00A0\u00A0 for (each neighbor) {\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0 (using Enthalpy/Pressure/etc. values from \u0022old\u0022)\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0 calculate heat flow from \u003Cstrong\u003Econduction\u003C/strong\u003E and add/subtract the enthalpy from the cells in \u0022new\u0022\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0 calculate heat flow from \u003Cstrong\u003Econvection\u003C/strong\u003E and add/subtract the enthalpy from the cells in \u0022new\u0022\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0 calculate heat flow from \u003Cstrong\u003Eviscous friction\u003C/strong\u003E and add/subtract the enthalpy from the cells in \u0022new\u0022\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0 etc. etc, going through all of our governing equations also including for mass flow.\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0 (exceptions for boundary conditions)\u003Cbr\u003E\n\u00A0\u00A0\u00A0 }\u003Cbr\u003E\n\u00A0 }\u003Cbr\u003E\n\u00A0for (each cell in \u0022new\u0022) {\u003Cbr\u003E\n\u00A0\u00A0 Update physical properties (amount of phase change, the temp change from phase change, density change, etc.)\u003Cbr\u003E\n\u00A0}\u003Cbr\u003E\n\u00A0for (each cell in \u0022new\u0022) {\u003Cbr\u003E\n\u00A0\u00A0 copy over cell in \u0022old\u0022\u003Cbr\u003E\n\u00A0}\u003Cbr\u003E\n\u00A0Display\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\nCheers!\n\u003C/p\u003E\n"},{"CreatedByName":"Nivee~","CreatedById":183478,"CreatedDateTime":"2019-06-04T00:12:16Z","Content":"\n\u003Cp\u003E\nWell, I am a lil confused.. How\u00A0 do I mesh the grid? How do I let the system know that a domain has been divided into several discrete finite volumes?\n\u003C/p\u003E\n"},{"CreatedByName":"satnet","CreatedById":147366,"CreatedDateTime":"2019-06-04T02:03:36Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223611626\u0022 data-ipsquote-contentid=\u0022184803\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221559607136\u0022 data-ipsquote-userid=\u0022183478\u0022 data-ipsquote-username=\u0022Nivee~\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Nivee~ said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWell, I am a lil confused.. How\u00A0 do I mesh the grid? How do I let the system know that a domain has been\u003Cspan\u003E\uFEFF\u003C/span\u003E divided into several discrete finite volumes\u003Cspan\u003E\uFEFF\u003C/span\u003E?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nUnless your instructor gave you an existing library it is up to you to create the model. I don\u0027t know quite enough thermodynamics to know all the properties you\u0027ll need to track (temperature and density are probably a given, but I doubt that is all), but in general you\u0027ll need something to store the properties of each cell, in this case probably a C\u00A0struct.\u00A0If you are using a simple grid a 2d array of these structs would probably make sense where each index into the array represents your spatial step unit in either the x or y dimension. This is a simple model, but it sounds like your professor gave you a problem where a simple model is sufficient.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThen as \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/162109-cunjo-carl/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022162109\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/162109-cunjo-carl/\u0022 rel=\u0022\u0022\u003E@Cunjo Carl\u003C/a\u003E\u00A0indicated for every temporal step you update the cells in your array representing your new model using you old model array, display it, swap it into your old model array, then start again.\n\u003C/p\u003E\n"},{"CreatedByName":"Cunjo Carl","CreatedById":162109,"CreatedDateTime":"2019-06-04T04:45:00Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223611626\u0022 data-ipsquote-contentid=\u0022184803\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221559607136\u0022 data-ipsquote-userid=\u0022183478\u0022 data-ipsquote-username=\u0022Nivee~\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n20 hours ago, Nivee~ said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWell, I am a lil confused.. How\u00A0 do I mesh the grid? How do I let the system know that a domain has been divided into several discrete finite volumes?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022QqTXGie.jpg\u0022 class=\u0022ipsImage\u0022 height=\u0022474\u0022 src=\u0022https://i.imgur.com/QqTXGie.jpg\u0022 width=\u0022800\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nLet\u0027s start by making something simple, a program to model heat conduction in a 1mx1m uniform square of metal. It starts at some temperature (say 30C) and is coated mostly in insulator. At time=0 we suddenly apply heating and cooling a patch on top/bottom to hold the surface at 50C, and a patch on left/right to hold the surface at 20C. Let\u0027s track the temperature over time.\n\u003C/p\u003E\n\u003Cp\u003E\n(A preface for others: For the sake of a good explanation, I\u0027m going to fib a few times, and present a way that\u0027s computationally quite silly, but easy to start thinking about. Also as a note, I haven\u0027t coded in C\u002B\u002B for about a decade, so parts may be off... let\u0027s call it good pseudo code!)\n\u003C/p\u003E\n\u003Cp\u003E\nTo start, imagine our metal is made of a grid of 100x100 of little square \u0027cells\u0027.\u00A0Each cell is so small that only the temperature at the center of each one is important. So, at the center of each square cell we can imagine a point, and the that point will determine the properties of everything in the cell.\u00A0 For this heat conduction program, the only information that needs to be stored is the Temperature at the center of each cell, and everything else (like density, heat capacity, etc.) will just be considered uniform throughout all cells in the metal block. Because our cells are so small, and our time steps are so short, we can use the simplest of heat transfer equations, the steady state heat transfer for linear temperature differences. These are shown in the spoiler and digested into a convenient form for our program.\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nThe standard heat conduction laws applied to heating a little \u0027cube\u0027 volume using heat transferred across an identically sized \u0027cube\u0027 block of material. Notice how the area terms cancel, so the actual thickness of our volumes winds up being irrelevant. Both length terms that appear will be the same as our cell size.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EHappy Linear Laws\u003C/strong\u003E\u003Cbr\u003E\nHeatFlow (in Watts) = m*cp*deltaT/time = k*Area*(T2-T1)/(x2-x1)\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ESubstitutions\u003C/strong\u003E\u003Cbr\u003E\n(x2-x1) = Length\u003Cbr\u003E\ntime = timeStep\u003Cbr\u003E\nm = Density*Volume = Density*Area*Length\u003Cbr\u003E\ncp = Cp/MolarMass\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EPlug them in\u003C/strong\u003E\u003Cbr\u003E\nDensity*Area*Length*(Cp/MolarMass)*deltaT = timeStep*k*Area*(T2-T1)/Length\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ESimplify\u003C/strong\u003E\u003Cbr\u003E\ndeltaT = timeStep*k*MolarMass/(Density*Cp*Length^2) * (T2-T1)\u003Cbr\u003E\ndeltaT = coefficient * (T2-T1)\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 where coefficient\u00A0\u00A0 = \u00A0 alpha*timeStep/Length^2 \u00A0 \u00A0 , \u00A0 and alpha =\u00A0 k*MolarMass/(Density*Cp)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nSo we need our program to make a matrix of 100x100 variables that can store the temperatures at each of the 100x100 points. We\u0027ll do this using what\u0027s called a 2D array. Making one is simple in C\u002B\u002B!\n\u003C/p\u003E\n\u003Cp\u003E\ndouble T_old[100][100];\u00A0 //Makes a 100x100 matrix of variables called an \u0027array\u0027\u003Cbr\u003E\ndouble T_new[100][100];\n\u003C/p\u003E\n\u003Cp\u003E\n/* Each value (called an element) in this array will represent the temperature at the center of one of our squares. Specifically it\u0027s stored on the computer as a double. A \u0027double\u0027 is a kind of computer variable that can store numbers with good accuracy, and is fast to use on newer computers. You could also use the very similar kind of variable \u0027float\u0027 which is half the size.\u00A0 */\n\u003C/p\u003E\n\u003Cp\u003E\n// The numbers stored in the arrays are random to start, so first you need to use for loops to set every value to 30 (because we start at a uniform 30C).\n\u003C/p\u003E\n\u003Cp\u003E\nint x = 0;\u003Cbr\u003E\nint y = 0;\u003Cbr\u003E\nfor (x=0; x\u0026lt;=99; x\u002B\u002B) {\u003Cbr\u003E\n\u00A0\u00A0\u00A0 for (y=0; y\u0026lt;=99; y\u002B\u002B) {\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 T_old[x][y] = 30.00;\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 T_new[x][y] = 30.00;\u003Cbr\u003E\n\u00A0\u00A0\u00A0 }\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\n//Then we make the rest of our variables:\n\u003C/p\u003E\n\u003Cp\u003E\ndouble alpha = \u003Cs\u003E0.01855\u003C/s\u003E 0.00001855; //This is Gallium\u0027s thermal diffusivity\u00A0 EDIT: Missed a few zeroes putting it into SI\u003Cbr\u003E\ndouble cellSize = 0.01; //The distance from the center of each cell to the one next to it is 1 cm\u003Cbr\u003E\ndouble timeStep = 0.0001; //Make sure timeStep is ~~ cellSize^2 or smaller to avoid divergence\u003Cbr\u003E\ndouble coefficient = alpha*timeStep/(cellSize*cellSize); //see spoiler\u003Cbr\u003E\u003Cbr\u003E\ndouble time = 0.00;\u00A0 //We make a variable to track time\u003Cbr\u003E\u003Cbr\u003E\nfor (time=0.00; time\u0026lt;=300.00; time\u002B=timeStep) {\u00A0 //Starting at t=0 and stepping forward .0001seconds at a time until 5 minutes\u003Cbr\u003E\n\u00A0\u00A0\u00A0 for (x=0; x\u0026lt;=99; x\u002B\u002B) {\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 for (y=0; y\u0026lt;=99; y\u002B\u002B) {\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 Trade heat with the neighboring cells following T_new[x][y]\u00A0 \u002B= coefficient * ( T_old[x neighbor][y neighbor] - T_old[x][y] )\u00A0 doing this for each neighbor to add in all their contributions.\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 If we\u0027re at a boundry heat/cold supply, trade heat with that boundry, again following \u00A0 \u00A0 \u00A0\u00A0 T_new[x][y]\u00A0 \u002B= coefficient * ( BoundryTemp - T_old[x][y] )\u00A0\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 }\u003Cbr\u003E\n\u00A0\u00A0\u00A0 }\u003Cbr\u003E\n\u00A0\u00A0 // Copy T_new over T_old\u00A0 ,\u00A0 just using another pair of for loops and\u00A0 T_old[x][y]\u00A0 = T_new[x][y] ;\u003Cbr\u003E\n}\u003Cbr\u003E\n//Display T_new\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-06-04T20:53:59Z\u0022 title=\u002206/04/2019 08:53  PM\u0022 data-short=\u00225 yr\u0022\u003EJune 4, 2019\u003C/time\u003E by Cunjo Carl\u003C/strong\u003E\n\u003Cbr\u003E** off by one coding corrections\n\u003C/span\u003E\n"},{"CreatedByName":"Flibble","CreatedById":196830,"CreatedDateTime":"2019-06-04T08:45:59Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223606628\u0022 data-ipsquote-contentid=\u0022184803\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221559078778\u0022 data-ipsquote-userid=\u002217022\u0022 data-ipsquote-username=\u0022Dragon01\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 5/28/2019 at 10:26 PM, Dragon01 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThere\u0027s a reason, and that reason is that it\u0027s literally one step from being assembler while actually being somewhat portable. If you want performance, you go with FORTRAN (itself an ancient thing, but supercomputer people love it). If you want ease of use, you go with Wolfram (my own language of choice) or maybe C#.\u00A0C, with its heisenbug-inducing pointers, linear execution and general lack of many useful abstractions,\u00A0is only good for writing drivers and learning how the computers work under the hood.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI use both at work, and would take C over C# every time. C# just feels clunky by comparison, and lets not even get started on performance.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso heisenbugs are more common from badly constructed threading causing race conditions than pointers in my experience.\n\u003C/p\u003E\n"},{"CreatedByName":"Nivee~","CreatedById":183478,"CreatedDateTime":"2019-06-04T10:52:59Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223611761\u0022 data-ipsquote-contentid=\u0022184803\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221559623500\u0022 data-ipsquote-userid=\u0022162109\u0022 data-ipsquote-username=\u0022Cunjo Carl\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, Cunjo Carl said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n* incredibly helpful code snippet*\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nfor (x=1; x\u0026lt;=99; x\u002B\u002B) {\u003Cbr\u003E\n\u00A0\u00A0\u00A0 for (y=0; y\u0026lt;=99; y\u002B\u002B) {\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 T_old[x][y] = 30.00;\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 T_new[x][y] = 30.00;\u003Cbr\u003E\n\u00A0\u00A0\u00A0 }\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHmm, but we are not providing for boundary temperatures here...\n\u003C/p\u003E\n\u003Cp\u003E\nHow about this?\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n// for temperatures of interior nodes\n\u003C/p\u003E\n\u003Cp\u003E\nfor (x=1; x\u0026lt;=98; x\u002B\u002B) {\u003Cbr\u003E\n\u00A0\u00A0\u00A0 for (y=1; y\u0026lt;=98; y\u002B\u002B) {\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 T_old[x][y] = 30.00;\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 T_new[x][y] = 30.00;\u003Cbr\u003E\n\u00A0\u00A0\u00A0 }\u003Cbr\u003E\n}\n\u003C/p\u003E\n\u003Cp\u003E\n//For the boundaries, left wall is at 85 C, and the other walls are at 30C\n\u003C/p\u003E\n\u003Cp\u003E\nfor (x=0; ; )\u00A0{\u003Cbr\u003E\n\u00A0\u00A0\u00A0 for (y=0; y\u0026lt;=99; y\u002B\u002B) {\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 T_old[x][y] = 85.00;\u003Cbr\u003E\n\u00A0\u00A0\u00A0 }\u003Cbr\u003E\n}\u00A0 //left wall\n\u003C/p\u003E\n\u003Cp\u003E\nfor (x=99; ; )\u00A0{\u003Cbr\u003E\n\u00A0\u00A0\u00A0 for (y=0; y\u0026lt;=99; y\u002B\u002B) {\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 T_old[x][y] = 30.00;\u003Cbr\u003E\n\u00A0\u00A0\u00A0 }\u003Cbr\u003E\n}\u00A0 //right\u00A0wall\n\u003C/p\u003E\n\u003Cp\u003E\nfor (y=0; ; )\u00A0{\u003Cbr\u003E\n\u00A0\u00A0\u00A0 for (x=1; y\u0026lt;=98; y\u002B\u002B) {\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 T_old[x][y] = 30.00;\u003Cbr\u003E\n\u00A0\u00A0\u00A0 }\u003Cbr\u003E\n}\u00A0 //top\u00A0wall\n\u003C/p\u003E\n\u003Cp\u003E\nfor (y=99; ; )\u00A0{\u003Cbr\u003E\n\u00A0\u00A0\u00A0 for (x=1; x\u0026lt;=99; x\u002B\u002B) {\u003Cbr\u003E\n\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 T_old[x][y] = 85.00;\u003Cbr\u003E\n\u00A0\u00A0\u00A0 }\u003Cbr\u003E\n}\u00A0 //bottom wall\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nIs this OK? Because my program is not running, strangely....\n\u003C/p\u003E\n"},{"CreatedByName":"Flibble","CreatedById":196830,"CreatedDateTime":"2019-06-04T10:57:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223611856\u0022 data-ipsquote-contentid=\u0022184803\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221559645579\u0022 data-ipsquote-userid=\u0022183478\u0022 data-ipsquote-username=\u0022Nivee~\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 minutes ago, Nivee~ said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nfor (x=0; ; )\u00A0{\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat, and similar loops aren\u0027t valid.\n\u003C/p\u003E\n\u003Cp\u003E\nTry just doing something like:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Ex \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E y\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;=\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E99\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E y\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u002B)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  T_old\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E][\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E85.00\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//left wall \u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223611761\u0022 data-ipsquote-contentid=\u0022184803\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221559623500\u0022 data-ipsquote-userid=\u0022162109\u0022 data-ipsquote-username=\u0022Cunjo Carl\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, Cunjo Carl said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\ndouble T_old[99][99];\u00A0 //Makes a 100x100 matrix of variables called an \u0027array\u0027\u003Cbr\u003E\ndouble T_new[99][99];\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThose make 99x99 arrays, you wanted:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022kwd\u0022\u003Edouble\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E T_old\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E100\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E][\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E100\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E];\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//Makes a 100x100 matrix of variables called an \u0027array\u0027\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edouble\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E T_new\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E100\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E][\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E100\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E];\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThese can be indexed from 0-99 (inclusive).\n\u003C/p\u003E\n"},{"CreatedByName":"Cunjo Carl","CreatedById":162109,"CreatedDateTime":"2019-06-04T14:13:02Z","Content":"\n\u003Cp\u003E\nThanks for the syntax correction, \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/196830-flibble/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022196830\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/196830-flibble/\u0022 rel=\u0022\u0022\u003E@Flibble\u003C/a\u003E, that stuff never sticks for me.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m also noticing my for loops on x were all starting on 1 when they should have been starting on 0. I\u0027ll just go fix that.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223611856\u0022 data-ipsquote-contentid=\u0022184803\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221559645579\u0022 data-ipsquote-userid=\u0022183478\u0022 data-ipsquote-username=\u0022Nivee~\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 hours ago, Nivee~ said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHmm, but we are not providing for boundary temperatures here...\n\u003C/p\u003E\n\u003Cp\u003E\nHow about this?\n\u003C/p\u003E\n\u003Cp\u003E\n*clip*\n\u003C/p\u003E\n\u003Cp\u003E\nIs this OK? Because my program is not running, strangely....\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI definitely left a lot to the imagination with the pseudocode! I\u0027m not surprised it won\u0027t run by copy pasting. I can help a bit with debugging semantics problems, but it\u0027s been so long I\u0027d need to sit down in front of C for an hour to get the syntax back in my head. Mostly, I think you should be lined up in the right direction now though as far as what you\u0027re trying to accomplish, and exactly how is now part of the fun challenge. Just as a note, by habit I\u0027m one of those teachers with a mildly sadistic bent who\u0027ll purposefully leave hidden hurdles in the way of a problem for people to crash into. Overcoming them is where the best growth happens! When I work with people in person I tend to know how high to size them, but in this case I think I\u0027ve been going too large! Sorry.\n\u003C/p\u003E\n\u003Cp\u003E\nIt sounds like this may be your first time coding in C\u002B\u002B, and if so you might actually get the fastest results by doing simple silly things to start that have nothing to do with CFD. Just make it say \u0022Hello World\u0022 1000 times, do the Fibonacci sequence, that sort of stuff. It should help you understand the overall mechanics of it, which will be invaluable moving forward. Also, please make sure you have a debugger, at least one which can tell you why the program isn\u0027t running like \u0022Expected ___ line 66\u0022 So you can have an idea of why it\u0027s not running. It\u0027s always something silly... In this case, it\u0027ll almost definitely be an \u0022Error invalid index, Line XX\u0022 where the line refers to \u0022 T_new[x][y] \u002B= ...\u00A0 \u0022 and when y = 99 for the first time.\n\u003C/p\u003E\n\u003Cp\u003E\nSomething like that should work for the boundary condition, following Flibble\u0027s correction of course. If you use this approach, you\u0027ll need to apply those temperatures to the boundary in T_new in each step of the program just before copying T_new to T_old. Otherwise, we\u0027ll accidentally overwrite our boundary conditions during the program! I was hinting that you could also just apply the effects of the boundary conditions using if statements within the main code, but this would be way slower computationally, so go with however makes sense to you! I\u0027d recommend not applying it to the entire wall though, just a patch in the middle. Maybe 40-60?\n\u003C/p\u003E\n\u003Cp\u003E\nUnfortunately, I\u0027ve really overdone typing in the last few days, so I\u0027ll be needing to mostly tune out for a week. Best of luck moving forward!\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-06-04T14:16:43Z\u0022 title=\u002206/04/2019 02:16  PM\u0022 data-short=\u00225 yr\u0022\u003EJune 4, 2019\u003C/time\u003E by Cunjo Carl\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Flibble","CreatedById":196830,"CreatedDateTime":"2019-06-04T14:22:33Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223611947\u0022 data-ipsquote-contentid=\u0022184803\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221559657582\u0022 data-ipsquote-userid=\u0022162109\u0022 data-ipsquote-username=\u0022Cunjo Carl\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 minutes ago, Cunjo Carl said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt\u0027s always something silly... In this case, it\u0027ll almost definitely be an \u0022Error invalid index, Line XX\u0022 where the line refers to \u0022 T_new[x][y] \u002B= ...\u00A0 \u0022 and when y = 99 for the first time.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nUsing built-in arrays like that you get no bounds checking. So the program will just run, but will corrupt adjacent data in the array (also it might crash due to accessing off the end of the array, but YMMV there).\n\u003C/p\u003E\n\u003Cp\u003E\nIf you use something with safeties, like std::array then it will throw an exception when you try to access off the end. This is probably a good thing while learning!\n\u003C/p\u003E\n\u003Cp\u003E\nI code C\u002B\u002B for a living, so if you have questions post them up and I\u0027ll try to answer. \u003Cspan\u003E\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"FleshJeb","CreatedById":111640,"CreatedDateTime":"2019-06-04T15:02:35Z","Content":"\n\u003Cp\u003E\nFor impurities, would you just have a grid of alphas that you reference by index? (Impurities have a different alpha). You can scatter those randomly (or in\u00A0whatever proportion) after setting the alpha array uniformly.\n\u003C/p\u003E\n\u003Cp\u003E\nYou can do the same trick for any other relevant physical property.\n\u003C/p\u003E\n\u003Cp\u003E\nHow in the hell do you deal with the liquid state, where the impurities would shift cells? (After googling a bit:\u00A0\u003Ca href=\u0022https://www.cc.gatech.edu/~turk/my_papers/melt.pdf\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.cc.gatech.edu/~turk/my_papers/melt.pdf\u003C/a\u003E)\n\u003C/p\u003E\n"},{"CreatedByName":"Cunjo Carl","CreatedById":162109,"CreatedDateTime":"2019-06-04T15:29:40Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223611951\u0022 data-ipsquote-contentid=\u0022184803\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221559658153\u0022 data-ipsquote-userid=\u0022196830\u0022 data-ipsquote-username=\u0022Flibble\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Flibble said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSo the program will just run, but will corrupt adjacent data in the array ...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u00A0\u003Cimg alt=\u0022:lol:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_laugh.png\u0022 title=\u0022:lol:\u0022\u003E That\u0027s amazing. God I miss C, why did I ever leave? (Joking but also actually serious)\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Nivee~","CreatedById":183478,"CreatedDateTime":"2019-06-04T16:43:13Z","Content":"\n\u003Cp\u003E\nAssuming the following to be the calculation domain, with blue dots being the boundary nodes, and the yellow dots being the interior nodes,\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\n\u003Cimg alt=\u0022O84WE6B.png\u0022 class=\u0022ipsImage\u0022 height=\u0022615\u0022 src=\u0022https://i.imgur.com/O84WE6B.png\u0022 width=\u0022712\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nWell, here\u0027s the final code:\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\n#include\u0026lt;stdio.h\u0026gt;\n\u003C/p\u003E\n\u003Cp\u003E\nint main()\u003Cbr\u003E\n{\u003Cbr\u003E\n\u00A0\u00A0 \u00A0double T_old[5][5];\u003Cbr\u003E\n\u00A0\u00A0 \u00A0double T_new[5][5];\u003Cbr\u003E\n\u00A0 \u00A0 double Tin;\u003Cbr\u003E\n\u00A0\u00A0 \u00A0int x = 0;\u003Cbr\u003E\n\u00A0\u00A0 \u00A0int y = 0;\u003Cbr\u003E\n\u00A0\u00A0 \u00A0printf(\u0022\\n Enter the Initial Temperature\u0022);\u003Cbr\u003E\n\u00A0\u00A0 \u00A0scanf(\u0022%d\u0022,Tin);\u003Cbr\u003E\n\u00A0\u00A0 \u00A0for (x = 1; x \u0026lt; 4; x\u002B\u002B){\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0for (y = 1; y \u0026lt; 4; y\u002B\u002B){\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0T_old[x][y] = Tin;\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0T_new[x][y] = Tin;\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0//Boundary Conditions\u003Cbr\u003E\n\u00A0\u00A0 \u00A0x = 0;\u003Cbr\u003E\n\u00A0 \u00A0 for (y = 0; y \u0026lt;= 4; y\u002B\u002B){\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 T_old[x][y] = 85.00;\u003Cbr\u003E\n\u00A0 \u00A0 }//Left Wall\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 \u00A0 x = 4;\u003Cbr\u003E\n\u00A0 \u00A0 for (y = 0; y \u0026lt;= 4; y\u002B\u002B){\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 T_old[x][y] = 30.00;\u003Cbr\u003E\n\u00A0 \u00A0 }//Right Wall\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 \u00A0 y = 0;\u003Cbr\u003E\n\u00A0 \u00A0 for (x = 1; x \u0026lt;= 4; x\u002B\u002B){\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 T_old[x][y] = 30.00;\u003Cbr\u003E\n\u00A0 \u00A0 }//Top Wall\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\n\u00A0 \u00A0 y = 4;\u003Cbr\u003E\n\u00A0 \u00A0 for (x = 1; x \u0026lt;= 4; x\u002B\u002B){\u003Cbr\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 T_old[x][y] = 30.00;\u003Cbr\u003E\n\u00A0 \u00A0 }//Bottom Wall\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0double alpha = 0.000137;\u003Cbr\u003E\n\u00A0\u00A0 \u00A0double cellSize = 0.01;\u003Cbr\u003E\n\u00A0\u00A0 \u00A0double timeStep = 0.0001;\u003Cbr\u003E\n\u00A0\u00A0 \u00A0double coefficient = alpha*timeStep/(cellSize*cellSize);\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0double time = 0.00;\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0for (time = 0.00; time \u0026lt;= 300.00; time \u002B= timeStep){\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0for (x = 0; x \u0026lt;= 4; x\u002B\u002B ){\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0for (y = 0; y \u0026lt;= 4; y\u002B\u002B){\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0T_new[x][y] \u002B= coefficient*(T_old[x][y-1]-T_old[x][y]);\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0for (x = 0; x \u0026lt;= 4; x\u002B\u002B){\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0for (y = 0; y \u0026lt;= 4; y\u002B\u002B){\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0T_new[x][y] = T_old[x][y];\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0for (x = 0; x \u0026lt;= 4; x\u002B\u002B){\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0for (y = 0; y \u0026lt;= 4; y\u002B\u002B){\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0printf(\u0022%d\\n\u0022,T_new[x][y]);\u003Cbr\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\u003Cbr\u003E\n\u00A0\u00A0 \u00A0}\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\u00A0 \u00A0return 0;\n\u003C/p\u003E\n\u003Cp\u003E\n}\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nNow, what\u0027s wrong with this? Can someone please tell me?\n\u003C/p\u003E\n"},{"CreatedByName":"FleshJeb","CreatedById":111640,"CreatedDateTime":"2019-06-04T21:10:41Z","Content":"\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022com\u0022\u003E#include\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0026lt;stdio.h\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan\u003Eint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E main\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edouble\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E T_old\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E5\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E][\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E5\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E];\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edouble\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E T_new\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E5\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E][\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E5\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E];\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edouble\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ETin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan\u003Eint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E x \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan\u003Eint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E y \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    printf\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022\\n Enter the Initial Temperature\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    scanf\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022%d\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan\u003ETin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E x \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E x\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u002B){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E y \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E y\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u002B){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            T_old\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E][\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ETin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            T_new\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E][\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ETin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//Boundary Conditions\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    x \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E y \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E y\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u002B){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        T_old\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E][\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E85.00\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//Left Wall\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    x \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E y \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E y\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u002B){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        T_old\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E][\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E30.00\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//Right Wall\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    y \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E x \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E x\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u002B){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        T_old\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E][\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E30.00\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//Top Wall\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\n    y \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E x \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E x\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u002B){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        T_old\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E][\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E30.00\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//Bottom Wall\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edouble\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E alpha \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.000137\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edouble\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E cellSize \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.01\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edouble\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E timeStep \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.0001\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edouble\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E coefficient \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E alpha\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EtimeStep\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EcellSize\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EcellSize\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edouble\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E time \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.00\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etime \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.00\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E time \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E300.00\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E time \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E timeStep\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E x \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E x\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E y \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E y\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u002B){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                T_new\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E][\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E coefficient\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ET_old\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E][\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ET_old\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E][\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E x \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E x\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u002B){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E y \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E y\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u002B){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                T_new\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E][\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E T_old\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E][\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E];\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E x \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E x\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u002B){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E y \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E4\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E y\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u002B){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            printf\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022%d\\n\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ET_new\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E][\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ey\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nCode view helps ^^^^\n\u003C/p\u003E\n\u003Cp\u003E\nThis is just from a brief glance, I could be misunderstanding:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nThe hot and cold wall resets\u00A0aren\u0027t inside the loop? Shouldn\u0027t they be inputting continuously? I don\u0027t think the top and bottom walls have to be set more than once, since they\u0027re insulators. Just consider 1,0 to\u00A03,0 and 1,4 to 3,4 to be interior nodes.\n\u003C/li\u003E\n\u003Cli\u003E\nIt should be T_old = T_new, yours is backwards.\n\u003C/li\u003E\n\u003Cli\u003E\nThe [y-1] index goes out of bounds when y=0.\n\u003C/li\u003E\n\u003C/ul\u003E\n"},{"CreatedByName":"Cunjo Carl","CreatedById":162109,"CreatedDateTime":"2019-06-04T21:11:24Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223612075\u0022 data-ipsquote-contentid=\u0022184803\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221559666593\u0022 data-ipsquote-userid=\u0022183478\u0022 data-ipsquote-username=\u0022Nivee~\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, Nivee~ said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNow, what\u0027s wrong with this? Can someone please tell me?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nValue of alpha is actually .00001855 m^2/s . Screwed up my conversion- looks like it got you too.\u00A0\u00A0 values: 40.6 * 69.7 / (5.91*(10^2)^3 * 25.86)\u00A0\u00A0 units W/mK * g/mol\u00A0 / (g/cm^3 * (cm/m)^3 * J/molK)\u00A0 -\u0026gt; m^2/s\n\u003C/p\u003E\n\u003Cp\u003E\nThis line: \u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0T_new[x][y] \u002B= coefficient*(T_old[x][y-1]-T_old[x][y]);\u00A0\u00A0 Will try to access an out of bounds variable at the index T_old[0][-1] when y=0 . For starters, use an if statement to prevent.\n\u003C/p\u003E\n\u003Cp\u003E\nWe also need to do each of its neighbors, not just the one above it, so a line for x\u002B1, x-1, y\u002B1, y-1\n\u003C/p\u003E\n\u003Cp\u003E\nPresently walls not maintained at boundary conditions, just initially set to them. Is that intended?\n\u003C/p\u003E\n\u003Cp\u003E\nThis line:\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0\u00A0 T_new[x][y] = T_old[x][y];\u00A0\u00A0 Is backwards.\n\u003C/p\u003E\n\u003Cp\u003E\nGood luck\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-06-04T21:12:27Z\u0022 title=\u002206/04/2019 09:12  PM\u0022 data-short=\u00225 yr\u0022\u003EJune 4, 2019\u003C/time\u003E by Cunjo Carl\u003C/strong\u003E\n\u003Cbr\u003ESniped, just gonna leave it.\n\u003C/span\u003E\n"}]}