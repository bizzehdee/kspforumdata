{"TopicId":194331,"ForumId":109,"TopicTitle":"[To people that know how to code well] What opportunities have been gained with the farther out release date?","CreatedByName":"mcwaffles2003","CreatedById":180102,"CreatedDateTime":"2020-05-31T10:13:24Z","PageNum":1,"Articles":[{"CreatedByName":"mcwaffles2003","CreatedById":180102,"CreatedDateTime":"2020-05-31T10:13:24Z","Content":"\n\u003Cp\u003E\nI remember early, soon after the game was announced, there was discussions of unity updates and what they could mean for the game. As far as general\u00A0 improvements, increase in scope, added functions, and so on. Not much of a programmer but I recall discussions of multi-threading rigid body physics, the (im)plausibility of it being possible, mentioning of DOTS and BURST etc.\n\u003C/p\u003E\n\u003Cp\u003E\nSo instead of either being sad that we have to wait another year and a half at least for the game (oh god so long...)\u00A0or simply cheering on \u0022we can wait!\u0022 / \u0022it\u0027s done when it\u0027s done\u0022... As a layman I ask the more coding literate among us.. What new possibilities can be considered in bounds now? What future updates would this game have missed that might now be implemented?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-05-31T10:30:18Z\u0022 title=\u002205/31/2020 10:30  AM\u0022 data-short=\u00224 yr\u0022\u003EMay 31, 2020\u003C/time\u003E by mcwaffles2003\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Incarnation of Chaos","CreatedById":197414,"CreatedDateTime":"2020-05-31T10:46:04Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223794458\u0022 data-ipsquote-contentid=\u0022194331\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221590920004\u0022 data-ipsquote-userid=\u0022180102\u0022 data-ipsquote-username=\u0022mcwaffles2003\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n27 minutes ago, mcwaffles2003 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI remember early, soon after the game was announced, there was discussions of unity updates and what they could mean for the game. As far as general\u00A0 improvements, increase in scope, added functions, and so on. Not much of a programmer but I recall discussions of multi-threading rigid body physics, the (im)plausibility of it being possible, mentioning of DOTS and BURST etc.\n\u003C/p\u003E\n\u003Cp\u003E\nSo instead of either being sad that we have to wait another year and a half at least for the game (oh god so long...)\u00A0or simply cheering on \u0022we can wait!\u0022 / \u0022it\u0027s done when it\u0027s done\u0022... As a layman I ask the more coding literate among us.. What new possibilities can be considered in bounds now? What future updates would this game have missed that might now be implemented?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nLikely none; you don\u0027t delay a game for a year because it just needs a bit of TLC. You do it either because you showed the publisher the end result and they laughed in your face or encountered a fundamentally game-breaking issue that you\u0027ll have to slog thru and essentially rebuild the entire source code chasing the dependencies that were also broken when fixing it.\n\u003C/p\u003E\n\u003Cp\u003E\nThat all being said; this could be a fantastic chance to increase community engagement, get information out to modders early, and generally build a good reputation with the people who will ultimately make or break KSP2\u0027s success.\n\u003C/p\u003E\n"},{"CreatedByName":"mcwaffles2003","CreatedById":180102,"CreatedDateTime":"2020-05-31T10:51:16Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223794474\u0022 data-ipsquote-contentid=\u0022194331\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221590921964\u0022 data-ipsquote-userid=\u0022197414\u0022 data-ipsquote-username=\u0022Incarnation of Chaos\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 minutes ago, Incarnation of Chaos said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nLikely none; you don\u0027t delay a game for a year because it just needs a bit of TLC. You do it either because you showed the publisher the end result and they laughed in your face or encountered a fundamentally game-breaking issue that you\u0027ll have to slog thru and essentially rebuild the entire source code chasing the dependencies that were also broken when fixing it.\n\u003C/p\u003E\n\u003Cp\u003E\nThat all being said; this could be a fantastic chance to increase community engagement, get information out to modders early, and generally build a good reputation with the people who will ultimately make or break KSP2\u0027s success.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSo you don\u0027t think there is a chance to use or incorporate\u00A0a more up to date version of unity than was originally intended? Wouldn\u0027t \u0022essentially rebuild the entire source code chasing the dependencies\u0022 provide such an opportunity?\n\u003C/p\u003E\n"},{"CreatedByName":"Incarnation of Chaos","CreatedById":197414,"CreatedDateTime":"2020-05-31T10:59:41Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223794476\u0022 data-ipsquote-contentid=\u0022194331\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221590922276\u0022 data-ipsquote-userid=\u0022180102\u0022 data-ipsquote-username=\u0022mcwaffles2003\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 minutes ago, mcwaffles2003 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSo you don\u0027t think there is a chance to use or incorporate\u00A0a more up to date version of unity than was originally intended? Wouldn\u0027t \u0022essentially rebuild the entire source code cmovihasing the dependencies\u0022 provide such an opportunity?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNo; because then you have to fix that same broken code. THEN target it on a newer version of Unity, and fix any issues that arose from that.\n\u003C/p\u003E\n\u003Cp\u003E\nYou\u0027d be duplicating effort at the worst possible time, and that\u0027s assuming moving to that newer version didn\u0027t wake up any other nasty gremlins that you now have to chase down all over again. And the developers would be slowed down; since they would have to re-learn portions of their workflow due to various bits being depreciated/added/changed from the previous one.\n\u003C/p\u003E\n"},{"CreatedByName":"mcwaffles2003","CreatedById":180102,"CreatedDateTime":"2020-05-31T11:03:57Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223794480\u0022 data-ipsquote-contentid=\u0022194331\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221590922781\u0022 data-ipsquote-userid=\u0022197414\u0022 data-ipsquote-username=\u0022Incarnation of Chaos\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 minutes ago, Incarnation of Chaos said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAnd the developers would be slowed down; since they would have to re-learn portions of their workflow due to various bits being depreciated/added/changed from the previous one.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAt least this part seems mitigated by the fact that they recently changed studios and turned over staff / hired a lot of new staff. Sorry if I\u0027m being unrealistic, just trying to be hopeful.\n\u003C/p\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2020-05-31T11:04:23Z","Content":"\n\u003Cp\u003E\nThere are probably people that are much more knowledgeable on the subject than me on the matter, but I don\u0027t think there is much to be gained from the unity engine.\u003Cbr\u003E\nOn the gameplay side, KSP isn\u0027t really a data intensive game. So while there is probably some ways to optimize a few things trough DOTS I don\u0027t see a major impact.\u003Cbr\u003E\nAlthough it could be quite relevant for a few things, mainly rendering bodies (PQS system, terrain features...).\n\u003C/p\u003E\n\u003Cp\u003E\nAs for addressing the current performance bottlenecks of KSP, people are usually focused on the physics engine, but the reality is that the physics processing barely account for a third of the CPU usage of KSP, and that proportion tend to go down with the part count.\u003Cbr\u003E\nThe part-count dependent lag actually mostly comes from huge inefficencies in the PartModule system and also from the thermal, aerodynamics and resource systems.\u003Cbr\u003E\nSo contrary to the PhysX engine that is very optimized, and actually multithreaded to an extent, there is a huge margin for optimization in the KSP specific core systems, and that just comes down to the skills and effort from the dev team, it has very little to do with Unity.\u003Cbr\u003E\nPhysX is being updated from v3 to v4 in unity 2019.3, but that doesn\u0027t change much. If there is any performance improvement on that front, it\u0027s likely we will get it in KSP 1 too.\u003Cbr\u003E\u003Cbr\u003E\nEdit : I\u0027m mostly talking about gameplay / performance here. Graphics is an entirely other matter, and I haven\u0027t got much to say about that.\n\u003C/p\u003E\n\u003Cp\u003E\nEdit2 : There is zero reasons to not update to the latest bleeding edge Unity versions while they\u0027re in development. Migrating to newer versions of Unity is quite easy and usually doesn\u0027t break anything.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-05-31T11:10:19Z\u0022 title=\u002205/31/2020 11:10  AM\u0022 data-short=\u00224 yr\u0022\u003EMay 31, 2020\u003C/time\u003E by Gotmachine\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Incarnation of Chaos","CreatedById":197414,"CreatedDateTime":"2020-05-31T11:08:56Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223794481\u0022 data-ipsquote-contentid=\u0022194331\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221590923063\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n3 minutes ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThere are probably people that are much more knowledgeable on the subject than me on the matter, but I don\u0027t think there is much to be gained from the unity engine.\u003Cbr\u003E\nOn the gameplay side, KSP isn\u0027t really a data intensive game. So while there is probably some ways to optimize a few things trough DOTS I don\u0027t see a major impact.\u003Cbr\u003E\nAlthough it could be quite relevant for a few things, mainly rendering bodies (PQS system, terrain features...).\n\u003C/p\u003E\n\u003Cp\u003E\nAs for addressing the current performance bottlenecks of KSP, people are usually focused on the physics engine, but the reality is that the physics processing barely account for a third of the CPU usage of KSP, and that proportion tend to go down with the part count.\u003Cbr\u003E\u003Cstrong\u003EThe part-count dependent lag actually mostly comes from huge inefficencies in the PartModule system and also from the thermal, aerodynamics and resource systems.\u003C/strong\u003E\u003Cbr\u003E\nSo contrary to the PhysX engine that is very optimized, and actually multithreaded to an extent, there is a huge margin for optimization in the KSP specific core systems, and that just comes down to the skills and effort from the dev team, it has very little to do with Unity.\u003Cbr\u003E\nPhysX is being updated from v3 to v4 in unity 2019.3, but that doesn\u0027t change much. If there is any performance improvement on that front, it\u0027s likely we will get it in KSP 1 too.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nCare to elaborate on that a bit more? That\u0027s actually a new one for me.\n\u003C/p\u003E\n"},{"CreatedByName":"mcwaffles2003","CreatedById":180102,"CreatedDateTime":"2020-05-31T11:10:17Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223794481\u0022 data-ipsquote-contentid=\u0022194331\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221590923063\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 minutes ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nAs for addressing the current performance bottlenecks of KSP, people are usually focused on the physics engine, but the reality is that the physics processing barely account for a third of the CPU usage of KSP, and that proportion tend to go down with the part count.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022background-color:#ffffff;color:#353c41;font-size:14px;\u0022\u003EThe part-count dependent lag actually mostly comes from huge inefficencies in the PartModule system and also from the thermal, aerodynamics and resource systems.\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThats both surprising and unsurprising at the same time. Always thought the rigid body dynamics was a huge bottleneck\u00A0but most of us know by now how much better the game behaves when its finally in space and not dealing with aerodynamics. As for resource systems, I can finally see why that\u0027s a bottleneck. I recently started using kOS for an RP-1 campaign and have been working on a \u0022launch any rocket to orbit\u0022 type script and WOW does resource monitoring for automated staging bog the game down...\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThough there\u0027s no way I can expect kOS to operate nearly as efficiently as C# or whatever KSP is coded in. No disrespect to the kOS devs, great mod!\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-05-31T11:12:44Z\u0022 title=\u002205/31/2020 11:12  AM\u0022 data-short=\u00224 yr\u0022\u003EMay 31, 2020\u003C/time\u003E by mcwaffles2003\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"kerbiloid","CreatedById":129408,"CreatedDateTime":"2020-05-31T11:35:56Z","Content":"\n\u003Cp\u003E\nUnlikely KSP needs some physical or graphical improvement or newer versions of Unity or PhysX.\n\u003C/p\u003E\n\u003Cp\u003E\nWe already could see everything we can dream about, implemented in mods. So, the only actual problem is performance.\n\u003C/p\u003E\n\u003Cp\u003E\nEither they have faced the performance issues and need to rework the codebase nearly from scratch, or there are some non-development issues unrelated to the programming at all.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-05-31T11:35:45Z\u0022 title=\u002205/31/2020 11:35  AM\u0022 data-short=\u00224 yr\u0022\u003EMay 31, 2020\u003C/time\u003E by kerbiloid\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2020-05-31T11:41:01Z","Content":"\n\u003Cp\u003E\nThe performance difference between aero and space situations 100% comes from KSP in-house implementation of aerodynamics and thermodynamics, which are incredibly CPU hungry.\u003Cbr\u003E\nIt has indeed absolutely nothing to do with the physics engine that handle joints and rigid bodies.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223794483\u0022 data-ipsquote-contentid=\u0022194331\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221590923336\u0022 data-ipsquote-userid=\u0022197414\u0022 data-ipsquote-username=\u0022Incarnation of Chaos\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 minutes ago, Incarnation of Chaos said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nCare to elaborate on that a bit more? That\u0027s actually a new one for me.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI could go on for hours. For example, every partmodule in the game is an isolated system that does it\u0027s own thing and consume a lot of resources to do so, and in a lot of cases, all partmodules of the same type on your vessel are doing a computation that could have been done once for the whole vessel. It also mean that a lot of things that are vessel wide can only be analyzed by querying all individual partmodules.\u003Cbr\u003E\nBut it\u0027s a very specific example, and maybe not the best one, since the PartModule model is also great because it allow a lot of flexibility and is dead easy to work with.\u003Cbr\u003E\nBut that\u0027s the general problem of KSP. A lot of core systems are built in a kinda \u0022brute force\u0022 way, using the simplest implementation, usually the one that require the less work.\u003Cbr\u003E\nThere is very little consideration for performance at the heart of all those systems. And it shows. KSP has received a lot of \u0022after the fact\u0022 micro-optimization, but there is so much you can do without starting from scratch.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m not saying the physics engine isn\u0027t a bottleneck, it is. But there are a lot of low hanging fruits in everything else in KSP.\n\u003C/p\u003E\n"},{"CreatedByName":"Incarnation of Chaos","CreatedById":197414,"CreatedDateTime":"2020-05-31T11:52:39Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223794495\u0022 data-ipsquote-contentid=\u0022194331\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221590925261\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 minutes ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe performance difference between aero and space situations 100% comes from KSP in-house implementation of aerodynamics and thermodynamics, which are incredibly CPU hungry.\u003Cbr\u003E\nIt has indeed absolutely nothing to do with the physics engine that handle joints and rigid bodies.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EI could go on for hours. For example, every partmodule in the game is an isolated system that does it\u0027s own thing and consume a lot of resources to do so, and in a lot of cases, all partmodules of the same type on your vessel are doing a computation that could have been done once for the whole vessel. It also mean that a lot of things that are vessel wide can only be analyzed by querying all individual partmodules.\u003C/strong\u003E\u003Cbr\u003E\nBut it\u0027s a very specific example, and maybe not the best one, since the PartModule model is also great because it allow a lot of flexibility and is dead easy to work with.\u003Cbr\u003E\nBut that\u0027s the general problem of KSP. A lot of core systems are built in a kinda \u0022brute force\u0022 way, using the simplest implementation, usually the one that require the less work.\u003Cbr\u003E\nThere is very little consideration for performance at the heart of all those systems. And it shows. KSP has received a lot of \u0022after the fact\u0022 micro-optimization, but there is so much you can do without starting from scratch.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EI\u0027m not saying the physics engine isn\u0027t a bottleneck, it is. But there are a lot of low hanging fruits in everything else in KSP.\u003C/strong\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat\u0027s like looping thru an array with a for loop every single time you want to calculate a value instead of just storing the value....i knew KSP was bad.....but i didn\u0027t know it was THAT bad...\n\u003C/p\u003E\n\u003Cp\u003E\nOn the bright side; it does mean that they likely haven\u0027t overstated just how much of a performance uplift a clean-sheet rebuild will be.\n\u003C/p\u003E\n\u003Cp\u003E\nThanks for the explanation.\n\u003C/p\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2020-05-31T12:06:11Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223794500\u0022 data-ipsquote-contentid=\u0022194331\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221590925959\u0022 data-ipsquote-userid=\u0022197414\u0022 data-ipsquote-username=\u0022Incarnation of Chaos\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Incarnation of Chaos said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat\u0027s like looping thru an array with a for loop every single time you want to calculate a value instead of just storing the value....i knew KSP was bad.....but i didn\u0027t know it was THAT bad...\n\u003C/p\u003E\n\u003Cp\u003E\nOn the bright side; it does mean that they likely haven\u0027t overstated just how much of a performance uplift a clean-sheet rebuild will be.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWell, KSP isn\u0027t that bad. It just isn\u0027t programmed in an optimized way that scale well when there is a large amount of things in the game.\u003Cbr\u003E\nAnd on the other hand, most of KSP systems try to be quite physically accurate, with varying degree of success, but that\u0027s one of the main reasons why they are so CPU intensive.\n\u003C/p\u003E\n\u003Cp\u003E\nA big issue in KSP is that almost everything is done in the main physics engine cycle, which has a fixed budget of 20ms (50 ups).\u003Cbr\u003E\nKSP performance bottleneck mostly comes down from the fact a lot of things that aren\u0027t related, or needed, for physics are done in the physics cycle.\u003Cbr\u003E\nIt\u0027s like this because in Unity, it\u0027s the default, easy, fastest dev time way of doing it.\u003Cbr\u003E\u003Cbr\u003E\nBut for a lot of the most CPU intensive simulation features of KSP, there is very little justification in having such a rapid 20 ms update cycle. KSP is not a game were there is a need for \u0022instantaneous\u0022 interactions between everything, like in a FPS or a RTS.\u003Cbr\u003E\nIntroducing a separate custom loop that work on a larger timestep, lets say 100ms for example (and ideally on a separate thread) would allow to take out a good chunk of the CPU load from the physics loop.\u003Cbr\u003E\nThe resource system, the thermal system, the orbit solver, all that doesn\u0027t need to be on a tight update cycle.\u003Cbr\u003E\nThe only things that really require it are the aerodynamics and the control/thrust providing modules, because they directly interact with physics and need to react quickly to player inputs.\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s indeed an area where Unity DOTS could provide a better infrastructure, as the \u0022legacy\u0022 Unity gameobject system is firmly tied to the \u0022standard\u0022 Unity update cycle. But it could be done without DOTS.\u003Cbr\u003E\nUnity is a graphics engine that provide a \u0022general purpose\u0022 game loop framework (and a ton of other features), but there is nothing preventing a developer to use it only partially and implement a more specialized system that better fit specific purposes.\u003Cbr\u003E\nThat\u0027s kinda what DOTS is about, to provide some less constrained tools for specific performance intensive applications that require a custom approach, without having to implement a completely from scratch custom solution.\n\u003C/p\u003E\n\u003Cp\u003E\nBut a specialized game that require performance intensive computations has to implement custom solutions. You can\u0027t expect a general purpose framework made to fit any game from 2D platformers to 3D FPS to perform specialized tasks in an optimal fashion, and this is a valid point for every single game engine.\u003Cbr\u003E\nAn over the top example is Principia \u003Cspan\u003E: \u003C/span\u003Eit\u0027s a completely custom N-body engine written in C\u002B\u002B that interface with Unity and KSP, but implement a high performance, multithreaded chunk of code with it\u0027s own independent update cycle, made for a highly performance constrained specific feature.\n\u003C/p\u003E\n\u003Cp\u003E\nBut don\u0027t underestimate the amount of work that is needed to make all those, and how complex those things are.\u003Cbr\u003E\nOne of my main worries for KSP2 is that instead of implementing high performance solutions, they dumb down some subsystems/features.\u003Cbr\u003E\nOr worse, for the sake of their multiplayer or interstellar timescales ambitions, which add an order of magnitude of complexity for solving those issues.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-05-31T15:26:11Z\u0022 title=\u002205/31/2020 03:26  PM\u0022 data-short=\u00224 yr\u0022\u003EMay 31, 2020\u003C/time\u003E by Gotmachine\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Incarnation of Chaos","CreatedById":197414,"CreatedDateTime":"2020-06-01T07:52:55Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223794503\u0022 data-ipsquote-contentid=\u0022194331\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221590926771\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n19 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWell, KSP isn\u0027t that bad. It just isn\u0027t programmed in an optimized way that scale well when there is a large amount of things in the game.\u003Cbr\u003E\nAnd on the other hand, most of KSP systems try to be quite physically accurate, with varying degree of success, but that\u0027s one of the main reasons why they are so CPU intensive.\n\u003C/p\u003E\n\u003Cp\u003E\nA big issue in KSP is that almost everything is done in the main physics engine cycle, which has a fixed budget of 20ms (50 ups).\u003Cbr\u003E\nKSP performance bottleneck mostly comes down from the fact a lot of things that aren\u0027t related, or needed, for physics are done in the physics cycle.\u003Cbr\u003E\nIt\u0027s like this because in Unity, it\u0027s the default, easy, fastest dev time way of doing it.\u003Cbr\u003E\u003Cbr\u003E\nBut for a lot of the most CPU intensive simulation features of KSP, there is very little justification in having such a rapid 20 ms update cycle. KSP is not a game were there is a need for \u0022instantaneous\u0022 interactions between everything, like in a FPS or a RTS.\u003Cbr\u003E\u003Cstrong\u003EIntroducing a separate custom loop that work on a larger timestep, lets say 100ms for example (and ideally on a separate thread) would allow to take out a good chunk of the CPU load from the physics loop.\u003Cbr\u003E\nThe resource system, the thermal system, the orbit solver, all that doesn\u0027t need to be on a tight update cycle.\u003Cbr\u003E\nThe only things that really require it are the aerodynamics and the control/thrust providing modules, because they directly interact with physics and need to react quickly to player inputs.\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s indeed an area where Unity DOTS could provide a better infrastructure, as the \u0022legacy\u0022 Unity gameobject system is firmly tied to the \u0022standard\u0022 Unity update cycle. But it could be done without DOTS.\u003Cbr\u003E\nUnity is a graphics engine that provide a \u0022general purpose\u0022 game loop framework (and a ton of other features), but there is nothing preventing a developer to use it only partially and implement a more specialized system that better fit specific purposes.\u003Cbr\u003E\nThat\u0027s kinda what DOTS is about, to provide some less constrained tools for specific performance intensive applications that require a custom approach, without having to implement a completely from scratch custom solution.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EBut a specialized game that require performance intensive computations has to implement custom solutions. You can\u0027t expect a general purpose framework made to fit any game from 2D platformers to 3D FPS to perform specialized tasks in an optimal fashion, and this is a valid point for every single game engine.\u003Cbr\u003E\nAn over the top example is Principia \u003Cspan\u003E: \u003C/span\u003Eit\u0027s a completely custom N-body engine written in C\u002B\u002B that interface with Unity and KSP, but implement a high performance, multithreaded chunk of code with it\u0027s own independent update cycle, made for a highly performance constrained specific feature.\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nBut don\u0027t underestimate the amount of work that is needed to make all those, and how complex those things are.\u003Cbr\u003E\u003Cstrong\u003EOne of my main worries for KSP2 is that instead of implementing high performance solutions, they dumb down some subsystems/features.\u003C/strong\u003E\u003Cbr\u003E\nOr worse, for the sake of their multiplayer or interstellar timescales ambitions, which add an order of magnitude of complexity for solving those issues.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIf you had two loops like this; one for \u0022On-demand\u0022 calculations that must be done as quickly as possible alongside a slower one for those that don\u0027t need that rapid of a update. Could you then put those on different threads?\n\u003C/p\u003E\n\u003Cp\u003E\nBecause from the sound of that; there\u0027s quite a bit on the physics loop that could be multithreaded if it was broken out like you\u0027re proposing since it doesn\u0027t actually need to be done sequentially as it\u0027s unrelated to the physics.\n\u003C/p\u003E\n\u003Cp\u003E\nAs for the rest; yeah you can dig thru my post history and find plenty of me attempting to explain that making a game like KSP requires a large amount of custom code. And that trying to do weird stuff like N-body, GPU acceleration of physics and etc. all puts you in a whole different level of complexity that requires much different skillsets to converge to make it all work. Many of the issues KSP faces aren\u0027t related to Unity as much as the developers not rolling their own custom solutions and trying to make the Unity implementations work where they\u0027re very much outside their intended scopes.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd for the last one; are you talking about the actual code or the game? They\u0027ve been pretty adamant from the beginning that KSP2 won\u0027t dumb down the experience, and will use improved onboarding to make the learning curve less like a cliff and more like a gentle, rolling slope. Or are you saying that you\u0027re worried that the systems programmed won\u0027t be as accurate/extendable in KSP2 as they were in KSP?\n\u003C/p\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2020-06-01T16:09:41Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223795036\u0022 data-ipsquote-contentid=\u0022194331\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221590997975\u0022 data-ipsquote-userid=\u0022197414\u0022 data-ipsquote-username=\u0022Incarnation of Chaos\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, Incarnation of Chaos said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOr are you saying that you\u0027re worried that the systems programmed won\u0027t be as accurate/extendable in KSP2 as they were in KSP?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYes. My main worries comes from the whole interstellar scope of the game.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EKSP 2 will have to deal with interstellar travel time scales. Meaning they will need to run the simulation at even higher timewarp factors than what is used in KSP 1.\u003Cbr\u003E\nTimewarp is a huge technical constraint. In KSP1, almost every feature is\u00A0either disabled, or doesn\u0027t work consistently when you timewarp and even more for inactive (unloaded) vessels.\u003Cbr\u003E\nThe few system that are actually somewhat handled in timewarp, like the resource system, the thermal system or commnet have a special, barebone or inconsistent (to not say broken) behaviour.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003ESimulation algorithms that work consistently at varying, arbitrary time steps are orders of magnitude more complex. They require more processing, and they severely constraint what you can do.\u003C/span\u003E\u003Cbr\u003E\nAnd no matter how smart that code is, there is the issue that the simulation entry variables aren\u0027t constant. The whole point of a discrete simulation is that you evaluate every external variable continuously, at an interval that is faster than a significant change in those variables.\u003Cbr\u003E\nIf you have, for example, an algorithm that depend on whether the vessel is in sunlight or in the shadow of body, you need to have at least a couple sampling points for each situations.\u003Cbr\u003E\nAt 100 000x and 50 ups, it mean a simulation step is done every ~30 min of real time. It\u0027s already a quite low \u0022resolution\u0022, a lot of things can change wildly during 30 minutes.\u003Cbr\u003E\nFrom my experience, the maximum time step that still work reasonably accurately is on the order of 1-2 minutes, which at 50 ups, correspond to a timewarp speed in the order of 5 000x\u003Cbr\u003E\nAnd you can see that in KSP. Going from 1000x to 10000x is the threshold at which everything start working weirdly.\n\u003C/p\u003E\n\u003Cp\u003E\nNow, in stock KSP1, it doesn\u0027t matter much. First because almost every gameplay feature is only enabled in the physics, real time (4x timewarp max) bubble.\u003Cbr\u003E\nSecond because the few features that are actually enabled in non-physics warp (main example is the drills/\u003Cabbr title=\u0022In-Situ Resource Utilization\u0022\u003EISRU\u003C/abbr\u003E/core heat system) are quite shallow, and simplistic enough so the inconsistencies don\u0027t matter much.\n\u003C/p\u003E\n\u003Cp\u003E\nBut KSP2 apparently intend to have several core features for which that issue is applicable.\u003Cbr\u003E\nThey have mentioned the ability to run engines during timewarp/in the background. And there is the whole colony building thing with supply chains, \u003Cabbr title=\u0022In-Situ Resource Utilization\u0022\u003EISRU\u003C/abbr\u003E, etc. Those are great ideas on paper.\u003Cbr\u003E\nBut by enlarging the scope of the game to interstellar timescales, and consequently to even higher timewarp speeds than KSP 1, IMO, they shoot themselves in the foot if they intended to make any non ultra simplistic and more or less physically accurate subsystem, like resource chains, thermals, comms, radiation, life support, or any time based game mechanism (science, scanners...)\u003Cbr\u003E\nIn KSP1 (or in KSP 1 mods), those features have tons of issues with timewarp, but the 100 000x limit still is more or less manageable.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd on top of that, there is multiplayer, which add another huge range of constraints, although it will all depend on what is actually KSP 2 multiplayer.\u003Cbr\u003E\nSince we\u0027ve got zero information on that, I won\u0027t go into technical details about what those constraints could be, but they are potentially non-trivial as well.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd finally, on a more conceptual level, and it is more my personal opinion than a technical issue, I have a problem with the whole interstellar aspect they are introducing.\u003Cbr\u003E\nIMO, the core concept of KSP, what make it an unique game compared to all other \u0022space\u0022 games is that it is a relatively accurate, and realistic physics sandbox.\u003Cbr\u003E\nIt is exactly in the sweet spot between a pure simulation (like Orbiter or MS Flight Simulator) and a \u0022enjoyment focused\u0022 game.\u003Cbr\u003E\nIt has a few simplifications, like 2 bodies orbital physics, abstracted fuel types, less constraints on engine usage (throttle, ignitions...) for the sake of gameplay, but not much.\n\u003C/p\u003E\n\u003Cp\u003E\nBy going into the realm of pure hypothetical, science fiction technologies, it breaks that fundamental contract.\u003Cbr\u003E\nOn a surface level it doesn\u0027t change much, but it \u003Cspan\u003Emake all the dimension of attempting to model the actual, known, physical challenges of space travel and exploration almost pointless.\u003Cbr\u003E\nWhat\u0027s the point of a physically accurate thermal simulation if you introduce engines and energy sources of such magnitudes that they don\u0027t have an actual realistic solution in that regard ?\u003Cbr\u003E\nWhat\u0027s the point of a communication network with a range system when you work on distances for which there is no realistic solution ?\u003C/span\u003E\u003Cbr\u003E\nWhat\u0027s the point of a somewhat realistic \u003Cabbr title=\u0022In-Situ Resource Utilization\u0022\u003EISRU\u003C/abbr\u003E/colony system when it is producing structures and technologies that are so enormous and advanced that all the current industrial capacity on earth couldn\u0027t do it ?\u003Cbr\u003E\nWhat\u0027s the point of representing any current space technology or goals if we are put in the realm of science fiction after a few hours of gameplay ?\n\u003C/p\u003E\n\u003Cp\u003E\nSomething that made me realize that is the interview with Nate Simpson and Scott Manley, where Scott Manley made the remark that SRBs can gimbal.\u003Cbr\u003E\nWhy would they care ? They are focused on the color of science fiction engines exhaust plumes that make SRBs an irrelevant and obsolete technology.\n\u003C/p\u003E\n\u003Cp\u003E\nThat interstellar scope clashes fundamentally with anything we can relate in the current age of space exploration.\u003Cbr\u003E\nThey could have done everything they are doing but with staying in a single planetary system.\u003Cbr\u003E\nThere are tons of \u0022near future\u0022 technologies they could have implemented, with actual real science and physics to back that.\n\u003C/p\u003E\n\u003Cp\u003E\nSo yes, I\u0027m not thrilled.\u003Cbr\u003E\nI fear a lot of things will be very shallow, both because of the unrealistic interstellar scope, and because of the technical constraints.\u003Cbr\u003E\nI fear they are trying to much to have \u0022exciting\u0022 features, and that in the process they will both fail at making a good game and a good space exploration simulation that is appealing to people that have an interest in relatable, current space technologies, programs and prospects.\u003Cbr\u003E\nIt might be a better \u0022wide audience\u0022 commercial strategy, and maybe they expect the modding scene to provide what they won\u0027t on that aspect.\u003Cbr\u003E\nBut on the other hand, all the (speculative) technical issues I talked about might get in the way of that.\u003Cbr\u003E\nModding is hard, it\u0027s time consuming and the difficulty increase exponentially when the features you\u0027re trying to implement have no solid ground in the base game.\u003Cbr\u003E\nFuture will tell.\n\u003C/p\u003E\n"},{"CreatedByName":"DStaal","CreatedById":155685,"CreatedDateTime":"2020-06-01T21:59:46Z","Content":"\n\u003Cp\u003E\nJust to add: They\u0027ve also merged into a new team, added team members, and had Covid-19 come out.\u00A0 Even with nothing else being added to the game, that\u0027s probably 6 months of additional time needed to get the game out, just in adapting to the coding environment.\n\u003C/p\u003E\n"},{"CreatedByName":"Incarnation of Chaos","CreatedById":197414,"CreatedDateTime":"2020-06-02T17:14:47Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223795215\u0022 data-ipsquote-contentid=\u0022194331\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221591027781\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/1/2020 at 11:09 AM, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYes. My main worries comes from the whole interstellar scope of the game.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EKSP 2 will have to deal with interstellar travel time scales. Meaning they will need to run the simulation at even higher timewarp factors than what is used in KSP 1.\u003Cbr\u003E\nTimewarp is a huge technical constraint. In KSP1, almost every feature is\u00A0either disabled, or doesn\u0027t work consistently when you timewarp and even more for inactive (unloaded) vessels.\u003Cbr\u003E\nThe few system that are actually somewhat handled in timewarp, like the resource system, the thermal system or commnet have a special, barebone or inconsistent (to not say broken) behaviour.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003ESimulation algorithms that work consistently at varying, arbitrary time steps are orders of magnitude more complex. They require more processing, and they severely constraint what you can do.\u003C/span\u003E\u003Cbr\u003E\nAnd no matter how smart that code is, there is the issue that the simulation entry variables aren\u0027t constant. The whole point of a discrete simulation is that you evaluate every external variable continuously, at an interval that is faster than a significant change in those variables.\u003Cbr\u003E\nIf you have, for example, an algorithm that depend on whether the vessel is in sunlight or in the shadow of body, you need to have at least a couple sampling points for each situations.\u003Cbr\u003E\nAt 100 000x and 50 ups, it mean a simulation step is done every ~30 min of real time. It\u0027s already a quite low \u0022resolution\u0022, a lot of things can change wildly during 30 minutes.\u003Cbr\u003E\nFrom my experience, the maximum time step that still work reasonably accurately is on the order of 1-2 minutes, which at 50 ups, correspond to a timewarp speed in the order of 5 000x\u003Cbr\u003E\nAnd you can see that in KSP. Going from 1000x to 10000x is the threshold at which everything start working weirdly.\n\u003C/p\u003E\n\u003Cp\u003E\nNow, in stock KSP1, it doesn\u0027t matter much. First because almost every gameplay feature is only enabled in the physics, real time (4x timewarp max) bubble.\u003Cbr\u003E\nSecond because the few features that are actually enabled in non-physics warp (main example is the drills/\u003Cabbr title=\u0022In-Situ Resource Utilization\u0022\u003EISRU\u003C/abbr\u003E/core heat system) are quite shallow, and simplistic enough so the inconsistencies don\u0027t matter much.\n\u003C/p\u003E\n\u003Cp\u003E\nBut KSP2 apparently intend to have several core features for which that issue is applicable.\u003Cbr\u003E\nThey have mentioned the ability to run engines during timewarp/in the background. And there is the whole colony building thing with supply chains, \u003Cabbr title=\u0022In-Situ Resource Utilization\u0022\u003EISRU\u003C/abbr\u003E, etc. Those are great ideas on paper.\u003Cbr\u003E\nBut by enlarging the scope of the game to interstellar timescales, and consequently to even higher timewarp speeds than KSP 1, IMO, they shoot themselves in the foot if they intended to make any non ultra simplistic and more or less physically accurate subsystem, like resource chains, thermals, comms, radiation, life support, or any time based game mechanism (science, scanners...)\u003Cbr\u003E\nIn KSP1 (or in KSP 1 mods), those features have tons of issues with timewarp, but the 100 000x limit still is more or less manageable.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd on top of that, there is multiplayer, which add another huge range of constraints, although it will all depend on what is actually KSP 2 multiplayer.\u003Cbr\u003E\nSince we\u0027ve got zero information on that, I won\u0027t go into technical details about what those constraints could be, but they are potentially non-trivial as well.\n\u003C/p\u003E\n\u003Cp\u003E\nAnd finally, on a more conceptual level, and it is more my personal opinion than a technical issue, I have a problem with the whole interstellar aspect they are introducing.\u003Cbr\u003E\nIMO, the core concept of KSP, what make it an unique game compared to all other \u0022space\u0022 games is that it is a relatively accurate, and realistic physics sandbox.\u003Cbr\u003E\nIt is exactly in the sweet spot between a pure simulation (like Orbiter or MS Flight Simulator) and a \u0022enjoyment focused\u0022 game.\u003Cbr\u003E\nIt has a few simplifications, like 2 bodies orbital physics, abstracted fuel types, less constraints on engine usage (throttle, ignitions...) for the sake of gameplay, but not much.\n\u003C/p\u003E\n\u003Cp\u003E\nBy going into the realm of pure hypothetical, science fiction technologies, it breaks that fundamental contract.\u003Cbr\u003E\nOn a surface level it doesn\u0027t change much, but it \u003Cspan\u003Emake all the dimension of attempting to model the actual, known, physical challenges of space travel and exploration almost pointless.\u003Cbr\u003E\nWhat\u0027s the point of a physically accurate thermal simulation if you introduce engines and energy sources of such magnitudes that they don\u0027t have an actual realistic solution in that regard ?\u003Cbr\u003E\nWhat\u0027s the point of a communication network with a range system when you work on distances for which there is no realistic solution ?\u003C/span\u003E\u003Cbr\u003E\nWhat\u0027s the point of a somewhat realistic \u003Cabbr title=\u0022In-Situ Resource Utilization\u0022\u003EISRU\u003C/abbr\u003E/colony system when it is producing structures and technologies that are so enormous and advanced that all the current industrial capacity on earth couldn\u0027t do it ?\u003Cbr\u003E\nWhat\u0027s the point of representing any current space technology or goals if we are put in the realm of science fiction after a few hours of gameplay ?\n\u003C/p\u003E\n\u003Cp\u003E\nSomething that made me realize that is the interview with Nate Simpson and Scott Manley, where Scott Manley made the remark that SRBs can gimbal.\u003Cbr\u003E\nWhy would they care ? They are focused on the color of science fiction engines exhaust plumes that make SRBs an irrelevant and obsolete technology.\n\u003C/p\u003E\n\u003Cp\u003E\nThat interstellar scope clashes fundamentally with anything we can relate in the current age of space exploration.\u003Cbr\u003E\nThey could have done everything they are doing but with staying in a single planetary system.\u003Cbr\u003E\nThere are tons of \u0022near future\u0022 technologies they could have implemented, with actual real science and physics to back that.\n\u003C/p\u003E\n\u003Cp\u003E\nSo yes, I\u0027m not thrilled.\u003Cbr\u003E\nI fear a lot of things will be very shallow, both because of the unrealistic interstellar scope, and because of the technical constraints.\u003Cbr\u003E\nI fear they are trying to much to have \u0022exciting\u0022 features, and that in the process they will both fail at making a good game and a good space exploration simulation that is appealing to people that have an interest in relatable, current space technologies, programs and prospects.\u003Cbr\u003E\nIt might be a better \u0022wide audience\u0022 commercial strategy, and maybe they expect the modding scene to provide what they won\u0027t on that aspect.\u003Cbr\u003E\nBut on the other hand, all the (speculative) technical issues I talked about might get in the way of that.\u003Cbr\u003E\nModding is hard, it\u0027s time consuming and the difficulty increase exponentially when the features you\u0027re trying to implement have no solid ground in the base game.\u003Cbr\u003E\nFuture will tell.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI know many of KSP\u0027s issues lied in the limited precision of available 32-bit datatypes, so this was something i was pretty worried about also. And you pretty much summarized why things like Metastable metallic Hydrogen rockets worry me so much. I do still think that they could\u0027ve done \u0022Interstellar\u0022 exploration right, and satisfied the hardcore and casual bases while doing so. But much of what\u0027s come out lately does have me wary....\n\u003C/p\u003E\n\u003Cp\u003E\nSo; thanks for sharing your thoughts yet again xD\n\u003C/p\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2020-06-02T17:40:03Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223795761\u0022 data-ipsquote-contentid=\u0022194331\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221591118087\u0022 data-ipsquote-userid=\u0022197414\u0022 data-ipsquote-username=\u0022Incarnation of Chaos\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n8 minutes ago, Incarnation of Chaos said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI know many of KSP\u0027s issues lied in the limited precision of available 32-bit datatypes\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat\u0027s much less relevant than what people usually think. No matter if you use 32 or 64 bit floating point precision, the distances in KSP are so huge that you have to adopt a floating origin system, and potentially even more complex implementations. It\u0027s a typical case of \u0022if you\u0027re doing something special, you can\u0027t expect the simple generic solution to work\u0022.\n\u003C/p\u003E\n"},{"CreatedByName":"Pthigrivi","CreatedById":105624,"CreatedDateTime":"2020-06-02T19:47:36Z","Content":"\n\u003Cp\u003E\nI have almost no programming experience so I\u0027m gonna throw out there that I\u0027d love to see some level of automation. They\u0027ve talked about some kind of supply line system where you connect up different colonies and then can share resources without the tedium of milkruns. If the game was coming out this spring I\u0027d have guessed those would be more or less \u0027magic\u0027 resource dumps, but with another year and half to go it would be pretty cool if after building and flying a resource delivery the game could be scheduled to repeat that run. You might even be able to designate an area for resource gathering and have kerbals drive out and gather using\u00A0harvesters you\u0027ve built. This might be a tall order but if we\u0027ve got colonies with dozens or hundreds of kerbals it be awfully cool if they looked active.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"kirmie44","CreatedById":73929,"CreatedDateTime":"2020-06-06T01:40:35Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223795215\u0022 data-ipsquote-contentid=\u0022194331\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221591027781\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/1/2020 at 11:09 AM, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYes. My main worries.... Long comment that I didn\u0027t want people to have to scroll through again.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nRebutting some points here. There are a lot of mods that add these things to the background and during time warp without much overhead or a drop in frame rates. The only mod I\u0027ve seen that can\u0027t handle high time warp is Principia and that\u0027s only at the modded in higher timewarps of BetterTimeWarp. (Off the Top of my head Interstellar Extended, Kerbalism, and Background recourse monitor all add this complexity back for unloaded or timewarping vessels)\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, IMO, the new things added by the game will be limited in there use. A lot of the new engines don\u0027t work in atmosphere, a lot of the new parts don\u0027t even fit on the ground. You have to use all the previous parts to build up to these new parts. It looks like what they have won\u0027t be really useful for anything that isn\u0027t gigantic. Also, I\u0027m excited for different forms of propulsion. They are going for the Near Future vide so I can\u0027t see it being overpowered. They won\u0027t be too complicated either, we already have nuclear engines, Aerospikes \u0026amp; Rapier engines that are only slightly closer to the realm of possibility than what they are proposing. Hell, engines like the nuclear pulse engine would be a reality if we weren\u0027t worked about our planet or breaking treaties.\n\u003C/p\u003E\n\u003Cp\u003E\nDisclaimer: (edit) not a proficient coder so that fist part is more of a question. I know coding but have developed nothing so take my words with a grain of salt\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-06-06T03:35:13Z\u0022 title=\u002206/06/2020 03:35  AM\u0022 data-short=\u00224 yr\u0022\u003EJune 6, 2020\u003C/time\u003E by kirmie44\u003C/strong\u003E\n\u003Cbr\u003EDisclaimer\n\u003C/span\u003E\n"},{"CreatedByName":"sao123","CreatedById":135257,"CreatedDateTime":"2020-06-07T05:43:27Z","Content":"\n\u003Cp\u003E\nI\u0027ve been a software developer team manager for about 5 years and a developer for the 8 before that, mostly in data drive web applications.\n\u003C/p\u003E\n\u003Cp\u003E\nI can tell you they will gain very few, if any opportunities with the extra time.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nthe disruption to the organization of the team, and the departure of some key members, is going to for sure make it take longer to get what you would have previously got under the prior team, you have less people doing the same amount of work.\u00A0 Furthermore even if they hire new replacements immediately, it is going to take a lot of time for those new developers to get up to speed and become an effective part of the team.\u00A0 Its more than just knowing how to program.\u00A0 You have to understand the requirements, understand the architecture, understand the development processes of this specific team, get comfortable in a role and begin to be productive.\u00A0 Most new hires usually take 8-12 months on the job before they are truly productive in the middle of a large project.\n\u003C/p\u003E\n\u003Cp\u003E\nThat doesnt take into account any changes that are being made to the requirements or design of the game as part of this reorganization.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nEven though we are talking about replacing lost people instead of adding additional people, most of the principals and corollaries of the \u0022Mythical Man Month\u0022 still apply.\u00A0 Anyone interested in the topic should check out some brief youtube videos on the concept.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://www.youtube.com/watch?v=Xsd7rJMmZHg\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.youtube.com/watch?v=Xsd7rJMmZHg\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://www.youtube.com/watch?v=Fp2GWaahvio\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.youtube.com/watch?v=Fp2GWaahvio\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2020-06-07T08:45:02Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223794458\u0022 data-ipsquote-contentid=\u0022194331\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221590920004\u0022 data-ipsquote-userid=\u0022180102\u0022 data-ipsquote-username=\u0022mcwaffles2003\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 5/31/2020 at 3:13 AM, mcwaffles2003 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI remember early, soon after the game was announced, there was discussions of unity updates and what they could mean for the game. As far as general\u00A0 improvements, increase in scope, added functions, and so on. Not much of a programmer but I recall discussions of multi-threading rigid body physics, the (im)plausibility of it being possible, mentioning of DOTS and BURST etc.\n\u003C/p\u003E\n\u003Cp\u003E\nSo instead of either being sad that we have to wait another year and a half at least for the game (oh god so long...)\u00A0or simply cheering on \u0022we can wait!\u0022 / \u0022it\u0027s done when it\u0027s done\u0022... As a layman I ask the more coding literate among us.. What new possibilities can be considered in bounds now? What future updates would this game have missed that might now be implemented?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nFirst, let me address physics. I lead an engine team, and animation and physics are my focus areas. We have an in-house physics engine which can compete with what\u0027s on the market, and will probably surpass Unity in a few important ways.\u00A0What I\u0027ve seen from KSP2 development on physics is not encouraging, and it has nothing to do with the time they have, but the very approach they\u0027ve taken.\u00A0Kraken shouldn\u0027t be a thing in KSP. Never should have been even in the original version. Certainly should have been fixed by now. KSP2 was a new start that would allow them to build it correctly from scratch, and they clearly haven\u0027t made use of opportunity. Given that vacancy for physics engineer is open, I don\u0027t see how they\u0027d change such fundamental thing as craft physics by release.\n\u003C/p\u003E\n\u003Cp\u003E\nLets start at the beginning. The fundamental concept in mechanics simulation is rigid body. It\u0027s an object that we take to be perfectly inflexible and incompressible. In KSP, pretty much every part is a rigid body. Some parts that have built-in joints have multiple rigid bodies, but if you think of things like fuel tanks and engines, each is a rigid body. You can\u0027t stretch them, can\u0027t bend them, and you can\u0027t break them into parts - only destroy the part entirely. (Which might spawn new rigid bodies for debris, but that\u0027s a separate story.)\u00A0The rocket is built up of multiple rigid bodies, and there are several approaches of dealing with that. The most general approach is what game physics engines are all about and that\u00A0is joints. If you want parts to stick to each other \u0022solid\u0022, you use a weld joint. That\u0027s a joint that prevents relative motion and relative rotation of two rigid bodies. So if you attach two fuel tanks together, you can throw a weld joint in between, and now they behave like one fuel tank. Mostly. See, joints aren\u0027t perfect. They can\u0027t be, because there is finite precision in the simulation and the solver. I can read several lectures on details, but what it ultimately comes down to is that in pretty much every simulation used in games, any weld joint comes down to a very stiff spring. And that means that if you apply enough force, the joint will bend and stretch. And if you don\u0027t have enough damping, it can even have resonances. This is how the standard solver in Unity works, and Squad simply leveraged it for KSP.\u00A0[\u003Cem\u003EKraken is now following this thread\u003C/em\u003E.]\n\u003C/p\u003E\n\u003Cp\u003E\nBut we didn\u0027t have this problem with a single rigid body. We can simulate it as a perfectly rigid object and have no worries. Well, we can do the same thing when we join things together. Instead of treating two tanks stuck together as two rigid bodies and a weld joint constraint, we can treat the two tanks stuck together as a single rigid body. The mass is just a sum of the two, new center of mass is easy to compute, and there is a formula for how to combine the two moment of inertia tensors, so that the combined object responds to torques correctly. This has\u00A0been known\u00A0for hundreds of years. What\u0027s the problem? Well, real rockets aren\u0027t actually rigid. Technically, no part of them is, but the full rocket certainly flexes under enough stress. And it\u0027s also not indestructible. Apply enough stress and it will snap. Obviously, ability of the rocket to break is something we want to preserve for the game. Fortunately, this is still pretty easy. We can actually solve for the motion of the rocket as a rigid body and then use that solution to figure out what the forces on all the welds would need to be. This approach still gives us a rigid rocket, but it lets us find out when forces got too much and lets us break the rocket if that happened.\n\u003C/p\u003E\n\u003Cp\u003E\nBut what if we really want the flex? For a typical rocket, this really shouldn\u0027t make a noticeable difference, but if you look at wings of an airplane in flight, for example, the flex is quite visible. So if we want to be realistic, that should be accounted for. Fortunately, the amount by which any given part can deform before breaking is strictly limited. We can actually treat this as a linear problem. Compute stress on each part, and based on that, output the deformation. The simulation still treats the body as rigid for purposes of kinematics, as the shape hardly changes overall to a significant degree, but visual model and collision model would flex under stress. This would let the airplane wings flex under load, and even cause part collision if flex causes them to come in contact. The amazing bit is that all of this is computationally cheap and can be done in Unity entirely within C# component scripts. This can still cause destructive resonances, but only if you have forces that would oscillate with flex. So if you attach engines on long poles, the ship could shake itself apart, just like the real one would. But there would be no Kraken. Absolutely no way for a ship to just spontaneously explode, because there are no unbalanced internal forces! [\u003Cem\u003EKraken has reported this post to moderators.\u003C/em\u003E]\n\u003C/p\u003E\n\u003Cp\u003E\nAn argument can be made that KSP was initially built to leverage Unity physics without building a custom system. Later, Squad chose not to completely redo the physics, so as to keep the game working roughly the same way. I question this somewhat, because Squad clearly tried to address Kraken with multiple joints thrown in on connections and tuning the system, changing craft physics and strut-to-tank ratio in the process, so they could have replaced the system entirely with a better one, but they chose to tune the existing model instead. And things got better, but never fully under control. Regardless, KSP is the way it is. KSP2 could have started from scratch and built that system right. A good physics engineer would have. I don\u0027t know if ST didn\u0027t have one, or if that engineer got overruled by people who don\u0027t understand how any of this works, but we clearly didn\u0027t get a replacement system. Early footage of KSP2 shows a regression to how KSP used to look early on, with boosters bouncing all over the place, causing self-collision problems. And that\u0027s a real shame. This is something that just shouldn\u0027t have been a thing in KSP2. At this point, even if they hire a good engineer tomorrow, I don\u0027t know if they have time to fully address it in a year.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nOn to other factors. KSP can have fairly complicated interactions between components. In KSP2, a lot of component code needs to be synchronized across network for multiplayer. There\u0027s a lot of custom code for UI, controls, and space center management. All of these things can use polish. They can always use polish. Lack of polish can cause performance issues, from bad framerate to lag spikes, and it can cause loss of network sync and crashes. The more time the team can spend on all of these the better the game will be. We aren\u0027t talking about game playing differently, but rather just players having better experience. Smoother framerate, smoother controls, less disconnects, less crashes. All good stuff.\n\u003C/p\u003E\n\u003Cp\u003E\nCan we expect these improvements? Hard to say. On top of delay, we also have disruption of work due to team transition. And keep in mind that if the game is shipping on consoles, Intercept now has less than a year until they have to submit code. Yes, it takes that long. And they\u0027re still a bit short on staff, on top of making up for whatever uncertainty there was in the past few months. From perspective of general stability, they\u0027ll\u00A0definitely at least make up for it by having pushed out the date this much and maybe even get a little ahead. I expect that UI will be more polished and responsive and possibly the game overall will run smoother as a result of additional time.\n\u003C/p\u003E\n\u003Cp\u003E\nMultiplayer is a red light right now, because they did have to hire a new networking engineer and they are still looking for a multiplayer designer. Realistically, I\u0027d expect some network stability problems at launch. Shouldn\u0027t impact single-player, hopefully, but you might want to be prepared to delay building that Mun base with your friends for a few months after launch to avoid disappointment. I\u0027d like to be wrong on this, but I also think it\u0027s better to have low expectations that get exceeded in this particular case.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nOne more thing we can talk about is rendering. There\u0027s not a whole lot you can do about rendering engine - it\u0027s Unity. But you can do a lot with shaders, which is a kind of programming. I have a lot less experience with graphics than other parts of the engine, but typically, this is just the case of the more time you have the better. The early pre-alpha footage we\u0027ve seen needed a LOT of graphics work. But a lot of that could have been lack of content. It looked like Star Theory spent a lot more time working on assets for the ships than environment early on, and maybe that makes sense in terms of getting to alpha, but I really hope they\u0027ve been putting some work into environments since, as that really helps to make the game look beautiful. So long as there is not a lot of work having to be abandoned and restarted due to whatever changes, artists and technical artists\u00A0should just be making the game better and better looking with every month. It also sounds like\u00A0a lot more of their creative team survived the transition, so I think this is going to be a pure win.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nOn the net, if the game was to be rushed, I would expect Kraken special even on relatively small vessels\u00A0with unplayable multiplayer, occasional lag spike,\u00A0and some blandness or obvious flaws in graphics. If instead given sufficient development time, I think they\u0027ll tune the physics a lot better, but at release it\u0027s still probably going to be worse than KSP is right now, the network will probably be at least playable, but I still expect at least some stability problems, and the graphics is where I expect most gain due to delay. Both rockets and planets should look better for the wait.\n\u003C/p\u003E\n\u003Cp\u003E\nWhat remains entirely unclear to me is how much of the delay is to cover the \u0022the game\u0027s just not even finished\u0022, which at least some of it clearly was, and how much will go into polish. That will shift the balance between the two extremes above. I suspect, it will land somewhere in the middle and we\u0027ll get the rest of the way with patches.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAnd, of course, I\u0027m basing all of this on VERY limited information, armed more with my experience with other studios and knowledge of Unity engine than facts about KSP2 development specifically.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-06-07T08:46:24Z\u0022 title=\u002206/07/2020 08:46  AM\u0022 data-short=\u00224 yr\u0022\u003EJune 7, 2020\u003C/time\u003E by K^2\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"jimmymcgoochie","CreatedById":199902,"CreatedDateTime":"2020-06-07T12:07:06Z","Content":"\n\u003Cp\u003E\nI\u0027m working in a software development team right now (as a tester, not a developer) and when we started this project the team lead thought we could have it done by June. LAST June. A year later and we\u0027re still working on getting a considerably reduced system out to the first users, mostly for a single reason.\n\u003C/p\u003E\n\u003Cp\u003E\nInitially we had 200 or so word document templates that needed to be converted so that the new system could ask the user for data and insert it in the right places to then make PDFs. We thought we could get 10 done per week, maybe up to 20 a week for the simpler ones. Turns out, when you\u0027re dealing with legal notices from a government department, there are many\u00A0\u003Cem\u003Emany\u00A0\u003C/em\u003EMANY different rules and regulations (written into legislation, too!) about exactly what you should send and when, so we\u0027d need one version to a homeowner, another to a bank that homeowner had a mortgage from and yet\u00A0another if it was an odd-numbered day of an even-numbered month and the four digits on the clock added up to a multiple of 3, 5 or possibly 19 but only if the moon was in its waning phase. (OK, that last one was made up, but it\u0027s a bit of a running joke in the project about the almost arcane rules we need to follow sometimes...)\n\u003C/p\u003E\n\u003Cp\u003E\nThe work was far more complex than we had first thought, so there was a big delay. KSP2 may well have run into a similar problem, and if\u00A0development essentially ground to a halt last December and barely got restarted before the current pandemic, it\u0027s hardly surprising that there are substantial delays.\n\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2020-06-08T01:20:27Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223798760\u0022 data-ipsquote-contentid=\u0022194331\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221591531626\u0022 data-ipsquote-userid=\u0022199902\u0022 data-ipsquote-username=\u0022jimmymcgoochie\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n13 hours ago, jimmymcgoochie said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nbut only if the moon was in its waning phase.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nTrue story. I worked on a game,\u00A0which shall remain unnamed to protect the innocent, where a bug was reported that was only happening on the full moon. After a few rounds of, \u0022No way\u0022 - \u0022But look at the crash reports,\u0022 it was finally discovered that there was some old code for an event that was supposed to happen on the full moon years ago. The event was no longer happening, but the code checking for conditions and setting the variables was still getting called, and that change in state cascaded to an occasional crash due to unrelated mistakes in code. That bug got fixed, but since then, I take correlations between code stability and phases of the moon a bit more seriously.\n\u003C/p\u003E\n"},{"CreatedByName":"mattinoz","CreatedById":118580,"CreatedDateTime":"2020-06-08T03:50:06Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223798705\u0022 data-ipsquote-contentid=\u0022194331\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221591519502\u0022 data-ipsquote-userid=\u002257710\u0022 data-ipsquote-username=\u0022K^2\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 hours ago, K^2 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nFirst, let me address physics.....\n\u003C/p\u003E\n\u003Cp\u003E\nAnd, of course, I\u0027m basing all of this on VERY limited information, armed more with my experience with other studios and knowledge of Unity engine than facts about KSP2 development specifically.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIndeed how do we know they are still using classic rigid body physics?\n\u003C/p\u003E\n\u003Cp\u003E\nWhen they started talking about KSP2 there was a lot of humble brags about the new things in the game that made me think they must be doing something very different to KSP1. Unique Snowflake explosions, reduce physical loads, bigger craft, LOD Physics to speed things up and to get larger craft, setting up for a decade of development. All of the above plus they have ruled out a save file importer. Yet they have said the core game is respected, maintained and expanded. Something in that doesn\u0027t add up to me. It sure sounds like some very core part of the game is radically different.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI guess the only way to guess is if there was any member of team who would lead to thinking they were doing something different. Until they say we just don\u0027t know what the secret sauce might taste like. So far all the dev notes have been about reassuring the community while softly softly introducing ideas that might generate ire.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWe\u0027ll know when we know seems to be the take away.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Incarnation of Chaos","CreatedById":197414,"CreatedDateTime":"2020-06-08T04:43:49Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223799106\u0022 data-ipsquote-contentid=\u0022194331\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221591588206\u0022 data-ipsquote-userid=\u0022118580\u0022 data-ipsquote-username=\u0022mattinoz\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n49 minutes ago, mattinoz said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIndeed how do we know they are still using classic rigid body physics?\n\u003C/p\u003E\n\u003Cp\u003E\nWhen they started talking about KSP2 there was a lot of humble brags about the new things in the game that made me think they must be doing something very different to KSP1. Unique Snowflake explosions, reduce physical loads, bigger craft, LOD Physics to speed things up and to get larger craft, setting up for a decade of development. All of the above plus they have ruled out a save file importer. Yet they have said the core game is respected, maintained and expanded. Something in that doesn\u0027t add up to me. It sure sounds like some very core part of the game is radically different.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI guess the only way to guess is if there was any member of team who would lead to thinking they were doing something different. Until they say we just don\u0027t know what the secret sauce might taste like. So far all the dev notes have been about reassuring the community while softly softly introducing ideas that might generate ire.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWe\u0027ll know when we know seems to be the take away.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nBecause anything else would be more computationally expensive or require (More) custom code, so due to the time constraints it\u0027s really the only option. And the issue with saves wouldn\u0027t require some massive under-the-hood change; it literally could be just the names of parts and such being a single letter different and the lookup failing. And then on top of all the new systems they decided that instead of supporting a feature that wouldn\u0027t do anything but generate mounds of hard-to chase bug reports, along retaining all the old parts from KSP that they\u0027d just say \u0022No\u0022.\n\u003C/p\u003E\n\u003Cp\u003E\nThe file structure could also be different, and KSP2 wouldn\u0027t \u0022Understand\u0022 a KSP save file and know how to load it.\n\u003C/p\u003E\n\u003Cp\u003E\nBut yes; much about KSP2 won\u0027t be known until we get actual production code in hand and play around with it.\n\u003C/p\u003E\n"}]}