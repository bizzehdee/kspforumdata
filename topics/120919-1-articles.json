{"TopicId":120919,"ForumId":36,"TopicTitle":"[WIP]EngineDevelopment: Performance Calculation\u0026amp; Fuel, Chamber and Nozzle ( Based on RF)","CreatedByName":"Librazy","CreatedById":146372,"CreatedDateTime":"2015-09-15T03:10:54Z","PageNum":1,"Articles":[{"CreatedByName":"Librazy","CreatedById":146372,"CreatedDateTime":"2015-09-15T03:10:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EI\u0027m a member of Chinese modder group Kerwis\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003E\u003Cspan style=\u0022font-family:\u0027comic sans ms\u0027;\u0022\u003EThis mod is a\u003C/span\u003E\u003C/span\u003E\u003Cspan style=\u0022font-family:Verdana;\u0022\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E \u003C/span\u003E\u003C/span\u003E\u003Cspan style=\u0022font-family:\u0027comic sans ms\u0027;\u0022\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003E\u003Cspan style=\u0022font-family:Verdana;\u0022\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003Efork of the RealFuels by \u003C/span\u003E\u003C/span\u003E\u003C/span\u003E\u003C/span\u003E\u003Cspan style=\u0022font-family:Verdana;\u0022\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003ENathanKell\u003C/span\u003E\u003C/span\u003E\u003C/span\u003E\u003Cspan style=\u0022font-family:\u0027comic sans ms\u0027;\u0022\u003E licence \u003C/span\u003E\u003Cspan style=\u0022font-family:Verdana;\u0022\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003ECC-BY-SA\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003E\u003Cspan style=\u0022font-family:\u0027comic sans ms\u0027;\u0022\u003EGet rid of FloatCurves, Just let it feel like real!\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Euse chamber, nozzle and fuel\u0027s parameters instead of FloatCurves.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003E\u003Cspan style=\u0022font-family:\u0027comic sans ms\u0027;\u0022\u003EThere must be an collocation that fit you need!\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EYou can not only switching fuels but also chambers\u0026amp;nozzles!(And may be more you can custom in the future)\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/Zq6mmIj.png\u0022 alt=\u0022Zq6mmIj.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/BVzzruJ.png\u0022 alt=\u0022BVzzruJ.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-family:\u0027comic sans ms\u0027;\u0022\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003EGot anything about you engine\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/IOzzPQS.png\u0022 alt=\u0022IOzzPQS.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003E\u003Cspan style=\u0022font-family:\u0027arial black\u0027;\u0022\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022font-family:\u0027comic sans ms\u0027;\u0022\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003EDownload \u003C/span\u003E\u003C/span\u003E\u003C/span\u003E\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003E\u003Cspan style=\u0022font-family:\u0027arial black\u0027;\u0022\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022font-family:\u0027comic sans ms\u0027;\u0022\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003E(Test only^I need more data of historical engine)\u003C/span\u003E\u003C/span\u003E\u003C/span\u003E\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/Librazy/ModularFuelSystem/releases/tag/DEV.RC.v.1.0.-1\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/Librazy/ModularFuelSystem/releases/tag/DEV.RC.v.1.0.-1\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022font-family:arial;\u0022\u003E\u003Cspan style=\u0022font-family:\u0027lucida sans unicode\u0027;\u0022\u003Ethe /\u003C/span\u003E\u003C/span\u003E\u003C/span\u003EzDEVtest folder is a modified Mainsail with some\u003Cspan style=\u0022font-family:arial;\u0022\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E silly config to test whether it \u003C/span\u003E\u003C/span\u003E\u003Cspan style=\u0022font-family:arial;\u0022\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022font-family:\u0027Helvetica Neue\u0027;\u0022\u003Eis working\u003C/span\u003E\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003E\u003Cspan style=\u0022font-family:\u0027comic sans ms\u0027;\u0022\u003EParameters\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EFrom the propellants used:\u003C/p\u003E\u003Cp\u003E* Mexh\u003C/p\u003E\u003Cp\u003EExhaust\u0027s molecular weight\u003C/p\u003E\u003Cp\u003EUsed by C*\u003C/p\u003E\u003Cp\u003E* fuelFraction\u003C/p\u003E\u003Cp\u003EUsed by CalculateGamma()\u003C/p\u003E\u003Cp\u003E* nominalTcns\u003C/p\u003E\u003Cp\u003ETheoretical chamber temperature\u003C/p\u003E\u003Cp\u003EDetermine running chamber temperature\u003C/p\u003E\u003Cp\u003EFrom nozzle\u003C/p\u003E\u003Cp\u003E* nominalPe\u003C/p\u003E\u003Cp\u003ETheoretical nozzle exit pressure at max fuel flow\u003C/p\u003E\u003Cp\u003EUsed by nozzleExpansionRatio and Ct\u003C/p\u003E\u003Cp\u003E* At\u003C/p\u003E\u003Cp\u003ENozzle\u0027s throat area\u003C/p\u003E\u003Cp\u003EUsed by Pcns\u003C/p\u003E\u003Cp\u003EFrom chamber\u003C/p\u003E\u003Cp\u003E* nominalPcns\u003C/p\u003E\u003Cp\u003ETheoretical chamber pressure at max fuel flow\u003C/p\u003E\u003Cp\u003EDetermine running chamber pressure\u003C/p\u003E\u003Cp\u003E* maxMassFlow\u003C/p\u003E\u003Cp\u003EMax fuel flow that chamber can load\u003C/p\u003E\u003Cp\u003E* minMassFlow\u003C/p\u003E\u003Cp\u003EMin fuel flow that chamber needs to maintain stable combustion\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-15T04:54:04Z\u0022 title=\u002209/15/2015 04:54  AM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 15, 2015\u003C/time\u003E by Librazy\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2015-09-15T03:39:17Z","Content":"\n\u003Cp\u003EInteresting, couple of questions:\u003C/p\u003E\u003Cp\u003EShouldn\u0027t max fuel flow be determinate from chamber thermodynamics and throat area? (since the throat must be choked). See the second equation on \u003Ca href=\u0022https://www.grc.nasa.gov/www/K-12/airplane/mflchk.html\u0022 rel=\u0022external nofollow\u0022\u003Ethis\u003C/a\u003E page.\u003C/p\u003E\u003Cp\u003EThe CalculateGamma available in SolverEngines is only currently good for mixtures of air and some hydrocarbon fuel. I\u0027ve been meaning to implement something better for a while but haven\u0027t gotten around on it yet.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003EI had a system worked out where Cp was read from a float for a particular gas component and other thermodynamic parameters were determined from molecular mass. But then RealHeat came along, with dissociation modeled, and wasn\u0027t sure whether to try and model dissociation as well, since dissociation matters a lot at the temperatures reached in engines, however it makes the combustion reactions in AJE a lot more difficult to model.\u003C/p\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"Librazy","CreatedById":146372,"CreatedDateTime":"2015-09-15T05:18:47Z","Content":"\n\u003Cp\u003EThanks to point out my fault on engine \u003Cspan style=\u0022color:#3E3E3E;\u0022\u003Ethermodynamics and information of \u003C/span\u003E\u003Cspan style=\u0022color:#3E3E3E;\u0022\u003ECalculateGamma. I\u0027ll fix it ASAP\u003C/span\u003E\u003C/p\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2015-09-15T06:54:54Z","Content":"\n\u003Cp\u003EOkay, more notes. Sorry to spam your thread, but I spent on the order of months trying to wrestle meaning out of this stuff for jet engines, so I\u0027d like to think that I know at least a bit of it (and if I don\u0027t, I\u0027d certainly like to know what you do and I don\u0027t \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E).\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E You shouldn\u0027t need to specify nominal exit pressure - exit conditions should be determinate from chamber conditions and expansion (area) ratio. It\u0027s not analytically solvable, but ferram4 gave us an implementation of Brent\u0027s method to use for nonlinear zero finding in SolverEngines (in SolverMathUtil.cs). You can use \u003Ca href=\u0022https://www.grc.nasa.gov/www/k-12/airplane/isentrop.html\u0022 rel=\u0022external nofollow\u0022\u003Eequation 9 here\u003C/a\u003E to solve for exit mach based on expansion ratio (this should only has to be done once - probably in InitializeOverallEngineData), and based on that you can find the nominal exit pressure and velocity. This might also simplify your thrust calculations too, since (in the absence of flow separation), thrust is just mdot * v_exit \u002B (p_exit - p_ambient) * A_exit. Not sure if this would work well with your flow separation calculations though.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThere\u0027s no need to use 0.10001 for the pressure ratio at jet separation. One of (x \u0026gt;= 0.1) and (x \u0026lt; 0.1) will always return true. Where does the number 0.1 come from anyway?\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAfter all the rest of the details are worked out, I will show you a way to automatically fit some of the engine parameters based on available data for thrust and Isp, using an API I build into SolverEngines (at its core, this uses the same nonlinear solver I mentioned above). You should be able to fit chamber temperature and throat area (which are often not known for engines) based on thrust and Isp \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"MatterBeam","CreatedById":133334,"CreatedDateTime":"2015-09-15T23:52:32Z","Content":"\n\u003Cp\u003EHi. I\u0027m interested in the method you used for creating different configurations for the engine. I\u0027m thinking of creating a simple, stock-alike version of that.\u003C/p\u003E\u003Cp\u003ECan you tell me simply, how you do it?\u003C/p\u003E\n"},{"CreatedByName":"Librazy","CreatedById":146372,"CreatedDateTime":"2015-09-25T12:49:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022blowfish\u0022 data-cite=\u0022blowfish\u0022\u003E\u003Cdiv\u003EOkay, more notes. Sorry to spam your thread, but I spent on the order of months trying to wrestle meaning out of this stuff for jet engines, so I\u0027d like to think that I know at least a bit of it (and if I don\u0027t, I\u0027d certainly like to know what you do and I don\u0027t \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E).\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E You shouldn\u0027t need to specify nominal exit pressure - exit conditions should be determinate from chamber conditions and expansion (area) ratio. It\u0027s not analytically solvable, but ferram4 gave us an implementation of Brent\u0027s method to use for nonlinear zero finding in SolverEngines (in SolverMathUtil.cs). You can use \u003Ca href=\u0022https://www.grc.nasa.gov/www/k-12/airplane/isentrop.html\u0022 rel=\u0022external nofollow\u0022\u003Eequation 9 here\u003C/a\u003E to solve for exit mach based on expansion ratio (this should only has to be done once - probably in InitializeOverallEngineData), and based on that you can find the nominal exit pressure and velocity. This might also simplify your thrust calculations too, since (in the absence of flow separation), thrust is just mdot * v_exit \u002B (p_exit - p_ambient) * A_exit. Not sure if this would work well with your flow separation calculations though.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThere\u0027s no need to use 0.10001 for the pressure ratio at jet separation. One of (x \u0026gt;= 0.1) and (x \u0026lt; 0.1) will always return true. Where does the number 0.1 come from anyway?\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAfter all the rest of the details are worked out, I will show you a way to automatically fit some of the engine parameters based on available data for thrust and Isp, using an API I build into SolverEngines (at its core, this uses the same nonlinear solver I mentioned above). You should be able to fit chamber temperature and throat area (which are often not known for engines) based on thrust and Isp \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESorry for my n\u003Cspan style=\u0022color:#333333;\u0022\u003Eot responding, first month in college should be that busy...\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E-1.Haven\u0027t work out what the relation between fuel flow and chamber pressure\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EFor now, the \u003C/span\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003Emax fuel flow indicates only the maximum workload of the powercycle, and increase throttle will increase fuelflow, leading to the chamber pressure .\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E0.[DEL]The t\u003C/span\u003Ehrottle will respond to chamber pressure in next release^[/DEL] May be later\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E1.An Chinese \u003C/span\u003Etextbook shows that \u003Cspan style=\u0022color:#333333;\u0022\u003Eexit pressure can be a basic parameter for liquid engine.And some conveniences can be brought by taking it.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E2.Yuh...^It is just a placeholder waiting a more precise jet \u003C/span\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003Eseparation calculation\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E3.Good job for FitEngine^Figuring out how it works now=w=\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Krakenfour\u0022 data-cite=\u0022Krakenfour\u0022\u003E\u003Cdiv\u003EHi. I\u0027m interested in the method you used for creating different configurations for the engine. I\u0027m thinking of creating a simple, stock-alike version of that.\u003Cp\u003ECan you tell me simply, how you do it?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESorry for my n\u003Cspan style=\u0022color:#333333;\u0022\u003Eot responding, first month in college should be that busy...\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EYeah...Could I say that I just copy \u003C/span\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003Ethe method of RealFuels\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EThe different sets of parameters for one engine is storaged in the cfg, and the plugin will load them to the engine module when needs\u003C/span\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-10-02T11:16:58Z\u0022 title=\u002210/02/2015 11:16  AM\u0022 data-short=\u00228 yr\u0022\u003EOctober 2, 2015\u003C/time\u003E by Librazy\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2015-09-25T15:27:29Z","Content":"\n\u003Cp\u003EThe issue I have is that you specify throat area, nozzle area, and exit pressure, whereas one of those three is determinate knowing the other two. If you allow all three to be specified, there\u0027s nothing forcing them to be consistent with each other.\u003C/p\u003E\n"},{"CreatedByName":"Librazy","CreatedById":146372,"CreatedDateTime":"2015-09-25T17:02:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022blowfish\u0022 data-cite=\u0022blowfish\u0022\u003E\u003Cdiv\u003EThe issue I have is that you specify throat area, nozzle area, and exit pressure, whereas one of those three is determinate knowing the other two. If you allow all three to be specified, there\u0027s nothing forcing them to be consistent with each other.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESo\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6Could you tell me what\u0026amp;how basic parameters should be used to represent an engine?\u003C/p\u003E\u003Cp\u003EI have no idea about them(\u003C/p\u003E\u003Cp\u003EActually I\u0027d only specify throat area and exit pressure, nozzle area was calculated from the pressure ratio of chamber and nozzle. And I found two( of \u003Cspan style=\u0022color:#333333;\u0022\u003Ethroat area, nozzle area and exit pressure)\u003C/span\u003E is needed to represent a nozzle...Did I left some eq out?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-25T17:05:22Z\u0022 title=\u002209/25/2015 05:05  PM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 25, 2015\u003C/time\u003E by Librazy\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2015-09-25T18:11:14Z","Content":"\n\u003Cp\u003ERefer to equations 6 and 9 \u003Ca href=\u0022https://www.grc.nasa.gov/www/k-12/airplane/isentrop.html\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E. If you have the exit pressure you can solve for exit Mach number, and from there solve for expansion ratio. The issue I have with this is that exit pressure is typically not known for real engines, whereas expansion ratio is often given. If you specify the expansion ratio, you can still solve for exit pressure as I mentioned above.\u003C/p\u003E\n"},{"CreatedByName":"Librazy","CreatedById":146372,"CreatedDateTime":"2015-09-26T03:21:26Z","Content":"\n\u003Cp\u003EAnother reason for I to use \u003Cspan style=\u0022color:#333333;\u0022\u003Eexit pressure \u003C/span\u003Eis that chamber condition is unknown for an nozzle config, so if we \u003Cspan style=\u0022color:#333333;\u0022\u003Especify \u003C/span\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003Eexpansion ratio, the \u003C/span\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003Eexit pressure will be \u003C/span\u003Edetermined by both the chamber and nozzle condition.(Though that is practicable but will be a little more complex for the users)\u003C/p\u003E\u003Cp\u003EWe can solve the \u003Cspan style=\u0022color:#333333;\u0022\u003Eexit pressure from the real data when \u003C/span\u003Egenerating cfg from real data.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-26T03:24:35Z\u0022 title=\u002209/26/2015 03:24  AM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 26, 2015\u003C/time\u003E by Librazy\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"123nick","CreatedById":27488,"CreatedDateTime":"2015-09-26T04:11:54Z","Content":"\n\u003Cp\u003Eneat. will this have configs for other mod engines, or just some engines, as of now?\u003C/p\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2015-09-26T06:00:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Librazy\u0022 data-cite=\u0022Librazy\u0022\u003E\u003Cdiv\u003EWe can solve the \u003Cspan style=\u0022color:#333333;\u0022\u003Eexit pressure from the real data when \u003C/span\u003Egenerating cfg from real data.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat is, in general, very annoying to do because it requires working through the isentropic flow calculations. When you have to work through hundreds of engine configs (what RF has to deal with), then it becomes a significant barrier. In writing both configs and code for AJE I have come to the conclusion that the simpler it is to specify engine parameters, the better. If you can calculate something and store it, do so in KSP rather than forcing the user to do it.\u003C/p\u003E\n"},{"CreatedByName":"Librazy","CreatedById":146372,"CreatedDateTime":"2015-09-27T10:38:31Z","Content":"\n\u003Cp\u003EThe more the better, but the generating and maintaining of the engine is a hot potato as blowfish said above.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022blowfish\u0022 data-cite=\u0022blowfish\u0022\u003E\u003Cdiv\u003EWhen you have to work through hundreds of engine configs (what RF has to deal with), then it becomes a significant barrier.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EYup, considering it.\u003C/span\u003E\u003C/p\u003E\n"},{"CreatedByName":"01010101lzy","CreatedById":118333,"CreatedDateTime":"2015-09-28T14:09:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022blowfish\u0022 data-cite=\u0022blowfish\u0022\u003E\u003Cdiv\u003EThat is, in general, very annoying to do because it requires working through the isentropic flow calculations. When you have to work through hundreds of engine configs (what RF has to deal with), then it becomes a significant barrier. In writing both configs and code for AJE I have come to the conclusion that the simpler it is to specify engine parameters, the better. If you can calculate something and store it, do so in KSP rather than forcing the user to do it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMaybe it is okay to generate configs automatically by existing configs that RF has...\u003C/p\u003E\u003Cp\u003EBut yes, working through hundreds of engines and change configs basing on every engine\u0027s own characteristics requires a HUGE amount of work. (don\u0027t ask me why, I have done it before)\u003C/p\u003E\n"},{"CreatedByName":"saabstory88","CreatedById":110598,"CreatedDateTime":"2015-09-28T17:43:38Z","Content":"\n\u003Cp\u003ELibrazy,\u003C/p\u003E\u003Cp\u003EPlease see my fork of your ModularEngines fork. Specifically \u003Ca href=\u0022https://github.com/Saabstory88/ModularFuelSystem/blob/master/Source/Engines/MagicSolver.cs\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/Saabstory88/ModularFuelSystem/blob/master/Source/Engines/MagicSolver.cs\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EI know I need to clean up the code executing a lot, but this is a similar implementation to your own. I am getting the combustion params from some equations I put together which describe the relationship between Molar mass / mix ratio / chamber pressure / flame temp. After plugging in some real engines, they seem to be a good enough approximation.\u003C/p\u003E\u003Cp\u003EAnyway, have a look, some of these methods may be more simple.\u003C/p\u003E\n"},{"CreatedByName":"Nansuchao","CreatedById":135151,"CreatedDateTime":"2015-09-28T18:05:19Z","Content":"\n\u003Cp\u003EThis is very interesting, congratulations. Will it works also for Interstellar Extended engines?\u003C/p\u003E\n"},{"CreatedByName":"nalfz","CreatedById":145025,"CreatedDateTime":"2015-09-30T05:32:54Z","Content":"\n\u003Cp\u003EMight be coming from a totally different direction here but couldn\u0027t you solve the whole \u0027configs for mods\u0027 problem by just having this be a sort of modular / procedural engines mod with one part that has a range of interchangeable nozzles / chambers / fuel mixtures / etc.? Of course, if you wanted to have the model change for different nozzles and things you\u0027d probably need another plugin, but the general idea seems a lot simpler, at least to me, than writing hundreds of configs for different engines to add a few extra options to them\u003C/p\u003E\n"},{"CreatedByName":"Librazy","CreatedById":146372,"CreatedDateTime":"2015-10-01T13:32:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nalfz\u0022 data-cite=\u0022nalfz\u0022\u003E\u003Cdiv\u003EMight be coming from a totally different direction here but couldn\u0027t you solve the whole \u0027configs for mods\u0027 problem by just having this be a sort of modular / procedural engines mod with one part that has a range of interchangeable nozzles / chambers / fuel mixtures / etc.? Of course, if you wanted to have the model change for different nozzles and things you\u0027d probably need another plugin, but the general idea seems a lot simpler, at least to me, than writing hundreds of configs for different engines to add a few extra options to them\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EActually,that is what I want to do at first, and it\u0027s my working direction now.=w=\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Nansuchao\u0022 data-cite=\u0022Nansuchao\u0022\u003E\u003Cdiv\u003EThis is very interesting, congratulations. Will it works also for Interstellar Extended engines?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESo I leave out the NozzleType and ChamberType in config.(Though I had only implemed one type^the liquid engine with delaval nozzle.Some more types will be support later.(I don\u0027t know when will be later TAT \u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u002201010101lzy\u0022 data-cite=\u002201010101lzy\u0022\u003E\u003Cdiv\u003EMaybe it is okay to generate configs automatically by existing configs that RF has...\u003Cp\u003EBut yes, working through hundreds of engines and change configs basing on every engine\u0027s own characteristics requires a HUGE amount of work. (don\u0027t ask me why, I have done it before)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYup\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6So I choose to be compatible with RF, for that we can use RF configs for those engine that don\u0027t have their EDev configs.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-10-01T13:35:02Z\u0022 title=\u002210/01/2015 01:35  PM\u0022 data-short=\u00228 yr\u0022\u003EOctober 1, 2015\u003C/time\u003E by Librazy\u003C/strong\u003E\n\u003C/span\u003E\n"}]}