{"TopicId":162200,"ForumId":36,"TopicTitle":"[WIP][1.8.1, 1.9.1, 1.10.1, 1.11.0\u20132, 1.12.2\u20135] Principia\u2014version \u200E\u200EKleene, released 2024-07-05\u2014n-Body and Extended Body Gravitation","CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-02-05T00:19:35Z","PageNum":4,"Articles":[{"CreatedByName":"MAKC","CreatedById":57186,"CreatedDateTime":"2014-02-07T11:28:09Z","Content":"\n\u003Cp\u003EDo you accept donations?\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-02-08T00:04:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003EI\u0027ll try making a dedicated renderer class and adding it as a component of MapView.MapCamera.gameObject like \u003Cstrong\u003ECilph\u003C/strong\u003E, since his code works (and he seems to have a clue about how Unity works).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat worked! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EThe specifics of the solution: Have a class T inherit MonoBehaviour, call MapView.MapCamera.gameObject.AddComponent\u0026lt;T\u0026gt;() in your addon\u0027s Start() and do the redraw in T.OnPreCull().\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-08T00:54:13Z\u0022 title=\u002202/08/2014 12:54  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 8, 2014\u003C/time\u003E by eggrobin\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-02-08T04:13:10Z","Content":"\n\u003Cp\u003ECross-posting from the OP:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI fixed a bug or two since 2014-02-05, added a few TODOs, but have not cleaned up the code to any measurable extent. I am, however, publishing it \u003Ca href=\u0022https://github.com/eggrobin/Principia\u0022 rel=\u0022external nofollow\u0022\u003Eon GitHub\u003C/a\u003E (under the MIT license).\u003C/p\u003E\u003Cp\u003E\u003Cem\u003ECaveat Compilator\u003C/em\u003E: As previously stated, this is just a proof of concept with a bunch of traces. Pressing the wrong buttons in the wrong order will result in lots of NullReferenceExceptions and off-rails crafts will behave weirdly. Using HyperEdit to set up initial conditions, then switching to Newtonian physics and fooling around with reference frames can be entertaining though.\u003C/p\u003E\u003Cp\u003EYou might learn something from looking at the Integrators part (which admittedly contains only one integrator), the rest was quickly hacked together, has no tests, is badly structured \u0026amp;c.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENow that I have fixed trajectories lagging, the next step is going to be handling off-rails stuff. This is going to be interesting. Does anybody know if there is a way to find the acceleration on a vessel excluding gravity and reference frame weirdness?\u003C/p\u003E\n"},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2014-02-08T04:51:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003ECross-posting from the OP:\u003Cp\u003ENow that I have fixed trajectories lagging, the nex is going to be handling off-rails stuff. This is going to be interesting. Does anybody know if there is a way to find the acceleration on a vessel excluding gravity and reference frame weirdness?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOoo. This should be fun. Ill compile this later and Give it a go. I have no idea how to accomplish the acceleration retrieval thing.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-08T04:54:41Z\u0022 title=\u002202/08/2014 04:54  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 8, 2014\u003C/time\u003E by landeTLS\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-02-08T04:54:22Z","Content":"\n\u003Cp\u003ENot sure about reference frame weirdness, but you can try grabbing vessel.acceleration - vessel.flightintegrator.gForce?\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-02-08T05:03:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NathanKell\u0022 data-cite=\u0022NathanKell\u0022\u003E\u003Cdiv\u003ENot sure about reference frame weirdness, but you can try grabbing vessel.acceleration - vessel.flightintegrator.gForce?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIs gForce the gravitational force, or the nongravitational acceleration (the acceleration that is seen on the g-meter)?\u003C/p\u003E\u003Cp\u003EThe name g-force is just terribly confusing, as it typically refers to the difference between the acceleration and the acceleration due to gravity...\u003C/p\u003E\u003Cp\u003EI think there\u0027s some Coriolis stuff in the vessel.flightintegrator, so that counts as reference frame weirdness.\u003C/p\u003E\u003Cp\u003EAlso, what about torque? \u003C/p\u003E\u003Cp\u003EAnyway, it\u0027s 6 in the morning for some reason, so I\u0027ll get some sleep.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-08T05:07:43Z\u0022 title=\u002202/08/2014 05:07  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 8, 2014\u003C/time\u003E by eggrobin\u003C/strong\u003E\n\u003Cbr\u003EIt\u0026#039;s so la\u0026#039;te I can\u0026#039;t plac\u0026#039;e apo\u0026#039;strophes pro\u0026#039;perly. Also, \u0026#039;the from with the\u0026#039; makes little sense.\n\u003C/span\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-02-08T05:57:58Z","Content":"\n\u003Cp\u003EOk, then you just want vessel.geeforce * 9.81 (for m/s). That is total acceleration - centripedal and coriolis effects - gravity.\u003C/p\u003E\u003Cp\u003EFlightIntegrator.gForce, despite its name, is current gravitational acceleration.\u003C/p\u003E\u003Cp\u003ENot sure about torque.\u003C/p\u003E\n"},{"CreatedByName":"bulletrhli","CreatedById":55960,"CreatedDateTime":"2014-02-08T07:50:11Z","Content":"\n\u003Cp\u003EAre you going to be releasing a very alpha version of this for people to try anytime soon?\u003C/p\u003E\n"},{"CreatedByName":"MAKC","CreatedById":57186,"CreatedDateTime":"2014-02-08T09:49:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022bulletrhli\u0022 data-cite=\u0022bulletrhli\u0022\u003E\u003Cdiv\u003EAre you going to be releasing a very alpha version of this for people to try anytime soon?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s been answered multiple times.\u003C/p\u003E\n"},{"CreatedByName":"drtedastro","CreatedById":70911,"CreatedDateTime":"2014-02-08T09:56:11Z","Content":"\n\u003Cp\u003EJust found this. Good luck, and please keep pressing on.... This will be good...\u003C/p\u003E\n"},{"CreatedByName":"bulletrhli","CreatedById":55960,"CreatedDateTime":"2014-02-08T10:18:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MAKC\u0022 data-cite=\u0022MAKC\u0022\u003E\u003Cdiv\u003EIt\u0027s been answered multiple times.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMy apologies for not reading every single comment through the many pages of this thread. I have failed all of the KSP community. I am sorry. Forgive me.\u003C/p\u003E\n"},{"CreatedByName":"MAKC","CreatedById":57186,"CreatedDateTime":"2014-02-08T12:41:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022bulletrhli\u0022 data-cite=\u0022bulletrhli\u0022\u003E\u003Cdiv\u003EMy apologies for not reading every single comment through the many pages of this thread. I have failed all of the KSP community. I am sorry. Forgive me.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou only had to read the 1st post tho..\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-02-08T12:47:42Z","Content":"\n\u003Cp\u003EPSA: the \u0027Simulator\u0027 project probably won\u0027t compile, it\u0027s leftover from my Alternis simulations. It\u0027s not needed.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NathanKell\u0022 data-cite=\u0022NathanKell\u0022\u003E\u003Cdiv\u003EOk, then you just want vessel.geeforce * 9.81 (for m/s). That is total acceleration - centripedal and coriolis effects - gravity.\u003Cp\u003EFlightIntegrator.gForce, despite its name, is current gravitational acceleration.\u003C/p\u003E\u003Cp\u003ENot sure about torque.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAlas, that\u0027s a scalar (it\u0027s the norm of total acceleration - acceleration from fictitious forces---I\u0027m counting gravity as a fictitious force, even though I\u0027m not implementing GR; it\u0027s just more convenient terminology).\u003C/p\u003E\u003Cp\u003EI think I found the answer though.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022bulletrhli\u0022 data-cite=\u0022bulletrhli\u0022\u003E\u003Cdiv\u003EAre you going to be releasing a very alpha version of this for people to try anytime soon?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFrom the OP (I\u0027m not assuming people will read the entire thread, but I \u003Cem\u003Eam\u003C/em\u003E assuming they\u0027ll read the OP),\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EExpect a slow development cycle, due to a combination of laziness, exams, and this actually being a complicated project.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThis is currently hardly more than a proof of concept. \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI am, however, publishing it on GitHub (under the MIT license).\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESo if you want to look at the current prototype you can pull the source from GitHub and compile it; don\u0027t expect it to be playable soon (the current state is not an alpha; it\u0027s a messy way of generating nice screenshots). Once this is done, you too can generate nice screenshots! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003E(I guess you can use it to get a feeling for what \u003Cem\u003EN\u003C/em\u003E-body trajectories look like, but it\u0027s highly likely that the current plotting is a bit off.)\u003C/p\u003E\u003Cp\u003EAs far as providing the DLLs directly, configuring Git to do that without risking to accidentally publish a KSP assembly is more work than I want to do at the moment. Ask around if you don\u0027t know how to build from source.\u003C/p\u003E\n"},{"CreatedByName":"mic_e","CreatedById":60757,"CreatedDateTime":"2014-02-08T13:59:55Z","Content":"\n\u003Cp\u003EOK, I just downloaded and tried it, and have a few points to say:\u003C/p\u003E\u003Cp\u003E- It works like a charm; I congratulate you. Despite you saying that it is a \u0027proof of concept\u0027, I think that this is very much usable, and would use it in my current gamesave, weren\u0027t it for the next point:\u003C/p\u003E\u003Cp\u003E- I didn\u0027t expect it to actually do n-body physics for the _planets_ as well as the craft... poor Vall. You might want to add an option to do the classical Keplerian math for Bodies, or a Minmus mission might end up being a Near-Kerbin-Asteroid mission. In addition, this would save loads of CPU time.\u003C/p\u003E\u003Cp\u003E- It was kind of a pain to build with MonoDevelop, having to hack the sln and csproj files and manually select Mono 4.0 as the toolchain for every project...\u003C/p\u003E\n"},{"CreatedByName":"mossman","CreatedById":1259,"CreatedDateTime":"2014-02-08T15:59:38Z","Content":"\n\u003Cp\u003ESo if n-body simulation for celestials is planned (awesome if it is), do you plan on re-arranging them into actual stable orbits (so that vall etc don\u0027t just get flung off after a few years).\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-02-08T16:13:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mic_e\u0022 data-cite=\u0022mic_e\u0022\u003E\u003Cdiv\u003EOK, I just downloaded and tried it, and have a few points to say:\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks for taking the time to do that!\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E- It works like a charm; I congratulate you. Despite you saying that it is a \u0027proof of concept\u0027, I think that this is very much usable, and would use it in my current gamesave, weren\u0027t it for the next point:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, if you were to use it to play, you would find that rockets are useless when using Newtonian physics: when the craft goes off-rails it uses stock physics, and when it goes back on-rails everything that happened off-rails is ignored. In order to play you\u0027d have to \u0027Switch to Keplerian\u0027 for each burn... Don\u0027t worry, I\u0027m working on this right now.\u003C/p\u003E\u003Cp\u003EIt feels like I have to handle just about everything Unity is supposed to do... A problem with game physics engines is that they are \u003Cem\u003Eterrible\u003C/em\u003E at physics. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E- I didn\u0027t expect it to actually do n-body physics for the _planets_ as well as the craft... poor Vall. You might want to add an option to do the classical Keplerian math for Bodies, or a Minmus mission might end up being a Near-Kerbin-Asteroid mission.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027d prefer to keep the planets under \u003Cem\u003EN\u003C/em\u003E-body physics for several reasons.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EIn addition, this would save loads of CPU time.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is the first reason: it\u0027s the other way around; it would actually be slower to perform the integration with planets on Keplerian orbits (I\u0027ll explain later).\u003C/p\u003E\u003Cp\u003EThe second reason is that I can probably tweak the initial conditions a bit to make things stable. If Scott Manley (\u003Cstrong\u003Eillectro\u003C/strong\u003E)\u0027s intuitions are verified, interpreting the orbits as around the barycenter would fix things, otherwise I might have to tweak the masses a bit, but it should be doable (after all, it works for Jupiter).\u003C/p\u003E\u003Cp\u003EThe third reason is that I would lose symplecticity (I\u0027ll explain later).\u003C/p\u003E\u003Cp\u003EThe fourth reason is that if the bodies followed the Keplerian approximation (orbiting the primary as in stock rather than the barycenter), Lagrange points and other interesting features of the CR3BP/ER3BP wouldn\u0027t work as they should.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E- It was kind of a pain to build with MonoDevelop, having to hack the sln and csproj files and manually select Mono 4.0 as the toolchain for every project...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t think I can help, I use VS2013. Feel free to fork and maintain a branch with your modified solution and project files for the people out there who use MonoDevelop. Building from source is only going to get harder when I get to optimisation, you\u0027ll have to install clang. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022me, twice\u0022 data-cite=\u0022me, twice\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI\u0027ll explain later.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOkay, it seems not everyone on this thread (and no-one at SQUAD) is really familiar with numerical integration. For the sake of everybody\u0027s sanity, I think I\u0027ll make a short series of posts roughly explaining Hamiltonian mechanics, RK and SPRK integrators, as well as the Kepler problem (which is more complicated than it looks) and the Saha \u0026amp; Tremaine integrator. Can I get a rough idea of where to start? \u003C/p\u003E\u003Cp\u003EIn particular, can I assume that people know what a derivative is? Otherwise, can an engineer or physicist tell me how I should explain basic calculus? The best approach would be to start with point-set topology, but in the interest of brevity and not boring everyone to death, 10 posts about the properties of Hausdorff spaces would not be the best way to start. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EEDIT: Added a poll for those purposes.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-08T16:40:50Z\u0022 title=\u002202/08/2014 04:40  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 8, 2014\u003C/time\u003E by eggrobin\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Ledenko","CreatedById":57833,"CreatedDateTime":"2014-02-08T16:59:50Z","Content":"\n\u003Cp\u003EForgive me if I\u0027m asking a stupid question, but could any part of this solution be used to improve the accuracy of stock float physics? I\u0027m excited about n-body physics, but I\u0027m also having fun with stock physics except for the inaccuracies.\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-02-08T17:16:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ledenko\u0022 data-cite=\u0022Ledenko\u0022\u003E\u003Cdiv\u003EForgive me if I\u0027m asking a stupid question, but could any part of this solution be used to improve the accuracy of stock float physics? I\u0027m excited about n-body physics, but I\u0027m also having fun with stock physics except for the inaccuracies.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETo some extent, yes. I\u0027ll be managing the movement of the center of mass of every vessel in space (maybe in the atmosphere too, the ground looks hard however). It looks like this mod is not going to be too friendly on compatibility though (grabbing precise enough accelerations is hard, I\u0027ll have to get the forces from the engines/RCS/\u0026amp;c. directly), so compatibility with any module that exerts thrust will have to be implemented through a plugin.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-08T17:30:18Z\u0022 title=\u002202/08/2014 05:30  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 8, 2014\u003C/time\u003E by eggrobin\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Faark","CreatedById":69775,"CreatedDateTime":"2014-02-08T19:21:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ledenko\u0022 data-cite=\u0022Ledenko\u0022\u003E\u003Cdiv\u003Estock physics except for the inaccuracies.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIs it rly that inaccurate? I only have problems with stock orbital mechanics in two specific situations:\u003C/p\u003E\u003Cp\u003E- SOI transitions. The game should use sth like the patched conics there, since currently a high timewarp can screw the intended orbit. The system should not just patch orbits from different SOIs together but also stuff like aerobreak-segments (when entering atmosphere)\u003C/p\u003E\u003Cp\u003E- GoOnRails / GoOffRails... this isn\u0027t very accurate and starting \u0026amp; stoping timewarp has a messurable effect on your orbit (the forces are not correctly aggregated, presumably). I\u0027m not sure that this N-Body mod as currently planned would automatically fix that.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003EIt looks like this mod is not going to be too friendly on compatibility though (grabbing precise enough accelerations is hard, I\u0027ll have to get the forces from the engines/RCS/\u0026amp;c. directly), so compatibility with any module that exerts thrust will have to be implemented through a plugin.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWow, that doesn\u0027t sound very efficient. I always thought KSP stores way more temporary data from internal calculations in variables as necessary. Non of the stuff in vessel like .acceleration, .perturbation, .geeForce, .geeForce_immediate or sth in vessel.flightIntegrator is of any use to get the stock orbital forces? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 alt=\u0022:confused:\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-02-08T19:33:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Faark\u0022 data-cite=\u0022Faark\u0022\u003E\u003Cdiv\u003EIs it rly that inaccurate? I only have problems with stock orbital mechanics in two specific situations:\u003Cp\u003E- SOI transitions. The game should use sth like the patched conics there, since currently a high timewarp can screw the intended orbit. The system should not just patch orbits from different SOIs together but also stuff like aerobreak-segments (when entering atmosphere)\u003C/p\u003E\u003Cp\u003E- GoOnRails / GoOffRails... this isn\u0027t very accurate and starting \u0026amp; stoping timewarp has a messurable effect on your orbit (the forces are not correctly aggregated, presumably). I\u0027m not sure that this N-Body mod as currently planned would automatically fix that.\u003C/p\u003E\u003Cp\u003EWow, that doesn\u0027t sound very efficient. I always thought KSP stores way more temporary data from internal calculations in variables as necessary. Non of the stuff in vessel like .acceleration, .perturbation, .geeForce, .geeForce_immediate or sth in vessel.flightIntegrator is of any use to get the stock orbital forces? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 alt=\u0022:confused:\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s all very unstable, look at the drift of the apoapsis/periapsis when out of warp (including the data from .perturbation, which wobbles around 1e-5 when it should be 0, and is actually an average. .geeForce_immediate wobbles a lot more, with peaks above 1 g0 when it should be 0). This is probably all coming from Unity physics.\u003C/p\u003E\u003Cp\u003EThe question is not really efficiency (this is completely negligible compared to the other things I have to do) but compatibility: for every module that applies an external force in space, I need to have code that grabs the force (in stock, I think this is ModuleRCS, ModuleEngines, ModuleEnginesFX; can anyone think of what I\u0027m missing in this list?).\u003C/p\u003E\u003Cp\u003EPhysics engines are not made to handle physics: no-one cares if your bullets are slightly too energetic or pick up angular momentum in a first-person shooter.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-08T19:42:28Z\u0022 title=\u002202/08/2014 07:42  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 8, 2014\u003C/time\u003E by eggrobin\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Tyrador","CreatedById":92682,"CreatedDateTime":"2014-02-08T19:46:33Z","Content":"\n\u003Cp\u003EIs orbit on second image real? What is the name for it? Thanks\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-02-08T20:20:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tyrador\u0022 data-cite=\u0022Tyrador\u0022\u003E\u003Cdiv\u003EIs orbit on second image real? What is the name for it? Thanks\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe orbit on the second image is the same as the one on the first image. It\u0027s just a Kerbin-Synchronous Orbit (KSO).\u003C/p\u003E\u003Cp\u003EThe weird shape comes from the choice of reference frame: as seen in a nonrotating Kerbin-centric reference frame (say, somebody standing on a pole of Kerbin rotating as the day goes by to always look at the same distant star) it\u0027s just an ellipse (the cyan line, as predicted by stock), but as seen in the rotating reference frame (by an observer on the equator of Kerbin, looking up), it\u0027s this sort of figure-eight (it\u0027s an analemma).\u003C/p\u003E\n"},{"CreatedByName":"mic_e","CreatedById":60757,"CreatedDateTime":"2014-02-08T20:32:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003EWell, if you were to use it to play, you would find that rockets are useless when using Newtonian physics: when the craft goes off-rails it uses stock physics, and when it goes back on-rails everything that happened off-rails is ignored.\u003C/div\u003E\u003C/blockquote\u003E oh...\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003EThe second reason is that I can probably tweak the initial conditions a bit to make things stable. If Scott Manley (\u003Cstrong\u003Eillectro\u003C/strong\u003E)\u0027s intuitions are verified, interpreting the orbits as around the barycenter would fix things, otherwise I might have to tweak the masses a bit, but it should be doable (after all, it works for Jupiter).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETweaking the masses would heavily distort the balance of the game. I believe the Jupiter system is stable because of orbital resonances, so adjusting the orbital periods of Vall and Tylo might work out.\u003C/p\u003E\u003Cp\u003EMinmus\u0027s orbit however is simply outside of Kerbin\u0027s Hill sphere - I don\u0027t see any reasonable way of getting it to orbit properly; at best, you might be able to put it in orbit around a Kerbin-Kerbol Lagrange point...\u003C/p\u003E\u003Cp\u003EExperiments will have to show whether you get a solution that stays stable for the full 80 or so years that KSP spans.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003EIt would actually be slower to perform the integration with planets on Keplerian orbits\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell... from my computer scientist\u0027s point of view, it would eliminate the quadratic asymptotic dependency on B, but I have a hunch at why your integrators would get a lot of extra work to do.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003EI think I\u0027ll make a short series (...) In particular, can I assume that people know what a derivative is?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFeel free to do a series of \u0060lectures\u0060, I\u0027m quite interested in the topic. I do know basic calculus, and I think you should take that as a prerequisite... I\u0027ve written a few n-body simulations myself (using the \u0027trivial\u0027 approach of v \u002B= a*dt, x\u002B= v*dt), and I have a hunch on how RK improves on that.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003EFeel free to fork and maintain a branch with your modified solution and project files for the people out there who use MonoDevelop\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t really like C#, and even less its IDEs; I just view them as a neccesary evil when dealing with KSP, so I don\u0027t think I\u0027d be the right person to maintain such a fork.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003EI need to have code that grabs the force (in stock, I think this is ModuleRCS, ModuleEngines, ModuleEnginesFX; can anyone think of what I\u0027m missing in this list?)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDecouples, docking ports and EVA jetpacks provide force, too. As do collisions between ships.\u003C/p\u003E\u003Cp\u003EAlso, don\u0027t forget that decoupling while rotating or the pumping-around of fuel will affect your orbit, too (the latter is a bug, though).\u003C/p\u003E\u003Cp\u003EI think the main cause for fluctuations in stock orbits are just due to the fact that the orbit is not calculated for the CoM, but the center of control, so the slightest rotations of the craft are displayed as g forces. While the craft is non-rotating, the stock integrator is working pretty well for me.\u003C/p\u003E\u003Cp\u003EIf you\u0027d attempt to re-do all those physics, I think you\u0027d basically end up re-writing unity\u0027s physics engine, in the process introducing an uncountable number of new bugs, so I heavily recommend against doing that\u00C3\u201A\u00C2\u00B9.\u003C/p\u003E\u003Cp\u003E\u00C3\u201A\u00C2\u00B9 I think that KSP should indeed be re-written with a from-scratch physics engine in C\u002B\u002B, preferrably using fixed-point 64-bit integers for all positions and velocities, but I think that would require an immense amount of work and is entirely unrealistic at the moment.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-08T20:43:00Z\u0022 title=\u002202/08/2014 08:43  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 8, 2014\u003C/time\u003E by mic_e\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Faark","CreatedById":69775,"CreatedDateTime":"2014-02-08T20:33:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003EIt\u0027s all very unstable, look at the drift of the apoapsis/periapsis when out of warp (including the data from .perturbation, which wobbles around 1e-5 when it should be 0, and is actually an average. .geeForce_immediate wobbles a lot more, with peaks above 1 g0 when it should be 0). This is probably all coming from Unity physics.\u003Cp\u003EThe question is not really efficiency (this is completely negligible compared to the other things I have to do) but compatibility: for every module that applies an external force in space, I need to have code that grabs the force (in stock, I think this is ModuleRCS, ModuleEngines, ModuleEnginesFX; can anyone think of what I\u0027m missing in this list?).\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAll true (sounds kinda like the On/OffRails problem), but how to fix it? What about drag? Collisions? Decoupling? Acceleration by exhaust produced by other engines? Sounds like you would have to re-implement the entire physics engine and most other stuff in KSPs. And no, i ofc can\u0027t offer any good solution. Is precision that important while the vessel is off-rails? (Yea, I\u0027m looking forward to read about the math involved as well \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E )\u003C/p\u003E\n"},{"CreatedByName":"BrianMcNett","CreatedById":91783,"CreatedDateTime":"2014-02-08T21:03:48Z","Content":"\n\u003Cp\u003EHooray!\u003C/p\u003E\u003Cp\u003EA Hybrid N-Body Symplectic Integrator for Kerbal Space Program was my Christmas wish!\u003C/p\u003E\u003Cp\u003EI\u0027m neither enough of a programmer, nor enough of a mathematician to make it happen myself, just smart enough to know the limitations of patched conics and planets/ships on rails, and that there *is* a solution that gives you n-body physics. I can follow the math up to a point, and understand the implications, but that\u0027s about it.\u003C/p\u003E\u003Cp\u003ESo, I\u0027m quietly sitting here, and my brain is going \u0022YES! YES! YES! OMG YES!\u0022\u003C/p\u003E\u003Cp\u003EThank you for taking this up.\u003C/p\u003E\n"}]}