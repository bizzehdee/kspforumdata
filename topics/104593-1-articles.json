{"TopicId":104593,"ForumId":44,"TopicTitle":"Newb to a programmer","CreatedByName":"bartekkru99","CreatedById":76625,"CreatedDateTime":"2015-04-21T15:07:38Z","PageNum":1,"Articles":[{"CreatedByName":"bartekkru99","CreatedById":76625,"CreatedDateTime":"2015-04-21T15:07:38Z","Content":"I\u0027ve started to learn programming in C# an now I know how to use if, else and switch and I\u0027m practically a newb. I want to ask you how much time it takes to master programming, so I can write simple apps and games (at least mods)? Few months? years?"},{"CreatedByName":"Ethanadams","CreatedById":136913,"CreatedDateTime":"2015-04-21T15:10:58Z","Content":"You can learn basic programming in about a month or to online"},{"CreatedByName":"Robotengineer","CreatedById":104525,"CreatedDateTime":"2015-04-21T15:17:17Z","Content":"\u003E \n\u003E I\u0027ve started to learn programming in C# an now I know how to use if, else and switch and I\u0027m practically a newb. I want to ask you how much time it takes to master programming, so I can write simple apps and games (at least mods)? Few months? years?\n\nHow long it takes depends on your dedication level, prior education, how quickly you learn, etc. I\u0027ve been trying to learn programming off and on for about a year."},{"CreatedByName":"BlueCosmology","CreatedById":138863,"CreatedDateTime":"2015-04-21T15:17:38Z","Content":"\u003E \n\u003E I\u0027ve started to learn programming in C# an now I know how to use if, else and switch and I\u0027m practically a newb. I want to ask you how much time it takes to master programming, so I can write simple apps and games (at least mods)? Few months? years?\n\n\u0022master programming\u0022 is an incredibly vague term, very few programmers would consider themselves as having mastered programming (and the ones that do consider themselves to, most people would disagree)\n\nDepends what you mean by \u0022simple apps\u0022. You can make incredibly simple ones within a few days of learning to program, e.g. a version of the countdown number game could easily be made within a few days of starting to learn programming."},{"CreatedByName":"*Aqua*","CreatedById":103926,"CreatedDateTime":"2015-04-21T17:35:18Z","Content":"You\u0027ll never stop learning. People develop new inventions, algorithms and concepts all the time. You\u0027ll most likely have to concentrate on a few fields to be able to keep up.\n\nLet me guess a bit so you have some numbers:\n\n- intermediate level after about 1-2 years (knows basic concepts and design patterns, uses one programming language)\n\n- advanced level after about 5 years (knows most concepts and patterns used in his specialization, knows about 2-3 programming languages)\n\n- veteran level after about 10 years (knows a lot of stuff outside his specialization, develops new techniques, chooses programming language according to the problem to solve)\n\nThese are only guesses. I\u0027m into programming for ~15 years and even studied computer science and I don\u0027t consider myself a veteran.\n\nExtra cookies for people who understand what this does and why it is probably the most efficient way (I wrote that during classes):\n\n    double mysterious(unsigned int k){        unsigned long long int value = (1023LL - k) \u003C\u003C 52         return 2.0 - *((double*)\u0026value);}\n\n;-)"},{"CreatedByName":"JumpsterG","CreatedById":63396,"CreatedDateTime":"2015-04-21T17:44:32Z","Content":"Give yourself a good month or two to learn the basics of C#, following a book or set of tutorials: Syntax, variables, scope, arrays, functions, classes, modules. When you feel comfortable, dive right into a project (a reasonable, small-in-scope, personal project). You\u0027ll learn a lot more when you are searching for something you NEED to make your project work. After a few small projects, you\u0027ll know what you\u0027re capable of on your own.\n\nCheck out these videos. They\u0027re not tutorials or anything, but they should get you in the right mindset for starting an early project:\n\n\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/z06QR-tz1_o?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\n\n\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/dHMNeNapL1E?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\n\n\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/UvCri1tqIxQ?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\n\n\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/qxsEimJ_3bM?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\n\nAt any point, feel free to use this forum and others as a resource. Programmers are very forthcoming with solutions to problems they have dealt with before!"},{"CreatedByName":"linkxsc","CreatedById":67350,"CreatedDateTime":"2015-04-21T17:46:15Z","Content":"I just make it up as I go. You can learn to program in a couple weeks if you want. \n\nMastering a language... god only knows"},{"CreatedByName":"JumpsterG","CreatedById":63396,"CreatedDateTime":"2015-04-21T18:08:45Z","Content":"\u003E \n\u003E Extra cookies for people who understand what this does and why it is probably the most efficient way (I wrote that during classes):\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E     double mysterious(unsigned int k){        unsigned long long int value = (1023LL - k) \u003C\u003C 52         return 2.0 - *((double*)\u0026value);}\n\u003E \n\u003E \n\u003E ;-)\n\nBah! Humbug. Shifting bits to do math... It\u0027s a readability nightmare! (Dat efficiency, tho)\n\nSadly, I\u0027m not dedicated enough to sit and figure what math function this is (brain is busy doing work things), so no cookie for me."},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2015-04-21T18:43:45Z","Content":"\u003E \n\u003E Bah! Humbug. Shifting bits to do math... It\u0027s a readability nightmare! (Dat efficiency, tho)\n\nI generally despise the common meme that everything should be coded to the least skilled programmer that might come across it. That attitude is a race to the bottom, and its the reason modern languages don\u0027t let us have nice things anymore. (like proper switch statements with correct case fall-throughs).\n\nHowever, there is a second reason that the example code snippet is poor practice. It\u0027s got nothing to do with the skill involved in understanding it. It\u0027s because it\u0027s dependent on presuming to know the exact underlying hardware implementation of the double float. Sure, that solution will work \\*IF\\* you are guaranteed to know exactly which IEEE floating-point standard is in use for that implementation, and thus exactly which bits are stored where, how many bits are mantissa, how many are exponent, etc. That sort of hardware-locked thinking only belongs in very tight narrow applications where you really \\*are\\* guaranteed to know the hardware involved forever and ever for the future life of the software - certain integrated burned-in software for example."},{"CreatedByName":"Deutherius","CreatedById":125381,"CreatedDateTime":"2015-04-21T18:49:11Z","Content":"You\u0027ll encounter this whenever googling a programming related problem, but I\u0027m just gonna throw it out here - [stackoverflow.com](http://stackoverflow.com/). You will learn to love it.\n\n\u003E \n\u003E Extra cookies for people who understand what this does and why it is probably the most efficient way (I wrote that during classes):\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E     double mysterious(unsigned int k){        unsigned long long int value = (1023LL - k) \u003C\u003C 52        return 2.0 - *((double*)\u0026value);}\n\nOh, oh! I do! It\u0027ll throw out an error during compilation, because you are missing a semicolon after \u0022\u003C\u003C 52\u0022 ![:D](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif) I can has cookie?\n\n\u003E \n\u003E I think it does a sum of 0.5^n^ from n = 0 to k\n\u003E \n\u003E 2.0 is the maximum value of the sum, and the bit before that is just generating higher powers of 0.5 to subtract from it. Efficient because there is no need to actually calculate the whole sum, just one power, and you can do that by bit shifting. Pretty neat, albeit highly unreadable. As others have pointed out, it\u0027s probably not the best practice, but it makes for an interesting puzzle.\n\n**Edited \u003Ctime datetime=\u00222015-04-21T19:03:11Z\u0022 title=\u002204/21/2015 07:03  PM\u0022 data-short=\u00229 yr\u0022\u003EApril 21, 2015\u003C/time\u003E by Deutherius**"},{"CreatedByName":"*Aqua*","CreatedById":103926,"CreatedDateTime":"2015-04-21T22:17:46Z","Content":"@Deutherius\n\nCorrect! Here\u0027s your cookie:\n\n![cookie.png](http://findicons.com/files/icons/1620/crystal_project/128/cookie.png)\n\nI accidentally deleted the ; when removing the comments.\n\nMy lecturer wanted us students to find an efficient way to calculate \u00C3\u017D\u00C2\u00A3 1/2^k^ and this was my idea. He was quite surprised. ^^\n\n---\n\nYou guys are right. It is almost unreadable. That\u0027s the reason why I don\u0027t like C\u002B\u002B. It\u0027s just too easy to make a mess of a code nobody comprehends. And you have to be cautious to not accidentally do something wrong. That\u0027s also one of the reasons I don\u0027t count myself as a veteran programmer: My code can get pretty messy if a language allows it. That\u0027s why I like to stick to Java and C#. In particular Java forces you to stick to design patterns and write good code."},{"CreatedByName":"kStrout","CreatedById":116630,"CreatedDateTime":"2015-04-21T22:21:01Z","Content":"Coding is a process of figuring out want you want to do, and then either knowing how to do it or looking it up online, as you get more experienced, you move away from the latter more and more, but you never stop having to look stuff up."},{"CreatedByName":"J.Random","CreatedById":63332,"CreatedDateTime":"2015-04-21T22:41:14Z","Content":"Like any activity, it\u0027s easy to learn the basics, but it takes a life to master it."},{"CreatedByName":"Laie","CreatedById":110461,"CreatedDateTime":"2015-04-21T22:55:35Z","Content":"\u003E \n\u003E I\u0027ve started to learn programming in C# an now I know how to use if, else and switch and I\u0027m practically a newb. I want to ask you how much time it takes to master programming, so I can write simple apps and games (at least mods)? Few months? years?\n\nI think it\u0027s better expressed in hours of actually doing it.\n\nAfter a couple dozen hours of coding, you can probably do things that look like magic to 99% of the population. You can also start to appreciate how far you still have to go. Or if you even want to."},{"CreatedByName":"Starwhip","CreatedById":83990,"CreatedDateTime":"2015-04-21T22:56:11Z","Content":"While we\u0027re on the subject of readability, I do love Python\u0027s interface and language. Nice and simple for beginners, yet has the higher-level operations that experienced programmers use.\n\nHowever, if you are not careful, you can easily turn any program into a mess. \n\n    import pygame,random,time,sysfrom pygame.locals import*pygame.init()mainClock=pygame.time.Clock()FPS=100def drawText(text,font,surface,x,y):    textobj=font.render(text,1,TEXTCOLOR)    textrect=textobj.get_rect()    textrect.topleft=(x,y)    surface.blit(textobj,textrect)font=pygame.font.SysFont(None,30)WHITE=(255,255,255)GREEN=(0,255,0)BLUE=(0,0,225)RED=(255,0,0)BLACK=(0,0,0)YELLOW=(255,255,0)TEXTCOLOR=(WHITE)WINDOWHIGHT=768WINDOWWIDTH=1366SCORE=0BADDIEMINSPEED=3BADDIEMAXSPEED=10ADDNEWBADDIERATE=20ADDSUPERBADDIERATE=150BADDIEMINSIZE=10BADDIEMAXSIZE=50ROCKETSPEED=7ADDNEWROCKETRATE=8ROCKETSIZE=7PULSESPEED=10ADDNEWPULSERATE=25PULSESIZE=30MINESIZE=25ADDNEWMINERATE=20SUPERSIZE=50NEWPOINTSQUARE=50POINTSQUARESIZE=20SPECIALPOINTSQUARE=500DIFFCOUNTER = 0def terminate():    pygame.quit()    sys.exit()def playerhitbaddie(playerRect,baddies):    global player1Health    for b in baddies:        if doRectsOverlap(b[\u0027rect\u0027],playerRect):            baddies.remove(            player1Health-=1            return player1Healthdef playerhitsuperbaddie(playerRect,superbaddies):    global player1Health    for s in superbaddies:        if doRectsOverlap(s[\u0027rect\u0027],playerRect):            superbaddies.remove(s)            player1Health-=1            return player1Healthdef player2hitbaddie(player2Rect,baddies):    global player2Health    for b in baddies:        if doRectsOverlap(b[\u0027rect\u0027],player2Rect):            baddies.remove(            player2Health-=1            return player2Healthdef player2hitsuperbaddie(player2Rect,superbaddies):    global player2Health    for s in superbaddies:        if doRectsOverlap(s[\u0027rect\u0027],player2Rect):            superbaddies.remove(s)            player2Health-=1            return player2Healthdef rocket2hitbaddie(rockets2,baddies):    global SCORE    for r in rockets2:        for t in baddies:            if doRectsOverlap(r[\u0027rect\u0027],t[\u0027rect\u0027]):                rockets2.remove(r)                baddies.remove(t)                SCORE\u002B=1                return SCOREdef pulse2hitbaddie(pulses2,baddies):    global SCORE    for p in pulses2:        for t in baddies:            if doRectsOverlap(p[\u0027rect\u0027],t[\u0027rect\u0027]):                baddies.remove(t)                SCORE\u002B=1                return SCOREdef pulse2hitsuperbaddie(pulses2,superbaddies):    global SCORE    for p in pulses2:        for t in superbaddies:            if doRectsOverlap(p[\u0027rect\u0027],t[\u0027rect\u0027]):                superbaddies.remove(t)                SCORE\u002B=10                return SCORE           def rockethitbaddie(rockets,baddies):    global SCORE    for r in rockets:        for t in baddies:            if doRectsOverlap(r[\u0027rect\u0027],t[\u0027rect\u0027]):                rockets.remove(r)                baddies.remove(t)                SCORE\u002B=1                return SCOREdef pulsehitbaddie(pulses,baddies):    global SCORE    for p in pulses:        for t in baddies:            if doRectsOverlap(p[\u0027rect\u0027],t[\u0027rect\u0027]):                baddies.remove(t)                SCORE\u002B=1                return SCOREdef minehitsuperbaddie(mines,superbaddies):    for m in mines:        for t in superbaddies:            if doRectsOverlap(m[\u0027rect\u0027],t[\u0027rect\u0027]):                mineImage=pygame.image.load(\u0022C:/Python31/python images/mineExp1.png\u0022)def pulsehitsuperbaddie(pulses,superbaddies):    global SCORE    for p in pulses:        for t in superbaddies:            if doRectsOverlap(p[\u0027rect\u0027],t[\u0027rect\u0027]):                superbaddies.remove(t)                SCORE\u002B=10                return SCOREdef waitForPlayerToPressKey():    while True:        for event in pygame.event.get():            if event.type==MOUSEBUTTONDOWN:                return            if event.type==QUIT:                terminate()            if event.type==KEYDOWN:                if event.key==K_ESCAPE:                    terminate()                returndef doRectsOverlap(rect1,rect2):    for a,b in [(rect1,rect2),(rect2,rect1)]:        #check if a\u0027s corners are inside b        if ((isPointInsideRect(a.left,a.top,)or            (isPointInsideRect(a.left,a.bottom,)or            (isPointInsideRect(a.right,a.top,)or            (isPointInsideRect(a.right,a.bottom,)):            return True    return Falsedef isPointInsideRect(x,y,rect):    if(x \u003E rect.left) and (x \u003C rect.right) and (y \u003E rect.top) and (y \u003C rect.bottom):        return True    else:        return Falsewindow1=pygame.display.set_mode((WINDOWWIDTH,WINDOWHIGHT),pygame.FULLSCREEN)window1.fill(BLACK)pygame.mouse.set_visible(False)pygame.display.update()playerImage=pygame.image.load(\u0022C:/Python31/python images/ShipImage.png\u0022)playerRect=playerImage.get_rect()player1Sign=pygame.image.load(\u0022C:/Python31/python images/ShipImage.png\u0022)player1Rect=playerImage.get_rect()player2Image=pygame.image.load(\u0022C:/Python31/python images/ShipImage2.png\u0022)player2Rect=playerImage.get_rect()player2Sign=pygame.image.load(\u0022C:/Python31/python images/ShipImage2.png\u0022)player2SignRect=player2Sign.get_rect()baddieImage=pygame.image.load(\u0022C:/Python31/python images/asteroid.png\u0022)superBaddieImage=pygame.image.load(\u0022C:/Python31/python images/super asteroid.png\u0022)pulseImage=pygame.image.load(\u0022C:/Python31/python images/pulse image.png\u0022)pulseSign=pygame.image.load(\u0022C:/Python31/python images/pulse image.png\u0022)pulseRect=pulseSign.get_rect()rocketSign=pygame.image.load(\u0022C:/Python31/python images/rocket.png\u0022)rocketRect=rocketSign.get_rect()rocketImage=pygame.image.load(\u0022C:/Python31/python images/rocket.png\u0022)pulse2Image=pygame.image.load(\u0022C:/Python31/python images/pulse image.png\u0022)pulse2Sign=pygame.image.load(\u0022C:/Python31/python images/pulse image.png\u0022)pulse2Rect=pulseSign.get_rect()rocket2Sign=pygame.image.load(\u0022C:/Python31/python images/rocket.png\u0022)rocket2Rect=rocketSign.get_rect()rocket2Image=pygame.image.load(\u0022C:/Python31/python images/rocket.png\u0022)mineExpImage=pygame.image.load(\u0022C:/Python31/python images/mineExp1.png\u0022)mineImage=pygame.image.load(\u0022C:/Python31/python images/mineImage.png\u0022)pointSquareImage=pygame.image.load(\u0022C:/Python31/python images/pointSquareImage.png\u0022)pointSquareImage2=pygame.image.load(\u0022C:/Python31/python images/pointSquareImage2.png\u0022)StartUpScreen=pygame.image.load(\u0022C:/Python31/python images/dodgerStartupScreen.png\u0022)StartUpRect=StartUpScreen.get_rect()pygame.display.update()MOVESPEED=4startUpMusic=pygame.mixer.Sound(\u0022C:/Python31/python/FSX06.wav\u0022)backgroundMusic=pygame.mixer.Sound(\u0022C:/Python31/python/FSX02.wav\u0022)backgroundMusic2=pygame.mixer.Sound(\u0022C:/Python31/python/FSX08.wav\u0022)explosionSound=pygame.mixer.Sound(\u0022C:/Python31/python/Exp_OilRig02.wav\u0022)pickUpSound=pygame.mixer.Sound(\u0022C:/Python31/python/sbitmsel.wav\u0022)startUpMusic.play()StartUpRect.topleft=(300,WINDOWHIGHT/2)window1.blit(StartUpScreen,StartUpRect)drawText(\u0027Asteroid Frontier\u0027,font,window1,(WINDOWWIDTH/3),(WINDOWHIGHT/3))pygame.display.update()time.sleep(.5)drawText(\u0027Press any key to start\u0027,font,window1,(WINDOWWIDTH/3)-30,(WINDOWHIGHT/3)\u002B50)pygame.display.update()waitForPlayerToPressKey()startUpMusic.stop()window1.fill(BLACK)def Intro():    startUpMusic.play()    drawText(\u0027The Red Squares are ammunition. Collect to replenish rockets and pulses\u0027,font,window1,(WINDOWWIDTH/3),(WINDOWHIGHT/3)-50)    pygame.display.update()    time.sleep(.2)    drawText(\u0027The blue Squares are worth points\u0027,font,window1,(WINDOWWIDTH/3),(WINDOWHIGHT/3))    pygame.display.update()    time.sleep(.2)    drawText(\u0027The asteroids will destroy your Ship, avoid them at all costs\u0027,font,window1,(WINDOWWIDTH/3),(WINDOWHIGHT/3)\u002B50)    pygame.display.update()    time.sleep(.2)    drawText(\u0027The flaming asteroids are unaffected by rockets\u0027,font,window1,(WINDOWWIDTH/3),(WINDOWHIGHT/3)\u002B100)    pygame.display.update()    time.sleep(.2)    drawText(\u0027P1: use arrow keys to move, n to fire rockets and SPACEBAR to fire pulses\u0027,font,window1,(WINDOWWIDTH/3)-50,(WINDOWHIGHT/3)\u002B150)    drawText(\u0027P2: use WASD keys to move, q to fire rockets and Tab to fire pulses\u0027,font,window1,(WINDOWWIDTH/3),(WINDOWHIGHT/3)\u002B170)    pygame.display.update()    time.sleep(.2)    drawText(\u0027Good Luck!\u0027,font,window1,(WINDOWWIDTH/3),(WINDOWHIGHT/3)\u002B220)    pygame.display.update()    waitForPlayerToPressKey()    startUpMusic.stop()topScore=0pointSquarecounter=0specialFoodCounter=0while True:    file_path=\u0027C:\\\\Python31\\\\python\\\\dodger high scores.txt\u0027    file=open(file_path,\u0022r\u0022)    for line in file:        topScore=line        topScore=float(topScore)    file.close()    rocketlimit=20    pulselimit=10    rocketlimit2=20    pulselimit2=10    minelimit=1000    mines=[]    mineaddcounter=5    pointSquares=[]    specialFoods=[]    baddies=[]    superbaddies=[]    DriftA = 0    rockets=[]    pulses=[]    pulseaddcounter=0    rocketaddcounter=0    Drift = 0    rockets2=[]    pulses2=[]    pulseaddcounter2=0    rocketaddcounter2=0    baddieaddcounter=0    superbaddiecounter=0    playerRect.topleft=((WINDOWWIDTH/2)-50,WINDOWHIGHT-50)    player2Rect.topleft=((WINDOWWIDTH/2)\u002B50,WINDOWHIGHT-50)    player1Rect.topleft=(WINDOWWIDTH-70,WINDOWHIGHT-190)    player2SignRect.topleft=(0,WINDOWHIGHT-190)    rocketRect.topleft=(10,WINDOWHIGHT-90)    pulseRect.topleft=(0,WINDOWHIGHT-40)    rocket2Rect.topleft=(WINDOWWIDTH-120,WINDOWHIGHT-90)    pulse2Rect.topleft=(WINDOWWIDTH-130,WINDOWHIGHT-40)    moveLeft=moveLeft2=moveRight=moveRight2=moveUp=moveUp2=moveDown=moveDown2=False    reverseCheat=slowCheat=invincibleCheat=pauseCheat=rocketFiring=pulseFiring=mineFiring=rocketFiring2=pulseFiring2=player1IsDead=player2IsDead=False    intro=True    player1Health=5    player2Health=5    SCORE=0    ADDSUPERBADDIERATE=200    ADDNEWBADDIERATE = 30    DIFFCOUNTER = 0    while True:        SCORE\u002B=.01        if intro==True:            Intro()            intro=False        backgroundMusic.play()        for event in pygame.event.get():            if event.type==QUIT:                terminate()            if event.type==KEYDOWN:                if event.key==K_RALT:                    mineFiring=True                if event.key==ord(\u0027[\u0027):                    rocketFiring=True                if event.key==ord(\u0027]\u0027):                    pulseFiring=True                                    if event.key==ord(\u0027q\u0027):                    rocketFiring2=True                if event.key==K_TAB:                    pulseFiring2=True                                    if event.key==ord(\u0027z\u0027):                    reverseCheat=True                if event.key==ord(\u0027x\u0027):                    slowCheat=True                if event.key==ord(\u0027c\u0027):                    invincibleCheat=True                if event.key==ord(\u0027v\u0027):                    pauseCheat=True                if event.key==K_LEFT:                    moveRight=False                    moveLeft=True                if event.key==K_RIGHT:                    moveRight=True                    moveLeft=False                if event.key==K_UP:                    moveDown=False                    moveUp=True                if event.key==K_DOWN:                    moveDown=True                    moveUp=False                if event.key==ord(\u0027d\u0027):                    moveRight2=True                    moveLeft2=False                if event.key==ord(\u0027a\u0027):                    moveRight2=False                    moveLeft2=True                if event.key==ord(\u0027w\u0027):                    moveDown2=False                    moveUp2=True                if event.key==ord(\u0027s\u0027):                    moveDown2=True                    moveUp2=False            if event.type==KEYUP:                if event.key==K_RALT:                    mineFiring=False                if event.key==ord(\u0027q\u0027):                    rocketFiring2=False                if event.key==K_TAB:                    pulseFiring2=False                                    if event.key==ord(\u0027[\u0027):                    rocketFiring=False                if event.key==ord(\u0027]\u0027):                    pulseFiring=False                                    if event.key==ord(\u0027z\u0027):                    reverseCheat=False                if event.key==ord(\u0027c\u0027):                    invincibleCheat=False                if event.key==ord(\u0027x\u0027):                    slowCheat=False                if event.key==ord(\u0027v\u0027):                    pauseCheat=False                if event.key==K_ESCAPE:                    pygame.quit()                    sys.exit()                if event.key==K_LEFT:                    moveLeft=False                if event.key==K_RIGHT:                    moveRight=False                if event.key==K_UP:                    moveUp=False                if event.key==K_DOWN:                    moveDown=False                if event.key==ord(\u0027d\u0027):                    moveRight2=False                if event.key==ord(\u0027a\u0027):                    moveLeft2=False                if event.key==ord(\u0027w\u0027):                    moveUp2=False                if event.key==ord(\u0027s\u0027):                    moveDown2=False        #adds new rockets        if player1IsDead==False:            if rocketlimit\u003E=1:                if rocketFiring==True:                    rocketaddcounter\u002B=1                if rocketaddcounter==ADDNEWROCKETRATE:                        rocketlimit-=1                        rocketaddcounter=0                        rocketSize=ROCKETSIZE                        newRocket={\u0027rect\u0027: pygame.Rect(playerRect.centerx-4,playerRect.centery,rocketSize,rocketSize),                                   \u0027speed\u0027: ROCKETSPEED,                                   \u0027surface\u0027: pygame.transform.scale(rocketImage,(rocketSize,rocketSize)),                                   \u0027drift\u0027:random.randint(-1,1),}                        rockets.append(newRocket)            if pulselimit\u003E=1:                if pulseFiring==True:                    pulseaddcounter\u002B=1                if pulseaddcounter==ADDNEWPULSERATE:                        pulselimit-=1                        pulseaddcounter=0                        pulseSize=PULSESIZE                        newPulse={\u0027rect\u0027: pygame.Rect(playerRect.centerx-15,playerRect.centery,pulseSize,pulseSize),                                   \u0027speed\u0027: PULSESPEED,                                   \u0027surface\u0027: pygame.transform.scale(pulseImage,(pulseSize,pulseSize)),}                        pulses.append(newPulse)        if player2IsDead==False:            if rocketlimit2\u003E=1:                if rocketFiring2==True:                    rocketaddcounter2\u002B=1                if rocketaddcounter2==ADDNEWROCKETRATE:                        rocketlimit2-=1                        rocketaddcounter2=0                        rocketSize=ROCKETSIZE                        newRocket2={\u0027rect\u0027: pygame.Rect(player2Rect.centerx-4,player2Rect.centery,rocketSize,rocketSize),                                   \u0027speed\u0027: ROCKETSPEED,                                   \u0027surface\u0027: pygame.transform.scale(rocketImage,(rocketSize,rocketSize)),                                   \u0027drift\u0027:random.uniform(-2,2),}                        rockets2.append(newRocket2)            if pulselimit2\u003E=0:                if pulseFiring2==True:                    pulseaddcounter2\u002B=1                if pulseaddcounter2==ADDNEWPULSERATE:                        pulselimit2-=1                        pulseaddcounter2=0                        pulseSize=PULSESIZE                        newPulse2={\u0027rect\u0027: pygame.Rect(player2Rect.centerx-15,player2Rect.centery,pulseSize,pulseSize),                                   \u0027speed\u0027: PULSESPEED,                                   \u0027surface\u0027: pygame.transform.scale(pulseImage,(pulseSize,pulseSize)),}                        pulses2.append(newPulse2)        if mineFiring==True:            mineaddcounter\u002B=1        if minelimit\u003E0:                              if mineaddcounter==ADDNEWMINERATE:                    minelimit-=1                    mineaddcounter=0                    mineSize=MINESIZE                    newMine={\u0027rect\u0027: pygame.Rect(playerRect.centerx-150,playerRect.centery-150,mineSize,mineSize),                             \u0027surface\u0027: pygame.transform.scale(mineImage,(mineSize,mineSize)),}                    mines.append(newMine)        if not pauseCheat:            #adds new asteroids at the top of screen            baddieaddcounter\u002B=1            if baddieaddcounter==ADDNEWBADDIERATE:                    baddieaddcounter=0                    baddieSize=random.randint(BADDIEMINSIZE,BADDIEMAXSIZE)                    newBaddie={\u0027rect\u0027: pygame.Rect(random.randint(0,WINDOWWIDTH-baddieSize),0-baddieSize,baddieSize,baddieSize),                               \u0027speed\u0027: random.randint(BADDIEMINSPEED,BADDIEMAXSPEED),                               \u0027surface\u0027:pygame.transform.scale(baddieImage,(baddieSize,baddieSize)),}                    baddies.append(newBaddie)            superbaddiecounter\u002B=1            if superbaddiecounter==ADDSUPERBADDIERATE:                superbaddiecounter=0                superBaddieSize=SUPERSIZE                newSuperBaddie={\u0027rect\u0027: pygame.Rect(random.randint(0,WINDOWWIDTH-superBaddieSize),0-superBaddieSize,superBaddieSize,superBaddieSize*2),                                \u0027speed\u0027: random.randint(BADDIEMINSPEED,BADDIEMAXSPEED),                                \u0027surface\u0027: pygame.transform.scale(superBaddieImage,(superBaddieSize,superBaddieSize*2)),}                superbaddies.append(newSuperBaddie)        for r in rockets:            #moves the rockets up            r[\u0027rect\u0027].move_ip(r[\u0027drift\u0027],r[\u0027speed\u0027]*-1)            r[\u0027speed\u0027] \u002B= .05            #removes rockets a the top of the screen            if r[\u0027rect\u0027].top\u003C0:                rockets.remove(r)        for p in pulses:            #moves the pulses up            p[\u0027rect\u0027].move_ip(0,p[\u0027speed\u0027]*-1)            #removes pulses at the top of the screen            if p[\u0027rect\u0027].top\u003C0:                pulses.remove(p)        for r in rockets2:            DriftIncrement = random.randint(-2,2)            Drift \u002B= DriftIncrement            if Drift \u003C 2:                Drift = 2            if Drift \u003C -2:                Drift = -2             #moves the rockets up            r[\u0027rect\u0027].move_ip(r[\u0027drift\u0027],r[\u0027speed\u0027]*-1)            r[\u0027speed\u0027] \u002B= .05            #removes rockets a the top of the screen            if r[\u0027rect\u0027].top\u003C0:                rockets2.remove(r)        for p in pulses2:            #moves the pulses up            p[\u0027rect\u0027].move_ip(0,p[\u0027speed\u0027]*-1)            #removes pulses at the top of the screen            if p[\u0027rect\u0027].top\u003C0:                pulses2.remove(p)        for b in baddies:            if not reverseCheat and not slowCheat and not pauseCheat:                b[\u0027rect\u0027].move_ip(DriftA,b[\u0027speed\u0027])            elif reverseCheat:                b[\u0027rect\u0027].move_ip(0,-5)            elif slowCheat:                b[\u0027rect\u0027].move_ip(0,1)            elif pauseCheat:                b[\u0027rect\u0027].move_ip(0,b[\u0027speed\u0027]-b[\u0027speed\u0027])        for b in baddies[:]:            #removes asteroids at the botom of the screen            if b[\u0027rect\u0027].top\u003EWINDOWHIGHT:                baddies.remove(        for b in superbaddies:            if not slowCheat and not pauseCheat:                b[\u0027rect\u0027].move_ip(0,b[\u0027speed\u0027])            elif pauseCheat:                b[\u0027rect\u0027].move_ip(0,b[\u0027speed\u0027]-b[\u0027speed\u0027])            elif slowCheat:                b[\u0027rect\u0027].move_ip(0,2)        for b in superbaddies[:]:            if b[\u0027rect\u0027].top\u003EWINDOWHIGHT:                superbaddies.remove(        #creates point squares        pointSquarecounter\u002B=1        if pointSquarecounter\u003E=NEWPOINTSQUARE:            pointSquarecounter=0            newFood={\u0027rect\u0027: pygame.Rect(random.randint(0,WINDOWWIDTH-POINTSQUARESIZE),0-POINTSQUARESIZE,POINTSQUARESIZE,POINTSQUARESIZE),                     \u0027surface\u0027:pygame.transform.scale(pointSquareImage,(POINTSQUARESIZE,POINTSQUARESIZE))}             pointSquares.append(newFood)        specialFoodCounter\u002B=1        if specialFoodCounter\u003E=SPECIALPOINTSQUARE:            specialFoodCounter=0            newFood={\u0027rect\u0027: pygame.Rect(random.randint(0,WINDOWWIDTH-POINTSQUARESIZE),0-POINTSQUARESIZE,POINTSQUARESIZE,POINTSQUARESIZE),                     \u0027surface\u0027:pygame.transform.scale(pointSquareImage2,(POINTSQUARESIZE,POINTSQUARESIZE))}             specialFoods.append(newFood)        #moves the point squares        window1.fill(BLACK)        for pointSquare in pointSquares[:]:            if pointSquare[\u0027rect\u0027].top\u003EWINDOWHIGHT:                pointSquares.remove(pointSquare)        for pointSquare in specialFoods[:]:            if pointSquare[\u0027rect\u0027].top\u003EWINDOWHIGHT:                specialFoods.remove(pointSquare)        for pointSquare in pointSquares[:]:            pointSquare[\u0027rect\u0027].move_ip(0,random.randint(1,5))        for pointSquare in specialFoods[:]:            pointSquare[\u0027rect\u0027].move_ip(0,random.randint(2,6))        if player1IsDead==False:                if moveDown and playerRect.bottom                playerRect.top\u002B=MOVESPEED                       if moveUp and playerRect.top\u003E0:                playerRect.top-=MOVESPEED            if moveLeft and playerRect.left\u003E0:                playerRect.left-=MOVESPEED            if moveRight and playerRect.right                playerRect.right\u002B=MOVESPEED        if player2IsDead==False:            if moveDown2 and player2Rect.bottom                player2Rect.top\u002B=MOVESPEED            if moveUp2 and player2Rect.top\u003E0:                player2Rect.top-=MOVESPEED            if moveLeft2 and player2Rect.left\u003E0:                player2Rect.left-=MOVESPEED            if moveRight2 and player2Rect.right                player2Rect.right\u002B=MOVESPEED        #checks if player has collided with point square        if player1IsDead==False:            for pointSquare in pointSquares[:]:                if doRectsOverlap(pointSquare[\u0027rect\u0027],playerRect):                    pickUpSound.play()                    pointSquares.remove(pointSquare)                    SCORE\u002B=1            for special in specialFoods[:]:                if doRectsOverlap(special[\u0027rect\u0027],playerRect):                    pickUpSound.play()                    specialFoods.remove(special)                    rocketlimit\u002B=25                    pulselimit\u002B=10                    if player1Health \u003C 5:                        player1Health \u002B= 1        if player2IsDead==False:            for pointSquare in pointSquares[:]:                if doRectsOverlap(pointSquare[\u0027rect\u0027],player2Rect):                    pickUpSound.play()                    pointSquares.remove(pointSquare)                    SCORE\u002B=1            for special in specialFoods[:]:                if doRectsOverlap(special[\u0027rect\u0027],player2Rect):                    pickUpSound.play()                    specialFoods.remove(special)                    rocketlimit2\u002B=25                    pulselimit2\u002B=10                    if player2Health \u003C 5:                        player2Health \u002B= 1        rockethitbaddie(rockets,baddies)        pulsehitbaddie(pulses,baddies)        pulsehitsuperbaddie(pulses,superbaddies)        rocket2hitbaddie(rockets2,baddies)        pulse2hitbaddie(pulses2,baddies)        pulse2hitsuperbaddie(pulses2,superbaddies)        #draws objects onto the screen        for pointSquare in pointSquares:            window1.blit(pointSquare[\u0027surface\u0027],pointSquare[\u0027rect\u0027])        for special in specialFoods:            window1.blit(special[\u0027surface\u0027],special[\u0027rect\u0027])        for p in pulses:            window1.blit(p[\u0027surface\u0027],p[\u0027rect\u0027],)        for p in pulses2:            window1.blit(p[\u0027surface\u0027],p[\u0027rect\u0027],)        for b in baddies:            window1.blit(b[\u0027surface\u0027],b[\u0027rect\u0027],)        for b in superbaddies:            window1.blit(b[\u0027surface\u0027],b[\u0027rect\u0027],)        for r in rockets:            window1.blit(r[\u0027surface\u0027],r[\u0027rect\u0027],)        for r in rockets2:            window1.blit(r[\u0027surface\u0027],r[\u0027rect\u0027],)        for m in mines:            window1.blit(m[\u0027surface\u0027],m[\u0027rect\u0027],)        window1.blit(playerImage,playerRect)        window1.blit(player2Image,player2Rect)        window1.blit(rocketSign,rocketRect)        window1.blit(pulseSign,pulseRect)        window1.blit(player1Sign,player1Rect)        window1.blit(player2Sign,player2SignRect)        window1.blit(rocket2Sign,rocket2Rect)        window1.blit(pulse2Sign,pulse2Rect)        if player1IsDead==False:            playerHealthCheck1=playerhitbaddie(playerRect,baddies)            if playerHealthCheck1==0:                if invincibleCheat==False:                    player1IsDead=True                    backgroundMusic.stop()                    explosionSound.play()                    playerImage=pygame.image.load(\u0022C:/Python31/python images/ShipExp1.png\u0022)                    window1.blit(playerImage,playerRect)                    pygame.display.update()                    time.sleep(0.5)                    playerImage=pygame.image.load(\u0022C:/Python31/python images/ShipExp2.png\u0022)                    window1.blit(playerImage,playerRect)                    pygame.display.update()                    time.sleep(0.5)                    playerImage=pygame.image.load(\u0022C:/Python31/python images/ShipExp3.png\u0022)                    window1.blit(playerImage,playerRect)                    pygame.display.update()                    time.sleep(0.5)                    pygame.display.update()                    explosionSound.stop()                    if player2IsDead==True:                        if SCORE\u003EtopScore:                            topScore=SCORE                            topScore=str(topScore)                            drawText(\u0027Score: %s\u0027 %(SCORE),font,window1,500,500)                            drawText(\u0027New high score!\u0027, font, window1, (WINDOWWIDTH/2),(WINDOWHIGHT/2))                            pygame.display.update()                            file_path=\u0027C:\\\\Python31\\\\python\\\\dodger high scores.txt\u0027                            file=open(file_path,\u0022w\u0022)                            file.write(topScore)                            file.close()                            time.sleep(2)                            SCORE=0                        break                    backgroundMusic.play()        if player1IsDead==False:            playerHealthCheck1=playerhitsuperbaddie(playerRect,superbaddies)            if playerHealthCheck1==0:                player1IsDead=True                backgroundMusic.stop()                explosionSound.play()                playerImage=pygame.image.load(\u0022C:/Python31/python images/ShipExp1.png\u0022)                window1.blit(playerImage,playerRect)                pygame.display.update()                time.sleep(0.5)                playerImage=pygame.image.load(\u0022C:/Python31/python images/ShipExp2.png\u0022)                window1.blit(playerImage,playerRect)                pygame.display.update()                time.sleep(0.5)                playerImage=pygame.image.load(\u0022C:/Python31/python images/ShipExp3.png\u0022)                window1.blit(playerImage,playerRect)                time.sleep(0.5)                explosionSound.stop()                if player2IsDead==True:                    if SCORE\u003EtopScore:                        topScore=SCORE                        topScore=str(topScore)                        drawText(\u0027Score: %s\u0027 %(SCORE),font,window1,500,500)                        drawText(\u0027New high score!\u0027, font, window1, (WINDOWWIDTH/2),(WINDOWHIGHT/2))                        pygame.display.update()                        file_path=\u0027C:\\\\Python31\\\\python\\\\dodger high scores.txt\u0027                        file=open(file_path,\u0022w\u0022)                        file.write(topScore)                        file.close()                        drawText(\u0027Score: %s\u0027 %(SCORE),font,window1,500,500)                        drawText(\u0027New high score!\u0027, font, window1, (WINDOWWIDTH/2),(WINDOWHIGHT/2))                        pygame.display.update()                        time.sleep(2)                        SCORE=0                    break                backgroundMusic.play()        if player2IsDead==False:            playerHealthCheck2=player2hitbaddie(player2Rect,baddies)            if playerHealthCheck2==0:                if invincibleCheat==False:                    player2IsDead=True                    backgroundMusic.stop()                    explosionSound.play()                    player2Image=pygame.image.load(\u0022C:/Python31/python images/ShipExp1.png\u0022)                    window1.blit(player2Image,player2Rect)                    pygame.display.update()                    time.sleep(0.5)                    player2Image=pygame.image.load(\u0022C:/Python31/python images/ShipExp2.png\u0022)                    window1.blit(player2Image,player2Rect)                    pygame.display.update()                    time.sleep(0.5)                    player2Image=pygame.image.load(\u0022C:/Python31/python images/ShipExp3.png\u0022)                    window1.blit(player2Image,player2Rect)                    pygame.display.update()                    time.sleep(0.5)                    pygame.display.update()                    explosionSound.stop()                    if player1IsDead==True:                        if SCORE\u003EtopScore:                            topScore=SCORE                            topScore=str(topScore)                            drawText(\u0027Score: %s\u0027 %(SCORE),font,window1,500,500)                            drawText(\u0027New high score!\u0027, font, window1, (WINDOWWIDTH/2),(WINDOWHIGHT/2))                            pygame.display.update()                            file_path=\u0027C:\\\\Python31\\\\python\\\\dodger high scores.txt\u0027                            file=open(file_path,\u0022w\u0022)                            file.write(topScore)                            file.close()                            drawText(\u0027Score: %s\u0027 %(SCORE),font,window1,500,500)                            drawText(\u0027New high score!\u0027, font, window1, (WINDOWWIDTH/2),(WINDOWHIGHT/2))                            pygame.display.update()                            time.sleep(2)                            SCORE=0                        break                    backgroundMusic.play()        if player2IsDead==False:            playerHealthCheck2=player2hitsuperbaddie(player2Rect,superbaddies)            if playerHealthCheck2==0:                player2IsDead=True                backgroundMusic.stop()                explosionSound.play()                player2Image=pygame.image.load(\u0022C:/Python31/python images/ShipExp1.png\u0022)                window1.blit(player2Image,player2Rect)                pygame.display.update()                time.sleep(0.5)                player2Image=pygame.image.load(\u0022C:/Python31/python images/ShipExp2.png\u0022)                window1.blit(player2Image,player2Rect)                pygame.display.update()                time.sleep(0.5)                player2Image=pygame.image.load(\u0022C:/Python31/python images/ShipExp3.png\u0022)                window1.blit(player2Image,player2Rect)                time.sleep(0.5)                explosionSound.stop()                if player1IsDead==True:                    if SCORE\u003EtopScore:                        topScore=SCORE                        topScore=str(topScore)                        drawText(\u0027Score: %s\u0027 %(SCORE),font,window1,500,500)                        drawText(\u0027New high score!\u0027, font, window1, (WINDOWWIDTH/2),(WINDOWHIGHT/2))                        pygame.display.update()                        file_path=\u0027C:\\\\Python31\\\\python\\\\dodger high scores.txt\u0027                        file=open(file_path,\u0022w\u0022)                        file.write(topScore)                        file.close()                        drawText(\u0027Score: %s\u0027 %(SCORE),font,window1,500,500)                        drawText(\u0027New high score!\u0027, font, window1, (WINDOWWIDTH/2),(WINDOWHIGHT/2))                        pygame.display.update()                        time.sleep(2)                        SCORE=0                    break                backgroundMusic.play()        drawText(\u0027Score: %s\u0027 %(SCORE),font,window1,10,0)        drawText(\u0027Top Score: %s\u0027 %(topScore),font,window1,10,40)        drawText(\u0027X%s\u0027 %(rocketlimit2),font,window1,40,WINDOWHIGHT-80)        drawText(\u0027X%s\u0027 %(pulselimit2),font,window1,40,WINDOWHIGHT-40)        drawText(\u0027Health: %s/5\u0027 %(player2Health),font,window1,0,WINDOWHIGHT-120)        drawText(\u0027Health: %s/5\u0027 %(player1Health),font,window1,WINDOWWIDTH-120,WINDOWHIGHT-120)        drawText(\u0027X%s\u0027 %(rocketlimit),font,window1,WINDOWWIDTH-80,WINDOWHIGHT-80)        drawText(\u0027X%s\u0027 %(pulselimit),font,window1,WINDOWWIDTH-80,WINDOWHIGHT-40)        if pauseCheat==True:            drawText(\u0027Freeze!\u0027,font,window1,(WINDOWWIDTH/3)-80,(WINDOWHIGHT/3)\u002B50)        if slowCheat==True:            drawText(\u0027MATRIX!!!\u0027,font,window1,(WINDOWWIDTH/2)-80,(WINDOWHIGHT/2)\u002B50)        pygame.display.update()                   mainClock.tick(FPS)    TEXTCOLOR=(RED)    drawText(\u0027GAME OVER\u0027, font, window1, (WINDOWWIDTH/3),(WINDOWHIGHT/3))    pygame.display.update()    time.sleep(1)    TEXTCOLOR=(GREEN)    drawText(\u0027Press any key to play again.\u0027,font,window1,(WINDOWWIDTH/3)-80,(WINDOWHIGHT/3)\u002B50)    pygame.display.update()    time.sleep(1)    waitForPlayerToPressKey()    backgroundMusic2.stop()    TEXTCOLOR=(WHITE)    playerImage=pygame.image.load(\u0022C:/Python31/python images/ShipImage.png\u0022)    player2Image=pygame.image.load(\u0022C:/Python31/python images/ShipImage2.png\u0022)    window1.fill(BLACK)\n\nThis was my first Python / PyGame \u0022game\u0022. It was a heavily modified version of the example \u0022Dodger\u0022 program that was included in a learning manual I got.\n\nAnd it\u0027s about twice as long as it needs to be. Many things were hardcoded that could become modular.\n\nSo: Learning to do basics? Maybe a few months. Competency? A year or two. Mastering? Never. Though you\u0027ll get pretty darn good in a few more years."},{"CreatedByName":"magnemoe","CreatedById":57801,"CreatedDateTime":"2015-04-21T23:57:18Z","Content":"\u003E \n\u003E Coding is a process of figuring out want you want to do, and then either knowing how to do it or looking it up online, as you get more experienced, you move away from the latter more and more, but you never stop having to look stuff up.\n\nThis, I\u0027m an programmer with 20 years of experience, I use google and some other sites all the time. Last problem, how to fix metadata on images taken on smart phones so their thumbnails shows correctly orientation on all platforms. Google let me solve the issue in two days. \n\nLooking back 20 years Google and other search engines is probably one of the most powerful tools created. Use it, other has had the same problem before.\n\n- - - Updated - - -\n\n\u003E \n\u003E While we\u0027re on the subject of readability, I do love Python\u0027s interface and language. Nice and simple for beginners, yet has the higher-level operations that experienced programmers use.\n\u003E However, if you are not careful, you can easily turn any program into a mess. \n\u003E \n\u003E This was my first Python / PyGame \u0022game\u0022. It was a heavily modified version of the example \u0022Dodger\u0022 program that was included in a learning manual I got.\n\u003E \n\u003E And it\u0027s about twice as long as it needs to be. Many things were hardcoded that could become modular.\n\u003E \n\u003E So: Learning to do basics? Maybe a few months. Competency? A year or two. Mastering? Never. Though you\u0027ll get pretty darn good in a few more years.\n\nYes programs into mess, I have some old legacy customers I also has old programs, some programs has had so many modifications I kind of have to apply pressure: this has to be rebuild. \n\nIts simply 20 layers of changes on top of each others so I can not read my own code. \n\nRemember my only real game it was on C64, It was an car driving down the screen who was modified text objects getting written to screen, you could move left and right and jump. \n\nNever made another game but tried, problem is that the minimum quality demands increases to fast for an single guy to make something in his spare time is hard."},{"CreatedByName":"Fel","CreatedById":57121,"CreatedDateTime":"2015-04-22T01:32:49Z","Content":"\u003E \n\u003E I\u0027ve started to learn programming in C# an now I know how to use if, else and switch and I\u0027m practically a newb. I want to ask you how much time it takes to master programming, so I can write simple apps and games (at least mods)? Few months? years?\n\n\u003E \n\u003E Extra cookies for people who understand what this does and why it is probably the most efficient way (I wrote that during classes):\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E     double mysterious(unsigned int k){        unsigned long long int value = (1023LL - k) \u003C\u003C 52         return 2.0 - *((double*)\u0026value);}\n\u003E \n\u003E \n\u003E ;-)\n\nI didn\u0027t see it until pointed out, but this is exactly what a master of programming should know, and know well.\n\nThe base equation is:\n\nsum(r^n,n=0,k) = (r^(k\u002B1) - 1) / (r - 1)\n\nwhere r = 0.5\n\nsimplified\n\n(0.5^(k \u002B 1) - 1 ) / (0.5 - 1)\n\n(1 - 0.5^(k\u002B1)) / 0.5\n\n2 - 0.5^k\n\nbitshift (a \u003C\u003C ![B)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png) is a simple O(1) operation (it has an opcode representation) that represents (a \\* 2^![B)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png). Power functions are often heavy weight and called in the silliest cases; (I don\u0027t believe there\u0027s native a exp opcode but...) where multiplication would result in fewer cycles... however, it will only be O(1) if the architecture supports operations on the size at which it is implemented. Since \u0022long long int\u0022 isn\u0027t actually defined as a fixed data type, it could be 512bit or 8bit for all C\u002B\u002B cares (re: compiler specific). long int just has to be equal to or greater than an int.\n\nNow, an unsigned double is something akin to sum(s(n)\\*0.5^n,n=0,52) (well... sometimes) while an unsigned int\\_64 is akin to sum(s(n)\\*2^n,n=0,64)\n\nThere is a major difference between knowing something will work and knowing WHY it works and what its limitations are. If you can improve efficiency by using an O(1) goto, don\u0027t say \u0022the compiler will optimize better than I can\u0022 because it cannot and won\u0027t. Compiler optimization depends strongly on the master programmers programming the compiler and depends 100% on you making your code in a manner that the compiler can best optimize.\n\nIf you don\u0027t know what the hardware is capable of, what the OS libraries contain, or what your compiler is actually doing; how can you take advantage of the latest hardware, or use optimizing routines, without adding in dead weight like unity or C#. \n\nI will say that anyone who complains this is too \u0022ugly\u0022 to be used... really shouldn\u0027t...It isn\u0027t stable, yes; but you know all those libraries you call, they\u0027re filled with extern asm, bitshifts, memory hacks, compiler directives with variances on architecture. You\u0027ll even see macros still in use to do things that inline functions cannot (though, I\u0027m not fond of that use). \u0022Portable code\u0022 is a complete misnomer anyways; it usually means \u0022I use a library so I don\u0027t have to test my code on any system but Windows! I l33t programmer!\u0022 Now, libs may or may not be slower than native functions, they may be faster, they may cause problems on certain systems, they may fix problems on other systems; but libs are not a replacement for experience... and they certainly don\u0027t mean you do not test your code cross platform \\*-\\_\\_-\n\nSo can you program? Yeah... programming is easy. But realizing that properties are simply functions and that C# \u0022may or may not\u0022 (I tend to feel may not) inline them... or pushing a for loop in a property and repeatedly calling it despite the data not changing -\\_\\_-;. Heck, using object oriented programming because it is the \u0022in thing\u0022 when linear programming, or even simple data containers (OOP is really about polymorphism. If you don\u0027t need polymorphism you don\u0027t need OOP.)\n\nSee, the difference between the programmer and the master programmer isn\u0027t what you can program; it is how you manage once you run out of resources and can no longer say \u0022we\u0027ll just require our users to have x ram/cpu/gpu\u0022 The master programmer does truly amazing things, such as writing a GUI based OS in assembly that still fits on a 1.44mb disk ([http://menuetos.net/](http://menuetos.net/)). \n\nI\u0027m not a master programmer... I don\u0027t really consider myself intermediate given my level of knowledge on algorithms and optimizations is zilch. I know some aspects of cpu architecture, but not a lot. Some algorithms and how they work, but not a lot... but getting to a level of programming which you can consider yourself a master requires understanding far more than most people are willing to learn.\n\n**Edited \u003Ctime datetime=\u00222015-04-22T01:36:31Z\u0022 title=\u002204/22/2015 01:36  AM\u0022 data-short=\u00229 yr\u0022\u003EApril 22, 2015\u003C/time\u003E by Fel**"},{"CreatedByName":"*Aqua*","CreatedById":103926,"CreatedDateTime":"2015-04-22T04:20:52Z","Content":"Thanks for complementing my code ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif) but I\u0027m not a master programmer. Yes, I try to do \u0022little\u0022 optimizations like the one in my example. I even tend to \u0022over-optimize\u0022 things which slows me down a lot.\n\nIMHO that isn\u0027t enough.\n\nA good programmer doesn\u0027t just write efficient code he also writes it in a way others can read. Because usually you forget what you did there and usually you work in a team. So code should be easy to understand. Optimizations should only be applied to things which slows down a critical part of a software. It\u0027s not easy to follow that rules (at least for me).\n\n\u003E \n\u003E [http://menuetos.net/](http://menuetos.net/)\n\nAh I remember that one! ![:D](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif) That\u0027s where I learned how a boot loader works. Ok it was at least 10 years ago and I forgot what I did there but man, it\u0027s so nostalgic!\n\nIt\u0027s also the the reason why I switched to a high-level programming language. In assembler you have to write pages and pages of code for the simplest things. ![:confused:](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif)\n\n@bartekkru99 \n\nC# is a good start, especially if you want to create mods for KSP. If you think it\u0027s too much for you try Java which feels like C# but is a bit more strict. A more strict language offers less possible ways to do something which in turn is more clear and easier to understand."},{"CreatedByName":"Firwen","CreatedById":140631,"CreatedDateTime":"2015-04-22T06:12:43Z","Content":"\u003E \n\u003E You guys are right. It is almost unreadable. That\u0027s the reason why I don\u0027t like C\u002B\u002B. It\u0027s just too easy to make a mess of a code nobody comprehends. And you have to be cautious to not accidentally do something wrong.\n\nNobody force you to do monkey coding in C\u002B\u002B ^^, C\u002B\u002B is perfectly readable and easy to understand done right, like any language.\n\n@[**bartekkru99**](https://forum.kerbalspaceprogram.com/members/78643-bartekkru99) If you want to start by something easy, when you can learn about the different basic concepts of programming ( recursion, loop, function, object-oriented, design pattern), try Python as language. It is a language that allow you to get result fast and appreciate what you do ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)\n\nSecond language, try C. which will allow you to understand the low level aspect of programming: manual memory management, memory protection, pointers, etc, etc."},{"CreatedByName":"hardturkeycider","CreatedById":141235,"CreatedDateTime":"2015-04-24T20:38:33Z","Content":"I suppose you\u0027re a master when you can\u0027t find the excersize in the excersize ![:P](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif) (much like a body builder would plateau, as in, lifting weights loses its efficacy)"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2015-04-25T07:08:06Z","Content":"\u003E \n\u003E Extra cookies for people who understand what this does and why it is probably the most efficient way (I wrote that during classes):\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E     double mysterious(unsigned int k){        unsigned long long int value = (1023LL - k) \u003C\u003C 52         return 2.0 - *((double*)\u0026value);}\n\u003E \n\u003E \n\u003E ;-)\n\nChallenge accepted. A faster version.\n\n    double mysterious2(unsigned int k){\tunsigned long long int value = 0x4000000000000000LL - (0x0010000000000000LL \u003E\u003E k);\treturn *((double*)\u0026value);}\n\nAlso, it works correctly for k \u003E 1023. ![:P](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif)"},{"CreatedByName":"jwenting","CreatedById":57735,"CreatedDateTime":"2015-04-25T12:14:15Z","Content":"[http://norvig.com/21-days.html](http://norvig.com/21-days.html) there you go"}]}