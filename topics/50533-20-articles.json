{"TopicId":50533,"ForumId":34,"TopicTitle":"[1.8.x-1.12.x] Module Manager 4.2.3 (July 03th 2023) - Fireworks season","CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2013-10-25T13:01:36Z","PageNum":20,"Articles":[{"CreatedByName":"Arrowmaster","CreatedById":57556,"CreatedDateTime":"2014-03-23T16:06:03Z","Content":"\n\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[*]:HAS[@RESOURCE[MonoPropellant],!MODULE[ModuleCommand]]:Final\u003Cbr\u003E{\u003Cbr\u003E\t@category = Control\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EShould be what you want.\u003C/p\u003E\n"},{"CreatedByName":"BudgetHedgehog\uFEFF","CreatedById":104112,"CreatedDateTime":"2014-03-23T16:35:33Z","Content":"\n\u003Cp\u003ELurvly, I\u0027ll give that a shot when I\u0027m home, thanks!\u003C/p\u003E\n"},{"CreatedByName":"Senshi","CreatedById":57692,"CreatedDateTime":"2014-03-23T19:41:36Z","Content":"\n\u003Cp\u003EWould it be possible to allow calculations using ModuleManager with reasonable effort?\u003C/p\u003E\u003Cp\u003EThis would allow to apply \u0022flat\u0022 scalings very easily, such as:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[*]:HAS[@MODULE[ModuleCommand]]\u003Cbr\u003E\t@MODULE[ModuleReactionWheel]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@PitchTorque = @value * 0.1\u003Cbr\u003E\t\t@YawTorque = @value * 0.1\u003Cbr\u003E\t\t@RollTorque = @value * 0.1\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ETo achieve the same right now, you need to access every single part, calculate the new value yourself and add it as a new definition. And whenever some part mod gets added/updated, you have to revisit it...\u003C/p\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2014-03-24T02:36:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Senshi\u0022 data-cite=\u0022Senshi\u0022\u003E\u003Cdiv\u003EWould it be possible to allow calculations using ModuleManager with reasonable effort?\u003Cp\u003EThis would allow to apply \u0022flat\u0022 scalings very easily, such as:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[*]:HAS[@MODULE[ModuleCommand]]\u003Cbr\u003E\t@MODULE[ModuleReactionWheel]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@PitchTorque = @value * 0.1\u003Cbr\u003E\t\t@YawTorque = @value * 0.1\u003Cbr\u003E\t\t@RollTorque = @value * 0.1\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ETo achieve the same right now, you need to access every single part, calculate the new value yourself and add it as a new definition. And whenever some part mod gets added/updated, you have to revisit it...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think so, yes! However, I think it would be better like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[*]:HAS[@MODULE[ModuleCommand]]\u003Cbr\u003E\t@MODULE[ModuleReactionWheel]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@PitchTorque *= 0.1\u003Cbr\u003E\t\t@YawTorque *= 0.1\u003Cbr\u003E\t\t@RollTorque *= 0.1\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EFull-on math might be a little much, but at the very least I can do \u002B=, -=, and *=\u003C/p\u003E\n"},{"CreatedByName":"Gaius","CreatedById":66495,"CreatedDateTime":"2014-03-24T04:25:53Z","Content":"\n\u003Cp\u003ESome way to reference the existing value would be nice, though. Particularly with the description. I\u0027ve wanted in the past to embed the old description in a new one, e.g. something like.\u003C/p\u003E\u003Cp\u003E@description = Some new intro text. @description Some new postscript.\u003C/p\u003E\u003Cp\u003EOr even better:\u003C/p\u003E\u003Cp\u003E@description = Awesome part, but mind the @mass ton weight...\u003C/p\u003E\n"},{"CreatedByName":"Superfluous J","CreatedById":73725,"CreatedDateTime":"2014-03-24T04:47:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaius\u0022 data-cite=\u0022Gaius\u0022\u003E\u003Cdiv\u003ESome way to reference the existing value would be nice, though. Particularly with the description. I\u0027ve wanted in the past to embed the old description in a new one, e.g. something like.\u003Cp\u003E@description = Some new intro text. @description Some new postscript.\u003C/p\u003E\u003Cp\u003EOr even better:\u003C/p\u003E\u003Cp\u003E@description = Awesome part, but mind the @mass ton weight...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ELet me tack on my want to this (pseudocode, I don\u0027t care how per-se):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E@description = $mid(@descripiton, 0, 56) thing to say in the middle $mid(@description, 57, 0)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"GavinZac","CreatedById":68719,"CreatedDateTime":"2014-03-24T06:13:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ialdabaoth\u0022 data-cite=\u0022ialdabaoth\u0022\u003E\u003Cdiv\u003EI think so, yes! However, I think it would be better like this:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E@PART[*]:HAS[@MODULE[ModuleCommand]]\u003Cbr\u003E\t@MODULE[ModuleReactionWheel]\u003Cbr\u003E\t{\u003Cbr\u003E\t\t@PitchTorque *= 0.1\u003Cbr\u003E\t\t@YawTorque *= 0.1\u003Cbr\u003E\t\t@RollTorque *= 0.1\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EFull-on math might be a little much, but at the very least I can do \u002B=, -=, and *=\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, that would be cool, but the ideal usecase for that is making a \u0022little and large\u0022 version of parts. Unfortunately we still won\u0027t be able to define a new part, right?\u003C/p\u003E\n"},{"CreatedByName":"Senshi","CreatedById":57692,"CreatedDateTime":"2014-03-24T08:53:20Z","Content":"\n\u003Cp\u003EWould be great if it makes it in, iald \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E .\u003C/p\u003E\u003Cp\u003ENo need for a full-on math library. And \u002B= is certainly cleaner, good idea.\u003C/p\u003E\u003Cp\u003EMy \u0022typical usercase\u0022 would be just what I wrote in pseudocode: Numbing down all those ridiculously overpowered reaction wheels across the board \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E . as I still have the full selection/filter range available this way, I can still make sure that e.g. mod parts with reasonable reaction wheels can be exempted. It\u0027d be perfect to have conditional comparator selections:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u0022if PitchTorque * mass \u0026gt; 1 then @PitchTorque = PitchTorque / (PitchTorque * mass)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EBut that would be a whole lot more work again \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E . Hm, maybe I really should just fork this and try myself at stuff like this. No harm in pull requests, I guess. Sadly I\u0027m a Java guy and not that firm with C#...Maybe I can use the next batch of free time to finally tackle it.\u003C/p\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2014-03-24T14:23:28Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaius\u0022 data-cite=\u0022Gaius\u0022\u003E\u003Cdiv\u003ESome way to reference the existing value would be nice, though. Particularly with the description. I\u0027ve wanted in the past to embed the old description in a new one, e.g. something like.\u003Cp\u003E@description = Some new intro text. @description Some new postscript.\u003C/p\u003E\u003Cp\u003EOr even better:\u003C/p\u003E\u003Cp\u003E@description = Awesome part, but mind the @mass ton weight...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E*twitch*\u003C/p\u003E\u003Cp\u003ESo you want a full programming language.\u003C/p\u003E\u003Cp\u003EThat\u0027s what C# is for. I am so, so, SO not reproducing some kind of LUA script for cfg files.\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2014-03-24T14:31:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Senshi\u0022 data-cite=\u0022Senshi\u0022\u003E\u003Cdiv\u003EBut that would be a whole lot more work again \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E . Hm, maybe I really should just fork this and try myself at stuff like this. No harm in pull requests, I guess. Sadly I\u0027m a Java guy and not that firm with C#...Maybe I can use the next batch of free time to finally tackle it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDoing what you ask for is not doable with the current code base. MM rely on the KSP parser to read and transform the .cfg into object, and this parser has a lot of restriction on format and parsed characters. If you want to do \u0022some kind of LUA script for cfg files\u0022 (ialdabaoth comparison is perfect here) you would go faster with writing a brand new plugin.\u003C/p\u003E\u003Cp\u003EAnd C# and Java are not \u003Cstrong\u003Ethat\u003C/strong\u003E different. I\u0027m a java guy too and the real challenge is the KSP API.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-24T14:33:30Z\u0022 title=\u002203/24/2014 02:33  PM\u0022 data-short=\u002210 yr\u0022\u003EMarch 24, 2014\u003C/time\u003E by sarbian\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2014-03-25T19:07:07Z","Content":"\n\u003Cp\u003ETo anyone who wants to be on the bleeding edge, \u003Ca href=\u0022https://github.com/Ialdabaoth/ModuleManager/blob/master/ModuleManager.2.0.0.dll?raw=true\u0022 rel=\u0022external nofollow\u0022\u003Ehere is the download link for ModuleManager.2.0.0.dll from my gitHub\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003EThis should be considered \u0022alpha\u0022, aka \u0022try at your own risk\u0022. Delete ModuleManager_1_5_6.dll or ModuleManager_1_5_7.dll before installing, obviously.\u003C/p\u003E\u003Cp\u003EA few changes:\u003C/p\u003E\u003Cp\u003EYou do NOT need a MOD {} confignode. In fact, I haven\u0027t implemented them yet.\u003C/p\u003E\u003Cp\u003EIf it detects a loaded DLL, it assumes it\u0027s a mod and creates a :BEFORE, :FOR and :AFTER pass for it.\u003C/p\u003E\u003Cp\u003EIf you use underscores to specify your mod\u0027s version in the filename, ModuleManager will regrettably think that these are part of the filename, because I can\u0027t tell the difference between \u0022MyMod_1_3_6\u0022 and \u0022Mod_1337s_Cool_Stuff\u0022, and I do not want to try to. On the other hand, if you use periods to specify your mod\u0027s version, then \u0022MyMod.1.3.6\u0022 will correctly be identified as \u0022MyMod\u0022.\u003C/p\u003E\u003Cp\u003EThis means that there will always be the following passes:\u003C/p\u003E\u003Cp\u003E:FIRST\u003C/p\u003E\u003Cp\u003E:BEFORE[Assembly-CSharp]\u003C/p\u003E\u003Cp\u003E:FOR[Assembly-CSharp]\u003C/p\u003E\u003Cp\u003E:AFTER[Assembly-CSharp]\u003C/p\u003E\u003Cp\u003E:BEFORE[ModuleManager]\u003C/p\u003E\u003Cp\u003E:FOR[ModuleManager]\u003C/p\u003E\u003Cp\u003E:AFTER[ModuleManager]\u003C/p\u003E\u003Cp\u003E:FINAL\u003C/p\u003E\u003Cp\u003ESpecifying \u0027:FIRST\u0027 is optional; I just named the \u0027main\u0027 pass so that the log file is clearer.\u003C/p\u003E\u003Cp\u003EIf your mod includes a DLL, please PLEASE PLEASE put all your MM patch nodes in the :FOR[yourMod] pass.\u003C/p\u003E\u003Cp\u003EIf your mod does not include a DLL, then pick a name for your mod THAT DOES NOT CONFLICT WITH ANY OTHER MOD\u0027S DLL, and then put all your MM patch nodes in the :FOR[yourMod] pass.\u003C/p\u003E\u003Cp\u003EIf you do this, other mods can use :BEFORE[yourMod] and :AFTER[yourMod] to politely modify things further at the correct sequence.\u003C/p\u003E\u003Cp\u003EThe following parameters are currently implemented:\u003C/p\u003E\u003Cp\u003E:BEFORE[ModName] - execute this patch BEFORE ModName executes its patches.\u003C/p\u003E\u003Cp\u003E:FOR[ModName] - I am ModName, and these are my patches.\u003C/p\u003E\u003Cp\u003E:AFTER[ModName] - execute this patch AFTER ModName executes its patches.\u003C/p\u003E\u003Cp\u003E:NEEDS[ModName1] - execute this patch only if ModName1 is installed.\u003C/p\u003E\u003Cp\u003E:NEEDS[!ModName2] - do not execute this patch if ModName2 is installed.\u003C/p\u003E\u003Cp\u003EYou can combine NEEDS nodes like this: \u003C/p\u003E\u003Cp\u003E:NEEDS[ModName1, !ModName2]\u003C/p\u003E\u003Cp\u003EI am loading version info for each mod, but I am not yet using it for anything.\u003C/p\u003E\u003Cp\u003Evalue scaling (@key *= mult and @key \u002B= add) are not yet implemented.\u003C/p\u003E\u003Cp\u003EAny questions?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-25T19:16:20Z\u0022 title=\u002203/25/2014 07:16  PM\u0022 data-short=\u002210 yr\u0022\u003EMarch 25, 2014\u003C/time\u003E by ialdabaoth\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"K3-Chris","CreatedById":61664,"CreatedDateTime":"2014-03-25T19:56:41Z","Content":"\n\u003Cp\u003EIs it possible to check for installed mods? Specifically RPM, I have an IVA I want both RPM and non-RPM versions of, or is it alright for the internal.cfg to include props that doesn\u0027t exist?\u003C/p\u003E\n"},{"CreatedByName":"camlost","CreatedById":57590,"CreatedDateTime":"2014-03-25T20:17:15Z","Content":"\n\u003Cp\u003EDoes node[name,index] work now? If it does, which version of MM ?\u003C/p\u003E\n"},{"CreatedByName":"ialdabaoth","CreatedById":57270,"CreatedDateTime":"2014-03-25T20:45:55Z","Content":"\n\u003Cp\u003EYes! So does wildcard matching in subnodes, and :HAS[] criteria in subnodes. At least, in 2.0.0 it does, if you are brave enough soul to download it.\u003C/p\u003E\u003Cp\u003EYou can match subnodes in one of seven ways:\u003C/p\u003E\u003Cp\u003E@NODE[name] // will wildcard match name (so you can do ModuleEnginesFX or ModuleEngines*), and apply itself to the first NODE it finds.\u003C/p\u003E\u003Cp\u003E@NODE[name],index // will wildcard match name, and apply itself to the indexth NODE it finds.\u003C/p\u003E\u003Cp\u003E@NODE[name],* // will wildcard match name, and apply itself to ALL matching NODEs.\u003C/p\u003E\u003Cp\u003E@NODE[name]:HAS[criteria] // will wildcard match name and apply itself to all matching NODEs which also meet the :HAS criteria\u003C/p\u003E\u003Cp\u003E@NODE:HAS[criteria] // will apply itself to all matching NODEs which also meet the :HAS criteria\u003C/p\u003E\u003Cp\u003E@NODE,index // will apply itself to the indexth NODE it finds\u003C/p\u003E\u003Cp\u003E@NODE,* // will apply itself to ALL NODEs\u003C/p\u003E\u003Cp\u003EThese apply to @, ! and % nodes. $ nodes are necessarily single-application, and thus will always apply to the first node they find.\u003C/p\u003E\n"},{"CreatedByName":"PolecatEZ","CreatedById":58008,"CreatedDateTime":"2014-03-27T04:51:53Z","Content":"\n\u003Cp\u003EOk, I\u0027m now beating my head on the wall after reading through all 49 pages of this. I\u0027m basically working on a retexturing mod for Squad and FS to have B9 colors, and also getting B9 to be less wonky.\u003C/p\u003E\u003Cp\u003EPart of the anti-wonky mm .cfg package is to make thinner wings, on par with stock and FS wings. The problem is that the lift no longer is applied in the actual game once I patch the MODEL on the wings.\u003C/p\u003E\u003Cp\u003EHere\u0027s a sample of my initial code:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E@PART[B9_Aero_Wing_SH_A65_2m]\u003Cbr\u003E{ \u003Cbr\u003E@module = Part\u003Cbr\u003E!mesh = DELETE\u003Cbr\u003EMODEL\u003Cbr\u003E{  \u003Cbr\u003Emodel = B9_Aerospace/Parts/Aero_Wing_SH_A65_2m/model\u003Cbr\u003Escale = 1, 1, .35\u003Cbr\u003E} \u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWorks beautifully to reshape the wings...except that the lift values get eaten...like, no longer there in the game. It still shows in debug that they\u0027re alive and well, they just don\u0027t show in the catalog, and the wings have no actual function while flying.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://s10.postimg.org/5v22a7ru1/2014_03_26_00001.jpg\u0022 alt=\u00222014_03_26_00001.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003ESo I tried to delete out the values and reset them, like in this example:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E@PART[B9_Aero_Wing_SH_A35_4m]\u003Cbr\u003E{ @module = Part\u003Cbr\u003E!mesh = DELETE\u003Cbr\u003EMODEL\u003Cbr\u003E{  \u003Cbr\u003Emodel = B9_Aerospace/Parts/Aero_Wing_SH_A35_4m/model\u003Cbr\u003Escale = 1, 1, .35\u003Cbr\u003E} \u003Cbr\u003E!dragCoeff = DELETE\u003Cbr\u003E!deflectionLiftCoeff = DELETE\u003Cbr\u003E\u003Cbr\u003EdragCoeff = 0.83\u003Cbr\u003EdeflectionLiftCoeff = 2.69\u003Cbr\u003E\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENo luck. If I just manually add the MODEL bit to the actual config file, everything functions in the game just fine. It also works just fine when I amend a .cfg that already has a MODEL node. However, if I add it via mm, I can\u0027t make the LiftCoeff function at all.\u003C/p\u003E\u003Cp\u003EWhat am I missing or is this some limitation to MM that I hit?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-27T04:59:04Z\u0022 title=\u002203/27/2014 04:59  AM\u0022 data-short=\u002210 yr\u0022\u003EMarch 27, 2014\u003C/time\u003E by PolecatEZ\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2014-03-27T09:50:55Z","Content":"\n\u003Cp\u003EI don\u0027t have KSP here to check the cfgs but if you convert a wing into a \u0022Part\u0022 you\u0027ll need to add the proper module (forgot wich one) that adds the lift\u003C/p\u003E\n"},{"CreatedByName":"PolecatEZ","CreatedById":58008,"CreatedDateTime":"2014-03-27T14:13:57Z","Content":"\n\u003Cp\u003E\u0022@module = Part\u0022 just became \u0022@module = Winglet\u0022 and everything works perfectly now. Nice \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"mostlydave","CreatedById":57392,"CreatedDateTime":"2014-03-27T22:38:53Z","Content":"\n\u003Cp\u003EI\u0027m trying to add modules to 10 parts to make them Kerbal Attachment System compatible. I\u0027ve created a file for each one in the root of my ksp gamedata folder with the .cfg extension and the following code:\u003C/p\u003E\u003Cp\u003E@PART [lightlongkso]\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E MODULE\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E name = KASModuleGrab\u003C/p\u003E\u003Cp\u003E evaPartPos = (0.0, 0.0, -0.15)\u003C/p\u003E\u003Cp\u003E evaPartDir = (0,0,-1)\u003C/p\u003E\u003Cp\u003E storable = true\u003C/p\u003E\u003Cp\u003E storedSize = 6\u003C/p\u003E\u003Cp\u003E attachOnPart = True\u003C/p\u003E\u003Cp\u003E attachOnEva = False\u003C/p\u003E\u003Cp\u003E attachOnStatic = False\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003EIt worked, but it seems to have add kas to all parts and I can\u0027t figure out why, anybody see what I\u0027m doing wrong here? I used another file to add mechjeb to all command pods and that worked beautifully. I\u0027m not sure whats going on here.\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2014-03-28T00:16:08Z","Content":"\n\u003Cp\u003E@PART [lightlongkso] \u0026lt;= remove the space\u003C/p\u003E\u003Cp\u003E@PART[lightlongkso]\u003C/p\u003E\n"},{"CreatedByName":"mostlydave","CreatedById":57392,"CreatedDateTime":"2014-03-28T00:44:32Z","Content":"\n\u003Cp\u003EThanks! I would never have caught that.\u003C/p\u003E\n"},{"CreatedByName":"MrWizerd","CreatedById":106063,"CreatedDateTime":"2014-04-02T00:30:58Z","Content":"\n\u003Cp\u003EAnyone know if module manager is working with the new update that released today, April first?\u003C/p\u003E\n"},{"CreatedByName":"BudgetHedgehog\uFEFF","CreatedById":104112,"CreatedDateTime":"2014-04-02T01:03:58Z","Content":"\n\u003Cp\u003EI believe it is, yes. I have the MM config to ad KER to all command modules and it happened, so I\u0027m assuming it works fine.\u003C/p\u003E\n"},{"CreatedByName":"Starwaster","CreatedById":71262,"CreatedDateTime":"2014-04-02T02:40:06Z","Content":"\n\u003Cp\u003EYes. It does work.\u003C/p\u003E\n"},{"CreatedByName":"MrWizerd","CreatedById":106063,"CreatedDateTime":"2014-04-02T02:54:27Z","Content":"\n\u003Cp\u003EOdd, I wrote a cfg file for mechjeb and protractor, and it didn\u0027t work, then I also noticed that the additional antennae from remote tech 2 was also not installed although all the independent modules are working. The info is not showing up in the information, nor working... maybe something else is wacky... I will do more investigating.\u003C/p\u003E\n"},{"CreatedByName":"Gaius","CreatedById":66495,"CreatedDateTime":"2014-04-02T04:42:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MrWizerd\u0022 data-cite=\u0022MrWizerd\u0022\u003E\u003Cdiv\u003EOdd, I wrote a cfg file for mechjeb and protractor, and it didn\u0027t work, then I also noticed that the additional antennae from remote tech 2 was also not installed although all the independent modules are working. The info is not showing up in the information, nor working... maybe something else is wacky... I will do more investigating.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EModuleManager is working fine. MechJeb and Remote Tech 2 are broken (although sarbain posted a fixed MJ DLL in the thread).\u003C/p\u003E\n"}]}