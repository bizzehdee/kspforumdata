{"TopicId":38300,"ForumId":55,"TopicTitle":"Multithreading in Unity..... Loom available in asset store. thoughts?","CreatedByName":"griffman99h","CreatedById":43074,"CreatedDateTime":"2013-07-23T13:44:05Z","PageNum":1,"Articles":[{"CreatedByName":"griffman99h","CreatedById":43074,"CreatedDateTime":"2013-07-23T13:44:05Z","Content":"\n\u003Cp\u003EI was just doing a little research on the multithreading problem with the Unity engine and I came across this item in the Unity asset store:\u003C/p\u003E\u003Cp\u003ELOOM\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://www.assetstore.unity3d.com/#/content/7285\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.assetstore.unity3d.com/#/content/7285\u003C/a\u003E\u003C/p\u003E\u003Cp\u003Eyoutube demo:\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/kM0Mubh0CWA?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003EAPI doc:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://www.frankfortsoftware.com/LOOM/Documentation/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.frankfortsoftware.com/LOOM/Documentation/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003Ehas anyone on the Squad looked at this? not sure if its helpful or not. but might be worth a look.\u003C/p\u003E\n"},{"CreatedByName":"kustus","CreatedById":58892,"CreatedDateTime":"2013-07-23T13:52:23Z","Content":"\n\u003Cp\u003Ebump! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EI\u0027ve been reading about this stuff and it seems that multithreading will not be a simple walk in the park patch. I\u0027m guessing they have to rewrite big parts of the core KSP to adapt it into LOOM.\u003C/p\u003E\u003Cp\u003Ebut it could be worth it and I hope they do. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E:D\u003C/p\u003E\n"},{"CreatedByName":"Brabbit1987","CreatedById":65801,"CreatedDateTime":"2013-07-23T14:08:20Z","Content":"\n\u003Cp\u003EI think it would be nice to give it a shot at some point, most certainly would be worth it in my opinion.\u003C/p\u003E\n"},{"CreatedByName":"Winter Man","CreatedById":11358,"CreatedDateTime":"2013-07-23T14:13:54Z","Content":"\n\u003Cp\u003EConsidering the price, that\u0027d make a pretty awesome .22 or .23 update.\u003C/p\u003E\n"},{"CreatedByName":"Rocketeer Hopeful","CreatedById":25089,"CreatedDateTime":"2013-07-23T14:31:21Z","Content":"\n\u003Cp\u003EAwesome, awesome, awesome. It may be a while from now, but having this would help so much.\u003C/p\u003E\n"},{"CreatedByName":"DaRocketCat","CreatedById":32377,"CreatedDateTime":"2013-07-23T16:33:50Z","Content":"\n\u003Cp\u003EReally cheap too.\u003C/p\u003E\n"},{"CreatedByName":"griffman99h","CreatedById":43074,"CreatedDateTime":"2013-07-23T16:39:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DaRocketCat\u0022 data-cite=\u0022DaRocketCat\u0022\u003E\u003Cdiv\u003EReally cheap too.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI have to wonder about that. I\u0027m not familiar with how the asset store works. is it a one time fee or is there licensing involved in including it in the game code....\u003C/p\u003E\u003Cp\u003Efor the price I\u0027m tempted to get it myself and seeing about getting the KSP sdk or earlier version of the source, improve my coding skills a bit more.\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"MSD","CreatedById":59320,"CreatedDateTime":"2013-07-24T09:42:28Z","Content":"\n\u003Cp\u003EDarn.. 30 bucks ?\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2013-07-24T09:48:28Z","Content":"\n\u003Cp\u003ECan we get the devs attention on this. Really, we need to know if this could work with KSP. Man that would be insane. 64bit support would be the last thing we need by then.\u003C/p\u003E\n"},{"CreatedByName":"eRe4s3r","CreatedById":35705,"CreatedDateTime":"2013-07-24T09:58:32Z","Content":"\n\u003Cp\u003EJust adding my \u0022wow this is amazing\u0022 here. Any opinion from devs? The big question would be if this would actually work correctly with a (considerably larger than normal) project like KSP. Because if it does.. KSP needs this. Asap. I would even pay extra money to get multi-threading in my KSP!\u003C/p\u003E\n"},{"CreatedByName":"MalfunctionM1Ke","CreatedById":71626,"CreatedDateTime":"2013-07-24T11:21:53Z","Content":"\n\u003Cp\u003EI know a little too less about the Unity Engine and how KSP is coded/written to push the devs to make any steps into this direction.\u003C/p\u003E\u003Cp\u003ENevertheless, finding a solution for stuttering spacestations or low FPS Rocket Ascents have to be made sooner or later.\u003C/p\u003E\u003Cp\u003EAnyways, I know this game is an Alpha-Version and right know I am pretty satisfied with the firstlooks on V0.21.\u003C/p\u003E\n"},{"CreatedByName":"skyace65","CreatedById":71431,"CreatedDateTime":"2013-07-24T11:41:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Winter Man\u0022 data-cite=\u0022Winter Man\u0022\u003E\u003Cdiv\u003EConsidering the price, that\u0027d make a pretty awesome .22 or .23 update.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ewith some of the optimizations in .21 that are coming I think multi-treading could wait a little longer. but yeah it would be great to have.\u003C/p\u003E\n"},{"CreatedByName":"allmappedout","CreatedById":57281,"CreatedDateTime":"2013-07-24T11:54:06Z","Content":"\n\u003Cp\u003EIf it works as promised, it seems to be a no-brainer, but my cynic says that if it\u0027s as simple as writing an API for it, why haven\u0027t Unity done it yet?\u003C/p\u003E\n"},{"CreatedByName":"bowdlerize","CreatedById":31701,"CreatedDateTime":"2013-07-24T11:57:33Z","Content":"\n\u003Cp\u003EMulti-threading and 64-bit would be a nice 1.1 update. It\u0027s still way to early in development to worry about this kind on thing. The code hasn\u0027t even been optimized yet.\u003C/p\u003E\n"},{"CreatedByName":"NeilC","CreatedById":57575,"CreatedDateTime":"2013-07-24T15:12:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022allmappedout\u0022 data-cite=\u0022allmappedout\u0022\u003E\u003Cdiv\u003EIf it works as promised, it seems to be a no-brainer, but my cynic says that if it\u0027s as simple as writing an API for it, why haven\u0027t Unity done it yet?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EProbably because writing a good API is hard. Especially ones that are multithreaded, stable, easy to use, easy to debug, extensible, and offer full support for PC, Mac, Webplayer, iOS and Android. Unity\u0027s got a big community, they leverage their asset store for lots of functionality that isn\u0027t baked-in.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022bowdlerize\u0022 data-cite=\u0022bowdlerize\u0022\u003E\u003Cdiv\u003EMulti-threading and 64-bit would be a nice 1.1 update. It\u0027s still way to early in development to worry about this kind on thing. The code hasn\u0027t even been optimized yet.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI disagree. The rigid-body physics solver is very CPU bound at the moment, even for reasonably-sized (~100 part) craft on reasonable hardware (3-year old Core2 laptops). 1.0 games should be feature-complete, and multithreading is a significant feature that requires many changes to how the code works. Removing a bottleneck as large as KSP\u0027s current physics solver should be handled early as it\u0027s an architectural change to a core component of the game, not merely an optimization pass on some functions.\u003C/p\u003E\u003Cp\u003EI haven\u0027t looked over LOOM extensively, or watched the video (at work, not lunchtime yet). Does anyone know if it can multi-thread physX code? The physics solver code causing KSPs slowdowns isn\u0027t written by the devs so unless LOOM can get around the single-threaded physX restriction, it\u0027s not going to benefit KSP much.\u003C/p\u003E\n"},{"CreatedByName":"The-Bean","CreatedById":17935,"CreatedDateTime":"2013-07-25T11:36:58Z","Content":"\n\u003Cp\u003EBump so hopefully a dev\u0027 can see. Multithreading would be very welcome.\u003C/p\u003E\n"},{"CreatedByName":"Neomatt","CreatedById":30294,"CreatedDateTime":"2013-07-25T12:12:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NeilC\u0022 data-cite=\u0022NeilC\u0022\u003E\u003Cdiv\u003EI haven\u0027t looked over LOOM extensively, or watched the video (at work, not lunchtime yet). Does anyone know if it can multi-thread physX code? The physics solver code causing KSPs slowdowns isn\u0027t written by the devs so unless LOOM can get around the single-threaded physX restriction, it\u0027s not going to benefit KSP much.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, same question here. Multi-threading is often seen as a fix-all-issues thing, but if physics calculations cannot be multi-threaded due to PhysX or other factors, the advantages would be pretty low.\u003C/p\u003E\u003Cp\u003Eedit: checking the API quickly, it does look like a very good but basic implementation of multi-threading, for example computing multiple paths for enemies at the same time.\u003C/p\u003E\u003Cp\u003EBut now, that got me thinking: can physics calculations be \u0022splitted\u0022 into sub-computations? If yes, LOOM helps a lot (set packs of 10-50 parts in each thread, get the results). If not...\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-25T12:21:09Z\u0022 title=\u002207/25/2013 12:21  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 25, 2013\u003C/time\u003E by Neomatt\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"DannySwish","CreatedById":57623,"CreatedDateTime":"2013-07-25T12:17:10Z","Content":"\n\u003Cp\u003EIt would be great if I could put some of those three extra cores I have sitting around to work.\u003C/p\u003E\n"},{"CreatedByName":"thermobaric","CreatedById":31322,"CreatedDateTime":"2013-07-25T12:17:38Z","Content":"\n\u003Cp\u003Eim curious what the devs think of this\u003C/p\u003E\n"},{"CreatedByName":"NeilC","CreatedById":57575,"CreatedDateTime":"2013-07-25T16:39:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Neomatt\u0022 data-cite=\u0022Neomatt\u0022\u003E\u003Cdiv\u003E\u0026lt;...\u0026gt;But now, that got me thinking: can physics calculations be \u0022splitted\u0022 into sub-computations? If yes, LOOM helps a lot (set packs of 10-50 parts in each thread, get the results). If not...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes that\u0027s the issue, and unfortunately I think the answer is no.\u003C/p\u003E\u003Cp\u003ENow that I\u0027ve seen the video and given a brief look at the API, I\u0027m pretty sure all LOOM does is allow threadsafe read/write of Unity objects. This is very useful if you\u0027re writing your own CPU-intensive worker threads, as he is doing with the flocking demo. He is writing all the crunch-heavy stuff and just needs to interact with Unity to get it drawn.\u003C/p\u003E\u003Cp\u003EAs I understand it, KSP uses the \u003Ca href=\u0022http://docs.unity3d.com/Documentation/ScriptReference/Rigidbody.html\u0022 rel=\u0022external nofollow\u0022\u003ERigidBody\u003C/a\u003E solver internal to Unity, which uses PhysX under the hood. The crunch-heavy code is written, maintained, and controlled by Unity, and due to limitations in their PhysX version they cannot multithread it. Totally out of KSP\u0027s hands, and LOOM would not change that.\u003C/p\u003E\u003Cp\u003EI would love to hear a Dev confirm/deny/elaborate on this.\u003C/p\u003E\n"},{"CreatedByName":"DaRocketCat","CreatedById":32377,"CreatedDateTime":"2013-07-27T09:20:56Z","Content":"\n\u003Cp\u003Ebump so a dev could comment.\u003C/p\u003E\n"},{"CreatedByName":"Scoundrel","CreatedById":15369,"CreatedDateTime":"2013-07-27T10:22:17Z","Content":"\n\u003Cp\u003EDev\u0027s currently won\u0027t comment on future possibilities except through PR channels, though NeilC is quite correct on PhysX and Squad\u0027s position on the subject. If you desire confirmation, watch\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/GKp_nAqlzaw?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E. Feel free to fill the thread full of bump posts though. I\u0027m curious as to how many can be posted before a mod locks the thread.\n"},{"CreatedByName":"Technical Ben","CreatedById":10512,"CreatedDateTime":"2013-07-27T10:42:59Z","Content":"\n\u003Cp\u003EThen we need to bug the makers of PhysX to make an API for multithreading in unity. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"carde","CreatedById":32336,"CreatedDateTime":"2013-07-27T11:05:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Technical Ben\u0022 data-cite=\u0022Technical Ben\u0022\u003E\u003Cdiv\u003EThen we need to bug the makers of PhysX to make an API for multithreading in unity. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPhysX is fully multithreaded, and even works on GPU:s (for about a 10-100x performance increase using low-level cards, more with high-end (eg, titan class) cards).\u003C/p\u003E\u003Cp\u003EHowever, unity has choosen to remain with a \u003Cem\u003Every\u003C/em\u003E old version. And they modified it so it only uses one thread (even that version of the original PhysX SDK was actually multi-threaded, and also uses the GPU if possible)\u003C/p\u003E\n"},{"CreatedByName":"oggylt","CreatedById":57214,"CreatedDateTime":"2013-07-27T12:03:07Z","Content":"\n\u003Cp\u003Ethis thread gave me some hope, and yet I am realist so \u0027ll not give too much for it.\u003C/p\u003E\n"}]}