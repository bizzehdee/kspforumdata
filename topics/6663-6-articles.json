{"TopicId":6663,"ForumId":25,"TopicTitle":"Mini-challenge: max altitude with this supplied spacecraft","CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-02-14T18:26:41Z","PageNum":6,"Articles":[{"CreatedByName":"jebbe","CreatedById":16329,"CreatedDateTime":"2012-02-29T22:43:45Z","Content":"\n\u003Cp\u003EThanks PakledHostage for that quick calculation! At the precision we are currently trying to aim for, it actually could play a role. However, with our 1d calculations it would be impossible to account for this... Also, shouldn\\\u0027t it only have an effect parallel to the equator, and therefore perpendicular to the ascent trajectory? I\\\u0027m not really sure about this, but I think it doesn\\\u0027t play a role then, since we should be able to decouple the three translational degrees of freedom. Or shouldn\\\u0027t we? I\\\u0027m not quite clear about this yet...\u003C/p\u003E\u003Cp\u003EI would expect the centrifugal force to have an impact though.\u003C/p\u003E\n"},{"CreatedByName":"Iskierka","CreatedById":2116,"CreatedDateTime":"2012-03-02T15:35:02Z","Content":"\n\u003Cp\u003ECoriolis effects usually count as an umbrella term that includes centrifugal effects, but yes, technically, it is only parallel to the equator. I however didn\\\u0027t account for this dimension beyond a preset velocity, used for calculating the centrifugal aspect.\u003C/p\u003E\u003Cp\u003EAlso, any extra acceleration is a lot for this situation. It\\\u0027s enough that accounting for Coriolis on Earth would significantly affect pole vaulting records - which seems a very close simile to this situation here. As for calculating it, PakledHostage gave the equations, though in a very strange coordinate system. My data was actually very simple - I was only using python (because it was only intended to be a quick, simple test), and the default floats, with an increase from 1 ms to 0.1ms steps changing results less than a metre; the initial target would be to get all test cases accurate to within 10 metres, which is currently quite far from what we get. Were you tracking the height by altitude or radius from centre? I did the former to reduce float-point errors outside the calculation of g, where they would be (mostly) lost in the insignificant figures, rather than in the metres of altitude.\u003C/p\u003E\u003Cp\u003EAs for atmospheric density, in the process of playing with the new module loader (which has meant no more work on the simulation), I have found code that results in atmospheric density being taken as 1.223095 mass units per metre cubed. Or, if mass units are kg, then standard Earth conditions. I have not yet found the drag code, however (which may be among the parts which did not decompile) meaning it is quite likely there is another scalar to be applied. One that is close is the ratio of Earth to Kerbin, which, when squared, results in a density between 0.0107 and 0.0109, depending on what size is taken for Earth.\u003C/p\u003E\u003Cp\u003EAfterthought: It would be interesting to try make a new part that inherits from liquidEngine, but overrides throttle input to try follow the optimum vertical ascent. Hm ...\u003C/p\u003E\n"},{"CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-03-02T18:32:48Z","Content":"\n\u003Cp\u003E@Iskierka\u003C/p\u003E\u003Cp\u003E It\\\u0027s good that you have brought up the Coriolis effect which must play a role, but proably comparable to the modeling effects found by jebbe. It\\\u0027s definitely there though, If you do a vertical Goddard challenge launch and switch to map view, you\\\u0027ll see the path as a narrow \u0027arc\u0027, and we know that you won\\\u0027t fall straight back down to the launch pad.\u003C/p\u003E\u003Cp\u003E(In fact I wondered if you could beat Kosmo-not\\\u0027s altitude record by purposely pitching over ever so slightly above 10km, to get a \u0027boost\u0027 from Kerbin\\\u0027s rotation, but I have not succeeded).\u003C/p\u003E\u003Cp\u003EOn the model atmosphere, we really don\\\u0027t know how drag is calculated from density - we should just form a delegation and ask the developers directly I suppose. (For instance, I would not use the conventional 1/2 factor in front of drag coefficient because it\\\u0027s one more floating point operation, but they may have a way of optimizing it out).\u003C/p\u003E\u003Cp\u003EAlso, if asked I would vote against the use of \u0027automated thrust profiles\u0027 in this game, because it would remove the player\\\u0027s \u0027x factor\u0027. The calculations we do are useful, and can give guidance along the lines of \u0027stick this list of parameters to Jeb\\\u0027s visor\u0027, but automated profiles would make the game too much like Orbiter, IMHO.\u003C/p\u003E\u003Cp\u003EAlso, as we have seen, calculating them is not easy, and doing so in real time especially would up the system requirements for everyone, even those that do not use such a feature. (As a low-end laptop user I am already locked out of Rise of Flight and other games I would otherwise want to play).\u003C/p\u003E\n"},{"CreatedByName":"PakledHostage","CreatedById":8059,"CreatedDateTime":"2012-03-02T23:05:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Iskierka\u0022 data-cite=\u0022Iskierka\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAs for calculating it, PakledHostage gave the equations, though in a very strange coordinate system.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECome on, Iskierka, you know that I used a non-rotating cartesian coordinate system and that it was appropriate to do so for the purposes of that example calculation. You also know that the units work out. I used MathCAD, which is \u0027units aware\u0027. Multiplying deg/hr by m/sec can yield a result in g because the unit conversions are done internally. \u003C/p\u003E\u003Cp\u003EThere\\\u0027s already been so much negativity on these forums over the past couple of days, can you maybe try to do your part to improve the situation by improving the tone of your posts? You\\\u0027re obviously very knowledgeable, but the sniping tone of so many of your posts is tiring and diminishes your otherwise valuable input.\u003C/p\u003E\u003Cp\u003EThanks.\u003C/p\u003E\u003Cp\u003EPH.\u003C/p\u003E\n"},{"CreatedByName":"Iskierka","CreatedById":2116,"CreatedDateTime":"2012-03-02T23:16:57Z","Content":"\n\u003Cp\u003EI was simply commenting that your x, y, z assignments looked strange, though looking again I see that you had velocity vertical. Since centrifugal is the most important to this, I was assuming the velocity would be put in horizontal to get a vertical acceleration, so seeing the acceleration put in x was confusing. At no point was I trying to sound sniping.\u003C/p\u003E\u003Cp\u003EAs an extra on the auto-throttling liquid engine, I wouldn\\\u0027t intend to release it, and it would be limited use anyway, since it would keep you permanently at terminal velocity. I was just wondering about the possibility of using such a part to see just how high this test craft could get.\u003C/p\u003E\u003Cp\u003EEDIT: New discoveries with the atmospheric density! Among the flight globals, is a parameter DragMultiplier. This returns 0.008. Multiplied by the atmospheric density, gives 0.009785. Or, almost exactly the densities expected. This then throws my results with my sim into question, but I\\\u0027d trust things I can pull directly out of KSP dlls over rough experimental results. The question then is what\\\u0027s being missed between jebbe\\\u0027s model and KSP.\u003C/p\u003E\n"},{"CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-03-03T01:39:55Z","Content":"\n\u003Cp\u003EI\\\u0027m sure the \u0027strange\u0027 comment was a misunderstanding but I don\\\u0027t blame PH for being sensitive because yes, there has been some negativity on other threads. We\\\u0027re all scholars here!\u003C/p\u003E\u003Cp\u003EInterestingly, if I use a surface density of 0.009785 kg/m\u003Csup\u003E3\u003C/sup\u003E, multiply by the conventional 1/2 factor when calculating drag, and do a very simple constant centrifugal correction to \u0027g\u0027 (i.e. g-\u0026gt; g - 0.05075 m/s\u003Csup\u003E2\u003C/sup\u003E), my version of Jebbe\\\u0027s C\u002B\u002B code spits out the following:\u003C/p\u003E\u003Cp\u003E[tt]Time-step = 0.01s, surface density = 0.009785 kg/m3.\u003C/p\u003E\u003Cp\u003EBurnout height 18091.1m at 87.02s, speed= 578.878m/s, thrust= 78.5439 %\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EMaximum height reached 33531.9 m\u003C/strong\u003E at 145.35s for rho_0 = 0.009785 kg/m3.\u003C/p\u003E\u003Cp\u003EFlight time = 145.35s, impact speed = -103.75 m/s.[/tt]\u003C/p\u003E\u003Cp\u003ECompare that to Kosmo-not\\\u0027s winning flight: \u003Ca href=\u0022http://kerbalspaceprogram.com/forum/index.php?topic=7161.msg100978#msg100978\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kerbalspaceprogram.com/forum/index.php?topic=7161.msg100978#msg100978\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003ECoincidence? I\\\u0027m not sure, but it\\\u0027s a reproducible result. \u003C/p\u003E\u003Cp\u003EOne correction I made to the code (and Jebbe did so independently I think) is to reduce the impulse of the last time step when the fuel level hits zero part-way through it. That has made the results less sensitive to the time step, which I can crank down to 0.5 ms if I need to in any case.\u003C/p\u003E\u003Cp\u003EFor a real-world example of what happens when you don\\\u0027t account properly for residual thrust, see the 3rd flight of Falcon 1: (at about 2:45 in this video) \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/Qz0yJ8N3cA0?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E \u003C/blockquote\u003E\u003Cp\u003E \u003C/p\u003E\n"},{"CreatedByName":"Kosmo-not","CreatedById":14082,"CreatedDateTime":"2012-03-03T01:47:17Z","Content":"\n\u003Cp\u003EYou found me out, closette! I am a robot.\u003C/p\u003E\u003Cp\u003ENah, I\\\u0027m just very lucky.\u003C/p\u003E\u003Cp\u003EIt\\\u0027s great to see how far we all have been able to progress with this stuff.\u003C/p\u003E\u003Cp\u003EThat video made me laugh. How many times has that happened to us?\u003C/p\u003E\n"},{"CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-03-05T00:25:25Z","Content":"\n\u003Cp\u003ESome people (well 1 person) were interested in analytical solutions to the differential equation of the rocket\\\u0027s motion, so I have attached some the of my efforts as a PDF here. Comments welcome. \u003C/p\u003E\u003Cp\u003EI would certainly agree that for this problem, a robust numerical method is more useful than the analytic solutions I derived.\u003C/p\u003E\u003Cp\u003EBy the way, I just tried the challenge using the new v0.14 - similar results, so it appears that the atmospheric drag model (and all the hard work that went into understanding it!) is still valid. \u003C/p\u003E\n"},{"CreatedByName":"Kosmo-not","CreatedById":14082,"CreatedDateTime":"2012-03-05T22:21:38Z","Content":"\n\u003Cp\u003EThe first thing I did when 0.14 came around was to check if the drag model was the same. I was a little disappointed that it was.\u003C/p\u003E\n"},{"CreatedByName":"jebbe","CreatedById":16329,"CreatedDateTime":"2012-03-05T23:33:34Z","Content":"\n\u003Cp\u003EOh, there have been quite some interesting results over the weekend! It would have been nice to get a more realistic drag model, yes...\u003C/p\u003E\u003Cp\u003EIskierka, thanks for posting the actual surface density. Looks like we were already pretty close, but of course, getting the numbers directly from the game promises to be more precise.\u003C/p\u003E\u003Cp\u003EClosette, that\\\u0027s an interesting result from your midpoint-method. I ran the calculations with the fourth order code as well, and using your simple additive constant for the centrifugal force I get the exact same optimum height, \u003Cspan style=\u0022text-decoration:underline;\u0022\u003E33531.9m\u003C/span\u003E, at a time step of 20ms. Using the actual formula for the centrifugal force, m*omega^2*r, I get a little higher, \u003Cspan style=\u0022text-decoration:underline;\u0022\u003E33554.6m\u003C/span\u003E at \u003Cspan style=\u0022text-decoration:underline;\u0022\u003E145.38s\u003C/span\u003E - but I think we are now really close to the best possible result.\u003C/p\u003E\u003Cp\u003EAbout the influence of the time step: this issue probably arose from the overdraining of the fuel in the last time step, so I think we resolved it in the current implementations. Iskierka obviously thought of this before I did...\u003C/p\u003E\u003Cp\u003EAnd of course the issue of some switch getting activated after activating time warp once remains open, but I don\\\u0027t think we should try and model that, since it\\\u0027s obviously a bug in the game.\u003C/p\u003E\u003Cp\u003EOh, and the analytical solution - thanks a lot, I\\\u0027ll look into it as soon as I can!\u003C/p\u003E\u003Cp\u003EFinally: Thank you also for the video, it\\\u0027s kind of funny that even SpaceX went Kerbal. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-03-06T02:28:08Z","Content":"\n\u003Cp\u003EShould the centrifugal term be recalculated at every step of the ascent as the rocket\\\u0027s distance r (=R_planet \u002Bheight) from Kerbin\\\u0027s center changes? I\\\u0027m not sure because if the craft were truly co-rotating at the same angular frequency \u0027omega\u0027 it should remain above the launch pad, which it does not. \u003C/p\u003E\u003Cp\u003EHence without thinking too deeply I used a constant centrifugal term v_surface^2/R_planet evaluated at the surface, but I\\\u0027m just not getting my head around the rotating reference frame deal. It may be important in the code for modeling rockets that go higher than this one.\u003C/p\u003E\u003Cp\u003E(Singing) \u0027You spin me right round baby, right round...\u0027\u003C/p\u003E\n"},{"CreatedByName":"jebbe","CreatedById":16329,"CreatedDateTime":"2012-03-06T11:23:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022closette\u0022 data-cite=\u0022closette\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EShould the centrifugal term be recalculated at every step of the ascent as the rocket\\\u0027s distance r (=R_planet \u002Bheight) from Kerbin\\\u0027s center changes? I\\\u0027m not sure because if the craft were truly co-rotating at the same angular frequency \u0027omega\u0027 it should remain above the launch pad, which it does not. \u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMy brain gets twisted by this again and again, too, but here\\\u0027s my view on this, and I\\\u0027m sorry if I only write down stuff everyone knows already: \u003C/p\u003E\u003Cp\u003EIn a non-rotating reference frame, we would stay right above the pad, going up at a speed we can calculate from thrust, gravity and drag - nothing spectacular, although it gave us quite some headache already. \u003C/p\u003E\u003Cp\u003ENow, if we start spinning the surface without spinning the reference frame, we get a trajectory that would be very tedious to calculate. I would expect air resistance in particular to be a pain, since the atmosphere would be rotating with the surface, while our craft would not: it would just get an initial lateral velocity from the rotation.\u003C/p\u003E\u003Cp\u003ETo avoid this mess in our inertial reference frame, we rotate our coordinate system as well, so that we can describe our trajectories more easily. We can now pretend that we are in a non-rotating reference frame, with two exceptions: the two apparent forces we call the centrifugal and the Coriolis force. In our case, the centrifugal term describes the vertical influence of the rotation, while the Coriolis force is responsible for the horizontal deviations.\u003C/p\u003E\u003Cp\u003ESo to conclude: Yes, the centrifugal term should be recalculated at every time step, but since it involves omega, we would have to recalculate omega as well - it gets changed by the Coriolis force.\u003C/p\u003E\u003Cp\u003EPhew - amazing how writing this down gets my own thoughts sorted as well. I think I have a better idea now how we could incorporate the Coriolis force in the 1d calculations; I will try that some time soon. My expectation is that we will end up somewhere in between Closette\\\u0027s and my most recent results.\u003C/p\u003E\u003Cp\u003E\u003Cem\u003Eedit: thoughts on how we would have to account for the Coriolis force:\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cp\u003EThe Coriolis force for a vertically moving object at the equator is\u003C/p\u003E\u003Cp\u003EFc = 2 m omega v_vert\u003C/p\u003E\u003Cp\u003EThis results in a horizontal accelerating force of \u003C/p\u003E\u003Cp\u003EFa = m d(v_hor)/dt\u003C/p\u003E\u003Cp\u003Ewhich we can express in terms of omega,\u003C/p\u003E\u003Cp\u003EFa = - m d(omega r)/dt = - m (r d(omega)/dt \u002B omega dr/dt) = - m (r d(omega)/dt \u002B omega v_vert)\u003C/p\u003E\u003Cp\u003ESetting Fc = Fa we get\u003C/p\u003E\u003Cp\u003E2 omega v_vert = - r d(omega)/dt - omega v_vert\u003C/p\u003E\u003Cp\u003Eor\u003C/p\u003E\u003Cp\u003Ed(omega)/dt = - 3 omega v_vert / r\u003C/p\u003E\u003Cp\u003EI\\\u0027m not sure if I got the signs right, but in principle this should be fairly easy to incorporate into our codes.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-03-06T16:02:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003Eand I\\\u0027m sorry if I only write down stuff everyone knows already: \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EEven if that were the case (not!) it wouldn\\\u0027t hurt, and what you wrote is very clear. \u003C/p\u003E\u003Cp\u003EI doubt if KSP models lateral aero drag forces at all so unlike reality we shouldn\\\u0027t have to worry about them.\u003C/p\u003E\u003Cp\u003EAfter some thought I came to a different conclusion - that the spacecraft ascends with a constant lateral velocity v (174ish m/s), NOT constant angular velocity omega. So at each step I tried recalculating v\u003Csup\u003E2\u003C/sup\u003E/r, which gets smaller with increasing radius r, as opposed to r omega\u003Csup\u003E2\u003C/sup\u003E. \u003C/p\u003E\u003Cp\u003EThat seeme reasonable, but constant \u0027v\u0027 would imply that the craft would get \u0027left behind\u0027 Kerbin\\\u0027s rotation and end up in the mountains. However from testing the same craft with an extra tank I see that it does stay pretty much over the pad. (I thought not, and was confused by the orbital Navball and the Map view which both show a curved path in space).\u003C/p\u003E\u003Cp\u003ESurprisingly it doesn\\\u0027t affect the maximum height of this spacecraft much, but I would like to model those that go higher (even above 70km for a while) as well.\u003C/p\u003E\u003Cp\u003ESo I would encourage jebbe and others to continue looking at the rotation effects. One \u0027test\u0027 that the centrifugal\u002BCoriolis effects are modeled well (for KSP, not necessarily reality) is whether you can also predict where a high-altitude spacecraft should come down east or west of the pad. You could do that for a fixed (100% ?) throttle case so it would be easier to compare the model with the game. Adding the extra tank (in KSP, and the code) will increase the flight time which makes the rotation effects easier to see.\u003C/p\u003E\u003Cp\u003EWe\\\u0027re nearly there, at least with the atmosphere fairly well dialed in. With the centrifugal/Coriolis stuff working for up-and-down flights it will soon be possible to model non-vertical ascents as well - I hope!\u003C/p\u003E\n"},{"CreatedByName":"jebbe","CreatedById":16329,"CreatedDateTime":"2012-03-06T17:04:36Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022closette\u0022 data-cite=\u0022closette\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAfter some thought I came to a different conclusion - that the spacecraft ascends with a constant lateral velocity v (174ish m/s), NOT constant angular velocity omega.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, in an inertial reference frame I would agree. However, since we are in a rotating reference frame, the a priori assumption is that in fact omega is constant. This isn\\\u0027t true of course, and that\\\u0027s why we need the Coriolis force; it corrects omega in the rotating frame, so that in an inertial frame of reference we get a constant horizontal v. \u003C/p\u003E\u003Cp\u003EFrom what I gather, your approach applies the corrections obtained in the inertial reference frame to an calculation within the rotating frame, and I\\\u0027m not sure if one can do that... It\\\u0027s probably ok as long as you don\\\u0027t really move laterally, but I\\\u0027m not really clear about this.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022closette\u0022 data-cite=\u0022closette\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThat seeme reasonable, but constant \u0027v\u0027 would imply that the craft would get \u0027left behind\u0027 Kerbin\\\u0027s rotation and end up in the mountains. However from testing the same craft with an extra tank I see that it does stay pretty much over the pad. (I thought not, and was confused by the orbital Navball and the Map view which both show a curved path in space).\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe Coriolis force accelerates an ascending craft westwards, and a falling object eastwards. So I would expect the ship to have some westward velocity component at its highest point, and no more westward movement when it gets back to the ground, but it should end up somwhere in the west - assuming zero aerodynamic drag. It probably wouldn\\\u0027t be much though, and the ASAS isn\\\u0027t really all that precise, so I\\\u0027m not sure if we could measure that - I usually ended up a little north, which clearly is due to the controls. But I have to agree, tests with higher vertical suborbital flights would be interesting!\u003C/p\u003E\n"},{"CreatedByName":"Iskierka","CreatedById":2116,"CreatedDateTime":"2012-03-07T13:11:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022closette\u0022 data-cite=\u0022closette\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI doubt if KSP models lateral aero drag forces at all so unlike reality we shouldn\\\u0027t have to worry about them.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is quite an odd statement. Horizontal flight? Reentry? All seem fairly draggy to me. If you mean lateral to the direction of travel - recall that the direction of travel -does- have a lateral component regardless, which has to be accounted for.\u003C/p\u003E\u003Cp\u003EAs for calculating impact point - jebbe has a point with the precision of flight controls. ASAS is known to have enough decay that it can be used, unmodified, to hold an aircraft at constant pitch for a full circumnavigation, despite being (somewhat) designed to hold a true vector. Added to that that we don\\\u0027t know how well-placed the craft is on the pad, nor how level the pad actually is (there is no -guarantee- that it is perfectly level. If it\\\u0027s not initially placed at precisely 0,0,0 world frame, it\\\u0027s quite possible that it isn\\\u0027t simply due to minor planet curvature between it and 0,0,0. And I think we\\\u0027ve all seen the images of when the guys back at base get bored waiting for a mission to return, and start shuffling the buildings around).\u003C/p\u003E\u003Cp\u003EWhat could be useful/interesting is seeing if it\\\u0027s possible to access flight data via the 0.14 API. Without searching too far, the class FlightGlobals has the functions getCentrifugalAcc, getCoriolisAcc, getGeeForceAtPosition, and atmospheric property functions. They can\\\u0027t immediately be found, but there may be functions for things like total forces acting.\u003C/p\u003E\u003Cp\u003EAddition: However, I\\\u0027m quite unconvinced we would be close to finding a general equation for orbital launch maximum efficiency. In this case, we can be sure of what is the most efficient condition: ascent velocity = terminal velocity, as either side of this case results in, so far as both intuition and simple mathematical models can tell, less efficiency due to more fuel being expended against one force than another. With orbital launch, you have an extra parameter, of how much you are \u0027investing\u0027 towards horizontal velocity - and how, exactly, do you determine the relative \u0027value\u0027 of that velocity, compared to your vertical and terminal? Once that is the goal, the conversation will very quickly become very, very complicated, I think.\u003C/p\u003E\n"},{"CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-03-07T17:51:04Z","Content":"\n\u003Cp\u003EYes I meant \u0027lateral to the velocity\u0027, and I meant (probably) the velocity in the \u0027Surface\u0027 frame.\u003C/p\u003E\u003Cp\u003EThere are 2 other drag-related parameters in the config files, minimum_drag (usually equal to maximum_drag, but sometimes greater) and angularDrag (which has values like 2 or 3), but I believe that these are not used currently. (A test - set them to some crazy values and fly around a bit to see if they affect anything).\u003C/p\u003E\u003Cp\u003EI\\\u0027ve compared the C\u002B\u002B code at full thrust with a few other craft configurations, different numbers of fuel tanks etc., and it seems to do an OK job of predicting the flight profiles. That implies that the atmosphere (surface density 0.009785 kg/m3, thanks Iskierka) and drag behavior are well modeled. An exception appears to be with the new 0.14 \u0027half\u0027 tanks which provide \u003Cem\u003Emore\u003C/em\u003E impulse than expected based on the VAB numbers, but I could very well have made a mistake somewhere. \u003C/p\u003E\u003Cp\u003EAs for the ASAS, agreed it\\\u0027s not perfect. What we need are \u003Cstrong\u003Estar trackers\u003C/strong\u003E to reference and hold a direction and roll angle in an inertial frame!\u003C/p\u003E\n"},{"CreatedByName":"jebbe","CreatedById":16329,"CreatedDateTime":"2012-03-10T11:55:53Z","Content":"\n\u003Cp\u003ENew iteration - I have now included the Coriolis force into my calculations, and with this I get to an optimum height of \u003Cspan style=\u0022text-decoration:underline;\u0022\u003E33504.7\u003C/span\u003E m at 145.22s after launch. This is now almost 15m below Kosmo-not\\\u0027s record flight - not sure what to think about that... Maybe somebody can look over my procedure and probably find an error in it:\u003C/p\u003E\u003Cp\u003ETo do the correction, I calculated omega as stated here:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022jebbe\u0022 data-cite=\u0022jebbe\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThe Coriolis force for a vertically moving object at the equator is\u003C/p\u003E\u003Cp\u003EFc = 2 m omega v_vert\u003C/p\u003E\u003Cp\u003EThis results in a horizontal accelerating force of \u003C/p\u003E\u003Cp\u003EFa = m d(v_hor)/dt\u003C/p\u003E\u003Cp\u003Ewhich we can express in terms of omega,\u003C/p\u003E\u003Cp\u003EFa = - m d(omega r)/dt = - m (r d(omega)/dt \u002B omega dr/dt) = - m (r d(omega)/dt \u002B omega v_vert)\u003C/p\u003E\u003Cp\u003ESetting Fc = Fa we get\u003C/p\u003E\u003Cp\u003E2 omega v_vert = - r d(omega)/dt - omega v_vert\u003C/p\u003E\u003Cp\u003Eor\u003C/p\u003E\u003Cp\u003Ed(omega)/dt = - 3 omega v_vert / r\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is just one more differential equation (this time in the angular velocity) to apply the RK4-scheme to. I then used the corrected omega to calculate a corrected centrifugal force omega^2*r.\u003C/p\u003E\n"},{"CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-03-11T17:57:42Z","Content":"\n\u003Cp\u003EI can confirm that result with your differential equation for omega. I\\\u0027m not great with all this rotating reference frame stuff though and I hope someone else can weigh in on whether that approach is correct. \u003C/p\u003E\u003Cp\u003EI have tested my C\u002B\u002B code with this modification, and a simple v^2/r model, against flights with other spacecraft that go higher - way higher - and seem to get maximum altitudes somewhere in the middle of the two predictions. (Try pod\u002BASAS\u002B3 tanks \u002B1 LFE). \u003C/p\u003E\u003Cp\u003EThis makes we wonder if we should use one model in the atmosphere (when velocity is shown in \u0027Surface\u0027 mode by default perhaps) on the assumption that the craft is being pushed around laterally by the atmosphere, and another model when KSP decides to switch to \u0027Orbit\u0027 mode, when the spacecraft moves inertially? \u003C/p\u003E\u003Cp\u003EOne other prediction that might be tested with the Coriolis model is the \u0027maximum speed over ground\u0027 reported in the end of flight summary.\u003C/p\u003E\u003Cp\u003EOnce this Coriolis stuff is nailed down for vertical flights I think we shall be able to model efficient SSTO (single stage to orbit) trajectories via a \u0027shooting method\u0027.\u003C/p\u003E\n"},{"CreatedByName":"nichampagne","CreatedById":18659,"CreatedDateTime":"2012-03-12T00:26:50Z","Content":"\n\u003Cp\u003EHello! First post here. I started attempting this before reading all the info here. After reading, the tip of going full throttle at start to 100 m/s was a big boost.\u003C/p\u003E\u003Cp\u003EHere is my very un-scientific way of getting max alt, I just kept trying different things.\u003C/p\u003E\u003Cp\u003EFull throttle to 100m/s \u003C/p\u003E\u003Cp\u003Ehit x and immediately hit shift to increase to the 6 mark on the throttle\u003C/p\u003E\u003Cp\u003Ehold throttle until 10k\u003C/p\u003E\u003Cp\u003Eat 10k, give it a quick bump in throttle\u003C/p\u003E\u003Cp\u003Erepeat for 12k, 14k, 15k and 15.5k\u003C/p\u003E\u003Cp\u003Egun it to full at 16k\u003C/p\u003E\u003Cp\u003EThis method will always get you to at least 33,400 and sometimes more. The controls aren\\\u0027t precise enough to control much more than this. Heres a video! I started recording near the Ap of my best attempt yet (33,513) and then a few more attempts afterwards.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u0026lt;iframe width=\u0027640\u0027 height=\u0027360\u0027 src=\u0027[url]http://www.youtube.com/embed/4pWdlWBC8CE?rel=0\u0027[/url] frameborder=\u00270\u0027 allowfullscreen\u0026gt;\u0026lt;/iframe\u0026gt;\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://www.youtube.com/watch?v=4pWdlWBC8CE#ws\u0022 rel=\u0022external nofollow\u0022\u003EKerbal Space Program - Goddard Challenge\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-03-12T05:27:41Z","Content":"\n\u003Cp\u003E@nichampagne,\u003C/p\u003E\u003Cp\u003EThanks for telling us your results, and congratulations. You can use F1 (or Fn-F1 on a Mac) to record screenshots of your apoapsis and end-of-flight summary, but the video shows 33514 m with an unmodified spacecraft, so you are 2nd on the leaderboard! I was beginning to wonder if anyone else could break the 33500 m \u0027barrier\u0027. \u003C/p\u003E\u003Cp\u003EIf you can get above 33500 m again, a video from launch to crash would be very interesting for us to see.\u003C/p\u003E\u003Cp\u003EQuick question - above 16000m fuel is running down fast - do you believe that you are at 100% throttle when the engine cuts out, or are you increasing the throttle at that moment? The \u0027theory\u0027 says that throttle should be at 78% when the fuel runs out for this spacecraft.\u003C/p\u003E\u003Cp\u003EOh, and welcome to the forums!\u003C/p\u003E\n"},{"CreatedByName":"Kosmo-not","CreatedById":14082,"CreatedDateTime":"2012-03-12T06:49:50Z","Content":"\n\u003Cp\u003EAn excellent choice for your first post. Congrats on your attempt!\u003C/p\u003E\n"},{"CreatedByName":"nichampagne","CreatedById":18659,"CreatedDateTime":"2012-03-12T17:03:13Z","Content":"\n\u003Cp\u003EI had been gunning it to full at 16 k, and getting to 100% for a split second. Maybe i will try only increasing to the 11 or 12 mark and getting a longer burn.\u003C/p\u003E\u003Cp\u003EThe next time I do a few attempts in a row, I\\\u0027ll record them and hopefully capture a 33500 \u002B run.\u003C/p\u003E\n"},{"CreatedByName":"The_Duck","CreatedById":1156,"CreatedDateTime":"2012-03-12T18:21:51Z","Content":"\n\u003Cp\u003EHi all,\u003C/p\u003E\u003Cp\u003EAt jebbe\\\u0027s suggestion I am implementing the findings of this thread about optimal throttle control during ascent in my ascent autopilot plugin. Playing with the exact numbers I use in the code, I can get a few meters above the current record using the plugin. Note that the plugin has an advantage over human control in that it can instantly set the throttle to 100% at the start of the flight. So I don\\\u0027t know if you want robots on the leaderboard, but the result might be interesting.\u003C/p\u003E\u003Cp\u003EScreenshot of \u003Cstrong\u003E33,531 m\u003C/strong\u003E flight: \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cimg src=\u0022http://i.imgur.com/bq8lh.png\u0022 alt=\u0022bq8lh.png\u0022\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ETo do this I changed the ASAS on the rocket to use my plugin module for steering instead of the default ASAS code; this only changes one line in the cfg and I did not touch the mass or drag values.\u003C/p\u003E\u003Cp\u003EThe plugin sets the throttle as a function of altitude and current vertical speed to try to keep the current vertical speed near terminal velocity. I\\\u0027m calculating terminal velocity as described by jebbe \u003Ca href=\u0022http://kerbalspaceprogram.com/forum/index.php?topic=8449.msg126317#msg126317\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E. Here\\\u0027s the plugin code that figures out what throttle to set:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Edouble ratioTarget = 0.96;\u003Cbr\u003Edouble falloff = 15.0;\u003Cbr\u003E\u003Cbr\u003E//calculate vertical component of surface frame velocity, then divide this by terminal velocity\u003Cbr\u003Edouble velocityRatio = Vector3d.Dot(surfaceVelocity, upUnit) / terminalVelocity(); frame\u003Cbr\u003E\u003Cbr\u003E//below ratioTarget * terminalVelocity, full throttle. Above that quickly reduce the throttle as a function of the excess\u003Cbr\u003E//equilibrium velocity will be slightly above ratioTarget*terminalVelocity\u003Cbr\u003Eif (velocityRatio \u0026lt; ratioTarget) throttle = 1.0F; //full throttle\u003Cbr\u003Eelse throttle = Mathf.Clamp((float)(1.0 - falloff * (velocityRatio - ratioTarget)), 0.0F, 1.0F);\u003Cbr\u003E//\u0027Clamp\u0027 just keeps the throttle between 0.0 and 1.0\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis is just a quick and dirty way of setting the throttle to get approximately the desired velocity. Using ratioTarget = 0.96 ends up giving an equilibrium velocityRatio very close to 1.0. For the first part of the flight, velocity was a few tenths of a percent below terminal velocity; during the last few seconds of thrust this dropped down to a minimum of 2.5% below terminal velocity at engine cutoff. Maybe a control algorithm that actual enforced velocity = terminal velocity could do a bit better.\u003C/p\u003E\n"},{"CreatedByName":"Kosmo-not","CreatedById":14082,"CreatedDateTime":"2012-03-12T19:28:29Z","Content":"\n\u003Cp\u003EIf I were to program the throttle, I would do something like this:\u003C/p\u003E\u003Cp\u003Epseudo-code:\u003C/p\u003E\u003Cp\u003EthrottleRequired = (terminalVelocity - velocity) / timestep * mass / maxThrust\u003C/p\u003E\u003Cp\u003Eif throttleRequired \u0026lt; 0\u003C/p\u003E\u003Cp\u003E throttle = 0\u003C/p\u003E\u003Cp\u003Eelse if throttleRequired \u0026gt; 1\u003C/p\u003E\u003Cp\u003E throttle = 1\u003C/p\u003E\u003Cp\u003Eelse\u003C/p\u003E\u003Cp\u003E throttle = throttleRequired\u003C/p\u003E\u003Cp\u003EIs there a function that will return how much thrust your rocket can generate?\u003C/p\u003E\n"},{"CreatedByName":"closette","CreatedById":11773,"CreatedDateTime":"2012-03-12T19:33:46Z","Content":"\n\u003Cp\u003E@The_Duck, that\\\u0027s an amazing result! For all that effort and skill of course you belong on the leaderboard, but with an asterisk for using a very cool auto-pilot.\u003C/p\u003E\u003Cp\u003EIf you can improve on the altitude record further I\\\u0027d like to know, since 33531 m is 6 meters higher than my own prediction based on following terminal speed and a simple centrifugal model.\u003C/p\u003E\u003Cp\u003EThe absolute maximum altitude I can predict from tweaking my code is 33538 m, by the way, so you have a whole 7 meters to go! \u003C/p\u003E\u003Cp\u003EOther questions abound, e.g.\u003C/p\u003E\u003Cp\u003E- Do you get the same altitude every time? What if you use time-warp on the way up - does that change the result?\u003C/p\u003E\u003Cp\u003E- Did you use a constant maximum_drag factor of 0.2 to calculate the terminal speed, as in jebbe\\\u0027s post, or did you calculate a weighted average drag factor based on fuel used (slightly above 0.2 because of the tricoupler, which has maximum_drag = 0.3)?\u003C/p\u003E\u003Cp\u003EThis may help you (and others) - I have attached the full predicted flight profile from my version of jebbe\\\u0027s C\u002B\u002B code (with a simpler Coriolis correction and iteration scheme, but it doesn\\\u0027t affect much), which contains (altitude, terminal velocity) values for every 0.25s of the flight, and a summary at the end.\u003C/p\u003E\u003Cp\u003EIf you use these values it would be interesting to see if there was a small improvement in your auto-flown max. altitude.\u003C/p\u003E\u003Cp\u003EThanks so much for trying the challenge and sharing your expertise! \u003C/p\u003E\n"}]}