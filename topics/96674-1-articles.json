{"TopicId":96674,"ForumId":44,"TopicTitle":"A question about orbits","CreatedByName":"Milorgmannen","CreatedById":34188,"CreatedDateTime":"2015-01-14T17:26:30Z","PageNum":1,"Articles":[{"CreatedByName":"Milorgmannen","CreatedById":34188,"CreatedDateTime":"2015-01-14T17:26:30Z","Content":"\n\u003Cp\u003EHi,\u003C/p\u003E\u003Cp\u003EI\u0027m toying around with making a Low Earth Orbit RTS, purely just to see if it could work.\u003C/p\u003E\u003Cp\u003EBut I\u0027m wondering if my orbits are realistic. Currently any orbit that is not circular but like an ellipse will \u0022move\u0022 its highest point around the earth each orbit. \u003C/p\u003E\u003Cp\u003ELike this.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022https://1.bp.blogspot.com/-u0F3HptBdT4/VLal5U8HmqI/AAAAAAAAAM8/QkeexDGcmqc/s1600/Tegn1.png\u0022 alt=\u0022Tegn1.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EPlaying KSP makes me thing that something is wrong here.\u003C/p\u003E\u003Cp\u003EIs it?\u003C/p\u003E\n"},{"CreatedByName":"KSK","CreatedById":61025,"CreatedDateTime":"2015-01-14T17:37:37Z","Content":"\n\u003Cp\u003EIs the planet rotating? It looks like you\u0027re displaying things from the \u0027wrong\u0027 frame of reference, so that rather than displaying a fixed orbit with a rotating planet, you\u0027re displaying a fixed planet with a rotating orbit. Both are valid but the first one might be more intuitive to use!\u003C/p\u003E\n"},{"CreatedByName":"Milorgmannen","CreatedById":34188,"CreatedDateTime":"2015-01-14T17:45:17Z","Content":"\n\u003Cp\u003EThe planet is not rotating.I wasn\u0027t thinking of that \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Frida Space","CreatedById":60943,"CreatedDateTime":"2015-01-14T17:46:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022KSK\u0022 data-cite=\u0022KSK\u0022\u003E\u003Cdiv\u003EIs the planet rotating? It looks like you\u0027re displaying things from the \u0027wrong\u0027 frame of reference, so that rather than displaying a fixed orbit with a rotating planet, you\u0027re displaying a fixed planet with a rotating orbit. Both are valid but the first one might be more intuitive to use!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHaving read space-news for many years now, I have to say that the second one, althought less intuitive (for me, that is), is often the most used, especially by NASA \u0026amp; Co.\u003C/p\u003E\n"},{"CreatedByName":"Greenfire32","CreatedById":36705,"CreatedDateTime":"2015-01-14T18:02:55Z","Content":"\n\u003Cp\u003EYeah, like KSK said, you have to take planet rotation into effect. If you were to observe the orbit from the surface of the planet, it would appear as if the orbit was moving around the planet.\u003C/p\u003E\u003Cp\u003ESort of like how we say the sun is \u0022rising\u0022 or \u0022setting,\u0022 but it\u0027s actually \u003Cstrong\u003EEarth\u0027s rotation\u003C/strong\u003E causing that effect.\u003C/p\u003E\n"},{"CreatedByName":"merendel","CreatedById":97774,"CreatedDateTime":"2015-01-14T18:30:33Z","Content":"\n\u003Cp\u003EThe apoapsis (highpoint) of the orbit will stay in roughly the same alignment relitive to a fixed referance point from orbit to orbit. If its over the \u0022Dawn\u0022 line one orbit it will still be over the dawn line when it gets back to apoapsis the next time. The earth will be rotating under that orbit so the apoapsis may be over Russia the first time, Europe the second and the USA on the third orbit but it will still be at dawn in the short term. Over the year it will appear to shift as the earth moves around the sun, the orbit itself wont have changed just the frame of referance. from a top down view of the solar system if the apoapsis is south of earth it will stay south of earth even 6 months later when its now over sunset instead of dawn.\u003C/p\u003E\u003Cp\u003EThis is of course ignoring N body physics where the gravity of other moons/planets can alter the orbits but thats probably beyond the scope of what your looking at. Asumeing your not viewing the solar system as a whole in the scope of your game and your looking for a simi realistic eliptical orbit I\u0027d recomend useing the day/night terminator as your referance point. If your only looking at a few days timeframe dont bother moveing it around from orbit to orbit as the shift will be negligible. if going for realism and many months of time are passing it will shift relative to the terminator about 2 hours per month so its going to be quite a few orbits before the effect is noticeable to the naked eye\u003C/p\u003E\n"},{"CreatedByName":"TythosEternal","CreatedById":117821,"CreatedDateTime":"2015-01-14T21:37:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Milorgmannen\u0022 data-cite=\u0022Milorgmannen\u0022\u003E\u003Cdiv\u003ECurrently any orbit that is not circular but like an ellipse will \u0022move\u0022 its highest point around the earth each orbit.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPeriapsis and apoapsis will always be, by definition, the lowest and highest points in the orbit, respectively. You are trying to show the same orbit rotated about the central body, but orbits one and three appear to have both a) different periapsis and apoapsis altitudes and \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E still share the same point of intersection with orbit two, which is not possible unless the shape of the orbit has also changed.\u003C/p\u003E\u003Cp\u003EAn orbit is fixed inertially unless a non-\u0022restricted two body\u0022 force (like a reaction thruster during a maneuver, the gravitational pull of a third body, or the non-spherical components of the central body\u0027s gravitational field) changes that orbit. An orbit is not fixed with respect to the surface of the planet, because the surface is not inertial (it is spinning). An orbit is not fixed with respect to the sun, because the central body (I am assuming we are talking about a planet here) is also moving about the sun. Of course, the sun-centered frame of reference isn\u0027t inertial either, but it\u0027s sufficiently close for accurate orbital calculations.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022merendel\u0022 data-cite=\u0022merendel\u0022\u003E\u003Cdiv\u003EIf its over the \u0022Dawn\u0022 line one orbit it will still be over the dawn line when it gets back to apoapsis the next time. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is decidedly NOT the case. As the earth moves about the sun, the sun\u0027s position w.r.t. the earth changes noticeably over the course of even one orbit. There is a special type of orbit (\u0022sun-synchronous\u0022) that uses higher-order gravitational perturbations (specifically, the oblateness of the earth) to recess (rotate backwards) its nodal line (orbital plane) to make sure the mean solar time at nodal crossings remains constant, but this is a special case.\u003C/p\u003E\u003Cp\u003ELEO orbits can be tricky to model in a ground-fixed frame (I assume, given that you are writing an RTS, that you want to manipulate your orbits w.r.t. the ground) without doing full-up orbit propagation, but it\u0027s not impossible by any means. One of the simpler approaches might be to assume all the spacecraft in your environment have been placed in circular orbits, which simplifies the equations of motion considerably into something a decent programmer like to yourself would have no problem implementing for your game to compute in real-time.\u003C/p\u003E\n"},{"CreatedByName":"Bill Phil","CreatedById":127797,"CreatedDateTime":"2015-01-14T21:58:02Z","Content":"\n\u003Cp\u003EClearly it has to do with frame of reference issues.\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2015-01-15T05:02:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Milorgmannen\u0022 data-cite=\u0022Milorgmannen\u0022\u003E\u003Cdiv\u003EHi,\u003Cp\u003EI\u0027m toying around with making a Low Earth Orbit RTS, purely just to see if it could work.\u003C/p\u003E\u003Cp\u003EBut I\u0027m wondering if my orbits are realistic. Currently any orbit that is not circular but like an ellipse will \u0022move\u0022 its highest point around the earth each orbit. \u003C/p\u003E\u003Cp\u003EPlaying KSP makes me thing that something is wrong here.\u003C/p\u003E\u003Cp\u003EIs it?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is definitely wrong. Argument of periapsis (location of lowest point) can drift for a number of reasons. Most likely, you have some numerical errors. If you can post the portion of the code that you use to evaluate orbit, we can look for an actual error.\u003C/p\u003E\n"},{"CreatedByName":"N_las","CreatedById":31280,"CreatedDateTime":"2015-01-15T06:14:46Z","Content":"\n\u003Cp\u003EI had the same issue once. You are probably using the Euler methode to calculate your trajectory. \u003Ca href=\u0022https://en.wikipedia.org/wiki/Euler_method\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://en.wikipedia.org/wiki/Euler_method\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EYou can fix this by using a more complicated methode of calculation.\u003C/p\u003E\u003Cp\u003EYou are probalby calculating the force and subsequent acceleration at the \u0022current\u0022 moment.\u003C/p\u003E\u003Cp\u003EThen you are adding the acceleration (times the time-step-size) to your \u0022current\u0022 velocity to get the \u0022new\u0022 velocity.\u003C/p\u003E\u003Cp\u003EThen your are adding the \u0022new\u0022 velocity (times the time-step-size) to your \u0022current\u0022 position to get the \u0022new\u0022 position.\u003C/p\u003E\u003Cp\u003EIf that is true then I can explain how to fix it.\u003C/p\u003E\n"},{"CreatedByName":"TythosEternal","CreatedById":117821,"CreatedDateTime":"2015-01-15T15:47:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022N_las\u0022 data-cite=\u0022N_las\u0022\u003E\u003Cdiv\u003EI had the same issue once. You are probably using the Euler methode to calculate your trajectory\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe Euler method is unstable for inverse-square propagation, but the error mode results in non-conservation of energy. Euler will show you an orbit that is slowly shrinking (or growing) over time, but the shape remains the same. What he\u0027s describing here is a frame issue.\u003C/p\u003E\u003Cp\u003EMilorgmannen, are you also managing things on the ground, or is the RTS purely on space? Are you flying in a localized area, or does your RRS span the entire volume about the planet? Can you post your orbital code and tell us what you are trying to make it do? The more we know, the more we can help.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-15T15:56:44Z\u0022 title=\u002201/15/2015 03:56  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 15, 2015\u003C/time\u003E by TythosEternal\u003C/strong\u003E\n\u003Cbr\u003Eadding question\n\u003C/span\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2015-01-15T19:21:10Z","Content":"\n\u003Cp\u003EEuler does both. Energy will increase, and argument of periapsis will precess. One can be more noticeable than the other.\u003C/p\u003E\n"},{"CreatedByName":"Milorgmannen","CreatedById":34188,"CreatedDateTime":"2015-01-16T16:16:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022N_las\u0022 data-cite=\u0022N_las\u0022\u003E\u003Cdiv\u003EI had the same issue once. You are probably using the Euler methode to calculate your trajectory. \u003Ca href=\u0022https://en.wikipedia.org/wiki/Euler_method\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://en.wikipedia.org/wiki/Euler_method\u003C/a\u003E\u003Cp\u003EYou can fix this by using a more complicated methode of calculation.\u003C/p\u003E\u003Cp\u003EYou are probalby calculating the force and subsequent acceleration at the \u0022current\u0022 moment.\u003C/p\u003E\u003Cp\u003EThen you are adding the acceleration (times the time-step-size) to your \u0022current\u0022 velocity to get the \u0022new\u0022 velocity.\u003C/p\u003E\u003Cp\u003EThen your are adding the \u0022new\u0022 velocity (times the time-step-size) to your \u0022current\u0022 position to get the \u0022new\u0022 position.\u003C/p\u003E\u003Cp\u003EIf that is true then I can explain how to fix it.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat would be precise what I\u0027m doing \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E I didn\u0027t know anything about orbits other than KSP before I started, all I have is Wikipedia \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EThe drawing was not quite accurate \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E but my point was that it seemed like the orbits were shifting.\u003C/p\u003E\u003Cp\u003EI\u0027m only modelling space combat in LEO. Currently I have no idea of how to make it work, but it is fun just trying to find out what that would work, and what that doesn\u0027t, I have studied all kinds of warfare on earth, I figured it was time to look to the sky. \u003C/p\u003E\u003Cp\u003EFirst problem other that weird orbits is that space even around earth is huge, I have to make the tools needed to find and destroy enemy ships.\u003C/p\u003E\u003Cp\u003EI decided to simplify things by going 2D, and I might go for a micro earth later if I continue to have problems finding the enemy ships \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EThe interesting part is here. It might just be a rounding error?\u003C/p\u003E\u003Cp\u003E//Each orbiting object\u003C/p\u003E\u003Cp\u003E int bb = 0;\u003C/p\u003E\u003Cp\u003E while (bb \u0026lt; orbitingObjects.Count)\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E //Apply gravity\u003C/p\u003E\u003Cp\u003E orbitingObjects[bb].radius = Math.Sqrt(Math.Pow(orbitingObjects[bb].position.X, 2) \u002B Math.Pow(orbitingObjects[bb].position.Y, 2));\u003C/p\u003E\u003Cp\u003E double gravityVelocity = earth.gravity * (earth.mass / Math.Pow(earth.radius, 2)); //earth.mass = 5.975e24; earth.radius = 6.37814e6;\u003C/p\u003E\u003Cp\u003E orbitingObjects[bb].angle = Math.Atan2(orbitingObjects[bb].position.X, orbitingObjects[bb].position.Y);\u003C/p\u003E\u003Cp\u003E orbitingObjects[bb].velocity \u002B= new Vector2((float)(Math.Sin(orbitingObjects[bb].angle) * gravityVelocity), (float)(Math.Cos(orbitingObjects[bb].angle) * gravityVelocity));\u003C/p\u003E\u003Cp\u003E //Move item\u003C/p\u003E\u003Cp\u003E orbitingObjects[bb].position -= orbitingObjects[bb].velocity;\u003C/p\u003E\u003Cp\u003E bb\u002B\u002B;\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\n"},{"CreatedByName":"N_las","CreatedById":31280,"CreatedDateTime":"2015-01-18T09:39:31Z","Content":"\n\u003Cp\u003EYou are first calculating the distance between your ship and the middle of the earth (the middle of the earth is at (0 ; 0) in your simulation?)\u003C/p\u003E\u003Cp\u003EThen you calculate a \u0022gravity velocity\u0022? ( G*M_Earth / r^2)\u003C/p\u003E\u003Cp\u003EThis is actually an acceleration you are calculation here, not a velocity.\u003C/p\u003E\u003Cp\u003EYou are correctly fighting the angles ( atan2(x,y) instead of atan(x/y) )\u003C/p\u003E\u003Cp\u003EThen you are saying the new velocity is the the old velocity plus your calculated \u0022gravity velocity\u0022\u003C/p\u003E\u003Cp\u003EThen you move the object by said velocity (why -= instead of \u002B=)?\u003C/p\u003E\u003Cp\u003EFirst: You should define a step size: How much time (in your simulation) is going by during each calculatin cycle (in seconds or something).\u003C/p\u003E\u003Cp\u003EStepTime = 10 \u003C/p\u003E\u003Cp\u003EThen you can calculate the CURRENT radius (exactly as you do now). This represents the radius you have at the beginning of each calculation cycle.\u003C/p\u003E\u003Cp\u003Er_current = blabla\u003C/p\u003E\u003Cp\u003Ethen you calculate the CURRENT accelration due to gravity (exactly as you calculate your \u0022gravityVelocity\u0022:\u003C/p\u003E\u003Cp\u003Ea_current = - G*M_Earth/(r_current^2)\u003C/p\u003E\u003Cp\u003EThe minus is very important! You do want an attracting planet.\u003C/p\u003E\u003Cp\u003EThen you caculate your CURRENT angle:\u003C/p\u003E\u003Cp\u003Eangle_current = blabla\u003C/p\u003E\u003Cp\u003EAssume you know v_current.\u003C/p\u003E\u003Cp\u003EThen you calculate the PROJECTED velocity that you would have AFTER the cycle (if the distance and angle wouldn\u0027t change)\u003C/p\u003E\u003Cp\u003ESomething like this, exept you have to somehow take the current angle into account... I haven\u0027t done that here)\u003C/p\u003E\u003Cp\u003Ev_projected = v_current \u002B ( a_current * StepTime )\u003C/p\u003E\u003Cp\u003EBut v_projected is the projected velocity you have AFTER the step time. (while v_current is the velocity you have BEFORE the step time).\u003C/p\u003E\u003Cp\u003EFor your calculation you want the mean value between both (the estimated mean velocity DURING the step)\u003C/p\u003E\u003Cp\u003Ev_effective = (v_projected \u002B v_current)/2\u003C/p\u003E\u003Cp\u003EYou now know v_effective. With that you can calculate the projected position:\u003C/p\u003E\u003Cp\u003Eposition_projected = position_current \u002B (v_effective * StepTime)\u003C/p\u003E\u003Cp\u003EIt seem like the calculation is finished here, but that is not true:\u003C/p\u003E\u003Cp\u003EThe projected position you just calculated is just the first estimation. You now have to use this estimation to calculate a more exact result:\u003C/p\u003E\u003Cp\u003E1.) use the projected postion to calculate a projected radius (the radius you would have at the end of the cycle) r_projected\u003C/p\u003E\u003Cp\u003E2.) use the projected radius to calculate the projected gravity acceleration (the acceleration you would have at the end of the cycle) a_projected\u003C/p\u003E\u003Cp\u003E3.) do the same angle stuff as before to calculate the projected angle (the angle you would have at the end of the cylce) angle_projected\u003C/p\u003E\u003Cp\u003E4.) calculate the mean of the current acceleration and the projected acceleration to get the effektive acceleration (you also have to calculate the effective angle in the same manner)\u003C/p\u003E\u003Cp\u003E5.) do the same stuff as before to calculate a \u0022better\u0022 projection of the velocity (and take somehow the angle into account)\u003C/p\u003E\u003Cp\u003Ev_betterProjection = v_current \u002B ( a_effective * StepTime )\u003C/p\u003E\u003Cp\u003E6.)\u003C/p\u003E\u003Cp\u003EUse it to calculate a better estimation of the effective velocity (the mean velocity between the current velocity and the betterProjection velocity9\u003C/p\u003E\u003Cp\u003Ev_betterEffective = (v_current \u002B v_betterProjection) /2\u003C/p\u003E\u003Cp\u003E7.)\u003C/p\u003E\u003Cp\u003EWith v_betterEffective, you can now calculate a much better estimation of your projected position:\u003C/p\u003E\u003Cp\u003Eposition_betterProjection = position_current \u002B (v_betterEffective * StepTime)\u003C/p\u003E\u003Cp\u003EThis \u0022position_betterProjection\u0022 is now a much better value as your previously calculated new position.\u003C/p\u003E\u003Cp\u003EYou have to end the cycle.\u003C/p\u003E\u003Cp\u003EDon\u0027t forget that your \u0022position_betterProjection\u0022 becomes your \u0022positon_current\u0022 for the next cycle.\u003C/p\u003E\u003Cp\u003EAnd your \u0022v_betterProjection\u0022 becomes your \u0022v_current\u0022 for the next cycle.\u003C/p\u003E\u003Cp\u003EThe methode I described here is the Heun-Methode (you originally used the Euler-Methode).\u003C/p\u003E\u003Cp\u003EWhile it doubles the computational effort, it is worth it: You can find tons of example all over the internet how it gives much better results:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://controls.engin.umich.edu/wiki/images/1/13/Slopedepiction.JPG\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://controls.engin.umich.edu/wiki/images/1/13/Slopedepiction.JPG\u003C/a\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-18T09:48:56Z\u0022 title=\u002201/18/2015 09:48  AM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 18, 2015\u003C/time\u003E by N_las\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Waterlimon","CreatedById":16829,"CreatedDateTime":"2015-01-19T09:36:43Z","Content":"\n\u003Cp\u003EInstead of using a better integration (your problem is basically using a bad integrator, check ones like leapfrog algorithm or RK4 or whatever) technique (which is an approximation, like eulers method assumes velocity is constant over a frame, when its not, and better methods assume the velocity changes linearly or is given by a polynomial or other such approximations), you could do what KSP does for orbits and describe them explicitly.\u003C/p\u003E\u003Cp\u003EWhat this means is that you actually calculate the orbital parameters (eccentricity, inclination, whatnot, i dont know, google for relevant material) and save that as the orbit.\u003C/p\u003E\u003Cp\u003EThis means you can calculate the exact position of the orbiting body based on time, with no drifting whatsoever (since you saved the exact orbit instead of it just forming as a result of inaccurate physics approximations)\u003C/p\u003E\u003Cp\u003EOf course you need to update this saved orbit data when nongravity forces act on the craft, which means it wont really work if theres a constant force like a thruster thats constantly on acting on the craft.\u003C/p\u003E\u003Cp\u003EUse explicit orbits if the orbits remain unchanged for long periods of time, thus avoiding numerical accuracy errors.\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2015-01-19T10:59:20Z","Content":"\n\u003Cp\u003EYou can, actually, recompute all of the physics to act on orbital parameters directly. This is something that KSP \u003Cem\u003Edoesn\u0027t\u003C/em\u003E do. KSP does it exactly like you say. It takes velocity and position and computes the 6 orbital elements. Semi-major axis, eccentricity, inclination, argument of periapsis, longitude of the ascending node, and mean anomaly at epoch. If you apply a force, it recomputes velocity, then recomputes the orbital elements. That\u0027s why sometimes you see the orbits shake a little for your current craft. While warping, or if physics isn\u0027t being simulated, you usually go \u0022on rails\u0022. That is, you\u0027ll just follow along a fixed orbit.\u003C/p\u003E\u003Cp\u003EThe other way to do this is to work with constants of motion directly. There are also six, and they are closely related to orbital elements above. Energy, angular momentum, z-component of angular momentum, time of periapsis passage, argument of periapsis, and longitude of the ascending node. The best part is that they are constants of unperturbed Hamiltonian, they have rather simple laws of motion. In fact, they are just Hamilton\u0027s Equations on perturbation potential. For example, the equation for the rate of change of energy is dE/dt = -\u00C3\u00A2\u00CB\u2020\u00E2\u20AC\u0161U/\u00C3\u00A2\u00CB\u2020\u00E2\u20AC\u0161T. Here, U is effective potential of the applied force. In other words, what you really know is that \u00C3\u00A2\u00CB\u2020\u00E2\u20AC\u0161U/\u00C3\u00A2\u00CB\u2020\u00E2\u20AC\u0161x = -F\u003Csub\u003Ex\u003C/sub\u003E, and so on. If you apply the chain rule a whole bunch of time, you\u0027ll find that dE/dt is equal to dot product of velocity and force, which is exactly what you expect. Some of the other results are a bit less trivial, and they are almost nightmarish to derive. On the other hand, once you have these equations derived, you can apply forces directly to orbital elements, and then you don\u0027t have to worry about your energy running away, like it does with Euler method (or even higher order methods, to lesser extent) or oscillating, like it does in KSP.\u003C/p\u003E\n"}]}