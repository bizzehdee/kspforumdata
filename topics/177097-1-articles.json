{"TopicId":177097,"ForumId":29,"TopicTitle":"[SOLVED] When 1 \u0026lt;\u0026gt; 1 Ya gotta love Unity.","CreatedByName":"Fengist","CreatedById":78435,"CreatedDateTime":"2018-07-27T15:08:14Z","PageNum":1,"Articles":[{"CreatedByName":"Fengist","CreatedById":78435,"CreatedDateTime":"2018-07-27T15:08:14Z","Content":"\n\u003Cp\u003E\nSo, I\u0027m trying to detect when a thrustTransform has been rotated.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E override \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EOnStart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EStartState\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E state\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n           myEngine \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E part\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EModules\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EOfType\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003EModuleEngines\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;().\u003C/span\u003E\u003Cspan\u003EFirstOrDefault\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n           mytransform \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E part\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EFindModelTransform\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EmyEngine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EthrustVectorTransformName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n           startForward \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ethis\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Evessel\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Etransform\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eforward \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E mytransform\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eforward\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nSeems logical to me.\u00A0 I compare the vessel forward to the thrustTransform forward and get a vector.\n\u003C/p\u003E\n\u003Cp\u003E\nThen, in fixedUpdate I compare them again to see if it\u0027s pointing a different direction\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E            float newdirection = 1.0f;\n            Vector3 forward = this.vessel.transform.forward - mytransform.forward;\n            Debug.Log(\u0022Forward: \u0022 \u002B forward.normalized \u002B \u0022 StartForward: \u0022 \u002B startForward.normalized);\n            if (startForward.normalized != forward.normalized)\n            {\n                newdirection = -1;\n            }\n            Debug.Log(\u0022New Direction: \u0022 \u002B newdirection \u002B \u0022 Last Direction: \u0022 \u002B lastdirection);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nand here\u0027s the\u00A0log output\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E[LOG 09:40:19.550] Forward: (0.2, 0.1, -1.0) StartForward: (0.2, 0.1, -1.0)\n[LOG 09:40:19.550] New Direction: 1 Last Direction: 1\n[LOG 09:40:19.569] [UIMasterController]: ShowUI\n[LOG 09:40:19.577] Forward: (0.2, 0.1, -1.0) StartForward: (0.2, 0.1, -1.0)\n[LOG 09:40:19.577] New Direction: -1 Last Direction: 1\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nAs soon as the UIMasterController loads ShowUI... my two vectors no longer equal each other even though the values are identical.\n\u003C/p\u003E\n\u003Cp\u003E\nWhut?????\n\u003C/p\u003E\n\u003Cp\u003E\n(0.2, 0.1, -1.0) \u0026lt;\u0026gt;\u00A0(0.2, 0.1, -1.0)!!!\n\u003C/p\u003E\n\u003Cp\u003E\nYea, that is correct.\n\u003C/p\u003E\n\u003Cp\u003E\nTried Vector3.Equals and\u00A0(0.2, 0.1, -1.0) still \u0026lt;\u0026gt;\u00A0(0.2, 0.1, -1.0)\n\u003C/p\u003E\n\u003Cp\u003E\n*edit\n\u003C/p\u003E\n\u003Cp\u003E\nAnd then I found this post:\u00A0\u003Ca href=\u0022https://forum.unity.com/threads/comparing-two-identical-vector3-returns-false.327128/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://forum.unity.com/threads/comparing-two-identical-vector3-returns-false.327128/\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nWhich clearly describes the fact that vectors will almost never = another vector.\n\u003C/p\u003E\n\u003Cp\u003E\nSince I only need to know if the vector was rotated 180 degrees I went with this solution\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eint x1=(int)vect1.x;\nint y1=(int)vect1.y;\nint z1=(int)vect1.z;\nint x2=(int)vect2.x;\nint y2=(int)vect2.y;\nint z2=(int)vect2.z;\nDebug.Log((x1==x2)\u0026amp;\u0026amp;(y1==y2)\u0026amp;\u0026amp;(z1==z2));\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cfont color=\u0022#333333\u0022\u003E\u003Cspan style=\u0022font-size:14.6667px;background-color:rgb(250,250,250);\u0022\u003Ewhich worked.\u003C/span\u003E\u003C/font\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222018-07-27T15:28:58Z\u0022 title=\u002207/27/2018 03:28  PM\u0022 data-short=\u00225 yr\u0022\u003EJuly 27, 2018\u003C/time\u003E by Fengist\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"HebaruSan","CreatedById":156657,"CreatedDateTime":"2018-07-27T15:42:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223423186\u0022 data-ipsquote-contentid=\u0022177097\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221532704094\u0022 data-ipsquote-userid=\u002278435\u0022 data-ipsquote-username=\u0022Fengist\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n28 minutes ago, Fengist said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSince I only need to know if the vector was rotated 180 degrees I went with this solution\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003Eint x1=(int)vect1.x;\nint y1=(int)vect1.y;\nint z1=(int)vect1.z;\nint x2=(int)vect2.x;\nint y2=(int)vect2.y;\nint z2=(int)vect2.z;\nDebug.Log((x1==x2)\u0026amp;\u0026amp;(y1==y2)\u0026amp;\u0026amp;(z1==z2));\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cfont color=\u0022#333333\u0022\u003E\u003Cspan style=\u0022font-size:14.6667px;background-color:rgb(250,250,250);\u0022\u003Ewhich worked.\u003C/span\u003E\u003C/font\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThat will probably still glitch out occasionally when one of the components is close to an integer.\u00A0I believe the usual solution to comparing floating point numbers (\u003Ca href=\u0022https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\u0022 rel=\u0022external nofollow\u0022\u003Ea very common difficulty regardless of Unity\u003C/a\u003E) is to subtract them and compare the absolute value of their difference to some small constant, for example:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022kwd\u0022\u003Econst\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edouble\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E epsilon \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.005\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EMath\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EAbs\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex1 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E x2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E epsilon\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/* do stuff */\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Fengist","CreatedById":78435,"CreatedDateTime":"2018-07-27T15:46:30Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223423203\u0022 data-ipsquote-contentid=\u0022177097\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221532706121\u0022 data-ipsquote-userid=\u0022156657\u0022 data-ipsquote-username=\u0022HebaruSan\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nJust now, HebaruSan said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThat will probably still glitch out occasionally when one of the components is close to an integer.\u00A0I believe the usual solution to comparing floating point numbers (\u003Ca href=\u0022https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\u0022 rel=\u0022external nofollow\u0022\u003Ea very common difficulty regardless of Unity\u003C/a\u003E) is to subtract them and compare the absolute value of their difference to some small constant, for example:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022kwd\u0022\u003Econst\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edouble\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E epsilon \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.005\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EMath\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EAbs\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ex1 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E x2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E epsilon\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/* do stuff */\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYa, I saw that solution as well.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E        public static bool FuzzyEquals(this Vector2 a, Vector2 b)\n        {\n            return MathUtil.FuzzyEqual(Vector3.SqrMagnitude(a - b), MathUtil.EPSILON_SQR);\n        }\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nbut what I\u0027m trying to detect will be either 0 or 180 out so rounding should be fine.\u00A0 The complaint I have is when I output the debug.log and it shows me\u00A0(0.3, 0.5, -0.8)... well, I expect that to\u00A0 be EQUAL to\u00A0(0.3, 0.5, -0.8) and not to hide a gob of floating points in there.\n\u003C/p\u003E\n"},{"CreatedByName":"HebaruSan","CreatedById":156657,"CreatedDateTime":"2018-07-27T15:54:26Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223423204\u0022 data-ipsquote-contentid=\u0022177097\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221532706390\u0022 data-ipsquote-userid=\u002278435\u0022 data-ipsquote-username=\u0022Fengist\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 minutes ago, Fengist said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nbut what I\u0027m trying to detect will be either 0 or 180 out so rounding should be fine.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nHmm, doesn\u0027t look like that\u0027s the case from the code you posted. You\u0027re comparing the x, y, and z components of two vectors, which can be any floating point values, not just 0 or 180. And if vect1.x is (for example) 1.0001 while vect2.x is 0.99998, you\u0027ll have the same problem again.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 minutes ago, Fengist said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThe complaint I have is when I output the debug.log and it shows me\u00A0(0.3, 0.5, -0.8)... well, I expect that to\u00A0 be EQUAL to\u00A0(0.3, 0.5, -0.8) and not to hide a gob of floating points in there.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOh. Well, it\u0027s not. \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"peteletroll","CreatedById":144573,"CreatedDateTime":"2018-07-28T08:30:19Z","Content":"\n\u003Cp\u003E\nUnity supports approximate equality:\u00A0\u003Ca href=\u0022https://docs.unity3d.com/ScriptReference/Mathf.Approximately.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://docs.unity3d.com/ScriptReference/Mathf.Approximately.html\u003C/a\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2018-07-28T09:45:30Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223423186\u0022 data-ipsquote-contentid=\u0022177097\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221532704094\u0022 data-ipsquote-userid=\u002278435\u0022 data-ipsquote-username=\u0022Fengist\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n18 hours ago, Fengist said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSince I only need to know if the vector was rotated 180 degrees I went with this solution\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003Eint\u003Cspan\u003E\uFEFF\u003C/span\u003E x1=(int)vect1.x;\nint y1=(int)vect1.y;\nint z1=(int)vect1.z;\nint x2=(int)vect2.x;\nint y2=(int)vect2.y;\nint z2=(int)vect2.z;\nDebug.Log((x1==x2)\u0026amp;\u0026amp;(y1==y2)\u0026amp;\u0026amp;(z1==z2));\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cfont color=\u0022#333333\u0022\u003E\u003Cspan style=\u0022font-size:14.6667px;background-color:rgb(250,250,250);\u0022\u003Ewhich worked.\u003C/span\u003E\u003C/font\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nBut now you\u0027re converting floats to integers, and then comparing those.\u00A0 Depending on how exact you want to be, this is wrong by almost any definition I can think of\n\u003C/p\u003E\n\u003Cp\u003E\nWhat\u0027s interesting is that according to Unity, vector3 comparisons using the == IS using an \u0022approximate\u0022 method, see here:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://docs.unity3d.com/ScriptReference/Vector3-operator_eq.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://docs.unity3d.com/ScriptReference/Vector3-operator_eq.html\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nRegarding the output, I suspect that if you replaced the internal output code with outputting the individual values yourself, you might see the differences.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027d use code something like the following:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EVector3 v1, v2;\n...\n\nif ( (Math.Abs(v1.x - v2.x) \u0026lt; 0.01) \u0026amp;\u0026amp; (Math.Abs(v1.y - v2.y) \u0026lt; 0.01) \u0026amp;\u0026amp; (Math.Abs(v1.z - v2.z) \u0026lt; 0.01) )\n{\n...\n}\n                                                                                                       \nor\n\nif (Math.Abs(v1.magnitude - v2.magnitude) \u0026lt; 0.01)\n{\n...\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"peteletroll","CreatedById":144573,"CreatedDateTime":"2018-07-28T09:53:14Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223423605\u0022 data-ipsquote-contentid=\u0022177097\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221532771130\u0022 data-ipsquote-userid=\u0022129964\u0022 data-ipsquote-username=\u0022linuxgurugamer\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 minutes ago, linuxgurugamer said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nif (Math.Abs(v1.magnitude - v2.magnitude) \u0026lt; 0.01) { ... }\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou probably mean\n\u003C/p\u003E\n\u003Cp\u003E\n(v1 - v2).magnitude \u0026lt; 0.01\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022:P\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 title=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2018-07-28T10:31:20Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223423609\u0022 data-ipsquote-contentid=\u0022177097\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221532771594\u0022 data-ipsquote-userid=\u0022144573\u0022 data-ipsquote-username=\u0022peteletroll\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n37 minutes ago, peteletroll said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nYou probably mean\n\u003C/p\u003E\n\u003Cp\u003E\n(v1 - v2).magnitude \u0026lt; 0.01\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022:P\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 title=\u0022:P\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nProbably, I typed that in, wasn\u0027t tested at all\n\u003C/p\u003E\n"},{"CreatedByName":"Fengist","CreatedById":78435,"CreatedDateTime":"2018-07-28T11:58:51Z","Content":"\n\u003Cp\u003E\nFrom what I read when comparing Vectors in Unity\u00A0 == is an approximation.\u00A0 I was using != which, as I understand it is not an approximation which makes no logical sense.\u00A0 And you are correct \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/129964-linuxgurugamer/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022129964\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/129964-linuxgurugamer/\u0022 rel=\u0022\u0022\u003E@linuxgurugamer\u003C/a\u003E.\u00A0 If I printed out vector.x it gave me the full value of x.\n\u003C/p\u003E\n\u003Cp\u003E\nI finally ended up ripping out vectors and used quaternian local rotations and a quaternian.dot to compare them.\u00A0 For whatever reason, quaternian != quaternian works\u00A0but vector != vector doesn\u0027t.\u00A0 I originally tried the local rotation thinking that was the solution but I guess my code was bad and it kept giving inconsistent results.\n\u003C/p\u003E\n\u003Cp\u003E\nI still protest the fact that when I tell Unity to show me the value of a variable that it shows me a rounded approximation instead.\u00A0 If I visually inspect the contents of 2\u00A0variables and they LOOK equal then they should be equal.\u00A0 I know of no other examples in all the programming languages I know of where that type of illogic exists.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"peteletroll","CreatedById":144573,"CreatedDateTime":"2018-07-28T12:24:09Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/78435-fengist/\u0026amp;do=hovercard\u0022 data-mentionid=\u002278435\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/78435-fengist/\u0022 rel=\u0022\u0022\u003E@Fengist\u003C/a\u003E, floating point numbers are always approximate, and floating point vectors are too. You may want to read something about them here:\u00A0\u003Ca href=\u0022https://en.m.wikipedia.org/wiki/Floating-point_arithmetic\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://en.m.wikipedia.org/wiki/Floating-point_arithmetic\u003C/a\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"Fengist","CreatedById":78435,"CreatedDateTime":"2018-07-28T12:27:14Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223423653\u0022 data-ipsquote-contentid=\u0022177097\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221532780649\u0022 data-ipsquote-userid=\u0022144573\u0022 data-ipsquote-username=\u0022peteletroll\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 minutes ago, peteletroll said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/78435-fengist/\u0026amp;do=hovercard\u0022 data-mentionid=\u002278435\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/78435-fengist/\u0022 rel=\u0022\u0022\u003E@Fengist\u003C/a\u003E, floating point numbers are always approximate, and floating point vectors are too. You may want to read something about them here:\u00A0\u003Ca href=\u0022https://en.m.wikipedia.org/wiki/Floating-point_arithmetic\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://en.m.wikipedia.org/wiki/Floating-point_arithmetic\u003C/a\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027ve been writing code for well over 30 years.\u00A0 I\u0027m well aware of what floating points are.\u00A0 Again, when I ask a language to show me a variable... show me the variable, not some ballpark guesstimate.\n\u003C/p\u003E\n"}]}