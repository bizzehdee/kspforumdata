{"TopicId":61834,"ForumId":36,"TopicTitle":"kOS Autopilot","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T17:34:35Z","PageNum":19,"Articles":[{"CreatedByName":"Alchemist","CreatedById":8825,"CreatedDateTime":"2015-10-18T13:41:04Z","Content":"\n\u003Cp\u003EAn interesting thing I stumbled upon: ENGINE doesn\u0027t handle Rapier correctly - it always references the air-breathing mode. So, if the Rapier is in closed-cycle mode, you can\u0027t shut it down, but you can activate the air-breathing mode as well... Everything else most likely also references air-breathing mode.\u003C/p\u003E\u003Cp\u003EP.S. There are 2 PartModules with the same name on Rapier. And I don\u0027t see a way to access the second if the only function that returns modules does this by their names.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-10-18T14:08:42Z\u0022 title=\u002210/18/2015 02:08  PM\u0022 data-short=\u00228 yr\u0022\u003EOctober 18, 2015\u003C/time\u003E by Alchemist\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Overland","CreatedById":119812,"CreatedDateTime":"2015-11-05T20:16:14Z","Content":"\n\u003Cp\u003EGreetings everyone \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EA simple question thats been floating around my mind in regards to kos\u003C/p\u003E\u003Cp\u003EIs it possible somehow to have the wheelthrottle linked with the engine power with say a 1-2 second lag between turbine state and wheelthrottle?\u003C/p\u003E\u003Cp\u003EIve been having some power curve vs underpowered states issues lately on my locomotives diesel electric drive system with multiple wheels on a locomotive going underpowered in low rpms of turbine throttle\u003C/p\u003E\u003Cp\u003ETypicly I use my steering wheel accelerator fully depressed at all times ala deadman pedal and control the train with engine generation to modified wheels . Its worked for 2 years but since the update im having to shut down atleast 2 wheels out of 10 due to drag \u003C/p\u003E\u003Cp\u003EThus id like to use kos to create a more civilised controller where the electric generation of the turbine follows a similar wheelthrottle progression..\u003C/p\u003E\u003Cp\u003EFail that.. What would be the best approach to linking action groups 1 2 and 3 to wheelthrottle \u002B1.0(forward), neutral (off) and -1.0 ,(reverse) to create a simple reverser switch so I dont need to use pedals?\u003C/p\u003E\u003Cp\u003EThanks.. Sorry.if its rather long too\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2016-01-10T18:17:56Z","Content":"\n\u003Cp\u003E\nAre there any known problems with a larger stack depth? I seem to run into lots of strange issues when running functions in a call depth of 5-6 and more. When I try to reproduce them in a simpler situation they vanish. And often when I touch something in a meaningless way, things break slightly differently.\n\u003C/p\u003E\n\u003Cp\u003E\nAs I recall this started after I had set \u0022lazyglobal off\u0022 and used local variables where possible.\n\u003C/p\u003E\n\u003Cp\u003E\nI found some hints of such problems here. Is this still the case?\u003Cbr\u003E\u003Ca href=\u0022https://github.com/xeger/kos-ramp/blob/master/README.md\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/xeger/kos-ramp/blob/master/README.md\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cem\u003E\u0022WARNING\u003C/em\u003E: notice the control flow between programs is fairly flat. I try never to call more than 2-3 programs deep. This is because the kOS VM seems to have bugs with programs and functions calling one another. Specifically: 1) Local variables from inner programs sometimes overwrite same-named variables from the outer program 2) Function libraries don\u0027t seem to work when they are compiled code\u0022\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-01-10T18:20:26Z\u0022 title=\u002201/10/2016 06:20  PM\u0022 data-short=\u00228 yr\u0022\u003EJanuary 10, 2016\u003C/time\u003E by pellinor\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2016-01-11T08:45:40Z","Content":"\n\u003Cp\u003E\nThe stack should be able to go several hundred nested calls deep.\u00A0 The test case we use in our programs gets to about 990 before bombing out.\u00A0 If there is a stack issue, it does actually give you a stack exhausted error message.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n1) Local variables from inner programs sometimes overwrite same-named variables from the outer program\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThere is no such thing as a file-level scope in kerboscript.\u00A0 Things can be local to a brace section, but all things stated at the outermost level outside all braces are in the same scope.\u00A0 This had to be done to grandfather in old scripts written before there *were* local variables.\u00A0 These scripts expected to be able to set a variable in a sub-program that the parent program would then read.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you want to make a file-level scope, then add \u0022unnecessary\u0022 braces around your main code to give them a scope level.\u00A0 Note, that any functions you want to be callable from other programs (if you\u0027re running a library) should be at global scope in order for the other programs to be able to see their identifiers.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2016-01-11T19:29:00Z","Content":"\n\u003Cp\u003E\nThanks for the explanation, seems like I had a few misconceptions over the details of the scope system. Which naturally leads to errors that correlate with nested calls and the use of local variables.\n\u003C/p\u003E\n\u003Cp\u003E\nEspecially locks of Steering and Throttle can be hard to debug if they live longer than intended, end up pointing to invalid variables and throw anonymous errors at seemingly random times.\n\u003C/p\u003E\n"},{"CreatedByName":"troyfawkes","CreatedById":109437,"CreatedDateTime":"2016-01-26T21:47:38Z","Content":"\n\u003Cp\u003E\nHey guys \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nTwo questions.\n\u003C/p\u003E\n\u003Cp\u003E\nFirst, I was reading thoughts on HASFILE here (\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1105\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-KOS/KOS/issues/1105\u003C/a\u003E). Has that been implemented in any way yet?\n\u003C/p\u003E\n\u003Cp\u003E\nSecond, I\u0027m having huge issues with the docking ports helper functions. E.g., ship:dockingports[0]:undock(). It doesn\u0027t always work as expected. You can recreate my issue exactly by creating a ship that has 2 docking ports attached to each other and trying to undock() them on the pad.\u00A0I got around the issue by writing\u00A0out this function:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-javascript\u0022\u003E\nFUNCTION decouple {\n\u00A0\u00A0 \u00A0PARAMETER tag.\n\n\u00A0\u00A0 \u00A0SET my_part TO SHIP:PARTSTAGGED(tag)[0].\n\u00A0\u00A0 \u00A0SET my_mod TO my_part:getmodule(\u0022ModuleDockingNode\u0022).\n\u00A0\u00A0 \u00A0IF my_mod:HASEVENT(\u0022decouple node\u0022) {\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0my_mod:DOEVENT(\u0022decouple node\u0022).\n\u00A0\u00A0 \u00A0} ELSE {\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0SET docked_node TO my_part:CHILDREN[0].\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0IF my_part:PARENT:name = my_part:name {\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0SET docked_node TO my_part:PARENT.\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0SET docked_mod TO docked_node:GETMODULE(\u0022ModuleDockingNode\u0022).\u00A0\u00A0 \u00A0\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0IF docked_mod:HASACTION(\u0022undock node\u0022) {\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0docked_mod:DOACTION(\u0022undock node\u0022, 1).\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0}\n\u00A0\u00A0 \u00A0}\n}\u003C/pre\u003E\n\u003Cp\u003E\nThis works fairly flawlessly. Am I just doing something horribly wrong with dockingports?\u00A0Maybe something like this would work to resolve the dockingports issue? Obv. you could refactor to make the function more general.\n\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2016-01-26T23:05:18Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222380845\u0022 data-ipsquote-contentid=\u002261834\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221453844858\u0022 data-ipsquote-userid=\u0022109437\u0022 data-ipsquote-username=\u0022troyfawkes\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, troyfawkes said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHey guys \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nTwo questions.\n\u003C/p\u003E\n\u003Cp\u003E\nFirst, I was reading thoughts on HASFILE here (\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/1105\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-KOS/KOS/issues/1105\u003C/a\u003E). Has that been implemented in any way yet?\n\u003C/p\u003E\n\u003Cp\u003E\nSecond, I\u0027m having huge issues with the docking ports helper functions. E.g., ship:dockingports[0]:undock(). It doesn\u0027t always work as expected. You can recreate my issue exactly by creating a ship that has 2 docking ports attached to each other and trying to undock() them on the pad.\u00A0I got around the issue by writing\u00A0out this function:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-javascript prettyprinted\u0022\u003E\n\n\u003Cspan\u003EFUNCTION decouple \u003C/span\u003E\u003Cspan\u003E{\u003C/span\u003E\u003Cspan\u003E\n\u00A0\u00A0 \u00A0PARAMETER tag\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\u003Cspan\u003E\n\n\u00A0\u00A0 \u00A0SET my_part TO SHIP\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan\u003EPARTSTAGGED\u003C/span\u003E\u003Cspan\u003E(\u003C/span\u003E\u003Cspan\u003Etag\u003C/span\u003E\u003Cspan\u003E)[\u003C/span\u003E\u003Cspan\u003E0\u003C/span\u003E\u003Cspan\u003E].\u003C/span\u003E\u003Cspan\u003E\n\u00A0\u00A0 \u00A0SET my_mod TO my_part\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan\u003Egetmodule\u003C/span\u003E\u003Cspan\u003E(\u003C/span\u003E\u003Cspan\u003E\u0022ModuleDockingNode\u0022\u003C/span\u003E\u003Cspan\u003E).\u003C/span\u003E\u003Cspan\u003E\n\u00A0\u00A0 \u00A0IF my_mod\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan\u003EHASEVENT\u003C/span\u003E\u003Cspan\u003E(\u003C/span\u003E\u003Cspan\u003E\u0022decouple node\u0022\u003C/span\u003E\u003Cspan\u003E)\u003C/span\u003E\u003Cspan\u003E \u003C/span\u003E\u003Cspan\u003E{\u003C/span\u003E\u003Cspan\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0my_mod\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan\u003EDOEVENT\u003C/span\u003E\u003Cspan\u003E(\u003C/span\u003E\u003Cspan\u003E\u0022decouple node\u0022\u003C/span\u003E\u003Cspan\u003E).\u003C/span\u003E\u003Cspan\u003E\n\u00A0\u00A0 \u00A0\u003C/span\u003E\u003Cspan\u003E}\u003C/span\u003E\u003Cspan\u003E ELSE \u003C/span\u003E\u003Cspan\u003E{\u003C/span\u003E\u003Cspan\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0SET docked_node TO my_part\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan\u003ECHILDREN\u003C/span\u003E\u003Cspan\u003E[\u003C/span\u003E\u003Cspan\u003E0\u003C/span\u003E\u003Cspan\u003E].\u003C/span\u003E\u003Cspan\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0IF my_part\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan\u003EPARENT\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan\u003Ename \u003C/span\u003E\u003Cspan\u003E=\u003C/span\u003E\u003Cspan\u003E my_part\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan\u003Ename \u003C/span\u003E\u003Cspan\u003E{\u003C/span\u003E\u003Cspan\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0SET docked_node TO my_part\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan\u003EPARENT\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\u003Cspan\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u003C/span\u003E\u003Cspan\u003E}\u003C/span\u003E\u003Cspan\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0SET docked_mod TO docked_node\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan\u003EGETMODULE\u003C/span\u003E\u003Cspan\u003E(\u003C/span\u003E\u003Cspan\u003E\u0022ModuleDockingNode\u0022\u003C/span\u003E\u003Cspan\u003E).\u003C/span\u003E\u003Cspan\u003E\u00A0\u00A0 \u00A0\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0IF docked_mod\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan\u003EHASACTION\u003C/span\u003E\u003Cspan\u003E(\u003C/span\u003E\u003Cspan\u003E\u0022undock node\u0022\u003C/span\u003E\u003Cspan\u003E)\u003C/span\u003E\u003Cspan\u003E \u003C/span\u003E\u003Cspan\u003E{\u003C/span\u003E\u003Cspan\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0docked_mod\u003C/span\u003E\u003Cspan\u003E:\u003C/span\u003E\u003Cspan\u003EDOACTION\u003C/span\u003E\u003Cspan\u003E(\u003C/span\u003E\u003Cspan\u003E\u0022undock node\u0022\u003C/span\u003E\u003Cspan\u003E,\u003C/span\u003E\u003Cspan\u003E \u003C/span\u003E\u003Cspan\u003E1\u003C/span\u003E\u003Cspan\u003E).\u003C/span\u003E\u003Cspan\u003E\n\u00A0\u00A0 \u00A0\u00A0\u00A0 \u00A0\u003C/span\u003E\u003Cspan\u003E}\u003C/span\u003E\u003Cspan\u003E\n\u00A0\u00A0 \u00A0\u003C/span\u003E\u003Cspan\u003E}\u003C/span\u003E\u003Cspan\u003E\n\u003C/span\u003E\u003Cspan\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis works fairly flawlessly. Am I just doing something horribly wrong with dockingports?\u00A0Maybe something like this would work to resolve the dockingports issue? Obv. you could refactor to make the function more general.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis is inherited from SQUAD. For some reason I cannot fathom, they decided to make it so that when two docking ports connect, only one of them gets to have the event called \u0022decouple node\u0022 on it, and the conditions for which one ends up being which are esoteric and impossible to predict.\u00A0 It\u0027s connected to deciding which of the two vessels got to remain and which got deleted when they merged, but the criteria for that decision are not really explained either.\n\u003C/p\u003E\n\u003Cp\u003E\nI have no clue why they didn\u0027t just make both ports have the same button label on them.\u00A0 The user doesn\u0027t give a toss one way or the other (and can\u0027t even tell, really) which side is the parent and which is the child of the docking.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"icedown","CreatedById":129659,"CreatedDateTime":"2016-05-02T14:14:40Z","Content":"\n\u003Cp\u003E\nI don\u0027t know if this is a new bug, but I\u0027ve noticed that if you stage off the kOS controller while a program is still running, the controls on the ship remain locked.\u00A0 I run my programs from a putty telnet session and even though I staged off the controller, it still attempts to control the active vessel using data from the staged off part that it is still attached to.\u00A0 I can\u0027t control the ship again until I either kill the program or it goes out of draw range.\n\u003C/p\u003E\n"},{"CreatedByName":"hvacengi","CreatedById":124987,"CreatedDateTime":"2016-05-02T21:05:52Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222555432\u0022 data-ipsquote-contentid=\u002261834\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221462198480\u0022 data-ipsquote-userid=\u0022129659\u0022 data-ipsquote-username=\u0022icedown\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 hours ago, icedown said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI don\u0027t know if this is a new bug, but I\u0027ve noticed that if you stage off the kOS controller while a program is still running, the controls on the ship remain locked.\u00A0 I run my programs from a putty telnet session and even though I staged off the controller, it still attempts to control the active vessel using data from the staged off part that it is still attached to.\u00A0 I can\u0027t control the ship again until I either kill the program or it goes out of draw range.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNot a new problem, and honestly it\u0027s one that I\u0027ve allowed to persist for too long. \u00A0It should be fixed in the next release via this PR:\u00A0\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/pull/1544\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-KOS/KOS/pull/1544\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nIf you could actually compile and test that yourself, that would be great. \u00A0It\u0027s a rather uncommon condition that it takes to get kOS to loose track like that, so I want to make sure I\u0027ve hit as many fringe cases as possible.\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222380845\u0022 data-ipsquote-contentid=\u002261834\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221453844858\u0022 data-ipsquote-userid=\u0022109437\u0022 data-ipsquote-username=\u0022troyfawkes\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 1/25/2016 at 4:47 PM, troyfawkes said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSecond, I\u0027m having huge issues with the docking ports helper functions. E.g., ship:dockingports[0]:undock(). It doesn\u0027t always work as expected. You can recreate my issue exactly by creating a ship that has 2 docking ports attached to each other and trying to undock() them on the pad.\u00A0I got around the issue by writing\u00A0out this function:\n\u003C/p\u003E\n\u003Cp\u003E\n...\n\u003C/p\u003E\n\u003Cp\u003E\nThis works fairly flawlessly. Am I just doing something horribly wrong with dockingports?\u00A0Maybe something like this would work to resolve the dockingports issue? Obv. you could refactor to make the function more general.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222380997\u0022 data-ipsquote-contentid=\u002261834\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221453849518\u0022 data-ipsquote-userid=\u002263481\u0022 data-ipsquote-username=\u0022Steven Mading\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 1/25/2016 at 6:05 PM, Steven Mading said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThis is inherited from SQUAD. For some reason I cannot fathom, they decided to make it so that when two docking ports connect, only one of them gets to have the event called \u0022decouple node\u0022 on it, and the conditions for which one ends up being which are esoteric and impossible to predict.\u00A0 It\u0027s connected to deciding which of the two vessels got to remain and which got deleted when they merged, but the criteria for that decision are not really explained either.\n\u003C/p\u003E\n\u003Cp\u003E\nI have no clue why they didn\u0027t just make both ports have the same button label on them.\u00A0 The user doesn\u0027t give a toss one way or the other (and can\u0027t even tell, really) which side is the parent and which is the child of the docking.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWith changes to the way that \u0060dockingport:undock()\u0060 works now, you can call it on either of the ports. \u00A0If it turns out that you call it on the one without a \u0022decouple node\u0022 event, it will automatically call the event on the other port.\n\u003C/p\u003E\n"},{"CreatedByName":"icedown","CreatedById":129659,"CreatedDateTime":"2016-05-02T21:09:54Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222556591\u0022 data-ipsquote-contentid=\u002261834\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221462223152\u0022 data-ipsquote-userid=\u0022124987\u0022 data-ipsquote-username=\u0022hvacengi\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n22 minutes ago, hvacengi said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNot a new problem, and honestly it\u0027s one that I\u0027ve allowed to persist for too long. \u00A0It should be fixed in the next release via this PR:\u00A0\u003Ca href=\u0022https://github.com/KSP-KOS/KOS/pull/1544\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-KOS/KOS/pull/1544\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nIf you could actually compile and test that yourself, that would be great. \u00A0It\u0027s a rather uncommon condition that it takes to get kOS to loose track like that, so I want to make sure I\u0027ve hit as many fringe cases as possible.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027ll pull it in and test it out.\u00A0 It\u0027s definitely not a normal thing to do but I had a couple early in my new career that I did at the top of the atmosphere and the poor probe ended up really dizzy before I figured out what was going on.\u00A0 I\u0027ve done it a couple times so reproducing it won\u0027t be a problem.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-05-02T21:29:13Z\u0022 title=\u002205/02/2016 09:29  PM\u0022 data-short=\u00228 yr\u0022\u003EMay 2, 2016\u003C/time\u003E by icedown\u003C/strong\u003E\n\u003Cbr\u003EClarification\n\u003C/span\u003E\n"},{"CreatedByName":"icedown","CreatedById":129659,"CreatedDateTime":"2016-05-03T03:55:56Z","Content":"\n\u003Cp\u003E\nI\u0027m not sure this is the same problem as issue #1942.\u00A0 I have installed the latest pull and it still happens.\u00A0 I\u0027m still working on further isolating the issue but I\u0027m at work now so it\u0027s going much slower.\u00A0 Here is what I have so far.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI have not used more than 1 kOS part on a ship.\u00A0 I attempted to duplicate my issue using stock parts \u002B kOS but was not able to.\u00A0 I then added in RemoteTech and was able to duplicate it.\n\u003C/p\u003E\n\u003Cp\u003E\nMods installed:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nKAC\n\u003C/li\u003E\n\u003Cli\u003E\nKerbal Engineer\n\u003C/li\u003E\n\u003Cli\u003E\nRemoteTech Dev build 522\n\u003C/li\u003E\n\u003Cli\u003E\nkOS built from current fork with no modifications\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nDuplication info:\n\u003C/p\u003E\n\u003Cp\u003E\nShip:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nStock parts, unmanned, single and multiple probe cores tested\n\u003C/li\u003E\n\u003Cli\u003E\n1 kOS controller onboard, I built mine into the second of 3 stages\n\u003C/li\u003E\n\u003Cli\u003E\nAntenna is on stage 3, antenna on 2nd stage did not help but I did not have probe core on second stage either.\u00A0\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nProcess\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nLaunched ship and climbed to ~50km for testing purposes\n\u003C/li\u003E\n\u003Cli\u003E\nShutdown main engine on second stage to prevent a runaway stage\n\u003C/li\u003E\n\u003Cli\u003E\nStaged manually\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nAfter staging off the section with the kOS part, it continues to control the first stage of the until the program is killed or it falls out of draw range.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe script I\u0027m running is a self written launch script that limits acceleration to 18m/s/s and flies a 65% launch curve.\u00A0 It gives the kOS autopilot pitch, heading, and throttle commands via LOCKs.\u00A0 I have not tested this with any manned craft since introduction of RT.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nOutput log: \u003Ca href=\u0022https://dl.dropboxusercontent.com/u/79622787/output_log.txt\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://dl.dropboxusercontent.com/u/79622787/output_log.txt\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ll try to look into it further myself when I\u0027m off work tomorrow night but it will be my first close look at the code.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Waz","CreatedById":76393,"CreatedDateTime":"2016-09-15T12:45:51Z","Content":"\n\u003Cp\u003E\nHow do the autotests work? I did a desperate port to KSP 1.2 because I\u0027m too lazy to handhold 20 tourists into orbit and back, but now I\u0027m feeling guilty for not even trying to contribute my changes back. Some design work/discussion is needed for the new resource flows, but otherwise it seemed pretty straight forward.\n\u003C/p\u003E\n"}]}