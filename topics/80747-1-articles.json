{"TopicId":80747,"ForumId":29,"TopicTitle":"Get signed rover speed","CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-08-05T00:14:40Z","PageNum":1,"Articles":[{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-08-05T00:14:40Z","Content":"\n\u003Cp\u003EEvening.\u003C/p\u003E\u003Cp\u003EI\u0027m trying to work out how to get the speed of a rover, though signed negative to indicate when it\u0027s travelling backwards. Is there an available method to do this that I\u0027ve missed? I\u0027ve just spent and hour hunting through the stuff that comes up in the VS inspector for this.vessel., but come up blank so far.\u003C/p\u003E\u003Cp\u003EThanks, as ever \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2014-08-05T01:06:59Z","Content":"\n\u003Cp\u003EThat\u0027s going to be hard due to how symmetry works, but I imagine if you could decide on a forward vector for the wheel and have it be uniform across the vessel and over time, then you could just compare the vessel\u0027s movement to that vector to determine the signage and apply that to the value you get off the wheelcollider.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-08-05T01:19:17Z","Content":"\n\u003Cp\u003EThe velocity of the vessel will be a vector, rather than a scalar, making the meaning of \u0022negative direction\u0022 sort of meaningless. It\u0027s more like \u0022velocity in this 3-D direction.\u0022\u003C/p\u003E\u003Cp\u003ETo get the surface-relative velocity instead of the orbit-relative velocity, use Vessel.GetSrfVelocity().\u003C/p\u003E\u003Cp\u003ETo get a unit vector pointing in the direction the vessel is pointed, do one of these two things:\u003C/p\u003E\u003Cp\u003EroverFrontUnit = Vessel.GetTransform().rotation * V(0,0,1) // Gives a unit vector pointing \u0022up to the nosecone\u0022 of a rocket built in the VAB.\u003C/p\u003E\u003Cp\u003EroverFrontUnit = Vessel.GetTransform().rotation * V(1,0,0) // Gives a unit vector pointing \u0022ahead to the front\u0022 of a vehicle built in the SPH.\u003C/p\u003E\u003Cp\u003EWhich way is correct depends on which way you built the rover orientation.\u003C/p\u003E\u003Cp\u003E(This is from my memory and I might have it wrong which unit vector to start from. It might be the Y axis not the X axis. Please experiment and try).\u003C/p\u003E\u003Cp\u003EOnce you have such a unit vector, you can dot-product the vector with the surface velocity to get the component of the surface velocity that is aimed forward (positive number) or backward (negative number).\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-08-05T08:10:50Z","Content":"\n\u003Cp\u003EThanks guys. Two methods to try - I\u0027ll let you know how I get on\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-08-05T09:09:53Z","Content":"\n\u003Cp\u003EFor future reference, this works perfectly:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E//C#\u003Cbr\u003E            Vector3 roverForward = this.vessel.GetTransform().rotation * new Vector3(0,1,0); //y is forward direction for SPH built craft\u003Cbr\u003E            Vector3 travelVector = this.vessel.GetSrfVelocity();\u003Cbr\u003E            float travelDirection = Vector3.Dot(roverForward, travelVector);\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI never thought I\u0027d find an actual use for dot products \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cool.gif\u0022 alt=\u0022:cool:\u0022\u003E\u003C/p\u003E\u003Cp\u003EThanks again!\u003C/p\u003E\n"}]}