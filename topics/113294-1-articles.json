{"TopicId":113294,"ForumId":29,"TopicTitle":"Need new and more experienced eyes to take a look - what am I doing wrong?","CreatedByName":"tg626","CreatedById":112361,"CreatedDateTime":"2015-06-18T03:30:53Z","PageNum":1,"Articles":[{"CreatedByName":"tg626","CreatedById":112361,"CreatedDateTime":"2015-06-18T03:30:53Z","Content":"I had really hoped to get this myself, but after getting this to (I thought) work properly, I find that it sometimes works as intended, sometimes refires the sound over and over and over forever and never lets the ports actually dock... :/\n\n    using System;using System.Collections.Generic;using System.Linq;using System.Text;using UnityEngine;namespace DockingSounds{    class DPSoundFX : PartModule    {        [KSPField]        public string sound_docking = \u0022DPSoundFX/Sounds/dock\u0022;        [KSPField]        public string sound_undocking = \u0022DPSoundFX/Sounds/undock\u0022;        public FXGroup dockSound = null;        public FXGroup undockSound = null;        public bool createGroup (FXGroup group, string name, bool loop)        {            if (name != string.Empty) {                if (!GameDatabase.Instance.ExistsAudioClip (name))                    return false;                group.audio = gameObject.AddComponent ();                group.audio.volume = GameSettings.SHIP_VOLUME;                group.audio.rolloffMode = AudioRolloffMode.Logarithmic;                group.audio.dopplerLevel = 0f;                group.audio.panLevel = 1f;                group.audio.clip = GameDatabase.Instance.GetAudioClip (name);                group.audio.loop = loop;                group.audio.playOnAwake = false;                             return true;            }            return false;        }        public void DPFXdock (GameEvents.FromToAction partAction)        {            //Debug.LogError (\u0022[DPSoundFX] Docking\u0022);            //Debug.LogError (\u0022               Docked FROM   : \u0022 \u002B partAction.from.vessel.vesselName);            //Debug.LogError (\u0022               Docked TO     : \u0022 \u002B partAction.to.vessel.vesselName);            //Debug.LogError (\u0022               Docked FROM ID: \u0022 \u002B partAction.from.vessel.id.ToString ());            //Debug.LogError (\u0022               Docked TO ID  : \u0022 \u002B partAction.to.vessel.id.ToString ());            Debug.LogError (\u0022[DPSoundFX] Playing: \u0022 \u002B sound_docking);            if (!dockSound.audio.isPlaying){                 dockSound.audio.Play ();            }        }        public void DPFXundock (Part part)        {            print (\u0022[DPSoundFX] Undocking \u0022 \u002B part.vessel);            Debug.LogError (\u0022[DPSoundFX] Playing: \u0022 \u002B sound_undocking);            undockSound.audio.Play ();        }        public override void OnStart (PartModule.StartState state)        {            Debug.LogError (\u0022[DPSoundFX] OnStart Called: State is \u0022 \u002B state);            if (HighLogic.LoadedScene != GameScenes.FLIGHT)                return;            base.OnStart (state);            if (createGroup (undockSound, sound_undocking, false)) {                GameEvents.onPartUndock.Add (DPFXundock);            } else {                Debug.LogError (\u0022[DPSoundFX]ERROR - file \u0022 \u002B sound_undocking \u002B \u0022.* not found!\u0022);            }            if (createGroup (dockSound, sound_docking, false)) {                GameEvents.onPartCouple.Add (DPFXdock);            } else {                Debug.LogError (\u0022[DPSoundFX]ERROR - file \u0022 \u002B sound_docking \u002B \u0022.* not found!\u0022);            }            Debug.LogError (\u0022[DPSoundFX] OnStart Executed: State was \u0022 \u002B state);        }    }}\n\nWhen it goes wrong, I get NRE\u0027s in the log (below) there\u0027s only one isPlaying conditional statement because I removed them at one point as a test and then replaced the one for docking on my last try. All it did was change it from a machingun buzz of repeated playbacks to one after another after another...\n\n[Output Log](https://www.dropbox.com/s/4nrp6gh3u3s0ktw/DPSoutput_log.txt?dl=0)\n\nI\u0027m sure this is just a matter of me being stupid, or knowing just enough to get myself into trouble, as I\u0027ve never taken a single class of any kind on anything beyond BASIC programming (as in BASIC language, I\u0027m 45)\n\n**Edited \u003Ctime datetime=\u00222015-06-18T03:33:01Z\u0022 title=\u002206/18/2015 03:33  AM\u0022 data-short=\u00229 yr\u0022\u003EJune 18, 2015\u003C/time\u003E by tg626**"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-06-18T03:45:52Z","Content":"Well for one, that\u0027s going to add the DPFXundock once for every part that has the module every time you enter the flight scene (so if you have 5 parts with the module active, the function will get called 5 times for each time you enter the flight scene on an undock event). Try the KSPAddon type of plugin for which there is only a single instance per scene ([simple example](https://github.com/Crzyrndm/SASTuningFix/blob/master/SASTuningFix/SASTuningFix.cs#L9-L10)), and remove the event in OnDestroy so you only ever have a single event trigger\n\n**Edited \u003Ctime datetime=\u00222015-06-18T03:47:57Z\u0022 title=\u002206/18/2015 03:47  AM\u0022 data-short=\u00229 yr\u0022\u003EJune 18, 2015\u003C/time\u003E by Crzyrndm**"},{"CreatedByName":"tg626","CreatedById":112361,"CreatedDateTime":"2015-06-18T03:59:09Z","Content":"So there is on instance of my code running for every docking port in the scene? (It\u0027s added to all ports via module manager).\n\nAnd every instance if the code is called when any port is docked or undocked?\n\nBeyond that, having no idea how to do what you suggested ( even with the example) just proves how out of my depth I am!!! ![:D](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif)"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-06-18T04:46:41Z","Content":"Dammit, I\u0027ve confused myself. I was wrong, each event belongs to an instance of the module so the function wouldn\u0027t be called multiple times if you only entered the scene once. Addon type plugin also won\u0027t work because you need the part location.\n\nStart again from the beginning.\n\nEvent subscription in OnStart. Check. That\u0027s fine because the callback is specific to the module. You need one for each module so the sound gets played in the correct location\n\nEvent subscription removed in OnDestroy(). Not happening. If you enter the flight scene, leave it, and then come back, that original event is still floating around waiting to fire (with a null function to call because the part module instance it was attached to is dead\n\n    void OnDestroy(){    GameEvents.On*Dock.Remove();}\n\nEvent callback checks to see if either of the parts that are undocking are the one it is attached to. Also not happening. The callback will fire for **all** subscribers, not just the ones attached to parts involved in the event.\n\n    if (!dockSound.audio.isPlaying \u0026\u0026 [B]partAction.part = this.part[/B]) // or w/e the part lookup is in the event parameter{     dockSound.audio.Play ();}\n\nMy bad for making things confusing ![;)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif)\n\nEDIT\n\nAnd now I\u0027m really confused, if the first one worked...\n\n**Edited \u003Ctime datetime=\u00222015-06-18T05:12:29Z\u0022 title=\u002206/18/2015 05:12  AM\u0022 data-short=\u00229 yr\u0022\u003EJune 18, 2015\u003C/time\u003E by Crzyrndm**"},{"CreatedByName":"tg626","CreatedById":112361,"CreatedDateTime":"2015-06-18T05:35:15Z","Content":"OMG! That was IT (I think... it worked just now, but it\u0027s done that before and then goobered up on me when I restarted the game later, so...)\n\nHere\u0027s what I did based on your advice (that last post I was able to follow LOL)\n\n    using System;using System.Collections.Generic;using System.Linq;using System.Text;using UnityEngine;namespace DockingSounds{    class DPSoundFX : PartModule    {        [KSPField]        public string sound_docking = \u0022DPSoundFX/Sounds/dock\u0022;        [KSPField]        public string sound_undocking = \u0022DPSoundFX/Sounds/undock\u0022;        static bool eventAddedDocking = false;        static bool eventAddedUndocking = false;        static bool groupCreatedDocking = false;        static bool groupCreatedUndocking = false;        public FXGroup dockSound = null;        public FXGroup undockSound = null;        public bool createGroup (FXGroup group, string name, bool loop)        {            if (name != string.Empty) {                if (!GameDatabase.Instance.ExistsAudioClip (name)) {                    Debug.LogError (\u0022[DPSoundFX]ERROR - file \u0022 \u002B name \u002B \u0022.* not found!\u0022);                    return false;                }                group.audio = gameObject.AddComponent ();                group.audio.volume = GameSettings.SHIP_VOLUME;                group.audio.rolloffMode = AudioRolloffMode.Logarithmic;                group.audio.dopplerLevel = 0f;                group.audio.panLevel = 1f;                group.audio.clip = GameDatabase.Instance.GetAudioClip (name);                group.audio.loop = loop;                group.audio.playOnAwake = false;                             return true;            }            return false;        }        public void DPFXdock (GameEvents.FromToAction partAction)        {            //Debug.LogError (\u0022[DPSoundFX] Docking\u0022);            //Debug.LogError (\u0022               Docked FROM   : \u0022 \u002B partAction.from.vessel.vesselName);            //Debug.LogError (\u0022               Docked TO     : \u0022 \u002B partAction.to.vessel.vesselName);            //Debug.LogError (\u0022               Docked FROM ID: \u0022 \u002B partAction.from.vessel.id.ToString ());            //Debug.LogError (\u0022               Docked TO ID  : \u0022 \u002B partAction.to.vessel.id.ToString ());            Debug.LogError (\u0022[DPSoundFX] Playing: \u0022 \u002B sound_docking);            if (!this.dockSound.audio.isPlaying) {                 this.dockSound.audio.Play ();            }        }        public void DPFXundock (Part part)        {            print (\u0022[DPSoundFX] Undocking \u0022 \u002B part.vessel);            Debug.LogError (\u0022[DPSoundFX] Playing: \u0022 \u002B sound_undocking);            if (!this.dockSound.audio.isPlaying) {                this.undockSound.audio.Play ();            }        }        public override void OnStart (PartModule.StartState state)        {            Debug.LogError (\u0022[DPSoundFX] OnStart Called: State is \u0022 \u002B state);            if (HighLogic.LoadedScene != GameScenes.FLIGHT)                return;            base.OnStart (state);            groupCreatedDocking = createGroup (dockSound, sound_docking, false);            groupCreatedUndocking = createGroup (undockSound, sound_undocking, false);            if (groupCreatedDocking \u0026\u0026 !eventAddedDocking) {                GameEvents.onPartCouple.Add (DPFXdock);                eventAddedDocking = true;            }            if (groupCreatedUndocking \u0026\u0026 !eventAddedUndocking) {                GameEvents.onPartUndock.Add (DPFXundock);                eventAddedUndocking = true;            }            Debug.LogError (\u0022[DPSoundFX] OnStart Executed: State was \u0022 \u002B state);        }    }}\n\n- - - Updated - - -\n\n%^\u0026%\\*^@# it all...\n\nStill getting:\n\n    NullReferenceException  at (wrapper managed-to-native) UnityEngine.AudioSource:get_isPlaying ()  at DockingSounds.DPSoundFX.DPFXdock (FromToAction\u00602 partAction) [0x00000] in :0   at EventData\u00601[GameEvents\u002BFromToAction\u00602[Part,Part]].Fire (FromToAction\u00602 data) [0x00000] in :0   at Part.Couple (.Part tgtPart) [0x00000] in :0   at ModuleDockingNode.DockToVessel (.ModuleDockingNode node) [0x00000] in :0   at ModuleDockingNode.m__166 () [0x00000] in :0   at KerbalFSM.RunEvent (.KFSMEvent evt) [0x00000] in :0   at KerbalFSM.updateFSM (KFSMUpdateMode mode) [0x00000] in :0   at KerbalFSM.UpdateFSM () [0x00000] in :0   at ModuleDockingNode.Update () [0x00000] in :0 (Filename:  Line: -1)\n\nin the log, only now I get NO sound and no docking, they are just sticking to each other \u0022magnetically\u0022... In the first test, I was getting the sound, using 2 rovers with ports. Then I launched 2 capsules and I get this magneto thing, and no sound.\n\nI know darn well there\u0027s no voodoo in coding, but it sure seems like it\u0027s possessed!!! ![:huh:](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_undecided.gif)\n\n**Edited \u003Ctime datetime=\u00222015-06-18T05:49:16Z\u0022 title=\u002206/18/2015 05:49  AM\u0022 data-short=\u00229 yr\u0022\u003EJune 18, 2015\u003C/time\u003E by tg626**\n  \nReformatted code"},{"CreatedByName":"tg626","CreatedById":112361,"CreatedDateTime":"2015-06-18T06:09:33Z","Content":"Ok... I\u0027ll add the onDestroy bit - I forgot about it honestly but that won\u0027t happen until tomorrow evening, gotta sleep now and work in the am.\n\nThis is going to nag my mind all day too... ![:sticktongue:](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue2.gif)"},{"CreatedByName":"tg626","CreatedById":112361,"CreatedDateTime":"2015-06-19T03:28:41Z","Content":"That did it! OnDestroy got it working as intended. Thanks for the insights!"}]}