{"TopicId":42577,"ForumId":44,"TopicTitle":"I need someone help me do some math for launch optimization","CreatedByName":"SaturnV","CreatedById":79006,"CreatedDateTime":"2013-08-15T10:56:30Z","PageNum":6,"Articles":[{"CreatedByName":"rkman","CreatedById":15721,"CreatedDateTime":"2014-02-28T17:20:59Z","Content":"\n\u003Cp\u003EI hadn\u0027t seen this mentioned yet, seems similar to what you guys are trying to do:\u003C/p\u003E\u003Cp\u003EAscent Komputron \u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/59899-NET-Ascent-Komputron-rocket-simulator-ascent-optimization-aerobraking\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/59899-NET-Ascent-Komputron-rocket-simulator-ascent-optimization-aerobraking\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"Nao","CreatedById":23462,"CreatedDateTime":"2014-02-28T18:22:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mhoram\u0022 data-cite=\u0022mhoram\u0022\u003E\u003Cdiv\u003EKeeping attiute at prograde seemed to me the way to go at first. It works quite well for most rockets with a \u0022reasonable\u0022 TWR in all stages. However this method does not work for rockets with a low TWR in late stages. See \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/58531-Finding-the-best-ascent-path-for-rockets?p=914585\u0026amp;viewfull=1#post914585\u0022 rel=\u0022external nofollow\u0022\u003Ethis post\u003C/a\u003E for an example \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/58531-Finding-the-best-ascent-path-for-rockets?p=896658\u0026amp;viewfull=1#post896658\u0022 rel=\u0022external nofollow\u0022\u003Ecraft\u003C/a\u003E where the attitude=prograde method does not work.\u003Cp\u003EIt is an interesting idea, but I think that the calculation of \u0022orbeth losses\u0022 based on the thrust-altitude-distribution is quite a difficult task by itself.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, calcualtion of deltaV changes due to the Oberth effect is above my mathematical ability at the moment, that\u0027s why i turned with the idea to this forum \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E. The one thing that i like about this it is that it solves every orbital and momentum related element of ascent (including vertical speed, angle of climb, lift due to centripetal acceleration) just by speed (and altitude) variable. And it could then be directly compared to another variable based on speed and altitude, the drag. It just looks like it could work. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EIt would be hard to implement this to low TWR rockets, but i\u0027m just trying to simplify the problem, to actually get a working solution for whole ascent.\u003C/p\u003E\u003Cp\u003EActually even without looking at Oberth, the \u0022fix to prograde\u0022 could be useful to weed out one variable from late ascent. I feel like steering looses would be one thing that would trend to zero during ascent with optimal path. And coming with the solutions from both sides of ascent path (vertical climb and late ascent) could potentially help determine the hardest part, gravity turn.\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-02-28T20:15:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Nao\u0022 data-cite=\u0022Nao\u0022\u003E\u003Cdiv\u003EYeah, calcualtion of deltaV changes due to the Oberth effect\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere aren\u0027t any. Obereth effect only affects the energy gains. Delta-V is always the same and depends only on I\u003Csub\u003ESP\u003C/sub\u003E and mass ratio of consumed fuel.\u003C/p\u003E\n"},{"CreatedByName":"Nao","CreatedById":23462,"CreatedDateTime":"2014-02-28T20:41:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022K^2\u0022 data-cite=\u0022K^2\u0022\u003E\u003Cdiv\u003EThere aren\u0027t any. Obereth effect only affects the energy gains. Delta-V is always the same and depends only on I\u003Csub\u003ESP\u003C/sub\u003E and mass ratio of consumed fuel.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh yes sorry i\u0027m dead tired. Thought about \u0022Dealta-V requirement to target orbit\u0022, as a measure of efficiency.\u003C/p\u003E\u003Cp\u003EThis also points on the my main problem, as common energy losses (gravity, drag, steering) can be shown in speed change (deltaV) over time. But i have no idea how to show dynamic energy changes during transfers from orbital state to another using different paths. (The best i know is about impulsive burns at Ap/Pe but that\u0027s no good for ascent where we never burn at orbit\u0027s major-axis)\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-03-01T00:31:26Z","Content":"\n\u003Cp\u003EIt\u0027s not that simple. If you take a circular-to-circular transfer, the optimization problem has very simple solution. Infinitely short burn to go to Hohmann, then another infinitely short burn at ap to circularize. Naturally, you can\u0027t do infinitely short burns, as that requires infinite thrust, but you do the best you can, and that\u0027s your fuel-optimal policy.\u003C/p\u003E\u003Cp\u003EWhen you start talking about transfers between general orbits, things are a bit more complicated, but you can still find optimum fairly easily by optimizing energy and angular momentum gains. Former would be accounted for with Obereth effect, yes. Later is optimal at maximum distance from parent body. (And that\u0027s the reason why you get the ap/pe burns in circular-to-circular optimization.)\u003C/p\u003E\u003Cp\u003EBut things get way more complicated once you introduce drag. Losses to drag are velocity-dependent. Which means you can\u0027t optimize transfer points. You have to optimize the entire trajectory. And that\u0027s what this thread has been about. So far, the most successful method has been projection method with collocation points on Pontryagin conditions, it seems, done using a library designed specifically to solve this sort of a problem. The downside is that such a trajectory has to be pre-computed.\u003C/p\u003E\u003Cp\u003EWhat would be far more valuable is on-the-fly method. Unfortunately, it doesn\u0027t look like a precise solution can be done on-the-fly, but there are approximate methods which lead to a very sensible solution which would be very hard to beat. I\u0027ve posted a bit of it earlier, for early ascent. I believe, I have a solution that will guide the rocket through the entire ascent at near-optimal fuel consumption. Should be far better than anything Mechjeb does, at least.\u003C/p\u003E\n"},{"CreatedByName":"hydropos","CreatedById":76550,"CreatedDateTime":"2014-03-06T04:42:02Z","Content":"\n\u003Cp\u003EWell, I figured out why my logic failed. You need to use circular coordinates (r, \u00C3\u017D\u00C2\u00B8) instead of x and y. The radius of Kerbin is sufficiently small that the \u0022x-velocity\u0022 you pick up at 20km is pointing in a distinctly different direction than the \u0022x-velocity\u0022 you get at 40km. I\u0027ve had a few too many beers tonight to be working the actual math out, but I am confident in this.\u003C/p\u003E\u003Cp\u003EEDIT: I just started doing the math. It\u0027s hideous. Parametric equations everywhere...\u003C/p\u003E\u003Cp\u003EEDIT2: For clarification, what I meant was that to accurately represent the effect of gravity, you need to consider the angle between the velocity vector and the radial position vector. You\u0027ll also need the angular velocity to determine the centrifugal offset to gravity. Both of these will require you set up relations for r and \u00C3\u017D\u00C2\u00B8 as a function of x and y.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-06T18:48:06Z\u0022 title=\u002203/06/2014 06:48  PM\u0022 data-short=\u002210 yr\u0022\u003EMarch 6, 2014\u003C/time\u003E by hydropos\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"hydropos","CreatedById":76550,"CreatedDateTime":"2014-03-11T15:38:26Z","Content":"\n\u003Cp\u003EWell, the flaw in my logic was facepalmingly obvious. If you need to gain both radial and angular velocity, you would not burn up then sideways (even if you had infinite TWR). If you burn at a 45\u00C3\u201A\u00C2\u00B0 angle, you have to burn only 1.4 times the fuel as you would need in either direction, but you get both components of velocity. Not sure how to take this into account mathematically, as it essentially means \u00C3\u00A2\u00CB\u2020\u00E2\u20AC\u00A0V efficiency isn\u0027t just dependent on velocity, but also rocket orientation.\u003C/p\u003E\n"},{"CreatedByName":"fibonatic","CreatedById":73180,"CreatedDateTime":"2014-08-22T21:19:22Z","Content":"\n\u003Cp\u003EI do not have access to good optimal control solvers (tried ACADO), but since I also would like to understand the algorithm behind the solver I thought I would come up with one of my own. I haven\u0027t had any courses about optimal control during my study, so everything I kown is self-taught. \u003C/p\u003E\u003Cp\u003EInitially I came across the \u003Ca href=\u0022https://en.wikipedia.org/wiki/Hamilton%E2%80%93Jacobi%E2%80%93Bellman_equation\u0022 rel=\u0022external nofollow\u0022\u003EHamilton Jacobi Bellman equation\u003C/a\u003E, which seemed applicable to this problem, however it did not bring me any closer to a solution, neither analytical nor numerical.\u003C/p\u003E\u003Cp\u003EMy next idea was to see if I could get an analytical expression from the integral, which calculates the total expelled delta-v, using this expression:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/G2P1pcq.png\u0022 alt=\u0022G2P1pcq.png\u0022\u003E\u003C/p\u003E\u003Cp\u003Eby using a polynomials for the velocities and then derive this expression for every coefficient to find for which values for the coefficients the integral would yield the lowest value. However no general equation for the integral seems to exist.\u003C/p\u003E\u003Cp\u003EAfter this I gave up on the idea of finding an analytical solution and came up with a finite element like method. For the velocities I used a finite amount of control point (for now evenly distributed with hiehgt) and interpolated between them. And to find the optimal trajectory I applied \u003Ca href=\u0022https://en.wikipedia.org/wiki/Golden_section_search\u0022 rel=\u0022external nofollow\u0022\u003EGolden section search\u003C/a\u003E on the velocity of every point and repeated this until solution does not change much any more. There is a little bit more to it, such as the boundaries, since I assumed that the TWR is not restricted and therefore the rocket could undergo an instantaneous velocity change at launch and circularisation.\u003C/p\u003E\u003Cp\u003EThe optimal solution does gives a promising minimal amount of delta-v, namely roughly 4250 m/s, this is for a launch from 70 m (launchpad height) at the equator to a 75 km circular orbit. The velocities as a function of radius look as follows:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/cEUdl8d.png\u0022 alt=\u0022cEUdl8d.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EThe thrust, in terms of acceleration, as a function of radius looks as follows:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/dnpkh71.png\u0022 alt=\u0022dnpkh71.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EThe total acceleration clearly drops down after an altitude of 40 km, therefore I will also use this as a cut-off value for angle of the thrust in the following graph (since for low thrust levels the angle does not mean much). The following graph shows the angle of the thrust and the total velocity relative to the surface as a function of the radius:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/yN9eauU.png\u0022 alt=\u0022yN9eauU.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EIt is interesting to note that there is a very notable sudden change in angle a little bit before 10 km. However what I can not explain is why initially the angle is negative (moving against the rotation of the planet).\u003C/p\u003E\u003Cp\u003EI might try to implement this trajectory in KSP with kOS and test this in-game.\u003C/p\u003E\u003Cp\u003EPS: I might also post similar graphs for other planets with atmospheres, such as Eve, such that we could also compare our solutions for other bodies.\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-08-22T21:35:02Z","Content":"\n\u003Cp\u003EThese results have a lot of similarity to what I got using policy optimization \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/90108-Ascent-Optimization-as-an-Optimal-Policy-Problem\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003Ein this thread\u003C/span\u003E\u003C/a\u003E. In particular with thrust curves, which I did not show in the thread. The method is somewhat similar, but I used polynomials for the velocity functions.\u003C/p\u003E\n"},{"CreatedByName":"indroth","CreatedById":115621,"CreatedDateTime":"2014-08-22T23:04:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022fibonatic\u0022 data-cite=\u0022fibonatic\u0022\u003E\u003Cdiv\u003EHowever what I can not explain is why initially the angle is negative (moving against the rotation of the planet).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI haven\u0027t really looked through the details of your equations, but my first thought is that maybe you don\u0027t take into account that drag is dependent on surface velocity not orbital velocity. This will result in non-zero drag at zero surface velocity.\u003C/p\u003E\u003Cp\u003EActually, how does that work in KSP? Is the atmosphere like a rigid shell so it is moving faster as you move higher up? Or is drag just proportional to the square of the surface velocity?\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-08-22T23:13:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022indroth\u0022 data-cite=\u0022indroth\u0022\u003E\u003Cdiv\u003EActually, how does that work in KSP? Is the atmosphere like a rigid shell so it is moving faster as you move higher up? Or is drag just proportional to the square of the surface velocity?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EConstant angular velocity. So yes, you would have gotten stronger effect at higher altitude, if it weren\u0027t for exponentially decreasing density.\u003C/p\u003E\n"},{"CreatedByName":"mhoram","CreatedById":78756,"CreatedDateTime":"2014-08-23T10:29:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022fibonatic\u0022 data-cite=\u0022fibonatic\u0022\u003E\u003Cdiv\u003EI do not have access to good optimal control solvers (tried ACADO)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHave you had a look at \u003Ca href=\u0022http://www.psopt.org/\u0022 rel=\u0022external nofollow\u0022\u003EPSOPT\u003C/a\u003E? It is open source.\u003C/p\u003E\u003Cp\u003EI \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/58531-Finding-the-best-ascent-path-for-rockets?p=879561\u0026amp;viewfull=1#post879561\u0022 rel=\u0022external nofollow\u0022\u003Emanaged to get some good results\u003C/a\u003E with this system.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022fibonatic\u0022 data-cite=\u0022fibonatic\u0022\u003E\u003Cdiv\u003EThe optimal solution does gives a promising minimal amount of delta-v, namely roughly 4250 m/s, this is for a launch from 70 m (launchpad height) at the equator to a 75 km circular orbit.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENice Work!\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022fibonatic\u0022 data-cite=\u0022fibonatic\u0022\u003E\u003Cdiv\u003EIt is interesting to note that there is a very notable sudden change in angle a little bit before 10 km\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI would explain it this way. In order to reach orbit you need a lot of horizontal speed. Trying to achieve this below ~10km is inefficient because of the dense atmosphere.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022fibonatic\u0022 data-cite=\u0022fibonatic\u0022\u003E\u003Cdiv\u003EI might try to implement this trajectory in KSP with kOS and test this in-game.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf you manage to do this, I would be very interested.\u003C/p\u003E\n"},{"CreatedByName":"fibonatic","CreatedById":73180,"CreatedDateTime":"2014-08-24T02:00:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mhoram\u0022 data-cite=\u0022mhoram\u0022\u003E\u003Cdiv\u003EHave you had a look at \u003Ca href=\u0022http://www.psopt.org/\u0022 rel=\u0022external nofollow\u0022\u003EPSOPT\u003C/a\u003E? It is open source.\u003Cp\u003EI \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/58531-Finding-the-best-ascent-path-for-rockets?p=879561\u0026amp;viewfull=1#post879561\u0022 rel=\u0022external nofollow\u0022\u003Emanaged to get some good results\u003C/a\u003E with this system.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI do remember that abbreviation when looking at solvers, but I am not sure why I did not look into that one more. Maybe it was because I also wanted compatibility with Matlab, since that allows me to display and manipulate results very easily, however I think that PSOPT also can also be used with Matlab. Thanks, I will definitely look into PSOPT some more, but I am also glade that I came up with my own approach, since I also learned from it.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mhoram\u0022 data-cite=\u0022mhoram\u0022\u003E\u003Cdiv\u003EI would explain it this way. In order to reach orbit you need a lot of horizontal speed. Trying to achieve this below ~10km is inefficient because of the dense atmosphere.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI was more referring to that the \u0022noob\u0022 launch path is vertical up to 10 km and then tilt 45\u00C3\u201A\u00C2\u00B0, so I thought it was worth mentioning that that altitude is some kind of tipping point.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mhoram\u0022 data-cite=\u0022mhoram\u0022\u003E\u003Cdiv\u003EIf you manage to do this, I would be very interested.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI was trying to look for an easy way to import my trajectory into kOS. Instead of copying all my points I thought I should just use equations, which fir on the data. I also tried to think about how to control this in KSP. The main control parameters are your throttle and your pitch, so I tried to fit my total surface velocity and the angle of the velocity. Finding a good fit took a little bit of work, but I succeeded. After this I also wanted to check if the fit did damage the required amount of delta-v, but it turned out to be slightly lower, namely 4195 m/s.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/ODs8lV9.png\u0022 alt=\u0022ODs8lV9.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/E3Gv4yo.png\u0022 alt=\u0022E3Gv4yo.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/aa9NkLG.png\u0022 alt=\u0022aa9NkLG.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EThose fitted parameters might be able to be tweaked and maybe even reduce the delta-v even more, however I will leave that for now and I will first focus my attention on getting this to work in kOS.\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-08-24T02:07:16Z","Content":"\n\u003Cp\u003EThe general features for total thrust are definitely the same.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://oi60.tinypic.com/2s0o2zl.jpg\u0022 alt=\u00222s0o2zl.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EI was worried about that double-hump, but it seems to persist in all of the optimization results. That\u0027s very interesting.\u003C/p\u003E\n"},{"CreatedByName":"mhoram","CreatedById":78756,"CreatedDateTime":"2014-08-24T07:13:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022K^2\u0022 data-cite=\u0022K^2\u0022\u003E\u003Cdiv\u003EThe general features for total thrust are definitely the same.\u003Cp\u003EI was worried about that double-hump, but it seems to persist in all of the optimization results. That\u0027s very interesting.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI can confirm that this \u0022double-hump\u0022 double-hump is consistent with the results, I got. Have a look at the violet \u0022thr\u0022 line.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/58531-Finding-the-best-ascent-path-for-rockets?p=880948\u0026amp;viewfull=1#post880948\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/6XYUrwH.png\u0022 alt=\u00226XYUrwH.png\u0022\u003E\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-08-24T08:41:03Z","Content":"\n\u003Cp\u003ENice. Capped throttle. I\u0027m still working on that. What was the lift-off TWR on this run?\u003C/p\u003E\n"},{"CreatedByName":"mhoram","CreatedById":78756,"CreatedDateTime":"2014-08-24T12:25:09Z","Content":"\n\u003Cp\u003EClick on the picture to get to the post with greater details.\u003C/p\u003E\u003Cp\u003EAt launch it had a TWR of 2.11.\u003C/p\u003E\n"},{"CreatedByName":"fibonatic","CreatedById":73180,"CreatedDateTime":"2014-08-26T03:42:33Z","Content":"\n\u003Cp\u003EI have a working kOS script and my first results tell me that my test ship used 4330 m/s of delta-v, which is 135 m/s more than predicted. One of the sources which will lead to higher delta-v consumption is infinite TWR at launch, which is assumed (the ship instantly reaches roughly terminal velocity). The ship I used had a TWR of 2.8 at launch. Another source might be that I did not worked out the derivative of the velocities to find the target acceleration, but used \u003Ca href=\u0022https://en.wikipedia.org/wiki/Finite_difference#Forward.2C_backward.2C_and_central_differences\u0022 rel=\u0022external nofollow\u0022\u003Ecentral finite difference\u003C/a\u003E (with h=0.5 meter and x is the radius). I also looked like the apoapsis during the ascent was getting to high, so I used another script to circularize. While coasting towards apoapsis while above the atmosphere it also becomes clear that KSP probably has insufficient \u0022simulation\u0022 accuracy, since I see the apoapsis height the predicted by KER slowly drop while not in time-wrap (I would suspect that the physics engine of KSP uses Euler integration).\u003C/p\u003E\u003Cp\u003EI did these tests on my laptop. When I get the change I will also do some tests on my desktop PC and probably also record a launch and post it here. If anyone want to mess with kOS, \u003Ca href=\u0022https://www.dropbox.com/s/lh6kb7k5ihdfsm8/countdown.txt?dl=0\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E is my script (It does not have any comments but I hope most of it will be clear).\u003C/p\u003E\n"},{"CreatedByName":"K^2","CreatedById":57710,"CreatedDateTime":"2014-08-26T04:09:33Z","Content":"\n\u003Cp\u003ENeat. I\u0027ll have to try this with my results. (They are inherently parametrized.)\u003C/p\u003E\n"},{"CreatedByName":"fibonatic","CreatedById":73180,"CreatedDateTime":"2014-08-29T16:00:31Z","Content":"\n\u003Cp\u003EI did a lot of testing, especially with the controller. My first try contained feedforward and only a P controller, however it turned out to be better to use less feedforward (I only calculated which acceleration would be needed to counteract gravity, drag and centripetal force) in combination with a PID controller. I also added some extra term to the radial velocity.\u003C/p\u003E\u003Cp\u003EHere is a sample video of a rocket with constant Isp (always 390 s):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/x3c-UORtuew?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003EIt used 4326.533 m/s of delta-v (KER says 4322 m/s, but I think that it uses g0=9.81m/s^2, while it should be 9.82 m/s^2)\u003C/p\u003E\u003Cp\u003EI also played around with the thrust to weight ratio at the launchpad by further editing the config file of the engine and got the following fit from it:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/GjYUYcK.png\u0022 alt=\u0022GjYUYcK.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EFor infinitely large TWR it seems to approach ~4303 m/s. I think that this figure might also be useful when designing rockets, such that you can find a balance between using a lot of engines such that you have a good TWR or less engines to save on mass.\u003C/p\u003E\u003Cp\u003EThis is an improvement from my first take (4350m/s) but still not my predicted 4200 m/s, but still not bad results.\u003C/p\u003E\u003Cp\u003EEDIT:\u003C/p\u003E\u003Cp\u003EI just found out that I used an incomplete model for my solver (I forgot the Coriolis effect in the tangential direction). After adding this to my model I got 4325 m/s, so my tests in KSP did slightly better, but reasonably close enough.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-31T00:14:28Z\u0022 title=\u002208/31/2014 12:14  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 31, 2014\u003C/time\u003E by fibonatic\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"fibonatic","CreatedById":73180,"CreatedDateTime":"2014-09-10T22:36:06Z","Content":"\n\u003Cp\u003EI tweaked my solver a bit, instead of searching between locked velocity bounds I now search between the initial value plus or minus a given value, which can be varied. This gives a result of 4297 m/s (it will get close to 4290 m/s if I set the termination criteria a lot tighter but it takes a lot longer). The resulting thrust and angle graphs look as followed:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/msQOdjc.png\u0022 alt=\u0022msQOdjc.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/SIIZ01D.png\u0022 alt=\u0022SIIZ01D.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EIn these results the gravity turn happens much more gradually.\u003C/p\u003E\u003Cp\u003EI have not managed to find a good fit for these results which I could use in kOS (I initially tried a Fourier fit, however kOS seems to take a lot of time calculating 8 sin and cos terms resulting in a lot of delay in the control).\u003C/p\u003E\u003Cp\u003EPS\u003C/p\u003E\u003Cp\u003EI actually have not seen any results for other planets with atmospheres, so I thought I might as well be the first. For the launch height and target orbit I choose values which seemed realistic. For example when landing on Duna you want to use the atmosphere as much as possible and thus launch from a fairly low altitude, while for Eve landing is not the issue however picking your landing site can be hard so I used a value which was not to high and for Laythe I also used a low value since it will be very likely that you will land near a coast. For the orbital heights I just added a few kilometers above the atmospheric cut-off altitude.\u003C/p\u003E\u003Cp\u003E[table=width: 600, class: grid]\u003C/p\u003E\u003Cp\u003E[tr]\u003C/p\u003E\u003Cp\u003E [td]\u003Cstrong\u003ECelestial body\u003C/strong\u003E[/td]\u003C/p\u003E\u003Cp\u003E [td]\u003Cstrong\u003ELaunch height [m]\u003C/strong\u003E[/td]\u003C/p\u003E\u003Cp\u003E [td]\u003Cstrong\u003ETarget orbital [km]\u003C/strong\u003E[/td]\u003C/p\u003E\u003Cp\u003E [td]\u003Cstrong\u003EDelta-v [m/s]\u003C/strong\u003E[/td]\u003C/p\u003E\u003Cp\u003E[/tr]\u003C/p\u003E\u003Cp\u003E[tr]\u003C/p\u003E\u003Cp\u003E [td]Duna[/td]\u003C/p\u003E\u003Cp\u003E [td]500[/td]\u003C/p\u003E\u003Cp\u003E [td]45[/td]\u003C/p\u003E\u003Cp\u003E [td]1275[/td]\u003C/p\u003E\u003Cp\u003E[/tr]\u003C/p\u003E\u003Cp\u003E[tr]\u003C/p\u003E\u003Cp\u003E [td]Eve[/td]\u003C/p\u003E\u003Cp\u003E [td]3000[/td]\u003C/p\u003E\u003Cp\u003E [td]100[/td]\u003C/p\u003E\u003Cp\u003E [td]9810[/td]\u003C/p\u003E\u003Cp\u003E[/tr]\u003C/p\u003E\u003Cp\u003E[tr]\u003C/p\u003E\u003Cp\u003E [td]Laythe[/td]\u003C/p\u003E\u003Cp\u003E [td]500[/td]\u003C/p\u003E\u003Cp\u003E [td]60[/td]\u003C/p\u003E\u003Cp\u003E [td]3200[/td]\u003C/p\u003E\u003Cp\u003E[/tr]\u003C/p\u003E\u003Cp\u003E[/table]\u003C/p\u003E\u003Cp\u003EThe graphs for these results can be found \u003Ca href=\u0022http://imgur.com/a/bCdsB#0\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003EOf course when designing rockets you would want to minimize the amount of mass used and thus is engine dependent, but these results might help as a guide when designing rockets, such as TWR and a rough estimate of how much delta-v would be required.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-11T00:22:59Z\u0022 title=\u002209/11/2014 12:22  AM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 11, 2014\u003C/time\u003E by fibonatic\u003C/strong\u003E\n\u003Cbr\u003Eadded results for other bodies\n\u003C/span\u003E\n"},{"CreatedByName":"mhoram","CreatedById":78756,"CreatedDateTime":"2014-09-11T01:19:33Z","Content":"\n\u003Cp\u003ENice job on the other planets. Have not seen this done before.\u003C/p\u003E\u003Cp\u003EAbout the approximation for KOS import:\u003C/p\u003E\u003Cp\u003EHave you had a look at Lagrange polynomials with a Legendre Gauss Lobatto grid? That is the way PSOPT approximates the solution and is described in chapter 1.6 of its manual. I find the method very promising and should get rid of the trigonometric functions.\u003C/p\u003E\u003Cp\u003EAnd thanks for the KOS script. I will have a look at it.\u003C/p\u003E\n"},{"CreatedByName":"fibonatic","CreatedById":73180,"CreatedDateTime":"2014-09-11T03:59:09Z","Content":"\n\u003Cp\u003EI have not looked at that, I will try to check that out. Another option might to to just interpolate, since currently I only use 136 elements between which I already interpolate. I might even switch to quadratic elements (instead of linear) in my solver, which might allow me to reduce the amount of elements even more. And using variable spacing of the elements might also help reducing the amount of elements.\u003C/p\u003E\u003Cp\u003EPS: my kOS scripts basically has no comments. I intended to add them later (initially I just wanted to share it as soon as possible). However once I realized I made a mistake in my model, used to generate the launch path, I wanted to implement the new trajectory and have not got around to add comments.\u003C/p\u003E\n"}]}