{"TopicId":34695,"ForumId":29,"TopicTitle":"A GUI framework for modders?","CreatedByName":"evilC","CreatedById":60370,"CreatedDateTime":"2013-06-25T11:57:34Z","PageNum":1,"Articles":[{"CreatedByName":"evilC","CreatedById":60370,"CreatedDateTime":"2013-06-25T11:57:34Z","Content":"\n\u003Cp\u003ESo I have been tinkering with KSP coding for a while now, contributing where I can, but as a newcomer to unity and c# in general, I am finding that UI coding is fraught with some annoying pitfalls. Simply having a window that behaves as one expects (Remember position, close when ship change etc) and with the niceties that a windows generation has grown accustom to is not trivial.\u003C/p\u003E\u003Cp\u003EI have a lot of these sorted in my mod, but to be honest the code probably isn\u0027t that great, and only supports per-mod not per-ship settings etc.\u003C/p\u003E\u003Cp\u003ETaranis (Tac) was kind enough to release a \u003Ca href=\u0022https://github.com/taraniselsu/TacLib\u0022 rel=\u0022external nofollow\u0022\u003Ewindow manager library\u003C/a\u003E that hopefully will be the first step to a decent solution.\u003C/p\u003E\u003Cp\u003EUnfortunately, he did not include a fully working sample, so I am currently wrestling with that. Rather than just integrate his code into my mod though, I thought it would be nice to feed something back and try to create a nice framework with a sample \u0022Hello World\u0022 implementation to allow budding modders to dive right in with a fully working UI they just have to modify to suit their needs.\u003C/p\u003E\u003Cp\u003ESo, any opinions on the best way to implement such an idea? At a minimum, I think the framework should provide the following functionality:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ERemember window position\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAs you [] through ships, the window shows and hides as appropriate\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EA basic example UI logic and storing of state variables\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAn open/close option in the part\u0027s context menu with code to toggle label\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI would also like to see:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ETwo levels of persistent data storage: global and per-ship\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EA \u0022Show on Start\u0022 option\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ETo that end, I would encourage anyone to fork either Tac\u0027s original library or \u003Ca href=\u0022https://github.com/evilC/TacLib\u0022 rel=\u0022external nofollow\u0022\u003Emy fork\u003C/a\u003E and add or suggest any improvements or fixes they deem suitable.\u003C/p\u003E\u003Cp\u003EOne question that crossed my mind also was how this would apply to part-less mods. Could one example be made that would work in both situations, or would it require two?\u003C/p\u003E\n"},{"CreatedByName":"tek_604","CreatedById":59699,"CreatedDateTime":"2013-06-25T12:24:33Z","Content":"\n\u003Cp\u003EThis kind of library approach would be totally awesome. The only true stopper would be that the original author would go pretty much unnoticed by the general playerbase, which is probably why its never been completed.\u003C/p\u003E\u003Cp\u003EUs modders would have to think of a way to make sure that any potential library authors would get a large credit.\u003C/p\u003E\u003Cp\u003EI would like to add, not only would a GUI window library be handy, but, also a file saving library would also be of much use.\u003C/p\u003E\u003Cp\u003EIf this gets done, I will be adding rep to this thread \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"evilC","CreatedById":60370,"CreatedDateTime":"2013-06-25T13:09:36Z","Content":"\n\u003Cp\u003EPersonally, am not hugely concerned about the glory, I just think it\u0027s worth trying to do.\u003C/p\u003E\u003Cp\u003EBesides, if for example we use Taranis\u0027 code and host on GitHub, the relevant people get credit that way. Finally, I would imagine comments could get put in the source to credit contributors.\u003C/p\u003E\u003Cp\u003EWhat do you mean by \u0022file saving\u0022? Does it need to be files or could it not just be a node in the XML or something?\u003C/p\u003E\u003Cp\u003EWhatever, I think you have a valid idea: flesh out storage options available to modders from within the code.\u003C/p\u003E\u003Cp\u003EI also thought that a premade block for all the events with comments and when they fire would be nice, or at least a list of the main ones.\u003C/p\u003E\u003Cp\u003ECheck out my fork for the beginnings of a usable template.\u003C/p\u003E\u003Cp\u003EWindow position now saved on a global basis.\u003C/p\u003E\n"},{"CreatedByName":"TaranisElsu","CreatedById":57742,"CreatedDateTime":"2013-06-25T15:39:34Z","Content":"\n\u003Cp\u003EI am Taranis Elsu, and I endorse this project.\u003C/p\u003E\u003Cp\u003ESeriously though, I was thinking of working on an example library to help share the knowledge. Some of the discussions and questions on #kspmodders leads me to believe that it would be really helpful to the community. We could stop reinventing the wheel with each new mod, we could have more consistency between mods, and beginners would have a good starting point.\u003C/p\u003E\u003Cp\u003EMy initial focus would be on the simple things that nearly every mod does: showing a window and saving settings. evilC has done a nice job getting the ball rolling, and I plan to help him. More help would be appreciated \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"evilC","CreatedById":60370,"CreatedDateTime":"2013-06-25T16:41:18Z","Content":"\n\u003Cp\u003EAbsolutely delighted to have Taranis on board, he dropped into IRC a while ago and gave me a few pointers, so I have modified the code to remove reliance on PluginConfiguration nodes (ie config.xml in Resources) and instead use ConfigNodes (eg a .cfg file in the plugin folder).\u003C/p\u003E\u003Cp\u003EThis seemed to be the consensus as \u0022the smart way\u0022 in #kspmodders, and an excellent example of why I feel this project holds value.\u003C/p\u003E\u003Cp\u003EThe latest version also supports a \u0022global\u0022 setting in the .cfg file, which can be overridden by a \u0022per-ship\u0022 setting saved in the persistence file.\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2013-06-25T17:33:00Z","Content":"\n\u003Cp\u003EHave you played with other UI frameworks? One of the biggest annoyances with Unity is that it\u0027s not declarative. (It\u0027s a \u003Cem\u003Eprocedural\u003C/em\u003E UI... yuck!) I don\u0027t have trouble with it myself, but if you\u0027re looking to make a UI framework, make sure you\u0027re familiar with frameworks like WPF. Even a primitive form of data binding could go a long way.\u003C/p\u003E\n"},{"CreatedByName":"evilC","CreatedById":60370,"CreatedDateTime":"2013-06-25T18:05:44Z","Content":"\n\u003Cp\u003EHmm, as a first step I was just looking to package what KSP offers into a more manageable starting point for newcomers.\u003C/p\u003E\u003Cp\u003EI agree the UI is a bit quirky, but given a simple example, it should be easy enough to pick up. Personally, something like a proper framework is way beyond me.\u003C/p\u003E\n"},{"CreatedByName":"TaranisElsu","CreatedById":57742,"CreatedDateTime":"2013-06-26T01:08:06Z","Content":"\n\u003Cp\u003EI agree that a proper framework is too much. My thoughts are to create some classes that factor out some of the code that is duplicated every time you want to show a window, have the window remember its last position, and properly handle window hiding when paused or in screenshot mode. That was the intention of my TacLib, but for personal use.\u003C/p\u003E\u003Cp\u003EI think it is also useful for showing others how to do some of those common things that we all do.\u003C/p\u003E\u003Cp\u003EI also do not like Unity\u0027s GUI. I would much prefer something like WPF or Swing or something -- just not MFC!\u003C/p\u003E\n"},{"CreatedByName":"evilC","CreatedById":60370,"CreatedDateTime":"2013-06-27T04:39:03Z","Content":"\n\u003Cp\u003EStarting to get somewhere with this.\u003C/p\u003E\u003Cp\u003ENew version up, \u0022Show on Startup\u0022 option added, context menu toggle added to part to show/hide window.\u003C/p\u003E\u003Cp\u003ETaranis - do you know how to solve issue \u003Ca href=\u0022https://github.com/evilC/TacLib/issues/2\u0022 rel=\u0022external nofollow\u0022\u003E#2\u003C/a\u003E?\u003C/p\u003E\n"},{"CreatedByName":"evilC","CreatedById":60370,"CreatedDateTime":"2013-06-27T20:22:02Z","Content":"\n\u003Cp\u003ENever mind, issue #2 solved.\u003C/p\u003E\u003Cp\u003ENew feature added: You can now limit the window to only be resizable in one direction.\u003C/p\u003E\n"},{"CreatedByName":"evilC","CreatedById":60370,"CreatedDateTime":"2013-06-28T01:50:12Z","Content":"\n\u003Cp\u003ELots more updates, I think it may be approaching usability.\u003C/p\u003E\u003Cp\u003EAdded a no-brainer set of instructions on getting up and going: \u003Ca href=\u0022https://github.com/evilC/TacLib/blob/master/Readme.txt\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/evilC/TacLib/blob/master/Readme.txt\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"sirkut","CreatedById":57229,"CreatedDateTime":"2013-07-06T15:52:33Z","Content":"\n\u003Cp\u003EI\u0027ve used the library with success. I\u0027m currently working on a new plugin and I must admit this made making the UI much easier for me.\u003C/p\u003E\n"},{"CreatedByName":"evilC","CreatedById":60370,"CreatedDateTime":"2013-07-08T19:13:15Z","Content":"\n\u003Cp\u003EI have made an important bugfix to the library.\u003C/p\u003E\u003Cp\u003EAt some point (probably after sirkut grabbed it), I broke it such that trying to add or load a part with the partmodule whilst in the Editor would hang KSP.\u003C/p\u003E\u003Cp\u003EThe window is also now passed the whole partmodule instance, so it can access info about the associated craft.\u003C/p\u003E\u003Cp\u003EI also updated the sample module so that it lists all available resources as a demonstration of the above feature, and puts it in a toggleable scroller, as a demonstration of UI techniques.\u003C/p\u003E\n"},{"CreatedByName":"sirkut","CreatedById":57229,"CreatedDateTime":"2013-07-08T22:47:53Z","Content":"\n\u003Cp\u003EI honestly can\u0027t remember if I ran into a problem or not. I looked at not only TacLib but the other Tac modules to compare what was being done.\u003C/p\u003E\n"},{"CreatedByName":"nyrath","CreatedById":61886,"CreatedDateTime":"2013-07-09T23:08:39Z","Content":"\n\u003Cp\u003EStupid newbie here, with a stupid newbie question. Please have pity on me.\u003C/p\u003E\u003Cp\u003EI\u0027m trying to compile this with the version of MonoDevelop that came with Unity3D, using Assembly-CSharp.dll and UnityEngine.dll from KSP 0.20. I\u0027m getting about five compile errors, all seem to be related.\u003C/p\u003E\u003Cp\u003EExample: file Windows.cs, line 67\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evar texture = Utilities.LoadImage\u0026lt;T\u0026gt;(IOUtils.GetFilePathFor(typeof(T), \u0022resize.png\u0022));\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eerror \u003Cstrong\u003ENo overload for method \u0027GetFilePathFor\u0027 takes 2 arguments\u003C/strong\u003E. \u003C/p\u003E\u003Cp\u003EUsing contextual help it appears to be expecting GetFilePathFor(Type \u003Cstrong\u003ET\u003C/strong\u003E, string \u003Cstrong\u003Efile\u003C/strong\u003E, Vessel \u003Cstrong\u003Eflight\u003C/strong\u003E);\u003C/p\u003E\u003Cp\u003Ewhich means the \u0022flight\u0022 parameter is missing.\u003C/p\u003E\u003Cp\u003EWhat am I doing wrong?\u003C/p\u003E\n"},{"CreatedByName":"evilC","CreatedById":60370,"CreatedDateTime":"2013-07-10T00:07:20Z","Content":"\n\u003Cp\u003EHmm, you may well not be doing anything wrong - that bit of code isn\u0027t really needed anyway, it just allows you to assign a texture to the resize button.\u003C/p\u003E\u003Cp\u003EI commented out those two lines and replaced it with\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E            resizeContent = new GUIContent(\u0022R\u0022, \u0022Drag to resize the window.\u0022);\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EDoes that compile for you?\u003C/p\u003E\n"},{"CreatedByName":"nyrath","CreatedById":61886,"CreatedDateTime":"2013-07-10T01:15:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022evilC\u0022 data-cite=\u0022evilC\u0022\u003E\u003Cdiv\u003EHmm, you may well not be doing anything wrong - that bit of code isn\u0027t really needed anyway, it just allows you to assign a texture to the resize button.\u003Cp\u003EI commented out those two lines and replaced it with\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E            resizeContent = new GUIContent(\u0022R\u0022, \u0022Drag to resize the window.\u0022);\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EDoes that compile for you?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes it does, thank you!\u003C/p\u003E\n"},{"CreatedByName":"nyrath","CreatedById":61886,"CreatedDateTime":"2013-07-10T14:43:57Z","Content":"\n\u003Cp\u003ESo I take it that Visual Studio does not do a check on API function arguments when it does a compile, unlike MonoDevelop?\u003C/p\u003E\u003Cp\u003EJust for the record, MonoDevelop complained about the following lines:\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EWindows.cs, line 67\u003C/strong\u003E: var texture = Utilities.LoadImage\u0026lt;T\u0026gt;(IOUtils.GetFilePathFor(typeof(T), \u0022resize.png\u0022)); \u003Cem\u003ENo overload for method GetFilePathFor takes 2 arguments\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EWindows.cs, line 197:\u003C/strong\u003E windowPos = Utilities.EnsureVisible(windowPos); \u003Cem\u003ENo overload for method EnsureVisible takes 1 argument\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EIcon.cs, line 54\u003C/strong\u003E: var texture = Utilities.LoadImage\u0026lt;T\u0026gt;(IOUtils.GetFilePathFor(typeof(T), imageFilename)); \u003Cem\u003ENo overload for method GetFilePathFor takes 2 arguments\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EUtilities.cs, line 95\u003C/strong\u003E: if (File.Exists\u0026lt;T\u0026gt;(filename)) \u003Cem\u003ENo overload for method Exists takes 1 argument\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EUtilities.cs, line 97:\u003C/strong\u003E var bytes = File.ReadAllBytes\u0026lt;T\u0026gt;(filename); \u003Cem\u003ENo overload for method for ReadAllBytes takes 1 argument\u003C/em\u003E\u003C/p\u003E\u003Cp\u003EI must be doing something wrong, MechJeb calls IOUtils.GetFilePathFor() with two arguments, just like your code does. Offhand I\u0027d say that MonoDevelop is being overly fussy about default parameters, meaning it is not allowing any. \u003C/p\u003E\u003Cp\u003EI\u0027ll figure it out.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-10T15:28:41Z\u0022 title=\u002207/10/2013 03:28  PM\u0022 data-short=\u002211 yr\u0022\u003EJuly 10, 2013\u003C/time\u003E by nyrath\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"nyrath","CreatedById":61886,"CreatedDateTime":"2013-07-10T15:51:06Z","Content":"\n\u003Cp\u003EOK, I found the problem.\u003C/p\u003E\u003Cp\u003EIn MonoDevelop, when I imported the files, the project set itself to .Net version 3.5.\u003C/p\u003E\u003Cp\u003EWhen I set the project to .Net version 4.0, everything compiled just fine.\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2013-07-10T16:18:03Z","Content":"\n\u003Cp\u003EFYI: Plugins should target .NET Framework 3.5. I recommend reworking that code instead of changing the target framework.\u003C/p\u003E\n"},{"CreatedByName":"sirkut","CreatedById":57229,"CreatedDateTime":"2013-07-10T18:14:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Majiir\u0022 data-cite=\u0022Majiir\u0022\u003E\u003Cdiv\u003EFYI: Plugins should target .NET Framework 3.5. I recommend reworking that code instead of changing the target framework.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve wondered about this. I\u0027ve seen some plugins where users compiled for 4.0 framework and they work just fine. What problems can be encountered if not using 3.5?\u003C/p\u003E\n"},{"CreatedByName":"evilC","CreatedById":60370,"CreatedDateTime":"2013-07-11T01:56:25Z","Content":"\n\u003Cp\u003EI think i goofed anyway.\u003C/p\u003E\u003Cp\u003EIt seems there is an icon.cs in there, but it is not part of the solution.\u003C/p\u003E\u003Cp\u003EAlso, there is a resize.psd, but it looks like the code should be able to hold a missing icon.\u003C/p\u003E\u003Cp\u003EI saw taranis made some changes in that area, I may need to merge them in.\u003C/p\u003E\u003Cp\u003EWhen I find a bit of time i will have a look at it.\u003C/p\u003E\n"},{"CreatedByName":"nyrath","CreatedById":61886,"CreatedDateTime":"2013-07-11T15:21:06Z","Content":"\n\u003Cp\u003EevilC, are you compiling with .NET 3.5 or .NET 4.0?\u003C/p\u003E\n"},{"CreatedByName":"evilC","CreatedById":60370,"CreatedDateTime":"2013-07-11T15:52:36Z","Content":"\n\u003Cp\u003EHmm, OK, the TacLib project was set to 4.5\u003C/p\u003E\u003Cp\u003E[Edit] When I changed project to 3.5, I had to remove the reference to Microsoft-CSharp and comment out the line \u0022using System.Threading.Tasks\u0022\u003C/p\u003E\u003Cp\u003EThe project compiled after I did that, so I guess all is good.\u003C/p\u003E\u003Cp\u003EI submitted changes to GitHub\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-11T15:56:19Z\u0022 title=\u002207/11/2013 03:56  PM\u0022 data-short=\u002211 yr\u0022\u003EJuly 11, 2013\u003C/time\u003E by evilC\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2013-07-11T16:05:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sirkut\u0022 data-cite=\u0022sirkut\u0022\u003E\u003Cdiv\u003EI\u0027ve wondered about this. I\u0027ve seen some plugins where users compiled for 4.0 framework and they work just fine. What problems can be encountered if not using 3.5?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou\u0027ll usually only encounter problems if you make use of classes or members introduced in 4.0 or later. This leads a lot of people to believe they can write plugins targeting 4.0 or higher when that\u0027s not at all reliable.\u003C/p\u003E\n"}]}