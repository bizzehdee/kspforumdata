{"TopicId":213687,"ForumId":196,"TopicTitle":"(BUG) KSP2 does NOT unload vessels at range","CreatedByName":"JcoolTheShipbuilder","CreatedById":204576,"CreatedDateTime":"2023-02-27T16:20:52Z","PageNum":1,"Articles":[{"CreatedByName":"JcoolTheShipbuilder","CreatedById":204576,"CreatedDateTime":"2023-02-27T16:20:52Z","Content":"\n\u003Cp\u003E\nSo I was controlling a station around Dres, and got news that there is water in Vall, and couldnt be bothered to move the mobile station to Jool, so I went to map view, clicked on a craft around Jool, and clicked control. And the game lagged a lot.. but I was now switched to it! yay!\u003Cbr\u003E\n\u003Cbr\u003E\nHOWEVER\u003Cbr\u003E\nI was still in control of the dres station, while the jool ship is practically on the other side of the kerbol system.. And I have set persistent debris to 0 once, and with all the debris cleared,\u00A0 my FPS everywhere dramatically increased...\n\u003C/p\u003E\n\u003Cp\u003E\nI am fairly certain that the game does NOT unload vessels at range like KSP2.. it is frustrating when you launch a small little flea on Kerbin and are getting horrible lag from a station around Jool still being loaded. KSP1 has a loading range of about 2.25km by default, and more ships added causes the game to just... take longer to load and take more ram. but in KSP2? The lag in the entire system is based on the number of PARTS in the entire system! This has led to my friend\u00A0 being unable to play a few days old save due to intense lag.\u003Cbr\u003E\n\u003Cbr\u003E\nIn my opinion, this is one of the more serious of the bugs and glitches out of all of the ones I have seen...\n\u003C/p\u003E\n"},{"CreatedByName":"Vl3d","CreatedById":219348,"CreatedDateTime":"2023-02-27T20:06:51Z","Content":"\n\u003Cp\u003E\nI have also experienced a slow down of the game after launching multiple missions and having a 50 debris around \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E / in orbit.\n\u003C/p\u003E\n"},{"CreatedByName":"Scarecrow71","CreatedById":210112,"CreatedDateTime":"2023-02-27T20:16:58Z","Content":"\n\u003Cp\u003E\nThis needs to be posted in the Bug Reports sub-forum.\n\u003C/p\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2023-02-27T21:09:31Z","Content":"\n\u003Cp\u003E\nThis is not a bug, it\u0027s a feature.\u003Cbr\u003E\nThe visible, physically interactable with representation of the vessel is not loaded.\n\u003C/p\u003E\n\u003Cp\u003E\nHowever, the core logic will stay loaded, because that\u0027s a feature of KSP 2 : vessels are able to use their engines in the background, while unloaded.\u003Cbr\u003E\nTo make that work consistently, this mean a large chunk of the core logic is kept running : resource requests and conversions, solar panels, thermodynamics, etc...\u003Cbr\u003E\n\u003Cbr\u003E\nThis obviously add a lot of overhead, but with a good core architecture, this would have been doable without impacting overall performance too much.\u003Cbr\u003E\nUnfortunately, the way KSP 2 is architectured is absolutely not up to that task, at least in the current state of things.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-02-27T21:11:00Z\u0022 title=\u002202/27/2023 09:11  PM\u0022 data-short=\u00221 yr\u0022\u003EFebruary 27, 2023\u003C/time\u003E by Gotmachine\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Vanamonde","CreatedById":27914,"CreatedDateTime":"2023-02-27T21:46:25Z","Content":"\n\u003Cp\u003E\nThread moved to (possible) bug reports.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Vl3d","CreatedById":219348,"CreatedDateTime":"2023-02-27T22:43:03Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224246574\u0022 data-ipsquote-contentid=\u0022213687\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221677532171\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nUnfortunately, the way KSP 2 is architectured is absolutely not up to that task, at least in the current state of things.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWhy do you say that?\n\u003C/p\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2023-02-27T23:54:41Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224246727\u0022 data-ipsquote-contentid=\u0022213687\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221677537783\u0022 data-ipsquote-userid=\u0022219348\u0022 data-ipsquote-username=\u0022Vl3d\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Vl3d said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhy do you say that?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nBackground processing of unloaded vessels (and other stuff like colonies), assuming they intend the players to be able to have a moderately complex space program going on, entails running a large chunk of the game logic on thousands of entities.\u003Cbr\u003E\nTo make that possible without tanking performance, there are only two possible strategies \u003Cspan\u003E:\u003Cbr\u003E\n- Don\u0027t actually run the same game logic and aggregate entities into higher-level abstractions and/or reduce the update rate to cut down computational cost at the expense of simulation precision/coherency.\u003Cbr\u003E\n- Architecture these entities around data-oriented programming paradigms, making the data cache-efficient and allowing to leverage parallelism and SIMD instructions.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nAs of the current EA release, KSP 2 isn\u0027t doing anything like that.\u003Cbr\u003E\nAll they have done is to separate the objects game logic from their loaded representation, which is the bare minimum required for the background processing concept to work.\u003Cbr\u003E\nNow, each unloaded vessel/part/partmodule is doing a lot less work than when loaded \u003Cspan\u003E: \u003C/span\u003Eno joint physics, no collisions, no visuals to push to the GPU...\u003Cbr\u003E\nBut even taking the estimate that each unloaded part does around 5% of what a loaded part does in terms of processing, if for example you have a game with 20 vessels made out of 100 parts, that still is worth the computational cost of 200 loaded parts.\n\u003C/p\u003E\n\u003Cp\u003E\nThe only thing they can possible do without basically throwing away the whole thing\u00A0 is to dial down the unloaded vessels update rate, but this has direct consequences on the simulation quality, especially on some subsystem that are time-step sensitive like solar panel evaluation or thermodynamics.\u003Cbr\u003E\nIt might be \u003Cem\u003Epossible\u003C/em\u003E given the current architecture to implement some limited parallelism, but currently there is no provision for any of that and it would already require a quite large refactor.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222023-02-27T23:54:54Z\u0022 title=\u002202/27/2023 11:54  PM\u0022 data-short=\u00221 yr\u0022\u003EFebruary 27, 2023\u003C/time\u003E by Gotmachine\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Vl3d","CreatedById":219348,"CreatedDateTime":"2023-02-28T13:18:27Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224246825\u0022 data-ipsquote-contentid=\u0022213687\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221677542081\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n13 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nBackground processing of unloaded vessels (and other stuff like colonies), assuming they intend the players to be able to have a moderately complex space program going on, entails running a large chunk of the game logic on thousands of entities.\u003Cbr\u003E\nTo make that possible without tanking performance, there are only two possible strategies \u003Cspan\u003E:\u003Cbr\u003E\n- Don\u0027t actually run the same game logic and aggregate entities into higher-level abstractions and/or reduce the update rate to cut down computational cost at the expense of simulation precision/coherency.\u003Cbr\u003E\n- Architecture these entities around data-oriented programming paradigms, making the data cache-efficient and allowing to leverage parallelism and SIMD instructions.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nAs of the current EA release, KSP 2 isn\u0027t doing anything like that.\u003Cbr\u003E\nAll they have done is to separate the objects game logic from their loaded representation, which is the bare minimum required for the background processing concept to work.\u003Cbr\u003E\nNow, each unloaded vessel/part/partmodule is doing a lot less work than when loaded \u003Cspan\u003E: \u003C/span\u003Eno joint physics, no collisions, no visuals to push to the GPU...\u003Cbr\u003E\nBut even taking the estimate that each unloaded part does around 5% of what a loaded part does in terms of processing, if for example you have a game with 20 vessels made out of 100 parts, that still is worth the computational cost of 200 loaded parts.\n\u003C/p\u003E\n\u003Cp\u003E\nThe only thing they can possible do without basically throwing away the whole thing\u00A0 is to dial down the unloaded vessels update rate, but this has direct consequences on the simulation quality, especially on some subsystem that are time-step sensitive like solar panel evaluation or thermodynamics.\u003Cbr\u003E\nIt might be \u003Cem\u003Epossible\u003C/em\u003E given the current architecture to implement some limited parallelism, but currently there is no provision for any of that and it would already require a quite large refactor.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYou didn\u0027t answer my question. What sources or evidence are you basing your assumptions on? Because the system is much more complicated than you described.\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u0022210281\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed2302315687\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/207046-developer-insights-13-%E2%80%93-ksp2-resource-system/\u0026amp;do=embed\u0022 style=\u0022height:195px;max-width:500px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2023-02-28T13:51:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224247431\u0022 data-ipsquote-contentid=\u0022213687\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221677590307\u0022 data-ipsquote-userid=\u0022219348\u0022 data-ipsquote-username=\u0022Vl3d\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n31 minutes ago, Vl3d said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhat sources or evidence are you basing your assumptions on?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSources and evidences that we aren\u0027t allowed to discuss in these forums.\n\u003C/p\u003E\n"},{"CreatedByName":"Fullmetal Analyst","CreatedById":212373,"CreatedDateTime":"2023-02-28T14:28:57Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224246825\u0022 data-ipsquote-contentid=\u0022213687\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221677542081\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n14 hours ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nBackground processing of unloaded vessels (and other stuff like colonies), assuming they intend the players to be able to have a moderately complex space program going on, entails running a large chunk of the game logic on thousands of entities.\u003Cbr\u003E\nTo make that possible without tanking performance, there are only two possible strategies \u003Cspan\u003E:\u003Cbr\u003E\n- Don\u0027t actually run the same game logic and aggregate entities into higher-level abstractions and/or reduce the update rate to cut down computational cost at the expense of simulation precision/coherency.\u003Cbr\u003E\n- Architecture these entities around data-oriented programming paradigms, making the data cache-efficient and allowing to leverage parallelism and SIMD instructions.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nAs of the current EA release, KSP 2 isn\u0027t doing anything like that.\u003Cbr\u003E\nAll they have done is to separate the objects game logic from their loaded representation, which is the bare minimum required for the background processing concept to work.\u003Cbr\u003E\nNow, each unloaded vessel/part/partmodule is doing a lot less work than when loaded \u003Cspan\u003E: \u003C/span\u003Eno joint physics, no collisions, no visuals to push to the GPU...\u003Cbr\u003E\nBut even taking the estimate that each unloaded part does around 5% of what a loaded part does in terms of processing, if for example you have a game with 20 vessels made out of 100 parts, that still is worth the computational cost of 200 loaded parts.\n\u003C/p\u003E\n\u003Cp\u003E\nThe only thing they can possible do without basically throwing away the whole thing\u00A0 is to dial down the unloaded vessels update rate, but this has direct consequences on the simulation quality, especially on some subsystem that are time-step sensitive like solar panel evaluation or thermodynamics.\u003Cbr\u003E\nIt might be \u003Cem\u003Epossible\u003C/em\u003E given the current architecture to implement some limited parallelism, but currently there is no provision for any of that and it would already require a quite large refactor.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nabsolutely based!\u00A0\u003Cimg alt=\u0022:maneuver:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/Maneuver20px.png\u0022 title=\u0022:maneuver:\u0022\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"Anth","CreatedById":161238,"CreatedDateTime":"2023-04-06T20:47:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224246825\u0022 data-ipsquote-contentid=\u0022213687\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221677542081\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 2/28/2023 at 12:54 PM, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nBackground processing of unloaded vessels (and other stuff like colonies), assuming they intend the players to be able to have a moderately complex space program going on, entails running a large chunk of the game logic on thousands of entities.\u003Cbr\u003E\nTo make that possible without tanking performance, there are only two possible strategies \u003Cspan\u003E:\u003Cbr\u003E\n- Don\u0027t actually run the same game logic and aggregate entities into higher-level abstractions and/or reduce the update rate to cut down computational cost at the expense of simulation precision/coherency.\u003Cbr\u003E\n- Architecture these entities around data-oriented programming paradigms, making the data cache-efficient and allowing to leverage parallelism and SIMD instructions.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nAs of the current EA release, KSP 2 isn\u0027t doing anything like that.\u003Cbr\u003E\nAll they have done is to separate the objects game logic from their loaded representation, which is the bare minimum required for the background processing concept to work.\u003Cbr\u003E\nNow, each unloaded vessel/part/partmodule is doing a lot less work than when loaded \u003Cspan\u003E: \u003C/span\u003Eno joint physics, no collisions, no visuals to push to the GPU...\u003Cbr\u003E\nBut even taking the estimate that each unloaded part does around 5% of what a loaded part does in terms of processing, if for example you have a game with 20 vessels made out of 100 parts, that still is worth the computational cost of 200 loaded parts.\n\u003C/p\u003E\n\u003Cp\u003E\nThe only thing they can possible do without basically throwing away the whole thing\u00A0 is to dial down the unloaded vessels update rate, but this has direct consequences on the simulation quality, especially on some subsystem that are time-step sensitive like solar panel evaluation or thermodynamics.\u003Cbr\u003E\nIt might be \u003Cem\u003Epossible\u003C/em\u003E given the current architecture to implement some limited parallelism, but currently there is no provision for any of that and it would already require a quite large refactor.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe is a bug report I did. How if everything is processed all of the time can we ever get good performance...they promised high part counts for KSP2\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u0022161238\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed6213022601\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/215583-ksp2-is-calculating-the-physics-of-all-parts-of-all-crafts-whether-they-are-rendered-or-not-reducing-performance-of-all-scenes-at-all-times/\u0026amp;do=embed\u0022 style=\u0022height:197px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Gotmachine","CreatedById":163039,"CreatedDateTime":"2023-04-06T21:59:38Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224269673\u0022 data-ipsquote-contentid=\u0022213687\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221680814021\u0022 data-ipsquote-userid=\u0022161238\u0022 data-ipsquote-username=\u0022Anth12\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n27 minutes ago, Anth12 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHow if everything is processed all of the time can we ever get good performance...\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWell, the only low hanging fruit is the resource request system.\u003Cbr\u003E\nIt\u0027s one of the main part-count sensitive performance hog, and the current implementation is very, very inefficient.\u003Cbr\u003E\nThis is a relatively easy refactor that would have a massive impact, at least if they actually rewrite it with performance first in mind, unlike just patching a few surface issues like they did in the 0.1.1 patch.\n\u003C/p\u003E\n\u003Cp\u003E\nBut aside from that, they don\u0027t have a lot of options.\n\u003C/p\u003E\n\u003Cp\u003E\nTo give a basic example, in KSP 1, the game doesn\u0027t care if your commsat has enough EC generation capacity to keep up with the probe core EC consumption. As long as there was some battery left when you switch away, you\u0027re good.\u003Cbr\u003E\nKSP 2 in contrast always do the math of actually generating and consuming EC, even if the vessel is out of physics range.\u003Cbr\u003E\nThis is arguably a very nice feature, but they totally failed to build adequate foundations for it to work from a performance perspective, and it will likely get worse once they start adding gameplay elements like heat management and more complex resource chains, because those will be even more demanding from a performance perspective.\n\u003C/p\u003E\n\u003Cp\u003E\nRealistically, I don\u0027t see them rewriting the whole thing to parallelize it or to take a data-oriented approach.\u003Cbr\u003E\nThis is a high effort, high impact refactor of a huge proportion of the codebase that would block their ability to implement any other feature until this is done.\u003Cbr\u003E\nAnd the required effort gets higher for each feature that get added, so unless this happen very soon, this has no chance of ever happening.\u003Cbr\u003E\nWhat is in the realm of what can happen is them rate-limiting the thing so only a few vessels are ticked every frame.\u003Cbr\u003E\nThis would still require some non-trivial refactoring, but this is the only way they can prevent the general issue that the game performance ceiling is directly proportional to the total part count.\u003Cbr\u003E\nThey could also implement some sort of \u0022on rail\u0022 state where they don\u0027t tick at all some \u0022less important\u0022 vessels (ie, non-controllable debris). They might actually be doing this already, but I didn\u0027t see it when I looked.\n\u003C/p\u003E\n"},{"CreatedByName":"Anth","CreatedById":161238,"CreatedDateTime":"2023-04-06T23:41:20Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224269697\u0022 data-ipsquote-contentid=\u0022213687\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221680818378\u0022 data-ipsquote-userid=\u0022163039\u0022 data-ipsquote-username=\u0022Gotmachine\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Gotmachine said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWell, the only low hanging fruit is the resource request system.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe first part of my bug report had mostly girder segments with a few probe cores to keep the parts from being debris. It shouldn\u0027t have taxed the resource system very much at all.\n\u003C/p\u003E\n\u003Cp\u003E\nWhy would the\u00A0 resource system need to be applied to the 7993 girder segments? It shouldn\u0027t.\n\u003C/p\u003E\n"},{"CreatedByName":"Lisias","CreatedById":187168,"CreatedDateTime":"2023-04-07T12:16:37Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224269725\u0022 data-ipsquote-contentid=\u0022213687\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221680824480\u0022 data-ipsquote-userid=\u0022161238\u0022 data-ipsquote-username=\u0022Anth12\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n12 hours ago, Anth12 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhy would the\u00A0 resource system need to be applied to the 7993 girder segments? It shouldn\u0027t.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nDid you had read this Dev Insight? Perhaps it could explain some of these idiosyncrasies...\n\u003C/p\u003E\n\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedauthorid=\u0022210281\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed5631652308\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/207046-developer-insights-13-%E2%80%93-ksp2-resource-system/\u0026amp;do=embed\u0022 style=\u0022height:195px;max-width:500px;\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}