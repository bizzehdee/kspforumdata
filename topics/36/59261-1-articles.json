{"TopicId":59261,"ForumId":36,"TopicTitle":"I CANT KEEP TRACK OF TIME! No, really, I cant get my part to check time passed X P","CreatedByName":"CiberX15","CreatedById":68461,"CreatedDateTime":"2014-01-08T04:27:43Z","PageNum":1,"Articles":[{"CreatedByName":"CiberX15","CreatedById":68461,"CreatedDateTime":"2014-01-08T04:27:43Z","Content":"\n\u003Cp\u003EOk so I am trying to find out how much time has passed so that I can calculate how long a part has been active for. The general idea is when the player clicks a button the variable \u003Cem\u003ETimeActive\u003C/em\u003E is set to \u003Cem\u003Evessel.missionTime\u003C/em\u003E which as I understand it is the total number of seconds since the ship/station/probe left the launch pad.\u003C/p\u003E\u003Cp\u003EFor every tick I then set the variable \u003Cem\u003EResearchTime\u003C/em\u003E to \u003Cem\u003Evessel.missionTime - TimeActive\u003C/em\u003E which means Research time is equal to the amount of seconds since the player clicked the button.\u003C/p\u003E\u003Cp\u003EThis works perfectly when the player is focused on the ship in qustion. However, when they swich to another ship then switch back, \u003Cem\u003ETimeActive\u003C/em\u003E = 0, so when it runs its calculation, \u003Cem\u003EResearchTime \u003C/em\u003E ends up being something like 50000.\u003C/p\u003E\u003Cp\u003ENow what I don\u0027t understand is that TimeActive is supposed to be persistent. In fact I have several variables that are set to be persistent, and all but \u003Cem\u003ETimeActive \u003C/em\u003E work. For example, \u003Cem\u003EIsEnabled \u003C/em\u003E is a bool used to determine whether the part should be doing anything. This variable is remembered when I go back and forth between ships. But for some reason \u003Cem\u003ETimeActive \u003C/em\u003Eis always defaulted back to 0. I have checked over my code several times to see if I am zeroing it out anywhere but I didn\u0027t see anything. I even tried replacing the variable with the words \u003Cem\u003EOrangeJuice\u003C/em\u003E to make sure I hadn\u0027t accidentally overwritten a variable used by one of the parent classes but no change.\u003C/p\u003E\u003Cp\u003EThank you in advance to anyone who can help me figure this out : )\u003C/p\u003E\u003Cp\u003EFull Code is below:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003Eusing System.Linq;\u003Cbr\u003Eusing System.Text;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E/// \u0026lt;summary\u0026gt;\u003Cbr\u003E/// ScienceTrickle\u003Cbr\u003E/// By: CiberX15\u003Cbr\u003E/// Special Thanks to Fractal_UK whose KSPInterstellar ScienceModule I reverse engineered \u003Cbr\u003E/// to figure out how to work the code\u003Cbr\u003E/// \u0026lt;/summary\u0026gt;\u003Cbr\u003E\u003Cbr\u003Epublic class ScienceTrickle : ModuleScienceExperiment\u003Cbr\u003E{\u003Cbr\u003E\t[KSPField(isPersistant = true, guiActive = true)]\u003Cbr\u003E\tprotected bool IsEnabled;\u003Cbr\u003E\u003Cbr\u003E\t[KSPField(isPersistant = true, guiActive = false)]\u003Cbr\u003E\tprotected double TimeActive;\u003Cbr\u003E\u003Cbr\u003E\t[KSPField(isPersistant = true, guiActive = false)]\u003Cbr\u003E\tprotected double ResearchTime;\u003Cbr\u003E\u003Cbr\u003E\t[KSPField(isPersistant = true, guiActive = true)]\u003Cbr\u003E\tprotected string CurrentPaper;\u003Cbr\u003E\u003Cbr\u003E\tprotected float crew_capacity_ratio;\u003Cbr\u003E\u003Cbr\u003E\t[KSPField(isPersistant = true, guiActive = false)]\u003Cbr\u003E\tprotected double StoredScience;\u003Cbr\u003E\u003Cbr\u003E\t[KSPField(isPersistant = true, guiActive = true)]\u003Cbr\u003E\tprotected double RecordedData;\u003Cbr\u003E\u003Cbr\u003E    /// \u0026lt;summary\u0026gt;\u003Cbr\u003E    /// Called when the part is started by Unity.\u003Cbr\u003E    /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E    public override void OnStart(StartState state)\u003Cbr\u003E    {\u003Cbr\u003E\t\tbase.OnStart(state);\u003Cbr\u003E\t\texperiment.baseValue = 1; //reset experement value\u003Cbr\u003E        // Check our crew\u003Cbr\u003E\t\tcrew_capacity_ratio = ((float)part.protoModuleCrew.Count) / ((float)part.CrewCapacity);\t\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E\t//Begin Research Button\u003Cbr\u003E\t[KSPEvent(guiActive = true, guiName = \u0022Begin Research\u0022, active = true)]\u003Cbr\u003E\tpublic void BeginResearch()\u003Cbr\u003E\t{\u003Cbr\u003E\t\tif (crew_capacity_ratio == 0) { return; }\u003Cbr\u003E\u003Cbr\u003E\t\tTimeActive = vessel.missionTime; //Planetarium.GetUniversalTime();\u003Cbr\u003E\t\tResearchTime = 0;\u003Cbr\u003E\t\tStoredScience = 0;\u003Cbr\u003E\t\tRecordedData = 0;\u003Cbr\u003E\t\tCurrentPaper = \u0022\u0022;\u003Cbr\u003E\t\tIsEnabled = true;\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\t//Stop Research Button\u003Cbr\u003E\t[KSPEvent(guiActive = true, guiName = \u0022Stop Research\u0022, active = true)]\u003Cbr\u003E\tpublic void StopActivity() \u003Cbr\u003E\t{\u003Cbr\u003E\t\tIsEnabled = false;     \u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\t//Clear Research Button\u003Cbr\u003E\t[KSPEvent(guiActive = true, guiName = \u0022Clear Research\u0022, active = true)]\u003Cbr\u003E\tpublic void ClearResearch() \u003Cbr\u003E\t{\u003Cbr\u003E\t\tIsEnabled = false;\u003Cbr\u003E\t\tResearchTime = 0;\u003Cbr\u003E\t\tStoredScience = 0;\u003Cbr\u003E\t\tRecordedData = 0;\u003Cbr\u003E\t\tCurrentPaper = \u0022\u0022;\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\tnew public void DeployExperiment()\u003Cbr\u003E\t{\u003Cbr\u003E\t\texperiment.baseValue = (float)RecordedData;\u003Cbr\u003E\t\tbase.DeployExperiment();\u003Cbr\u003E\t}\u003Cbr\u003E\t/*\u003Cbr\u003E\tnew public void ReviewDataEvent()\u003Cbr\u003E\t{\u003Cbr\u003E\t\tbase.ReviewDataEvent();\u003Cbr\u003E\t\tprint(\u0022ORANGE JUICE==============================================================\u0022);\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\tnew public void ResetExperiment()\u003Cbr\u003E\t{\u003Cbr\u003E\t\tbase.ResetExperiment();\u003Cbr\u003E\t\texperiment.baseValue = 1;\u003Cbr\u003E\t\tClearResearch();\u003Cbr\u003E\t\tprint(\u0022Finished Experiment Reset =================================================\u0022);\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\tnew public void ResetExperimentExternal()\u003Cbr\u003E\t{\u003Cbr\u003E\t\tbase.ResetExperimentExternal();\u003Cbr\u003E\t\texperiment.baseValue = 1;\u003Cbr\u003E\t\tClearResearch();\u003Cbr\u003E\t\tprint(\u0022Finished Experiment Reset =================================================\u0022);\u003Cbr\u003E\t}*/\u003Cbr\u003E\u003Cbr\u003E\t//Stop Research Button\u003Cbr\u003E\t[KSPEvent(guiActive = true, guiName = \u0022Debug\u0022, active = true)]\u003Cbr\u003E\tpublic void DebugThing() \u003Cbr\u003E\t{\u003Cbr\u003E\t\tprint (\u0022BEGIN ======================================================\u0022);\u003Cbr\u003E\t\tprint (\u0022Research Time \u0022 \u002B ResearchTime);\u003Cbr\u003E\t\tprint (\u0022Mission Time\u0022 \u002B vessel.missionTime);\u003Cbr\u003E\t\tprint (\u0022Active Time\u0022 \u002B TimeActive);\u003Cbr\u003E\u003Cbr\u003E\t\tprint (\u0022ResearchTime \u0022 \u002B ResearchTime);\u003Cbr\u003E\t\tprint (\u0022CurrentPaper \u0022 \u002B CurrentPaper);\u003Cbr\u003E\t\tprint (\u0022StoredScience \u0022 \u002B StoredScience);\u003Cbr\u003E\t\tprint (\u0022RecordedData \u0022 \u002B RecordedData);\u003Cbr\u003E\u003Cbr\u003E\t\tprint (\u0022Experemrnt BaseValue\u0022 \u002B base.experiment.baseValue);\u003Cbr\u003E\t\tprint (\u0022Experemrnt ScienceCap\u0022 \u002B base.experiment.scienceCap);\u003Cbr\u003E\t\tprint (\u0022Experemrnt dataScale\u0022 \u002B base.experiment.dataScale);\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\tpublic void CheckFindings()\u003Cbr\u003E\t{\u003Cbr\u003E\t\t//crew mod\u003Cbr\u003E\t\tfloat CrewMod = 0;\u003Cbr\u003E\u003Cbr\u003E\t\t//calculate crew contributions\u003Cbr\u003E\t\tforeach (ProtoCrewMember proto_crew_member in part.protoModuleCrew)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tCrewMod \u002B= 1 - proto_crew_member.stupidity;\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t//add collected science\u003Cbr\u003E\t\tStoredScience \u002B= CrewMod * 4;\u003Cbr\u003E\u003Cbr\u003E\t\tRecordedData = Mathf.Round((float)StoredScience);\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\t//Always Update\u003Cbr\u003E\tpublic override void OnUpdate() \u003Cbr\u003E\t{\u003Cbr\u003E\t\tbase.OnUpdate();\u003Cbr\u003E\u003Cbr\u003E\t\t//if the modual is suposed to be making science!\u003Cbr\u003E\t\tif(IsEnabled)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tfloat ResourceDraw = part.protoModuleCrew.Count;\u003Cbr\u003E\t\t\tif(ResourceDraw \u0026gt; 0 \u0026amp;\u0026amp; part.RequestResource(\u0022ElectricCharge\u0022, ResourceDraw * 0.25f) \u0026gt;= ResourceDraw * 0.25f)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tResearchTime = vessel.missionTime - TimeActive;\u003Cbr\u003E\t\t\t\tfloat Percent = (float)(ResearchTime / 86400) * 100;\u003Cbr\u003E\t\t\t\tCurrentPaper = 0.01 * Math.Round(Percent * 100) \u002B \u0022%\u0022;\u003Cbr\u003E\u003Cbr\u003E\t\t\t\tif(ResearchTime \u0026gt;= 86400)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tint PapersCompleated = (int)(ResearchTime / 86400);\u003Cbr\u003E\t\t\t\t\tprint (\u0022BEGIN ======================================================\u0022);\u003Cbr\u003E\t\t\t\t\tprint (\u0022Research Time \u0022 \u002B ResearchTime);\u003Cbr\u003E\t\t\t\t\tprint (\u0022Mission Time\u0022 \u002B vessel.missionTime);\u003Cbr\u003E\t\t\t\t\tprint (\u0022Time Active \u0022 \u002B TimeActive);\u003Cbr\u003E\t\t\t\t\tprint (\u0022Papers Compleated = \u0022 \u002B PapersCompleated);\u003Cbr\u003E\t\t\t\t\tfor(int i = 0; i \u0026lt; PapersCompleated;)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tprint (i);\u003Cbr\u003E\t\t\t\t\t\tif(part.RequestResource(\u0022Snacks\u0022, ResourceDraw) \u0026gt;= ResourceDraw)\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t\tCheckFindings();\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t\telse\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t\t//shutdown if out of snacks\u003Cbr\u003E\t\t\t\t\t\t\tIsEnabled = false;\u003Cbr\u003E\t\t\t\t\t\t\tResearchTime = 0;\u003Cbr\u003E\t\t\t\t\t\t\tCurrentPaper = \u0022\u0022;\u003Cbr\u003E\t\t\t\t\t\t\tprint (\u0022Not enough snacks, shutting down\u0022);\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t\ti\u002B\u002B;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\tResearchTime = 0;\u003Cbr\u003E\t\t\t\t\tTimeActive = vessel.missionTime; //(float)Planetarium.GetUniversalTime();\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\t//shutdown if out of power\u003Cbr\u003E\t\t\t\tIsEnabled = false;\u003Cbr\u003E\t\t\t\tprint (\u0022Not enough power, shutting down\u0022);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t//In Game Update\u003Cbr\u003E\tpublic override void OnFixedUpdate()\u003Cbr\u003E\t{\u003Cbr\u003E\t\tbase.OnUpdate();\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Pigbear","CreatedById":68791,"CreatedDateTime":"2014-01-08T07:18:34Z","Content":"\n\u003Cp\u003EI don\u0027t think this is the right section and also the title isn\u0027t very informative.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/forums/30-Plugin-Development-Help-and-Support\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/forums/30-Plugin-Development-Help-and-Support\u003C/a\u003E go here.\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-01-08T07:46:22Z","Content":"\n\u003Cp\u003EActually, this is the right section, or rather the Plugin Development subforum is.\u003C/p\u003E\u003Cp\u003EWhat you do want to in BeginResearch() set timeActive = Planetarium.GetUniversalTime(); then whenever you want to find out how long you\u0027ve been doing research, check Planetarium.GetUnviersalTime() - timeActive\u003C/p\u003E\u003Cp\u003EI wouldn\u0027t use MET for that.\u003C/p\u003E\u003Cp\u003EAnd *don\u0027t change it again*. Keep it like that until the research ends, or you do the next BeginResearch()\u003C/p\u003E\u003Cp\u003EAlso try giving timeActive a default value (like 0).\u003C/p\u003E\n"},{"CreatedByName":"DiEvAl","CreatedById":66247,"CreatedDateTime":"2014-01-08T12:01:47Z","Content":"\n\u003Cp\u003ETry this and see what happens:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\t[KSPField(isPersistant = true, guiActive = false)]\u003Cbr\u003E\tprotected double _TimeActive;\u003Cbr\u003E\tprotected double TimeActive {\u003Cbr\u003E\t\tget {\u003Cbr\u003E\t\t\treturn _TimeActive;\u003Cbr\u003E\t\t}\u003Cbr\u003E\t\tset {\u003Cbr\u003E\t\t\tprint(string.Format(\u0022TimeActive was changed from {0} to {1}\u0022, _TimeActive, value));\u003Cbr\u003E\t\t\t_TimeActive = value;\u003Cbr\u003E\t\t}\u003Cbr\u003E\t}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EBTW, I think you can do Math.Round(Percent, 2) instead of 0.01 * Math.Round(Percent * 100)\u003C/p\u003E\n"},{"CreatedByName":"CiberX15","CreatedById":68461,"CreatedDateTime":"2014-01-08T16:22:41Z","Content":"\n\u003Cp\u003EDiEvAl, I just tried that but it didn\u0027t work : P\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EActually, this is the right section, or rather the Plugin Development subforum is.\u003Cp\u003EWhat you do want to in BeginResearch() set timeActive = Planetarium.GetUniversalTime(); then whenever you want to find out how long you\u0027ve been doing research, check Planetarium.GetUnviersalTime() - timeActive\u003C/p\u003E\u003Cp\u003EI wouldn\u0027t use MET for that.\u003C/p\u003E\u003Cp\u003EAnd *don\u0027t change it again*. Keep it like that until the research ends, or you do the next BeginResearch()\u003C/p\u003E\u003Cp\u003EAlso try giving timeActive a default value (like 0).\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EActually I was using Planetarium.GetUniversalTime() with the exact same results. The problem is that TimeActive keeps getting wiped.\u003C/p\u003E\u003Cp\u003EWould giving it a default value make it remember its current value?\u003C/p\u003E\u003Cp\u003EAlso if this is in the wrong spot please feel free to move it to the correct spot 8 O\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-08T17:02:09Z\u0022 title=\u002201/08/2014 05:02  PM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 8, 2014\u003C/time\u003E by CiberX15\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"CiberX15","CreatedById":68461,"CreatedDateTime":"2014-01-08T17:09:15Z","Content":"\n\u003Cp\u003EOk, Update, I just found out that it IS NOT keeping any of the variables I set to be persistent except for IsEnabled. RAWRG!!! I think it is mocking me now 8 \u0026lt;\u003C/p\u003E\u003Cp\u003EEdit: You know what? I don\u0027t think doubles can be persistent. There are two persistent variables that are being stored, Percent, which is a string, and IsEnabled which is a bool. I am going to try to convert the doubles to floats and see what happens.\u003C/p\u003E\u003Cp\u003EMore Edit: That was it, apparently doubles CAN NOT be persistent. However floats work fine. So yeah, anyone having issues with their persistent double variables being wiped might want to try floats if they can.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-08T17:18:51Z\u0022 title=\u002201/08/2014 05:18  PM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 8, 2014\u003C/time\u003E by CiberX15\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-01-08T17:29:49Z","Content":"\n\u003Cp\u003EOops, yeah, totally forgot about that. You\u0027re absolutely right, there\u0027s no support for persistent doubles. Or rather, there is, you just have to deal with them manually (override OnSave to spit it out, and OnLoad to parse it).\u003C/p\u003E\n"}]}