{"TopicId":102537,"ForumId":36,"TopicTitle":"[WIP 0.90] PartOnRails - my 1st project in an attempt to learn C# and KSP modding","CreatedByName":"Deadpan110","CreatedById":110778,"CreatedDateTime":"2015-03-23T16:23:19Z","PageNum":1,"Articles":[{"CreatedByName":"Deadpan110","CreatedById":110778,"CreatedDateTime":"2015-03-23T16:23:19Z","Content":"**Please be kind to this 42 year old dog wanting to learn new tricks!**\n\n **Help, encouragement and kind words are appreciated.**\n\n**So hello everyone!**\n\nWith a background in Linux, Perl, PHP, LUA scripting, server and web design; I have spent the last few years thinking about learning to code mods for this game that occupies a nice chunk of my daily life.\n\nInspired by the modders in the community, the likes of RoverDude, TriggerAu, TaranisElsu, DMagic and many many more who continually provide their awesome skills to all KSP fans - I have finally bitten the bullet and have decided to stop thinking about it and learn.\n\n**Concept**\n\nThis mod aims to provide an easy way to add background processing to selected individual parts that use their own PartModule while making PartOnRails completely optional for the player.\n\nModders wanting to make use of the feature do not need to hard code any dependencies (simply do not install the PartOnRails.dll in your game and it wont break any existing mod that makes use of it).\n\n**Caveats**\n\n- This mod is potentially a bad idea as there is no multi-threading (although it does make use of coroutine type yields) and anything in the background could potentially slow your game.\n- There is already a mod called [BackgroundProcessing](https://forum.kerbalspaceprogram.com/threads/98453) which handles things like ElectricCharge from solar panels and also allows modders to implement methods into their PartModule, PartOnRails only exposes the ProtoPartSnapshot to called methods when the part/vessel is not loaded (it is up to the modder on what they want to do with it).\n\n**Reason**\n\nAs stated above, I am wanting to learn (reading docs and howto\u0027s is all well and good, but getting feedback and advice from others is far better) and this seems like a fun project.\n\nI do not mind at all if PartOnRails never makes it past Add-on Development but it would be great if I get hints and tips along the way (not just \u0022You are doing it wrong\u0022 - but instead \u0022This way is better\u0022 followed by the all important \u0022Because \u003Cinsert reason=\u0022\u0022 and=\u0022\u0022 links=\u0022\u0022 to=\u0022\u0022 info=\u0022\u0022 here=\u0022\u0022\u003E\u0022 \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/insert\u003E\n\n**Example Usage**\n\n\u003E \n\u003E \n\u003E \n\u003E [FONT=Monospace] [COLOR=#009695]namespace[/COLOR][COLOR=#333333] MyNamespace[/COLOR]  \n\u003E [COLOR=#333333]{[/COLOR]  \n\u003E [/FONT][FONT=Monospace][COLOR=#009695][FONT=Monospace] [COLOR=#888888][I]//[/I][/COLOR][COLOR=#888888][I]Your [/I][/COLOR][COLOR=#888888][I]KSP[/I][/COLOR][COLOR=#888888][I] PartModule[/I][/COLOR]  \n\u003E  [COLOR=#009695]public [/COLOR][COLOR=#009695]class [/COLOR][COLOR=#3364a4]MyPartModule [/COLOR][COLOR=#333333]: [/COLOR][COLOR=#3364a4]PartModule[/COLOR]  \n\u003E  [COLOR=#333333]{  \n\u003E   \n\u003E [FONT=Monospace] [COLOR=#888888][I]// Enable and show [/I][/COLOR][COLOR=#888888][I]where[/I][/COLOR][COLOR=#888888][I] PartOnRails [/I][/COLOR][COLOR=#888888][I]should [/I][/COLOR][COLOR=#888888][I]look [/I][/COLOR][COLOR=#888888][I]for [/I][/COLOR][COLOR=#888888][I]your [/I][/COLOR][COLOR=#888888][I]methods[/I][/COLOR]  \n\u003E  [COLOR=#333333][[/COLOR][COLOR=#333333]KSPField[/COLOR][COLOR=#333333]([/COLOR][COLOR=#333333]isPersistant [/COLOR][COLOR=#333333]= [/COLOR][COLOR=#009695]true[/COLOR][COLOR=#333333],[/COLOR][COLOR=#333333] guiActive [/COLOR][COLOR=#333333]= [/COLOR][COLOR=#009695]false[/COLOR][COLOR=#333333])][/COLOR]  \n\u003E  [COLOR=#009695]public[/COLOR][COLOR=#009695] bool [/COLOR][COLOR=#333333]PartOnRails [/COLOR][COLOR=#333333]= true[/COLOR][COLOR=#333333];[/COLOR][/FONT]  \n\u003E [/COLOR][/FONT][/COLOR]  \n\u003E  [COLOR=#888888][I]//[/I][/COLOR][COLOR=#888888][I] Optional[/I][/COLOR]  \n\u003E  [COLOR=#888888][I]//[/I][/COLOR][COLOR=#888888][I] Called[/I][/COLOR][COLOR=#888888][I] once [/I][/COLOR][COLOR=#888888][I]for [/I][/COLOR][COLOR=#888888][I]each [/I][/COLOR][COLOR=#888888][I]PartOnRails [/I][/COLOR][COLOR=#888888][I]enabled [/I][/COLOR][COLOR=#888888][I]part [/I][/COLOR][COLOR=#888888][I]on [/I][/COLOR][COLOR=#888888][I]EveryScene[/I][/COLOR]  \n\u003E  [COLOR=#888888][I]//[/I][/COLOR][COLOR=#888888][I] where[/I][/COLOR][COLOR=#888888][I] time [/I][/COLOR][COLOR=#888888][I]passes[/I][/COLOR][COLOR=#888888][I]([/I][/COLOR][COLOR=#888888][I]KSC[/I][/COLOR][COLOR=#888888][I],[/I][/COLOR][COLOR=#888888][I] Tracking [/I][/COLOR][COLOR=#888888][I]and [/I][/COLOR][COLOR=#888888][I]Flight[/I][/COLOR][COLOR=#888888][I]) [/I][/COLOR][COLOR=#888888][I]if [/I][/COLOR][COLOR=#888888][I]not[/I][/COLOR][COLOR=#888888][I] loaded[/I][/COLOR]  \n\u003E  [COLOR=#009695]public[/COLOR][COLOR=#009695] static [/COLOR][COLOR=#009695]void [/COLOR][COLOR=#333333]PartOnRailsStart[/COLOR][COLOR=#333333]([/COLOR][COLOR=#3364a4]ProtoPartSnapshot [/COLOR][COLOR=#333333]part[/COLOR][COLOR=#333333])[/COLOR]  \n\u003E  [COLOR=#333333]{[/COLOR]  \n\u003E  [COLOR=#3364a4]Debug[/COLOR][COLOR=#333333].[/COLOR][COLOR=#333333]Log[/COLOR][COLOR=#333333]([/COLOR][COLOR=#f57d00]\u0022[/COLOR][COLOR=#f57d00]Part[/COLOR][COLOR=#f57d00]id[/COLOR][COLOR=#f57d00]:[/COLOR][COLOR=#f57d00] \u0022 [/COLOR][COLOR=#333333]\u002B [/COLOR][COLOR=#333333]part[/COLOR][COLOR=#333333].[/COLOR][COLOR=#333333]flightID[/COLOR][COLOR=#333333])[/COLOR][COLOR=#333333];[/COLOR]  \n\u003E  [COLOR=#333333]}[/COLOR]  \n\u003E  [COLOR=#888888][I]//[/I][/COLOR][COLOR=#888888][I] Optional[/I][/COLOR]  \n\u003E  [COLOR=#888888][I]// [/I][/COLOR][COLOR=#888888][I]Called [/I][/COLOR][COLOR=#888888][I]once [/I][/COLOR][COLOR=#888888][I]every [/I][/COLOR][COLOR=#888888][I]frame [/I][/COLOR][COLOR=#888888][I]for [/I][/COLOR][COLOR=#888888][I]each [/I][/COLOR][COLOR=#888888][I]PartOnRails[/I][/COLOR][COLOR=#888888][I] enabled [/I][/COLOR][COLOR=#888888][I]part [/I][/COLOR][COLOR=#888888][I]on [/I][/COLOR][COLOR=#888888][I]EveryScene[/I][/COLOR]  \n\u003E  [COLOR=#888888][I]// [/I][/COLOR][COLOR=#888888][I]where[/I][/COLOR][COLOR=#888888][I] time [/I][/COLOR][COLOR=#888888][I]passes[/I][/COLOR][COLOR=#888888][I] ([/I][/COLOR][COLOR=#888888][I]KSC[/I][/COLOR][COLOR=#888888][I],[/I][/COLOR][COLOR=#888888][I] Tracking[/I][/COLOR][COLOR=#888888][I] and [/I][/COLOR][COLOR=#888888][I]Flight[/I][/COLOR][COLOR=#888888][I]) [/I][/COLOR][COLOR=#888888][I]if [/I][/COLOR][COLOR=#888888][I]not[/I][/COLOR][COLOR=#888888][I] loaded[/I][/COLOR]  \n\u003E  [COLOR=#009695]public [/COLOR][COLOR=#009695]static [/COLOR][COLOR=#009695]void [/COLOR][COLOR=#333333][FONT=Monospace][COLOR=#333333]PartOnRails[/COLOR][/FONT]Update[/COLOR][COLOR=#333333]([/COLOR][COLOR=#3364a4]ProtoPartSnapshot [/COLOR][COLOR=#333333]part[/COLOR][COLOR=#333333])[/COLOR]  \n\u003E  [COLOR=#333333]{[/COLOR]  \n\u003E  [COLOR=#3364a4]Debug[/COLOR][COLOR=#333333].[/COLOR][COLOR=#333333]Log[/COLOR][COLOR=#333333]([/COLOR][COLOR=#f57d00]\u0022[/COLOR][COLOR=#f57d00]Part[/COLOR][COLOR=#f57d00]id[/COLOR][COLOR=#f57d00]:[/COLOR][COLOR=#f57d00] \u0022 [/COLOR][COLOR=#333333]\u002B [/COLOR][COLOR=#333333]part[/COLOR][COLOR=#333333].[/COLOR][COLOR=#333333]flightID[/COLOR][COLOR=#333333])[/COLOR][COLOR=#333333];[/COLOR]  \n\u003E  [COLOR=#333333]}[/COLOR]  \n\u003E  [COLOR=#888888][I]//[/I][/COLOR][COLOR=#888888][I] Optional[/I][/COLOR]  \n\u003E  [COLOR=#888888][I]// [/I][/COLOR][COLOR=#888888][I]Called [/I][/COLOR][COLOR=#888888][I]at [/I][/COLOR][COLOR=#888888][I]a [/I][/COLOR][COLOR=#888888][I]fixed[/I][/COLOR][COLOR=#888888][I] time [/I][/COLOR][COLOR=#888888][I]interval [/I][/COLOR][COLOR=#888888][I]determined[/I][/COLOR][COLOR=#888888][I] by [/I][/COLOR][COLOR=#888888][I]the [/I][/COLOR][COLOR=#888888][I]physics [/I][/COLOR][COLOR=#888888][I]time[/I][/COLOR][COLOR=#888888][I] step[/I][/COLOR]  \n\u003E  [COLOR=#888888][I]// [/I][/COLOR][COLOR=#888888][I]for[/I][/COLOR][COLOR=#888888][I] each [/I][/COLOR][COLOR=#888888][I]PartOnRails[/I][/COLOR][COLOR=#888888][I] enabled[/I][/COLOR][COLOR=#888888][I] part [/I][/COLOR][COLOR=#888888][I]on [/I][/COLOR][COLOR=#888888][I]EveryScene[/I][/COLOR]  \n\u003E  [COLOR=#888888][I]//[/I][/COLOR][COLOR=#888888][I] where [/I][/COLOR][COLOR=#888888][I]time [/I][/COLOR][COLOR=#888888][I]passes [/I][/COLOR][COLOR=#888888][I]([/I][/COLOR][COLOR=#888888][I]KSC[/I][/COLOR][COLOR=#888888][I], [/I][/COLOR][COLOR=#888888][I]Tracking [/I][/COLOR][COLOR=#888888][I]and [/I][/COLOR][COLOR=#888888][I]Flight[/I][/COLOR][COLOR=#888888][I]) [/I][/COLOR][COLOR=#888888][I]if [/I][/COLOR][COLOR=#888888][I]not[/I][/COLOR][COLOR=#888888][I] loaded[/I][/COLOR]  \n\u003E  [COLOR=#009695]public [/COLOR][COLOR=#009695]static [/COLOR][COLOR=#009695]void [/COLOR][COLOR=#333333][FONT=Monospace][COLOR=#333333]PartOnRails[/COLOR][/FONT]FixedUpdate[/COLOR][COLOR=#333333]([/COLOR][COLOR=#3364a4]ProtoPartSnapshot [/COLOR][COLOR=#333333]part[/COLOR][COLOR=#333333])[/COLOR]  \n\u003E  [COLOR=#333333]{[/COLOR]  \n\u003E  [COLOR=#3364a4]Debug[/COLOR][COLOR=#333333].[/COLOR][COLOR=#333333]Log[/COLOR][COLOR=#333333]([/COLOR][COLOR=#f57d00]\u0022[/COLOR][COLOR=#f57d00]Part[/COLOR][COLOR=#f57d00]id[/COLOR][COLOR=#f57d00]:[/COLOR][COLOR=#f57d00] \u0022 [/COLOR][COLOR=#333333]\u002B [/COLOR][COLOR=#333333]part[/COLOR][COLOR=#333333].[/COLOR][COLOR=#333333]flightID[/COLOR][COLOR=#333333])[/COLOR][COLOR=#333333];[/COLOR]  \n\u003E  [COLOR=#333333]}[/COLOR]  \n\u003E  [COLOR=#888888][I]//[/I][/COLOR][COLOR=#888888][I] Optional[/I][/COLOR]  \n\u003E  [COLOR=#888888][I]// [/I][/COLOR][COLOR=#888888][I]Called [/I][/COLOR][COLOR=#888888][I]when[/I][/COLOR][COLOR=#888888][I] the [/I][/COLOR][COLOR=#888888][I]game [/I][/COLOR][COLOR=#888888][I]is [/I][/COLOR][COLOR=#888888][I]leaving [/I][/COLOR][COLOR=#888888][I]the [/I][/COLOR][COLOR=#888888][I]scene [/I][/COLOR][COLOR=#888888][I]for[/I][/COLOR][COLOR=#888888][I] each [/I][/COLOR][COLOR=#888888][I]PartOnRails[/I][/COLOR][COLOR=#888888][I] enabled[/I][/COLOR]  \n\u003E  [COLOR=#888888][I]// [/I][/COLOR][COLOR=#888888][I]part [/I][/COLOR][COLOR=#888888][I]on [/I][/COLOR][COLOR=#888888][I]EveryScene[/I][/COLOR][COLOR=#888888][I] where[/I][/COLOR][COLOR=#888888][I] time[/I][/COLOR][COLOR=#888888][I] passes[/I][/COLOR][COLOR=#888888][I]([/I][/COLOR][COLOR=#888888][I]KSC[/I][/COLOR][COLOR=#888888][I],[/I][/COLOR][COLOR=#888888][I] Tracking [/I][/COLOR][COLOR=#888888][I]and[/I][/COLOR][COLOR=#888888][I] Flight[/I][/COLOR][COLOR=#888888][I]) [/I][/COLOR][COLOR=#888888][I]if [/I][/COLOR][COLOR=#888888][I]not[/I][/COLOR][COLOR=#888888][I] loaded[/I][/COLOR]  \n\u003E  [COLOR=#009695]public [/COLOR][COLOR=#009695]static [/COLOR][COLOR=#009695]void [/COLOR][COLOR=#333333][FONT=Monospace][COLOR=#333333]PartOnRails[/COLOR][/FONT]OnDestroy[/COLOR][COLOR=#333333]([/COLOR][COLOR=#3364a4]ProtoPartSnapshot [/COLOR][COLOR=#333333]part[/COLOR][COLOR=#333333])[/COLOR]  \n\u003E  [COLOR=#333333]{[/COLOR]  \n\u003E  [COLOR=#3364a4]Debug[/COLOR][COLOR=#333333].[/COLOR][COLOR=#333333]Log[/COLOR][COLOR=#333333]([/COLOR][COLOR=#f57d00]\u0022[/COLOR][COLOR=#f57d00]Part[/COLOR][COLOR=#f57d00]id[/COLOR][COLOR=#f57d00]: [/COLOR][COLOR=#f57d00]\u0022 [/COLOR][COLOR=#333333]\u002B [/COLOR][COLOR=#333333]part[/COLOR][COLOR=#333333].[/COLOR][COLOR=#333333]flightID[/COLOR][COLOR=#333333])[/COLOR][COLOR=#333333];[/COLOR]  \n\u003E  [COLOR=#333333]}[/COLOR]  \n\u003E   \n\u003E  [COLOR=#888888][I]// [/I][/COLOR][COLOR=#888888][I]Rest[/I][/COLOR][COLOR=#888888][I] of [/I][/COLOR][COLOR=#888888][I]your [/I][/COLOR][COLOR=#888888][I]awesome [/I][/COLOR][COLOR=#888888][I]mod[/I][/COLOR][COLOR=#888888][I] here[/I][/COLOR]  \n\u003E   \n\u003E  [COLOR=#333333]}[/COLOR]  \n\u003E [COLOR=#333333]}[/COLOR][/FONT]\n\u003E \n\u003E \n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\n**Links**\n\n[Source code on GitHub](https://github.com/Deadpan110/PartOnRails)\n\n[GNU General Public License version 3](https://github.com/Deadpan110/PartOnRails/blob/master/LICENSE)\n\n**To Follow**\n\nThis code is under development - core features, optimisations, methods, downloads and example mods are missing but are planned.\n\nUse at your own risk!\n\n I welcome Pull Requests etc.\n\n**Edited \u003Ctime datetime=\u00222015-03-27T02:36:20Z\u0022 title=\u002203/27/2015 02:36  AM\u0022 data-short=\u00229 yr\u0022\u003EMarch 27, 2015\u003C/time\u003E by Deadpan110**\n  \nAdded source code and licence links"},{"CreatedByName":"Scorpians","CreatedById":66655,"CreatedDateTime":"2015-03-23T17:39:17Z","Content":"This is a good idea, the On rails can cause issues with some mods. I will keep my eye on this thread for updates."},{"CreatedByName":"Spacepetscompany","CreatedById":119734,"CreatedDateTime":"2015-03-24T01:40:02Z","Content":"Hmmmm...... Looks promising. I\u0027ll take a look at it a bit later perhaps."},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2015-03-25T03:13:47Z","Content":"Sounds awesome!\n\nYou might want to look into (or raid ![:P](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif) ) asmi\u0027s RealTimeModules framework, it even batched out the processing to other threads. [https://bitbucket.org/asmi/ksp/src/ffd4ba49bab1133ca7229a1864e3d679d5d9fb02/KerbalPlugins/RealTimeModules/?at=default](https://bitbucket.org/asmi/ksp/src/ffd4ba49bab1133ca7229a1864e3d679d5d9fb02/KerbalPlugins/RealTimeModules/?at=default)"},{"CreatedByName":"Starwaster","CreatedById":71262,"CreatedDateTime":"2015-03-26T03:43:03Z","Content":"Please make sure not to batch out to every possible core; leave 1-2 available for KSP / Unity.\n\nKSP struggles enough as it is without throwing unnecessary stumbling blocks in its path ![;)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif)"},{"CreatedByName":"Deadpan110","CreatedById":110778,"CreatedDateTime":"2015-03-26T14:47:33Z","Content":"Thanks all,\n\nI have been struggling a little with possibly how C# and KSP works - its most likely my unfamiliarity with it all (although I do read that C# as well as KSP has a bit of quirky behaviour - lol).\n\nI feel I\u0027m making progress however and hope to have my source code available for viewing soon...\n\n(I though I could have posted it shortly after creating this thread but there were a lot of embarrassing mistakes - too many even for a newbie like myself).\n\n@NathanKell - wow ty, I hadn\u0027t seen that project before, lots of stuffs in it I can have a look at (licence seems to not permit raiding, but yeah - definitely some nice things to learn from).\n\n@Starwaster - yeps, I would like to make this threaded (appeals to my love of servers and the home made Beowulf cluster I once owned - I miss that beast) but for now it only makes use of yield (I am not entirely sure how effective yield is within the KSP game loop but some type of yield method will also be beneficial if it ran in its own thread).\n\nBefore getting into learning how to use a separate thread safely, I would like to somehow be able to check if the time is close to running over when calling the methods for all background enabled parts and do a more controlled yield - continuing where it left off on the next frame (this means that part mods using PartOnRails should make use of delta time calculations as there is no guarantee their part code will run every frame and could also mean a heavily burdened game will have less parts updated per loop).\n\nIma enjoying figuring it all out so far so I hope the above makes sense ![:confused:](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif)"},{"CreatedByName":"Deadpan110","CreatedById":110778,"CreatedDateTime":"2015-03-27T02:41:15Z","Content":"OK, I was kinda shy about my first ever stab at coding a mod... tidied up and committed the source code to GitHub.\n\nThe links are in the OP.\n\nI aim to commit changes often now its viewable - and perhaps make an example part and downloads over the weekend ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)"}]}