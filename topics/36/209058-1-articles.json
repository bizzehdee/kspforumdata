{"TopicId":209058,"ForumId":36,"TopicTitle":"[WIP] RackMount - Inventory based Module Management - v0.3.","CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-07-20T22:14:43Z","PageNum":1,"Articles":[{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-07-20T22:14:43Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003ERackMount\u00A0\u003C/strong\u003Eis a mod that allows you to dynamically add and remove part modules, resources, and even crew seats by extending the stock inventory system.\u00A0 \u00A0The current version includes command, \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003E\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E\u003C/abbr\u003E, kerbnet access, probe control points, as well as reactions wheels, science experiments and scanners.\u00A0 \u00A0It uses two possible configurations, RackMountBasic and RackMountAdvanced, set from the GameData/RackMount/settings.cfg file (instructions in file).\u00A0 RackMountBasic is more or less feature complete, it should work with most stock and stock-ish games and in general is meant to play nice with other mods.\u00A0 RackMountAdvanced is much more ambitious, but also much more brittle and still incomplete.\u00A0 \u00A0 It needs much more testing and using it will absolutely break existing saves, so be sure not to open them if you want to try using this.\u00A0 Feel free to play with it, but expect problems with untested mods.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/RackMount/releases/latest\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/pehvbot/RackMount/releases/latest\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ERequires\u003C/strong\u003E: ModuleManager,\u003Cstrong\u003EHarmony\u003C/strong\u003E\u003Cbr\u003E\n\u003Cb\u003ERecommends:\u003C/b\u003E\u00A0KSPCommunityFixes\u003Cbr\u003E\n\u003Cstrong\u003ECompatible:\u003C/strong\u003E\u00A0Restock,, as well as many parts mods.\u003Cbr\u003E\n\u003Cstrong\u003ETested With:\u003C/strong\u003E\u00A0Kerbalism, B9PartSwitcher, Tweakscale Rescaled.\u00A0 They work, but with some limitations and a good chance specific untested configs will break RM.\u003Cbr\u003E\n\u003Cstrong\u003EConflicts\u003C/strong\u003E \u003Cstrong\u003Ewith\u003C/strong\u003E: Tweakscale\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cb\u003EHow does it work?\u003C/b\u003E\u00A0 RackMount extends the stock inventory system.\u00A0 \u00A0The\u00A0 mod looks at parts stored in the inventory.\u00A0 If a part has the ModuleRackMountPart module it will create a \u0027Rackmount\u0027 button for the part.\u00A0 When a part is mounted, any MODULES or RESOURCES in that part with \u0027rackMountable = true\u0027 will be added to the host part.\u00A0 Dynamically adding and removing modules is a big hairy mess.\u00A0 Using the stock inventory system solves a number of the problems with doing this, including:\n\u003C/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\nKeeping track of cost, mass, and potential volume issues of adding modules.\n\u003C/li\u003E\n\u003Cli\u003E\nRetaining \u0027state\u0027 information such as whether experiments have been run,\u00A0 settings for reaction wheels, etc.\n\u003C/li\u003E\n\u003Cli\u003E\nBecause it uses actual parts it\u0027s accessible to ModuleManager patches for integration with other mods.\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EWhat is the current state of the mod?\u00A0\u003C/strong\u003E v0.3.1 is a major rewrite of the base code, with a bunch of bug fixes, mod support, and improvements to the UI.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cb\u003EWhat\u0027s new?\u003C/b\u003E\u00A0 \u003Cstrong\u003EIt now requires the Harmony mod\u003C/strong\u003E to work and changes how you add third party \u003Cabbr title=\u0022Module Manager (mod)\u0022\u003E\u003Cabbr title=\u0022Module Manager (mod)\u0022\u003EMM\u003C/abbr\u003E\u003C/abbr\u003E configs (see below).\u00A0 It includes a new ModuleCommandProbe part you can add to crewed parts which will give you ground control of parts if the crew are not present.\u00A0 You can now add extra seats in capsules that are large enough to store the new Mk1 Crew Seat part.\u00A0 Just put it in the inventory and rackmount it!\u00A0 It does not adjust the IVA so you will not see your extra kerbals in the crew windows or internal view but they are there somewhere, likely inside a storage closet or behind some of the stowed gear.\n\u003C/p\u003E\n\u003Cp\u003E\nIn addition it now has two \u0027profiles\u0027.\u00A0 The default RackMountBasic profile allows you to simply add modules to existing parts.\u00A0 The highly experimental RackMountAdvanced profile strips out virtually everything (modules, resources, crew) from a part and allows you to build a custom load out for each part.\u00A0 \u00A0You can set these profiles in the GameData/RackMount/settings.cfg file.\u00A0 Notes for each below:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cb\u003ERackMountBasicProfile\u003C/b\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nThis is the default profile and should work relatively well with stock and stock-alike games.\u00A0 It modifies existing command parts by either adding or slightly expanding their inventories.\u00A0 It includes a number of specialized parts.\u00A0 Parts vary in size and weight depending on their era and capabilities.\n\u003C/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\nTelemetry and Launch Control Units (Mk I, Mk II, and Mk III).\u00A0 These will enable probe control on manned parts and because of some issues with the stock ModuleCommand module, it uses a custom ModuleCommandProbe module instead\n\u003C/li\u003E\n\u003Cli\u003E\nMk I Crew Seat.\u00A0 This can be added to parts that are large enough to create a \u0027jump seat\u0027 to add an extra Kerbal or two for that part\n\u003C/li\u003E\n\u003Cli\u003E\nKerbNet Access (Mk I, Mk II, Mk II BIOME,\u00A0 Mk III, Mk III GROUND, Mk IV, and Mk IV FLIGHT) allow you to add KerbNet access to manned parts\n\u003C/li\u003E\n\u003Cli\u003E\nStability Assist (Mk I Level 0, Mk II Level 1, Mk III Level 2, and Mk IV Level 3) allow. you to add \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003E\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E\u003C/abbr\u003E to manned parts.\n\u003C/li\u003E\n\u003Cli\u003E\nProbe Operator Navigation Guide (Mk I and Mk II) allow you to place probe control points to parts without them.\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cp\u003E\nIt also allows you to add some resources and resource converters to command parts, including mono propellent, liquid fuel and oxidizer,\u00A0 electric charge,\u00A0 and fuel cells.\u00A0 Non-stock resources will be tested and added over time.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ERackMountAdvanced Profile [Experimental!]\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsSpoiler\u0022 data-ipsspoiler=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsSpoiler_header\u0022\u003E\n\u003Cspan\u003ESpoiler\u003C/span\u003E\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsSpoiler_contents\u0022\u003E\n\u003Cp\u003E\nThe advanced profile is incomplete and highly experimental.\u00A0 It removes virtually all components from a part (modules, resources, crew seats) and adjusts the mass and inventory space based on the size of the model.\u00A0 It effectively hollows out command parts, allowing you to fill them with modules and resources as needed.\u00A0 It also adds several new parts:\n\u003C/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\nCrew Controls (Mk I, Mk II, and Mk III) to add ModuleCommand to parts (you will need to add seats since these are for manned parts only)\n\u003C/li\u003E\n\u003Cli\u003E\nAirlock (Mk I).\u00A0 You cannot exit parts above 20,000 without installing an airlock.\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cp\u003E\nIn order for this config to work it needs to dynamically create a part based on the original \u0027empty\u0027 part.\u00A0 This is still very experimental since it in effect adds new parts to the game as you go along.\u00A0 For example if you select a Mk1 Lander Can in the editor, add a seat, crew controls, etc and launch the vessel, it creates a part called something like\u00A0landerCabinSmall-f71cab36-fa81-4583-923e-739fd9eaf61b, a second part might be called\u00A0 landerCabinSmall-a3a445f8-53ca-4d5a-a334-1428f27fe4b3.\u00A0 As far as KSP is concerned these are completely different parts with completely different configurations (e.g. it\u0027s AvailablePart).\n\u003C/p\u003E\n\u003Cp\u003E\nUsing the RackMountAdvanced profile will absolutely break an existing save game, so use it with care and don\u0027t expect it to work well in \u0027real\u0027 game play.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\n\u003Cb\u003ECan I make my own \u003Cabbr title=\u0022Module Manager (mod)\u0022\u003E\u003Cabbr title=\u0022Module Manager (mod)\u0022\u003EMM\u003C/abbr\u003E\u003C/abbr\u003E patches?\u003C/b\u003E\u00A0 Yes, but not every MODULE works correctly and you will need to experiment.\u00A0 A rackmountable part cannot have an inventory of its own (no nested inventories) and must be an inventory item.\u00A0 To create a rackmountable part you need to apply a patch similar to this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\u003Cspan class=\u0022pln\u0022\u003E@PART[-part-name-here-]:FOR[RackMountConfig]\n{\n\t@MODULE[-module-name-here-]\n\t{\n\t\t%rackMountable = true\n\t}\n\t@MODULE[-some-other-module-name-here]\n\t{\n\t\t%rackMountable = true\n\t}\n\t@RESOURCE[-resource-name-here-]\n\t{\n\t\t%rackMountable = true\n\t}\n\t//needed so only one instance of the ModuleRackMountPart module gets added\n\t//actual module is added at the end of the MM patching\n\t%addModuleRackMountPart = true\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EWhat are your future plans for this?\u003C/strong\u003E\u00A0 I\u0027m not sure.\u00A0 It\u0027s looking a bit more like a viable mod, at least for the basic profile.\u00A0 I\u0027ll need to add a few more parts to fill out the parts roster for the advanced profile and do lots and lots of testing.\u00A0 I\u0027m cautiously hopeful.\u00A0 The next step will be to test the basic configuration on as many different mods and setups as I can, figure out what will and won\u0027t work, etc.\u00A0 I\u0027ll also be working on the advance profile in parallel, but that\u0027s much more of a long term project.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222024-06-28T23:47:42Z\u0022 title=\u002206/28/2024 11:47  PM\u0022 data-short=\u0022Jun 28\u0022\u003EJune 28\u003C/time\u003E by Pehvbot\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"610yesnolovely","CreatedById":211485,"CreatedDateTime":"2022-07-25T09:41:50Z","Content":"\n\u003Cp\u003E\nThis is a very cool idea indeed! I could see a whole host of things that could be used for this - rack mounted science is the obvious one, but also EVA fixing of satellites - eg. telescopes. One mod (Cacteye I believe) sort of does something like that.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cul style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u003Cli\u003E\nRemoving modules throws an\u00A0ArgumentOutOfRangeException exception for the first ModulesOnUpdate call.\u00A0 It seems mostly harmless, but it will need to be fixed.\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI had a somewhat similar \u0022could be an issue\u0022 in Reviva, which dynamically adds/removes RPM and/or MAS computer modules in-flight - in order to remove or add modules, I made sure to keep them at the same module index - from memory the module add/remove operations are kinda weird, and I\u0027m not 100% sure, but I think module indices may be used by some systems:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/harveyt/reviva/blob/bd3c8f96a67f62cb5691abf6aa23f1cce552acfd/plugin/BaseComputer.cs#L185\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/harveyt/reviva/blob/bd3c8f96a67f62cb5691abf6aa23f1cce552acfd/plugin/BaseComputer.cs#L185\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis might help (or might not), feel free to copy any code (a comment to say where from might be good though). The idea was to first destroy the module, which probably leaves a gap in the module list, then add the module using the API which would correctly updating counts and table sizes, but would always appened.\u00A0 Then if it wasn\u0027t at the right index, to remove it and manually add it back at the right index if possible. Kinda hacky, but it seems to work. The above code probably only works because the previous module is always destroyed, for your case adding/removing dynamically is probably much more complex because there might only be adds or removes.\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s somewhat complicated by the fact the part.Modules is actually a class PartModuleList and you can either use Part.RemoveModule() or PartModuleList.Remove() - brain cannot remember, but they\u0027re slight different in what they do. Lots of trial and error \u003Cspan\u003E:-(\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EMy guess is somebody like\u00A0\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/119688-blowfish/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022119688\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/119688-blowfish/\u0022 rel=\u0022\u0022\u003E@blowfish\u003C/a\u003E(author of B9PartSwitch) will probably know way more (and more accurately/correctly) about such things.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222022-07-25T09:50:00Z\u0022 title=\u002207/25/2022 09:50  AM\u0022 data-short=\u00221 yr\u0022\u003EJuly 25, 2022\u003C/time\u003E by 610yesnolovely\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-07-26T14:23:22Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224157712\u0022 data-ipsquote-contentid=\u0022209058\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221658742110\u0022 data-ipsquote-userid=\u0022211485\u0022 data-ipsquote-username=\u0022610yesnolovely\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 7/25/2022 at 2:41 AM, 610yesnolovely said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThis is a very cool idea indeed! I could see a whole host of things that could be used for this - rack mounted science is the obvious one, but also EVA fixing of satellites - eg. telescopes. One mod (Cacteye I believe) sort of does something like that.\n\u003C/p\u003E\n\u003Cp\u003E\nI had a somewhat similar \u0022could be an issue\u0022 in Reviva, which dynamically adds/removes RPM and/or MAS computer modules in-flight - in order to remove or add modules, I made sure to keep them at the same module index - from memory the module add/remove operations are kinda weird, and I\u0027m not 100% sure, but I think module indices may be used by some systems:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/harveyt/reviva/blob/bd3c8f96a67f62cb5691abf6aa23f1cce552acfd/plugin/BaseComputer.cs#L185\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/harveyt/reviva/blob/bd3c8f96a67f62cb5691abf6aa23f1cce552acfd/plugin/BaseComputer.cs#L185\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis might help (or might not), feel free to copy any code (a comment to say where from might be good though). The idea was to first destroy the module, which probably leaves a gap in the module list, then add the module using the API which would correctly updating counts and table sizes, but would always appened.\u00A0 Then if it wasn\u0027t at the right index, to remove it and manually add it back at the right index if possible. Kinda hacky, but it seems to work. The above code probably only works because the previous module is always destroyed, for your case adding/removing dynamically is probably much more complex because there might only be adds or removes.\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s somewhat complicated by the fact the part.Modules is actually a class PartModuleList and you can either use Part.RemoveModule() or PartModuleList.Remove() - brain cannot remember, but they\u0027re slight different in what they do. Lots of trial and error \u003Cspan\u003E:-(\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EMy guess is somebody like\u00A0\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/119688-blowfish/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022119688\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/119688-blowfish/\u0022 rel=\u0022\u0022\u003E@blowfish\u003C/a\u003E(author of B9PartSwitch) will probably know way more (and more accurately/correctly) about such things.\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThanks!\u00A0 Yes, it think it could open up a lot of interesting game play options.\u00A0 I\u0027m still banging around with the basic code but I would like to start really testing it soon, especially with third party apps.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI did manage to test it on Kerbals themselves and had them running around the \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E taking the temperature of everything :-)\u00A0 There are a few problems because Kerbals are essentially inventory items themselves when on board a craft, but I\u0027m pretty sure it can be made to work.\u00A0 Next up, giving them reaction wheels!\u00A0 Adding arbitrary modules to Kerbals should break the game in all kinds of interesting ways.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ll take a look at your code when I get the chance!\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-08-02T20:38:16Z","Content":"\n\u003Cp\u003E\nVersion 0.02 is now updated on github.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/RackMount\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/pehvbot/RackMount\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis is a much improved version of the original idea.\u00A0 It\u0027s added several new features including\n\u003C/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\nThe ability to rackmount parts in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E/\u003Cabbr title=\u0022SpacePlane Hangar\u0022\u003ESPH\u003C/abbr\u003E\n\u003C/li\u003E\n\u003Cli\u003E\nThe ability to dynamically rack and unrack parts in flight without removing the part from inventory\n\u003C/li\u003E\n\u003Cli\u003E\npreliminary RESOURCE support\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ESo what\u0027s changed?\u00A0\u00A0\u003C/strong\u003EMostly this adds buttons to mount and unmount parts in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E and while in flight, so the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E would look like this:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022pRyNT30.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u0022145.67\u0022 height=\u0022437\u0022 width=\u0022300\u0022 src=\u0022https://i.imgur.com/pRyNT30.png\u0022\u003E\u003Cimg alt=\u0022zHJLKeQ.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u0022155.33\u0022 height=\u0022466\u0022 width=\u0022300\u0022 src=\u0022https://i.imgur.com/zHJLKeQ.png\u0022\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis removes the need for a custom ModuleCargoPart.\u00A0 To rackmount a part you currently need to add \u0027rackMountable = true\u0027 to both the part and to the modules/resources you plan on mounting, so something like this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\u003Cspan class=\u0022pln\u0022\u003E//adds reaction wheels to RM\n@PART[*]:HAS[@MODULE[ModuleReactionWheel],@MODULE[ModuleCargoPart]]\n{\n\trackMountable = true\n\t@MODULE[ModuleReactionWheel]\n\t{\n\t\trackMountable = true\n\t}\n}\n//batteries\n@PART[*]:HAS[#category[Electrical],@MODULE[ModuleCargoPart]]\n{\n\trackMountable = true\n\t@RESOURCE[ElectricCharge]\n\t{\n\t\trackMountable = true\n\t}\n\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nSome of this will likely change in the next update.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ESo how does it work right now?\u003C/strong\u003E\u00A0 Fairly well.\u00A0 Modules are added and removed dynamically, save their state between loads, retains settings from the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E (at least for the stock modules I\u0027ve tested) and resources mostly work.\u00A0 \u00A0The one, likely unfixable, restriction is that if you are in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E, mount a part, adjust the settings, then unmount the part, your changes are lost.\u00A0 When you mount the part again it won\u0027t retain your settings.\u00A0 This is a fairly uncommon case and I don\u0027t consider this a \u0027bug\u0027, just a minor annoyance.\u00A0\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EWhat\u0027s still broken?\u003C/strong\u003E\u00A0 The biggest unresolved issue is the ability to \u0027lock\u0027 parts into place.\u00A0 Currently nothing stops you from moving or removing a part from the rackmount inventory which will break things pretty horribly.\u00A0 I\u0027ve been experimenting with ways to lock parts but my current approach of setting the UIPartActionInventorySlot \u0027button\u0027 to enabled=false does lock the part in place but it has some nasty limitations and side effects.\u00A0 It breaks the tooltip (i.e. right click) menu for that part and has lots of issues when loading the vessel or changing context such as going on EVA or being in Engineering mode.\n\u003C/p\u003E\n\u003Cp\u003E\nRESOURCES support is also not quite working.\u00A0 The \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E doesn\u0027t seem to update if you add a resource while in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E.\u00A0 It works if you launch the vessel or even if you save and reload the craft file, but I haven\u0027t been able to force the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E info to update yet.\u00A0 Simply running UpdateWindow() doesn\u0027t seem to work.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EWhat\u0027s next?\u003C/strong\u003E\u00A0 Besides fixing the above issues I would like to make it so mounting or unmounting parts in flight needs an Engineer.\u00A0 I\u0027ll also be changing how the mod keeps track of mounted parts and some settings.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EDo you think this thing can actually work?\u003C/strong\u003E\u00A0 I\u0027m not sure yet but it\u0027s looking fairly good.\u00A0 The real problems will happen when vessels are unloaded but still accessed.\u00A0 \u00A0The biggest test will be something like Kerbalism.\u00A0 I\u0027m pretty sure stock KerbalismConfig will break in all kinds of ways, but if a custom config can be created I would consider that \u0027working\u0027.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-08-03T04:54:02Z","Content":"\n\u003Cp\u003E\nVersion 0.03 is now updated on github\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/RackMount\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/pehvbot/RackMount\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s just a few minor fixes.\u00A0 It adds a requirement for crew and possibly engineers to be able mount and unmount parts.\u00A0 It also adds a broken but functional part lock.\u00A0 \u00A0If parts are locked, the tooltip (right click) menu for locked parts doesn\u0027t work correctly.\u00A0 It will either throw a [EXC error because it can\u0027t find the tooltip or it will display the last accessible stored part.\u00A0 Annoying but not fatal, so I\u0027m going to go with it until I can figure out a fix.\n\u003C/p\u003E\n\u003Cp\u003E\nNow that I have a reasonably functional prototype\u00A0 I\u0027ll start really testing things to see how various stock and custom modules work.\u00A0 As expected stock Kerbalism science experiments only work while the craft is active.\u00A0 I\u0027m assuming Kerbalism uses the protopart definition to find available modules when vessels are not active.\u00A0 This probably means processors are also broken.\u00A0 Disappointing but not at all surprising.\u00A0 \u00A0I expect basically any rackmounted module that runs while a part is on rails won\u0027t work.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-08-04T18:04:08Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003EExperiment Report #1:\u00A0 ModuleCommand\u003C/strong\u003E\u003Cbr\u003E\nI started by stripping out all ModuleCommand modules from the parts and created an inventory item I could add back in.\u00A0 While it sort of works, dynamically adding ModuleCommand has a couple of glitches.\u00A0 \u00A0Some of them are expected, some of them are a bit surprising.\n\u003C/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\nThe \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003E\u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E\u003C/abbr\u003E check will fail, telling you you can\u0027t control the craft, even if you have mounted the ModuleCommand (annoying but likely fixable)\n\u003C/li\u003E\n\u003Cli\u003E\nKerbals will not be automatically added to manned parts.\u00A0 This is expected.\u00A0 Removing ModuleCommand makes these parts act like crew cabins.\n\u003C/li\u003E\n\u003Cli\u003E\nAdding ModuleCommand adds the Rename Vessel button but does not put it in the Vessel\u00A0 Naming group as it would with a pre-built ModuleCommand part.\u003Cbr\u003E\n\u003Cimg alt=\u0022sETYrhQ.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u00228.00\u0022 height=\u002216\u0022 width=\u0022200\u0022 src=\u0022https://i.imgur.com/sETYrhQ.png\u0022\u003E\u00A0\u00A0\u003Cimg alt=\u0022WuXfm84.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002215.00\u0022 height=\u002230\u0022 width=\u0022200\u0022 src=\u0022https://i.imgur.com/WuXfm84.png\u0022\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cb\u003EThe weird one:\u003C/b\u003E\u00A0 If you add an unmanned (e.g.\u00A0 minumumCrew = 0) ModuleCommand to a crewable part, ModuleCommand acts as if there\u0027s a crew onboard regardless of crew or communications.\u00A0 I assume others have run into this glitch before since it does this even if you add this \u0027normally\u0027.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EEDIT:\u003C/strong\u003E\u00A0 It also borks the alternate control points.\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cp\u003E\nIt\u0027s pretty clear that some MODULEs will need some additional logic get the them working correctly.\u00A0 Anyway, back to the laboratory!\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222022-08-04T18:10:39Z\u0022 title=\u002208/04/2022 06:10  PM\u0022 data-short=\u00221 yr\u0022\u003EAugust 4, 2022\u003C/time\u003E by Pehvbot\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-08-05T01:26:25Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003EExperiment Report #2: Experiments!\u003C/strong\u003E\u003Cbr\u003E\nModuleScienceExperiment was used for my first tests and they seem to work just fine.\u00A0 There are a couple of interesting quirks.\u00A0 Science parts with interactions throw an error if I don\u0027t remove the\u00A0\u00A0FxModules values from them.\u00A0 Also the interactionRange is too short for some experiments if you place experiments inside 2.5 size parts such as the mk2 lander can.\u00A0 It took me a bit to figure that one out.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nModuleScienceContainer also seems to work fine (again with the range issues).\u00A0 Containers can be unmounted and move and will retain all their stored data, etc.\n\u003C/p\u003E\n\u003Cp\u003E\nModuleScienceLab.\u00A0\u00A0ModuleScienceLab requires a ModuleScienceContainer in the same part\u00A0\u003Cstrong\u003Eand\u003C/strong\u003E\u00A0it needs to be hard coded for the index number, something that will change depending on the other rackmounted parts.\u00A0 Another example of a MODULE needing some logic to work.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nModuleScienceConverter.\u00A0 \u00A0I never had a chance to test this due to the index issue above and just running out of time today.\u00A0 Maybe later.\n\u003C/p\u003E\n"},{"CreatedByName":"Stone Blue","CreatedById":77721,"CreatedDateTime":"2022-08-05T11:54:36Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224161140\u0022 data-ipsquote-contentid=\u0022209058\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221659662785\u0022 data-ipsquote-userid=\u0022182810\u0022 data-ipsquote-username=\u0022Pehvbot\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n10 hours ago, Pehvbot said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n...\u003Cstrong\u003Eand\u003C/strong\u003E\u00A0it needs to be hard coded for the index number, something that will change depending on the other rackmounted parts.\u00A0 Another example of a MODULE needing some logic to work.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nyeahhh... just in my amateurish dabbling in modding, I\u0027ve run up against module indexing issues...\u003Cbr\u003E\nIt really *IS* a big PIA for modding \u003Cspan\u003E\u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E \u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-08-05T19:23:50Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003EExperiment Report #3: Communications and Scanning\u003C/strong\u003E\u003Cbr\u003E\nBoth\u00A0ModuleDataTransmitter and\u00A0ModuleKerbNetAccess seem to work normally.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nModuleGPS,\u00A0ModuleResourceScanner,\u00A0\u00A0ModuleBiomeScanner, and\u00A0ModuleAnalysisResource seem to work correctly.\u00A0 However both\u00A0ModuleAsteroidAnalysis and\u00A0ModuleCometAnalysis throw\u00A0System.NullReferenceException exceptions when first launched, but not when unmounting/remounting a part, loading from a saved game, or even reverting to launch.\u00A0 It doesn\u0027t seem to cause problems, but it would be nice to know what\u0027s going wrong here.\n\u003C/p\u003E\n\u003Cp\u003E\nOne side note:\u00A0 Adding or removing MODULEs from vessels with existing and mounted rackmount parts cause index issues, including craft saved in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003E\u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E\u003C/abbr\u003E and presumably sub-assemblies as well.\u00A0 I\u0027m not sure if this would be a case of doing things smarter in the DLL or just saying \u0022don\u0027t do that\u0022 to mid game changes to rackmountable parts.\n\u003C/p\u003E\n\u003Cp\u003E\nOn another side note:\u00A0 If you try to rackmount a part with it\u0027s own rackmounted modules, it dies a horrible death.\u00A0 You can build pre-assembled parts such as a probe core or science bay, but you would need to add it as a separate part using engineer construction mode.\u00A0 \u00A0I don\u0027t plan on fixing this since recursive inventory and module management is the stuff of nightmares.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222022-08-05T19:31:00Z\u0022 title=\u002208/05/2022 07:31  PM\u0022 data-short=\u00221 yr\u0022\u003EAugust 5, 2022\u003C/time\u003E by Pehvbot\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-08-09T21:03:19Z","Content":"\n\u003Cp\u003E\nVersion 0.04 is now updated on GitHub.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/RackMount\u0022 rel=\u0022external nofollow\u0022 style=\u0022background-color:#f9f9f9;font-size:15px;\u0022\u003Ehttps://github.com/pehvbot/RackMount\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis has a few ModuleCommand fixes including adding the Vessel Renaming\u00A0 menu for command parts and enabling control points.\n\u003C/p\u003E\n\u003Cp\u003E\nIt also dynamically generates volume info for both RackMount inventories and for rackmountable parts.\u00A0 These values can be overridden of course.\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-08-13T00:12:43Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003EExperiment Report #4:\u00A0 Misc and final conclusions for stock modules\u003C/strong\u003E\u003Cbr\u003E\nI tested basically every applicable stock module.\u00A0 Most worked fine.\u00A0 Only three of them had significant issues.\u00A0\n\u003C/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\nModuleCommand has a few problems:\u00A0 Control points don\u0027t work by default but can be added in by this mod.\u00A0 Similarly the Vessel Rename widget doesn\u0027t appear by default but can be added by this mod, with the small glitch that removing the ModuleCommand does remove the Event button but it does not remove the group, so you end up with an empty group in the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E.\u00A0 \u00A0There\u0027s also an issue with unmanned ModuleCommand in parts with a crew capacity.\u00A0 Setting\u00A0minimumCrew=0 in a crewable part allows it to be commanded as if crew were present regardless of actual crew.\u00A0 This can be fixed a bit by restriction some rackmountable part to specific categories of host parts.\u00A0 So a rackmountable part can be restricted to only crewed host parts.\n\u003C/li\u003E\n\u003Cli\u003E\nModuleScienceLab (the manned science module) likely won\u0027t work.\u00A0 It is hard coded to a ModuleScienceContainer and even if this is changed in code, it throws OnLoad and OnSave errors.\u00A0\n\u003C/li\u003E\n\u003Cli\u003E\nModuleDataTransmitter only operates when the craft is active.\u00A0\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cp\u003E\nOverall I found that:\n\u003C/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\nModuleAblator - works but might be useless.\u00A0 It didn\u0027t seem to do much.\n\u003C/li\u003E\n\u003Cli\u003E\nModuleAnalysisResource - works\n\u003C/li\u003E\n\u003Cli\u003E\nModuleAsteroidAnalysis - works\n\u003C/li\u003E\n\u003Cli\u003E\nModuleBiomeScanner - works\n\u003C/li\u003E\n\u003Cli\u003E\nModuleCometAnalysis - works\n\u003C/li\u003E\n\u003Cli\u003E\nModuleCommand - works but requires extra logic\n\u003C/li\u003E\n\u003Cli\u003E\nModuleDataTransmitter - only works when active.\u00A0 does not work when \u0027on rails\u0027.\n\u003C/li\u003E\n\u003Cli\u003E\nModuleEnviroSensor - works\n\u003C/li\u003E\n\u003Cli\u003E\nModuleExperienceManagement - works\n\u003C/li\u003E\n\u003Cli\u003E\nModuleGPS - works\n\u003C/li\u003E\n\u003Cli\u003E\nModuleGenerator - works\n\u003C/li\u003E\n\u003Cli\u003E\nModuleKerbNetAccess - works\n\u003C/li\u003E\n\u003Cli\u003E\nModuleOrbitalScanner - works but throws a NullReferenceException (no animation?)\n\u003C/li\u003E\n\u003Cli\u003E\nModuleOrbitalSurveyor - works\n\u003C/li\u003E\n\u003Cli\u003E\nModuleReactionWheel - works\n\u003C/li\u003E\n\u003Cli\u003E\nModuleResourceConverter - works, even when on rails!\n\u003C/li\u003E\n\u003Cli\u003E\nModuleResourceDrain - won\u0027t find resources to drain\n\u003C/li\u003E\n\u003Cli\u003E\nModuleResourceScanner - works\n\u003C/li\u003E\n\u003Cli\u003E\nModuleSAS - \u00A0works\n\u003C/li\u003E\n\u003Cli\u003E\nModuleScienceContainer - works\n\u003C/li\u003E\n\u003Cli\u003E\nModuleScienceConverter - unclear, ModuleScienceLab didn\u0027t work\n\u003C/li\u003E\n\u003Cli\u003E\nModuleScienceExperiment - works\n\u003C/li\u003E\n\u003Cli\u003E\nModuleScienceLab - doesn\u0027t work. \u00A0Problems with index for container and onload errors.\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cp\u003E\nOverall this means that the mod might be useful for some MODULES but with some obvious restrictions.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThere are still some unresolved problems.\u00A0 The biggest one is that I still don\u0027t have a good way to lock rackmounted parts into place.\u00A0 There doesn\u0027t seem to be a way to disable the slot without disabling its ability to supply tooltip info for that part.\u00A0 \u00A0This isn\u0027t fatal, but it\u0027s not good enough for an actual mod.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"SkyFall2489","CreatedById":216984,"CreatedDateTime":"2022-08-13T16:09:56Z","Content":"\n\u003Cp\u003E\nWhat would it take to rack-mount RESOURCE nodes as well as MODULE nodes? Doesn\u0027t seem to be much harder, but I have 0 experience with DLLs.\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-08-14T03:52:59Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224163495\u0022 data-ipsquote-contentid=\u0022209058\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221660406996\u0022 data-ipsquote-userid=\u0022216984\u0022 data-ipsquote-username=\u0022SkyFall2489\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, SkyFall2489 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhat would it take to rack-mount RESOURCE nodes as well as MODULE nodes? Doesn\u0027t seem to be much harder, but I have 0 experience with DLLs.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt\u0027s pretty easy actually.\u00A0 The current version has a bare bones version of this.\u00A0 The hard part is removing it again after its values changed.\u00A0 \u00A0If it\u0027s just one mounted part, you just remove the resource from the host part and update the stored value in the inventory.\u00A0 If you have more than one mounted part or the host part also has a built in value, you need to figure out how to distribute the total between what\u0027s still on the part and the stored item.\u00A0 Right now the mod just distributes it proportionally but it should also know how to favor the host part or favor the stored part.\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-08-14T20:39:36Z","Content":"\n\u003Cp\u003E\nVersion 0.05 is now available on GitHub.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/RackMount\u0022 rel=\u0022external nofollow\u0022 style=\u0022background-color:#f9f9f9;font-size:15px;\u0022\u003Ehttps://github.com/pehvbot/RackMount\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis is mostly a cleanup and refactor of some of the code with no new features added.\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-08-16T21:35:59Z","Content":"\n\u003Cp\u003E\nVersion 0.06 is now available on GitHub\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/RackMount\u0022 rel=\u0022external nofollow\u0022 style=\u0022background-color:#f9f9f9;font-size:15px;\u0022\u003Ehttps://github.com/pehvbot/RackMount\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis update fixes the ModuleCommand issues with a slightly ugly workaround.\u00A0 It doesn\u0027t remove the existing ModuleCommand but it does disable it OnLoad.\u00A0 If a ModuleCommand part is rackmounted it adds a new and working ModuleCommand.\u00A0 This solves the issue where a part without ModuleCommand fails the craft check when launched.\u00A0 It also adds in partType and requiresPartType.\u00A0 For example \u0027requiresPartType = Unmanned\u0027 rackmount parts can only be mounted in \u0027partType = Unmanned\u0027 host parts.\u00A0 Finally it also retains the INTERNAL ModuleDataTransmitter modules to get around the problem with transmitters not working while on rails.\u00A0 Since it only works when there\u0027s a working ModuleCommand we can assume for game play that the rackmounted part has both the command and the communications all in one part.\u00A0 It\u0027s not as flexible as I would like but it solves more problems than it creates.\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-09-13T03:04:05Z","Content":"\n\u003Cp\u003E\nVersion 0.07 is now available on GitHub\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/RackMount\u0022 rel=\u0022external nofollow\u0022 style=\u0022background-color:#f9f9f9;font-size:15px;\u0022\u003Ehttps://github.com/pehvbot/RackMount\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nThis update (finally!) fixes the problem with throwing an exception when mousing over rackmounted parts by... ready for this...hiding the part when it is mounted.\u00A0 \u003Cstrong\u003ETa Da!\u00A0\u00A0\u003C/strong\u003EI wasn\u0027t able to slay the dragon but I was at least able to hide from it.\u00A0 I think this means making a few changes to how the mount/unmount button looks, but it\u0027s probably better this way in any case.\n\u003C/p\u003E\n\u003Cp style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003E\nThis was the last piece of the puzzle for creating an actual mod.\u00A0 I think with the next update this will be moved into a work in progress.\u00A0 It\u0027ll be slow progress to be sure, but progress.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222022-09-13T03:06:24Z\u0022 title=\u002209/13/2022 03:06  AM\u0022 data-short=\u00221 yr\u0022\u003ESeptember 13, 2022\u003C/time\u003E by Pehvbot\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-09-14T21:32:03Z","Content":"\n\u003Cp\u003E\n\u003Cstrong style=\u0022background-color:#f9f9f9;color:#2d3134;font-size:15px;\u0022\u003EExperiment\u003Cspan\u003E\u00A0\u003C/span\u003EReport #5:\u00A0\u003Cspan\u003E\u00A0Making a functional mod?\u003C/span\u003E\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EI created a minimalistic version that only added science experiments and sensors from science parts as a sort of first draft of an actual functioning mod.\u00A0 It converted existing inventory slots in manned parts and added small inventory slots in unmanned parts.\u00A0 For stock science this seems to work quite well.\u00A0 I started throwing other mods at it just to see what happens.\u00A0 \u003C/span\u003E\n\u003C/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cspan\u003E\u003Cstrong\u003EKerbalism:\u00A0\u00A0\u003C/strong\u003EAs I discovered earlier, Kerbalism experiments won\u0027t work while the vessel is on rails (unloaded).\u00A0 It also throws a null reference error for modules HardDrive and Habitat if a Science module is rackmounted when the craft is first launched.\u00A0 It\u0027s unclear if this can be fixed without either changing Kerbalism itself or creating a Kerbalism add-on dll.\u00A0 That\u0027s a problem for another day.\u00A0 \u003C/span\u003E\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cb\u003EKSPCommunityFixes:\u00A0\u00A0\u003C/b\u003EKCF\u0027s fix for properly adding MODULEs mid game interferes\u00A0with RackMount adding modules.\u00A0 This feature can be disabled by \u003Cabbr title=\u0022Module Manager (mod)\u0022\u003EMM\u003C/abbr\u003E patch but it would be nice to be able to do this on a part by part basis with something like \u0027ignoreModuleIndexingMismatch = ModuleRMInventoryPart\u0027.\u00A0 Again a problem for another day.\u00A0 KCF also has a fix for ModuleInventoryPart in 1.12.3 which are not properly updating.\u00A0 This update needs to be applied to ModuleRMInventoryPart.\u00A0 Finally it adds some extra info on inventory parts in the Inventory Group it creates.\u00A0 I should add this as well.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EScienceAlert:\u00A0\u00A0\u003C/strong\u003EI wanted to test if a mod like this sees rackmounted experiments and it does!\u00A0 The only issue I found was that if you mount a part in flight you would need to re-enter the vessel (going to another craft, EVAing, going back to the \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E) for the new experiment to be seen.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003ESETI-MetaModPack:\u00A0\u00A0\u003C/strong\u003EFigured I would throw the kitchen sink at it and see what happens.\u00A0 It seems to work just fine.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Cstrong\u003EDMModuleScience:\u003C/strong\u003E\u00A0 Finally, I threw Less Real Than Real(ism) just to see what happens when you use DMModuleScience experiments.\u00A0 That worked as well, it also showed that rackmounted experiments can be added to Action keys.\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Rutabaga22","CreatedById":221143,"CreatedDateTime":"2022-09-14T22:19:44Z","Content":"\n\u003Cp\u003E\nThe way I see this being useful is in sounding rockets. Imagine you have a rackmount nose cone, then you can add avionics, science, power and a parachute all in one part!\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-09-16T22:03:16Z","Content":"\n\u003Cp\u003E\nVersion 0.1.0 is available for download.\u00A0 This is the first \u0027working\u0027 version of the mod and makes a few changes to how things work.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/RackMount/releases/tag/v0.1.0\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/pehvbot/RackMount/releases/tag/v0.1.0\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis makes science and scanner parts rackmountable and adds a small amount if inventory to unmanned command parts so smaller science parts can be mounted.\u00A0 Unfortunately parts with inventories can\u0027t be cargo, so small probes can\u0027t be stored in other parts.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222022-09-16T22:03:54Z\u0022 title=\u002209/16/2022 10:03  PM\u0022 data-short=\u00221 yr\u0022\u003ESeptember 16, 2022\u003C/time\u003E by Pehvbot\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-09-18T06:57:01Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003EInventory shenanigans:\u003C/strong\u003E\u00A0 The KSP inventory system is peculiar and, well, buggy.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EExhibit #1\u003C/strong\u003E:\u00A0 KSP 1.12.3 has a fairly significant bug addressed by KSPCommunityFixes.\u00A0 I even rewrote the mod for v0.1.0 to take advantage of these fixes.\u00A0 The strange thing to me is that the changes I made to enable this bug fix... fixed the bug without needed the KSPCommunityFixes bug fix.\u00A0 Frankly I have zero idea how this fixed things.\u00A0 I think the bug is related to the inventory module not properly running updates, so my guess is my mod is forcing updates to happen in order to keep track of changes to the inventory.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EExhibit #2:\u003C/strong\u003E\u00A0KSP does not allow you to store a part in the inventory if it can itself store parts in it\u0027s inventory.\u00A0 It simply disables the ModuleCargoPart MODULE (the one that allows you to store a part) when the game loads.\u00A0 However, if you create and use a copy (subclass in c# speak) of the ModuleInventoryPart MODULE, then it doesn\u0027t get disabled so the part\u00A0\u003Cstrong\u003Ecan\u003C/strong\u003E\u00A0be stored in inventory so you can have nested inventories.\u00A0 I\u0027m assuming Squad disabled this feature because it creates a bug or exploit.\u00A0 I haven\u0027t looked deeply enough into this yet to figure it out but being able to store rackmounted sub-assemblies would be super useful.\u00A0 I need to dig a bit more to see what exactly is going on.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EExhibit #3:\u00A0\u003C/strong\u003EThe inventory for Kerbals is the same as for parts.\u00A0 In theory you can rackmount items onto Keberals.\u00A0 I\u0027ve already experimented with them running around the \u003Cabbr title=\u0022Kerbal Space Center\u0022\u003EKSC\u003C/abbr\u003E taking the temperature of everything.\u00A0 However for some reason KSP adds an extra step for Kerbals where it seems to unload inventory parts and reloads them again.\u00A0 Normally this is invisible but it has the effect of resetting the part\u0027s peristantId.\u00A0 RackMount uses the persistantId to keep track of things so changing this number screws up the mod.\u00A0 I would need to rewrite how it keeps track of parts\u00A0 to allow Kerbals to rackmount things.\n\u003C/p\u003E\n"},{"CreatedByName":"JadeOfMaar","CreatedById":167617,"CreatedDateTime":"2022-09-19T12:53:58Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00224175206\u0022 data-ipsquote-contentid=\u0022209058\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221663193984\u0022 data-ipsquote-userid=\u0022221143\u0022 data-ipsquote-username=\u0022Rutabaga22\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 9/14/2022 at 6:19 PM, Rutabaga22 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nand a parachute all in one part!\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nUmm, no. The parachute is not going to pop open from inside the inventory. And the parachute is not going to have inventory slots for you to rackmount into it. \u003Cspan\u003E\u003Cimg alt=\u0022:P\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 title=\u0022:P\u0022\u003E \u003C/span\u003E\u003Cspan\u003E \u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-09-20T03:32:34Z","Content":"\n\u003Cp\u003E\nVersion 0.1.1 is available for download.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/RackMount/releases/tag/v0.1.1\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/pehvbot/RackMount/releases/tag/v0.1.1\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThis version adds a new version of ModuleCargoPart which allows parts with an inventory to be manipulated in construction mode.\u00A0 It also has an advanced tweakable option to allow the part to be stored in another inventory part.\u00A0 This is experimental and likely has some game play issues, including losing funds if a part is stored in an inventory and has inventory items itself when it\u0027s recovered.\u00A0\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIt also adds support for KerbalEngineer parts.\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-10-05T20:39:44Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003EExperiment Report #6:\u00A0 Crew Seats.\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nNo published updates for the mod, but some interesting results with dynamically adjusting crew capacity.\u00A0 It turns out you can dynamically change seating but it comes with some significant restrictions.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s fairly easy to use RackMount to add in \u0027seats\u0027 that dynamically change crew capacity and the game respects the seating in terms of boarding a craft in flight.\u00A0 Adding and rackmounting a seat part (I\u0027m using the external command seat as a placeholder for this but it needs it\u0027s own part) adds an available crew spot, removing it removes the crew spot, and it\u0027s pretty easy to make sure you don\u0027t pull out a seat if a kerbal is using it.\u00A0 So far so good.\n\u003C/p\u003E\n\u003Cp\u003E\nThe problem is the KSP crew slots for each part as seen in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E crew selector are set when the game launches and I\u0027m not sure it can be changed (or even should be).\u00A0 \u00A0This means when you build and launch a craft you will see crew slots in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E for the CrewCapacity available when the game was first loaded not what it is based on the number of rackmounted seats.\n\u003C/p\u003E\n\u003Cp\u003E\nInterestingly it will only \u0027board\u0027 up to the rackmounted crew capacity when the vessel is launched so it *almost* works correctly.\u00A0 \u00A0For example if you have a 3 crewed part, the mod will first set CrewCapacity to 0 then add in any rackmounted seats.\u00A0 When you build your craft you will see 3 slots in the crew selector but when you launch you only get up to the number of rackmounted seats (including none).\u00A0 In theory this means you can have more rackmounted seats than visible crew slots (so you can\u0027t board those seats and they are empty) and you can definitely try to add more crew than you have seats (so they just don\u0027t show up in the launched vessel).\n\u003C/p\u003E\n\u003Cp\u003E\nIn practice this means parts should start the game with the maximum number of seats that can fit so you can always \u0027board\u0027 every seat you rackmount.\u00A0 I haven\u0027t figured out how to hide slots dynamically in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E crew selector but I *think* I can empty and block them from use dynamically, so you will see the empty slot but if you try to add someone it will block you and message you that you can\u0027t do that without rackmounting a seat.\n\u003C/p\u003E\n\u003Cp\u003E\nThere are some mods that change how crew are loaded, which may get broken.\u00A0 BetterCrewAssignment doesn\u0027t work if there is a mismatch between the expected number of crew (as seen in the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E crew selector) and the actual number of seats available, and throws an error when this happens.\u00A0 I haven\u0027t tested Kerbal Construction Time yet.\u00A0 There may be others I don\u0027t know of.\n\u003C/p\u003E\n\u003Cp\u003E\nFinally of course there\u0027s the problem of the IVAs.\u00A0 The internal model doesn\u0027t change based on the seat count and I haven\u0027t experimented with dynamically changing IVAs yet.\u00A0 No idea if this is possible and it would mean building LOTS of custom IVAs which is beyond the scope of this project.\u00A0 That\u0027s likely a \u0027just live with it\u0027 issue.\n\u003C/p\u003E\n\u003Cp\u003E\nI like the idea of this.\u00A0 There are two real world examples I would love to be able to model.\u00A0 The original Vostok capsule had 1, 2, and 3 crew variants (Vostok and Voskhod) as well as an uncrewed variant (the Zenit program) and Apollo had a 5 crew variant that would have been used as a rescue craft for Skylab.\u00A0 It also allows for returnable cargo vessels like the Dragon for example.\u00A0 I\u0027ll have to see if it breaks too many things to be practical though.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-10-07T03:54:08Z","Content":"\n\u003Cp\u003E\nVersion 0.1.2 is now available for download.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/pehvbot/RackMount/releases/tag/v0.1.2\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/pehvbot/RackMount/releases/tag/v0.1.2\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nIt now includes seats!\u00A0 You can now rackmount the\u00A0EAS-1 External Command Seat to gain extra seating.\u00A0 It won\u0027t adjust the IVA so that is still a bit broken, and it really needs its own part and have more volume to account for the kerbal itself, but this is a good start.\n\u003C/p\u003E\n\u003Cp\u003E\nI was able to solve basically all the issues mentioned above.\u00A0 The only real glitches are the IVA problems and that it is slightly buggy when using Better Crew Assignment.\u00A0 BCA uses a small hack to constantly update the crew assignment window.\u00A0 This causes the \u003Cabbr title=\u0022Part Action Window\u0022\u003EPAW\u003C/abbr\u003E inventory window to constantly update which \u0027flickers\u0027 rackmounted parts as they are made visible and invisible by this update.\n\u003C/p\u003E\n\u003Cp\u003E\nIt turns out the crew assignment stuff is a bit easier to manipulate than I thought.\u00A0 Mostly it\u0027s just that it\u0027s done from two separate parts of the program, the parts using CrewCapacity, and the crew assignment window using the VesselCrewManifest object.\u00A0 You just need to make sure to manually adjust both of them to keep them in sync.\n\u003C/p\u003E\n"},{"CreatedByName":"Pehvbot","CreatedById":182810,"CreatedDateTime":"2022-10-14T23:06:03Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003EExperiment Report #7:\u00A0 Have a seat and turn up the volume\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThere were some pretty significant bugs in the crew seat code in v0.1.2 (no surprise there) which will be fixed on the next upgrade.\u00A0 In the mean time I decided to try my hand at creating a chair part.\u00A0 I tried doing a few things including a close analog to the Apollo seats and using the KSP seat props (the ones used in the stock IVAs)\u00A0 but finally decided to go with something a bit simpler than the props and more \u0027Kerbal\u0027 than the Apollo style seat.\u00A0 It\u0027s only my second attempt at making a model and is purposely simplistic since it\u0027s mostly going to be seen as a thumbnail in any case.\u00A0 Introducing the Mk1 Crew Seat!\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022wtV0FXa.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002254.25\u0022 height=\u0022396\u0022 width=\u0022730\u0022 src=\u0022https://i.imgur.com/wtV0FXa.png\u0022\u003E\u00A0\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s purely coincidental that Bob\u0027s office chair has gone missing.\u00A0 \u00A0It doesn\u0027t work like the external command seat, it won\u0027t attach to anything and you can\u0027t sit in it.\u00A0 It\u0027s just there so you can potentially toss it out the airlock if you want to get rid of it in flight.\n\u003C/p\u003E\n\u003Cp\u003E\nBut having created a part and gotten the crew capacity code to\u00A0\u003Cem\u003Ealmost\u003C/em\u003E\u00A0work properly, it brings up the issue of the seat volume and the available volume in a given capsule or pod.\u00A0 My eventual goal is to be able to completely customize the \u0027load out\u0027 for any given capsule\u00A0, with seating, resources, and various modules so that a capsule or pod is simply an empty shell to be filled with whatever technology is currently available.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAs a baseline I\u0027m using the interior crew volume of the Mercury capsule, which was something like 1.7m\u003Csup\u003E3\u003C/sup\u003E.\u00A0 That\u0027s about the smallest you can squeeze someone into.\u00A0 Scaled to kerbal size that\u0027s about 0.425m\u003Csup\u003E3\u003C/sup\u003E, or 425 liters.\u00A0 The volume of the chair itself is something like 180 liters.\u00A0 That gives a crew seat the ModuleCargoPart packedVolume = 605.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI also automatically calculated the \u0027empty\u0027 volume for these parts using the Mesh properties.\u00A0 You can also use something called Bounds, but that makes it harder to get an accurate number based on the shape (cylinder, cone, sphere) of the capsule since this is basically just a cube containing the part.\u00A0 The down side to using the Mesh is that... I don\u0027t really understand the Unity Mesh stuff.\u00A0 The numbers I get seem correct in value but some parts seem to use the wrong scale, so the volume is several orders of magnitude too small.\u00A0 So for now I\u0027m just faking it by scaling it up to a \u0027sane\u0027 number.\u00A0 It really needs to be done better.\n\u003C/p\u003E\n\u003Cp\u003E\nFinally I compared these numbers to some back of the envelope calculations based on the shape and dimensions of the parts.\u00A0 \u00A0Some examples:\n\u003C/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\nMk1 Command Pod: 820L\n\u003C/li\u003E\n\u003Cli\u003E\nMk2 Command Pod: 2080L\n\u003C/li\u003E\n\u003Cli\u003E\nM1-3 Command Pod: 5030L\n\u003C/li\u003E\n\u003Cli\u003E\nKV-1/2/3 Reentry Modules: 2780L\n\u003C/li\u003E\n\u003C/ul\u003E\n\u003Cp\u003E\nThese numbers are fairly close to the platonic ideal volume for their shape and size.\u00A0 Well close enough for government work anyway.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIt became pretty clear that if you strictly use the part\u0027s size there\u0027s no way to make something that is fully game balanced.\u00A0 A baseline Mk1 with a single seat has 215L left for everything else (control, battery, reaction wheel, etc) but a baseline Mk2 with two seats has 870L left.\u00A0 Other parts have similar balance issues.\n\u003C/p\u003E\n\u003Cp\u003E\nIt\u0027s pretty clear that all these numbers will need to be manually adjusted a bit in order to make things real world adjacent.\u00A0\u00A0\n\u003C/p\u003E\n"}]}