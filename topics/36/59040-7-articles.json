{"TopicId":59040,"ForumId":36,"TopicTitle":"[WIP] Jebnix - A kOS Alternative","CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-01-06T04:35:42Z","PageNum":7,"Articles":[{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-03-15T04:37:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// Binary search on an already sorted array of strings for the index of the hit, or return -1 if no hit found:\u003Cbr\u003E// assume the following variables exist before starting:\u003Cbr\u003E// char needle[] = \u0022some string I\u0027m looking for\u0022;\u003Cbr\u003E// char *haystack[] is a sorted array of the strings being searched\u003Cbr\u003E// int haystackSize is the length of the haystack array.\u003Cbr\u003E// int min, max. middle, cmp;\u003Cbr\u003Efor( min=0, max=haystackSize ;\u003Cbr\u003E      min \u0026lt;= max || cmp != 0 ; \u003Cbr\u003E      (cmp\u0026lt;0 ? max = min \u002B middle : min = min \u002B middle) )\u003Cbr\u003E{\u003Cbr\u003E  middle = ((max-min)\u002B1) / 2;\u003Cbr\u003E  cmp = strcmp( needle, haystack[middle] );\u003Cbr\u003E}\u003Cbr\u003Eif( cmp == 0 ) {\u003Cbr\u003E  // hit was found at index \u0022middle\u0022.\u003Cbr\u003E} else {\u003Cbr\u003E  // hit was not found.\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBe warned, this is going to be really ugly, and is, admittedly, more of a hack of the language than anything else.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E//set needle to \u0022some string I\u0027m looking for\u0022.\u003Cbr\u003E//declare haystack[].\u003Cbr\u003E//set haystackSize to haystack:length.\u003Cbr\u003E//declare min.\u003Cbr\u003E//declare max.\u003Cbr\u003E//declare middle.\u003Cbr\u003E//declare cmp.\u003Cbr\u003E\u003Cbr\u003E// OPERATORS IN USE:\u003Cbr\u003E// Assignment: both TO and = work.\u003Cbr\u003E// Equivalence: both = and == work. I prefer ==.\u003Cbr\u003E// Ternary operator: iif(x,y,z) is equivalent to (x ? y : z). I have not implemented this yet, but it is planned, just not listed in the official wishlist. This is really a function built into the language (as opposed to a library function).\u003Cbr\u003E// And operator: \u0026amp; and AND both work for boolean and bitwise AND.\u003Cbr\u003E// Or operator: | and OR both work for boolean and bitwise OR.\u003Cbr\u003E// Not-equal operator: != for not equal.\u003Cbr\u003E\u003Cbr\u003Efor set max to haystackSize. min \u003Cbr\u003E     from 0 to max | cmp != 0 \u003Cbr\u003E     step 0. iif(cmp \u0026lt; 0, set max to min \u002B middle.,  set min to min \u002B middle.)\u003Cbr\u003E{\u003Cbr\u003E     set middle to ((max - min) \u002B 1) / 2.\u003Cbr\u003E     set cmp to needle == haystack[middle].\u003Cbr\u003E     if cmp == 0\u003Cbr\u003E     {\u003Cbr\u003E          // hit was found at index \u0022middle\u0022\u003Cbr\u003E     }\u003Cbr\u003E     else\u003Cbr\u003E     {\u003Cbr\u003E          // hit was not found\u003Cbr\u003E     }\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E// loop is equivalent to\u003Cbr\u003Eset max to haystackSize.              // commands found before FROM are treated like ordinary commands. \u003Cbr\u003Eset min to 0.                         // the last expression before FROM is assigned the expression after FROM.\u003Cbr\u003Ewhile min \u0026lt;= max | cmp != 0          // the \u0026lt;= is implied by comparing initial values of min and (max || cmp != 0). This can be changed via a convoluted hack: for min from 0 to min \u0026amp; min \u0026lt; max\u003Cbr\u003E{\u003Cbr\u003E     set middle to ((max - min) \u002B 1) / 2.\u003Cbr\u003E     set cmp to needle == haystack[middle].\u003Cbr\u003E     if cmp == 0                           // in KerboScript\u002B\u002B, booleans and integers are interchangeable. Non-zero is always true, and zero is always false. However, assigning an integer from a true boolean does not guarantee any particular non-zero integer.\u003Cbr\u003E     {\u003Cbr\u003E          // hit was found at index \u0022middle\u0022\u003Cbr\u003E     }\u003Cbr\u003E     else\u003Cbr\u003E     {\u003Cbr\u003E          // hit was not found\u003Cbr\u003E     }\u003Cbr\u003E     set min to min \u002B 0.         // this cycle isn\u0027t wasted, because it\u0027s executed in the same cycle as the line below. LOOOONG story.\u003Cbr\u003E     iif(cmp \u0026lt; 0, set max to min \u002B middle.,  set min to min \u002B middle.).\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIt\u0027s possible. It\u0027s ugly as heck and requires quite a few hacks. My parser may know its way around error messages, but all-in-all it\u0027s pretty dumb and does as many things statically as possible, mostly in the name of language simplicity. Why anyone would want to do that type of thing in this language, I don\u0027t know. All-in-all, I don\u0027t recommend it. But like I said, it is possible.\u003C/p\u003E\u003Cp\u003EOne day, I will build the language to compile to bytecode, but not today. Right now, it just kind of goes with the flow.\u003C/p\u003E\u003Cp\u003ESo, in short, is the for-loop I designed intended to do this type of thing? No. It\u0027s just supposed to be a way to increment through a series of values. It CAN do things that are more complicated than that, but why you\u0027d want it to is beyond me.\u003C/p\u003E\u003Cp\u003EBy the way:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// infinite for-loop\u003Cbr\u003E// equivalent of: for (; { }\u003Cbr\u003E\u003Cbr\u003Efor x from x to x { }\u003Cbr\u003E\u003Cbr\u003E// or\u003Cbr\u003Efor x from true to true { }\u003Cbr\u003E\u003Cbr\u003E// or\u003Cbr\u003Efor x from 0 to 0 { }\u003Cbr\u003E\u003Cbr\u003E// or... you get the idea\u003Cbr\u003E\u003Cbr\u003E// even better:\u003Cbr\u003Ewhile (true) {}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2014-03-16T11:42:11Z","Content":"\n\u003Cp\u003EWoody, are you getting any time to code or is your time spent just answering questions about specifics of a mod that has not yet been released?\u003C/p\u003E\u003Cp\u003E\u0022All right, there\u0027s a thousand things that have to happen in order. We are on number eight. You\u0027re talking about number six hundred and ninety-two.\u0022 indeed...\u003C/p\u003E\u003Cp\u003EWould it be too much to ask that we let woody get on with writing his mod and intensively question him about it *after* release?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-03-16T13:17:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022John FX\u0022 data-cite=\u0022John FX\u0022\u003E\u003Cdiv\u003EWoody, are you getting any time to code or is your time spent just answering questions about specifics of a mod that has not yet been released?\u003Cp\u003E\u0022All right, there\u0027s a thousand things that have to happen in order. We are on number eight. You\u0027re talking about number six hundred and ninety-two.\u0022 indeed...\u003C/p\u003E\u003Cp\u003EWould it be too much to ask that we let woody get on with writing his mod and intensively question him about it *after* release?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s much harder to change something after it\u0027s already been finished. If the designer has a major misunderstanding about something rather important, for example thinking that this type of for loop covers 100% of all the same cases that for loops in any other language do, the time to clear that up is not *after* the implementation is done.\u003C/p\u003E\u003Cp\u003EWoodywood has made it clear in the most recent post now that he does in fact understand that this loop is not as versitile as the loops in the languages he mentioned, but that this is okay and it\u0027s an intentional design goal.\u003C/p\u003E\u003Cp\u003EThat was NOT what it looked like in the earlier post, where he claimed this style of loop does all the same stuff that the for loops in other languages do. That would have been a pretty big design error if that\u0027s what his actual intention was. If that\u0027s not really his intention after all then it\u0027s less of a problem.\u003C/p\u003E\u003Cp\u003EAnd no, the right time to hash this stuff out is NOT later on after it\u0027s already been decided.\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-03-16T21:08:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022John FX\u0022 data-cite=\u0022John FX\u0022\u003E\u003Cdiv\u003EWoody, are you getting any time to code or is your time spent just answering questions about specifics of a mod that has not yet been released?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIn short, no, I haven\u0027t had any time to code over this last week. \u003C/p\u003E\u003Cp\u003EThe FOR loop isn\u0027t on my current list of things to be coded. I design each component in five phases: conceptualizing, preliminary design, detailed design, coding, and testing.\u003C/p\u003E\u003Cp\u003ETesting: WHILE loops\u003C/p\u003E\u003Cp\u003ECurrently coding: Input/Interrupts\u003C/p\u003E\u003Cp\u003EDetailed design: Static/dynamic arrays\u003C/p\u003E\u003Cp\u003EPreliminary design: FOR loops and FOREACH loops\u003C/p\u003E\u003Cp\u003EConceptualizing: Basic encapsulation\u003C/p\u003E\u003Cp\u003EEither way, I hadn\u0027t exactly planned on hammering out a detailed specification of the FOR loop quite yet, which is why it sounds like it\u0027s all over the place and this is now the only place I have anything written down for it. The way I look at it, unless it\u0027s coded AND written in the official documentation AND in the final release, it\u0027s not set in stone.\u003C/p\u003E\u003Cp\u003EIn fact, there are things I\u0027m adding that aren\u0027t in the list on the first post, because they are so far down the line that it will be a few weeks before I get to it.\u003C/p\u003E\u003Cp\u003EThis is the thing:\u003C/p\u003E\u003Cp\u003EI\u0027m adding for loops. I\u0027m HOPING to make them work like C-style loops, and if you really go crazy and want them to, they probably can. That\u0027s not what they\u0027re designed for though, and you can tell simply from the syntax that its whole job is to increment in various ways through a set of numbers. KerboScript has always been a \u0022toy\u0022 language designed to make rockets fly, that\u0027s easy enough for anyone to pick up. Everyone should just be happy with the idea that for loops are going to be included.\u003C/p\u003E\u003Cp\u003EArguing over which language to implement, and arguing over the detailed implementation of a feature that is two weeks away from implementation just wastes your time and mine, and delays the release of this mod.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022John FX\u0022 data-cite=\u0022John FX\u0022\u003E\u003Cdiv\u003E\u0022All right, there\u0027s a thousand things that have to happen in order. We are on number eight. You\u0027re talking about number six hundred and ninety-two.\u0022 indeed...\u003Cp\u003EWould it be too much to ask that we let woody get on with writing his mod and intensively question him about it *after* release?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-03-16T21:14:01Z","Content":"\n\u003Cp\u003ESpring break is upon us, and so that means I\u0027m taking a big break from everything, including writing this mod. Alas, I have another project that is far more demanding of my time and energy that I must work on this week: planning my wedding. Therefore, I shall continue work again next week.\u003C/p\u003E\u003Cp\u003EI likely will not be responding to things on the thread until the weekend, but I will be answering PMs.\u003C/p\u003E\u003Cp\u003EThanks for your support everyone!\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-03-16T21:41:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022woodywood245\u0022 data-cite=\u0022woodywood245\u0022\u003E\u003Cdiv\u003EI\u0027m adding for loops. I\u0027m HOPING to make them work like C-style loops, and if you really go crazy and want them to, they probably can.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot with what you\u0027ve proposed.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EArguing over which language to implement, and arguing over the detailed implementation of a feature that is two weeks away from implementation just wastes your time and mine, and delays the release of this mod.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m sorry if I came off that way. You can design it however you like. My motivation was less to tell you how to implement it and more to get you to stop spreading misinformation about some other programming languages that I really like. The claim that the for loop in C, C\u002B\u002B and Java is incapable of doing things beyond the simple counter mechanism that for loops tend to be used for in other languages is very false. And it matters because the for loop in C/C\u002B\u002B/java tends to be a bit less structured and formal and therefore can be a bit sloppy and error-prone. It would look like bad language design if it was made that sloppy with no benefit. Therefore hand-waving away that benefit and pretending it doesn\u0027t exist is unfair. \u003C/p\u003E\u003Cp\u003EI wasn\u0027t telling you how to write your language. I was defending other languages I like from false claims.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-16T21:48:22Z\u0022 title=\u002203/16/2014 09:48  PM\u0022 data-short=\u002210 yr\u0022\u003EMarch 16, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-03-16T23:23:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022woodywood245\u0022 data-cite=\u0022woodywood245\u0022\u003E\u003Cdiv\u003EAlas, I have another project that is far more demanding of my time and energy that I must work on this week: planning my wedding.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EReal life can really get in the way of KSP time \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E Good luck and have fun.\u003C/p\u003E\n"},{"CreatedByName":"drtedastro","CreatedById":70911,"CreatedDateTime":"2014-03-17T04:33:06Z","Content":"\n\u003Cp\u003EWoodywood245,\u003C/p\u003E\u003Cp\u003EI am looking forward to whatever YOU come up with, making it work the way YOU want it to....\u003C/p\u003E\u003Cp\u003ENice to have different mod\u0027s and methods for people to choose from.\u003C/p\u003E\u003Cp\u003EHave a great break and get some rest...\u003C/p\u003E\u003Cp\u003ECheers.\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2014-03-17T11:02:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022woodywood245\u0022 data-cite=\u0022woodywood245\u0022\u003E\u003Cdiv\u003ESpring break is upon us, and so that means I\u0027m taking a big break from everything, including writing this mod. Alas, I have another project that is far more demanding of my time and energy that I must work on this week: planning my wedding. Therefore, I shall continue work again next week.\u003Cp\u003EI likely will not be responding to things on the thread until the weekend, but I will be answering PMs.\u003C/p\u003E\u003Cp\u003EThanks for your support everyone!\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECongratulations on your upcoming wedding!\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-03-26T03:27:18Z","Content":"\n\u003Cp\u003EWell, back to it. I\u0027m going to start coding again this week, if I have time. I\u0027ve been thinking about a few details that I will talk about later. Just wanted to let you all know that I\u0027m back.\u003C/p\u003E\n"},{"CreatedByName":"drtedastro","CreatedById":70911,"CreatedDateTime":"2014-03-26T04:20:44Z","Content":"\n\u003Cp\u003EWelcome back. Hope you had a great time. Looking forward to whatever you come up with...\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-03-26T06:20:34Z","Content":"\n\u003Cp\u003EWell, I put in a little bit of work tonight, mostly to do with what I was working on before break. I leave you, however, with a feature that I finished a few weeks ago, and I\u0027m quite happy with: simplified plugin function registration.\u003C/p\u003E\u003Cp\u003EThe old kOS function registration looked something like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Evessel.parts.ForEach(part =\u0026gt; part.SendMessage(\u0022RegisterkOSExternalFunction\u0022, new object[] { \u0022test\u0022, this, \u0022TestFunction\u0022, 0 }));\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI hated it. It was long, unreadable, and nightmarish.\u003C/p\u003E\u003Cp\u003EThis is the new function registration method:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EFunctions.RegisterFunction(\u0022test\u0022, 0, new Func\u0026lt;string\u0026gt;(TestFunction));\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis utilizes a static function in Jebnix.Functions. The Functions class stores all functions that are registered with Jebnix inside a Dictionary, using a unique name and a Delegate.\u003C/p\u003E\u003Cp\u003EThe RegisterFunction function syntax is:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Epublic static bool RegisterFunction(string name, int paramCount, Delegate ptr)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ewhere:\u003C/p\u003E\u003Cp\u003Ename - Script-side function name\u003C/p\u003E\u003Cp\u003EparamCount - the number of parameters the function has\u003C/p\u003E\u003Cp\u003Eptr - A Delegate that points to your function\u003C/p\u003E\u003Cp\u003EBy the way, you can \u003Cstrong\u003Ecall other external functions from your plugin. This is how the standard library works!\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EHere\u0027s a full class that I use to test this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003Eusing System.Linq;\u003Cbr\u003Eusing System.Text;\u003Cbr\u003Eusing Jebnix;\u003Cbr\u003Eusing Jebnix.stdlib;\u003Cbr\u003Eusing Jebnix.Types;\u003Cbr\u003E\u003Cbr\u003Enamespace ExternalFunctionTest\u003Cbr\u003E{\u003Cbr\u003E    public class Class1\u003Cbr\u003E    {\u003Cbr\u003E        const string TEST_NAMESPACE = \u0022test\u0022;\u003Cbr\u003E\u003Cbr\u003E        public Class1()\u003Cbr\u003E        {\u003Cbr\u003E            Functions.RegisterFunction(\u0022test\u0022, 0, new Func\u0026lt;string\u0026gt;(TestFunction));\u003Cbr\u003E            Functions.RegisterFunction(\u0022librarytest\u0022, 1, new Action\u0026lt;Value\u0026gt;(LibraryPrintTest));\u003Cbr\u003E            Functions.RegisterFunction(\u0022getnumber\u0022, 0, new Func\u0026lt;double\u0026gt;(GetNumber));\u003Cbr\u003E            Functions.RegisterFunction(\u0022externaltest\u0022, 0, new Action(ExternalCallTest));\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        /// \u0026lt;summary\u0026gt;\u003Cbr\u003E        /// Returns \u0022This is a test function.\u0022\u003Cbr\u003E        /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E        /// \u0026lt;returns\u0026gt;\u0026lt;/returns\u0026gt;\u003Cbr\u003E        public string TestFunction()\u003Cbr\u003E        {\u003Cbr\u003E            return \u0022This is a test function.\u0022;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        /// \u0026lt;summary\u0026gt;\u003Cbr\u003E        /// Prints \u0022This is a library test.\u0022 to the screen via stdio, along with the string value given.\u003Cbr\u003E        /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E        public void LibraryPrintTest(Value value)\u003Cbr\u003E        {\u003Cbr\u003E            stdio.PrintLine(\u0022This is a library test. \u0022 \u002B value.StringValue);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        /// \u0026lt;summary\u0026gt;\u003Cbr\u003E        /// Prints \u0022This is an invocation test\u0022 to the screen via the registered function \u0022stdio_println_1\u0022.\u003Cbr\u003E        /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E        public void ExternalCallTest()\u003Cbr\u003E        {\u003Cbr\u003E            Functions.InvokeMethod(Functions.STDIO, \u0022println\u0022, \u0022This is an invocation test.\u0022);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        /// \u0026lt;summary\u0026gt;\u003Cbr\u003E        /// Returns the number 10.\u003Cbr\u003E        /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E        /// \u0026lt;returns\u0026gt;\u0026lt;/returns\u0026gt;\u003Cbr\u003E        public double GetNumber()\u003Cbr\u003E        {\u003Cbr\u003E            return 10;\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-03-31T04:17:24Z","Content":"\n\u003Cp\u003EI have a random question for those of you that have modded before. I have the thought of using an existing DLL that I wrote a few years back as part of this project, in order to make things a lot easier. This is the problem: the code for that project is closed-source. Obviously, as I wrote it, I could easily make it open-source, but I\u0027d rather not.\u003C/p\u003E\u003Cp\u003EDoes anyone know if I can use the library in question, or will I have to make portions of it open-source?\u003C/p\u003E\n"},{"CreatedByName":"diomedea","CreatedById":93700,"CreatedDateTime":"2014-03-31T09:44:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022woodywood245\u0022 data-cite=\u0022woodywood245\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EDoes anyone know if I can use the library in question, or will I have to make portions of it open-source?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe short answer is no, as your mod falls in the plugin category and \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/7529\u0022 rel=\u0022external nofollow\u0022\u003Ethese rules\u003C/a\u003E apply. \u003C/p\u003E\u003Cp\u003ESorry, that means you have to provide the sourcecode for any part of it. \u003C/p\u003E\u003Cp\u003EIf you can make the sourcecode for just the portion of that DLL that goes in the plugin, that\u0027s fine, as long as anybody may have a successful compile of your plugin from the sourcecode provided, without need to link to your closed DLL.\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-03-31T09:47:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022diomedea\u0022 data-cite=\u0022diomedea\u0022\u003E\u003Cdiv\u003EThe short answer is no, as your mod falls in the plugin category and \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/7529\u0022 rel=\u0022external nofollow\u0022\u003Ethese rules\u003C/a\u003E apply. \u003Cp\u003ESorry, that means you have to provide the sourcecode for any part of it. \u003C/p\u003E\u003Cp\u003EIf you can make the sourcecode for just the portion of that DLL that goes in the plugin, that\u0027s fine, as long as anybody may have a successful compile of your plugin from the sourcecode provided, without need to link to your closed DLL.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAlrighty, thanks! If I use a portion of my external library, I will probably make that portion open-source.\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-04-27T08:24:08Z","Content":"\n\u003Cp\u003EA few major life changes have gotten in the way of working on this project over the last few weeks, but I\u0027m back at it again. I\u0027m currently performing a major rewrite of the type system by doing away with the Value class and creating several new classes that essentially act as wrappers around the .Net types. I\u0027m not sure if this concept is going to work, so I\u0027ve split the code into a branch specifically for this rewrite. The rewrite will not affect the language design. It will allow for a broadened ability to use custom types and structures.\u003C/p\u003E\u003Cp\u003ETypes will have functions associated with them that will be able to be called directly from the language. Types will also have properties that can be accessed the same way. The same goes for structures.\u003C/p\u003E\u003Cp\u003EThe new Jebnix classes will be:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EJObject - Abstract class representing all value types\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EJObject\u0026lt;T\u0026gt; - Abstract class for single-value types\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EValueArray - Inherits JObject and ICollection\u0026lt;JObject\u0026gt;, represents a collection of JObjects.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EJBoolean - Inherits JInteger, represents a boolean type\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EJFloat - Inherits JObject\u0026lt;double\u0026gt;, represents a double-precision floating-point.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EJInteger - Inherits JObject\u0026lt;int\u0026gt;, represents an integer\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EJString - Inherits JObject\u0026lt;string\u0026gt;, represents a string\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EOrderedPair - Inherits JObject, represents an ordered pair structure\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EObviously, more structures, like Vector, Rotation, Quaternion, Heading, Body, etc, etc will be available upon release.\u003C/p\u003E\n"},{"CreatedByName":"diomedea","CreatedById":93700,"CreatedDateTime":"2014-04-27T09:35:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022woodywood245\u0022 data-cite=\u0022woodywood245\u0022\u003E\u003Cdiv\u003EA few major life changes have gotten in the way of working on this project over the last few weeks, but I\u0027m back at it again. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhile reading the first part of your post (and after almost a month without updates), I had a feeling you were going to leave this project. Really glad instead to find you are back \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E.\u003C/p\u003E\n"},{"CreatedByName":"nanobot","CreatedById":108199,"CreatedDateTime":"2014-04-27T12:55:17Z","Content":"\n\u003Cp\u003EBeautiful thread \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E I also hope that it will be possible to integrate the functionality into probe cores, since some people including me are reluctant having crafts that are depending on mod parts.\u003C/p\u003E\u003Cp\u003EAlso, liking the idea of an auto-pilot that is not considered as cheating because you can write the script yourself, which is obviously more fun \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EI have heard several lectures about compiler design and software engineering, too bad that I have never learned C# or KSP modding...\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-04-27T21:51:36Z","Content":"\n\u003Cp\u003EI\u0027ve got a question that I\u0027ve been bouncing around in my head for the last few weeks: how important is it to everyone to have an interactive/immediate mode in Jebnix?\u003C/p\u003E\u003Cp\u003EPersonally, I virtually never do anything in kOS that isn\u0027t already coded in a file somewhere, so the most I do in the console is use the RUN command.\u003C/p\u003E\u003Cp\u003EI\u0027ve been thinking about getting rid of the interactive mode in Jebnix and replacing it with a small set of utilities. What does you think?\u003C/p\u003E\n"},{"CreatedByName":"diomedea","CreatedById":93700,"CreatedDateTime":"2014-04-27T22:46:24Z","Content":"\n\u003Cp\u003EI used the interactive mode in kOS just to see if kOS worked. Never to do anything useful, used programs for everything, even when debugging. \u003C/p\u003E\u003Cp\u003ETherefore, at least for me, you could let that mode go.\u003C/p\u003E\n"},{"CreatedByName":"SpaceK531","CreatedById":62535,"CreatedDateTime":"2014-04-27T23:23:36Z","Content":"\n\u003Cp\u003EI am working on a part for the Open Part Mod that I thought would work really well as a kOS/Jebnix module. Some of you may even recognize what I got the inspiration from!\u003C/p\u003E\u003Cp\u003E(You can ignore the artifacts on the ribbon cable, those are a product of double-sided polygons which KSP does not have)\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/QfJocln.png\u0022 alt=\u0022QfJocln.png\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-04-28T01:49:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022woodywood245\u0022 data-cite=\u0022woodywood245\u0022\u003E\u003Cdiv\u003EI\u0027ve been thinking about getting rid of the interactive mode in Jebnix and replacing it with a small set of utilities. What does you think?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI typically use it to work out how commands are supposed to work exactly. Having to go back and forth to a file can be tiresome when just trying permutations of a line until you get it right.\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-04-28T01:56:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EI typically use it to work out how commands are supposed to work exactly. Having to go back and forth to a file can be tiresome when just trying permutations of a line until you get it right.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWould a combination of good documentation and a built-in editor with a \u0022Run Now\u0022 button help?\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-04-28T03:24:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022woodywood245\u0022 data-cite=\u0022woodywood245\u0022\u003E\u003Cdiv\u003EWould a combination of good documentation and a built-in editor with a \u0022Run Now\u0022 button help?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGood documentation certainly helps (although I seem to invariably wrestle with unfamiliar commands). As an avid IDE user, a built in editor feels a bit redundant, although any form of quickly running a command would be helpful of course \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EI will typically just stuff a couple of permutations of a command into the console until it stops spitting errors - let\u0027s call it educated brute forcing. I am not saying that is the ideal or only solution, but I seem to do that in other languages too. \u003Cspan style=\u0022font-size:8px;\u0022\u003EI must admit I have been very busy lately, so things might have changed without me noticing.\u003C/span\u003E\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-04-28T04:15:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EGood documentation certainly helps (although I seem to invariably wrestle with unfamiliar commands). As an avid IDE user, a built in editor feels a bit redundant, although any form of quickly running a command would be helpful of course \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003Cp\u003EI will typically just stuff a couple of permutations of a command into the console until it stops spitting errors - let\u0027s call it educated brute forcing. I am not saying that is the ideal or only solution, but I seem to do that in other languages too. \u003Cspan style=\u0022font-size:8px;\u0022\u003EI must admit I have been very busy lately, so things might have changed without me noticing.\u003C/span\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe primary reason I\u0027ve been toying with the idea of getting rid of the interactive mode is that I\u0027ve also been toying around with the idea of changing the language from interpreted to compiled. It would significantly simplify the project, as writing an interpreter is like writing a compiler that must track program state at the same time, and it can get ugly for certain things. I have a lot of more experience writing virtual machines and compilers than writing interpreters, and while this project is going as well as I hoped, I\u0027d like it to be finished sooner rather than later. While the kOS situation has improved with other projects, the complete and utter lack of good documentation on those projects is driving me up the wall. I think I\u0027d rather run my own system.\u003C/p\u003E\n"}]}