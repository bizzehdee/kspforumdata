{"TopicId":51073,"ForumId":36,"TopicTitle":"[PLUGIN\u002BPARTS][0.23] SCANsat terrain mapping","CreatedByName":"damny","CreatedById":78621,"CreatedDateTime":"2013-10-29T16:06:22Z","PageNum":62,"Articles":[{"CreatedByName":"leops1984","CreatedById":78510,"CreatedDateTime":"2014-05-12T15:25:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DMagic\u0022 data-cite=\u0022DMagic\u0022\u003E\u003Cdiv\u003ECan you set an action group for analyzing data in the VAB? And if so does it work?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, I can set an action group with the Analyze Data command. Yes, it works. \u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/RxrBaWI.png\u0022 alt=\u0022RxrBaWI.png\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Mecripp","CreatedById":181994,"CreatedDateTime":"2014-05-12T15:29:55Z","Content":"\n\u003Cp\u003EThink this will fix the toolbar icon\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EACTIVE_TEXTURE_MANAGER_CONFIG\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E folder = SCANsat\u003C/p\u003E\u003Cp\u003E enabled = true\u003C/p\u003E\u003Cp\u003E OVERRIDES\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E SCANsat/SCANsat_Icon\u003C/p\u003E\u003Cp\u003E SCANsat/SCANsat_Map_Icon\u003C/p\u003E\u003Cp\u003E SCANsat/SCANsat_SmallMap_Icon\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E compress = true\u003C/p\u003E\u003Cp\u003E mipmaps = false\u003C/p\u003E\u003Cp\u003E scale = 1\u003C/p\u003E\u003Cp\u003E max_size = 0\u003C/p\u003E\u003Cp\u003E make_not_readable = true\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-05-12T15:37:52Z","Content":"\n\u003Cp\u003EI think I\u0027ve found the problem, at least one aspect of the problem...\u003C/p\u003E\u003Cp\u003EIf you were using a previous version of SCANsat and you had an active vessel with the low res scanner turned off then the analyze button would be disabled and has no way to be re-enabled once you moved to the new version. This should be easy to fix. \u003C/p\u003E\u003Cp\u003EBut, that shouldn\u0027t cause new vessels to also lack the analyze button.\u003C/p\u003E\u003Cp\u003EEdit: I fixed the problem with existing vessels, it should theoretically make new vessels work properly too if they are also having this issue. I sent you a PM with the link, if it works I\u0027ll push the fix to TG.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-12T15:45:25Z\u0022 title=\u002205/12/2014 03:45  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 12, 2014\u003C/time\u003E by DMagic\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"leops1984","CreatedById":78510,"CreatedDateTime":"2014-05-12T16:09:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DMagic\u0022 data-cite=\u0022DMagic\u0022\u003E\u003Cdiv\u003EI think I\u0027ve found the problem, at least one aspect of the problem...\u003Cp\u003EIf you were using a previous version of SCANsat and you had an active vessel with the low res scanner turned off then the analyze button would be disabled and has no way to be re-enabled once you moved to the new version. This should be easy to fix. \u003C/p\u003E\u003Cp\u003EBut, that shouldn\u0027t cause new vessels to also lack the analyze button.\u003C/p\u003E\u003Cp\u003EEdit: I fixed the problem with existing vessels, it should theoretically make new vessels work properly too if they are also having this issue. I sent you a PM with the link, if it works I\u0027ll push the fix to TG.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks - I\u0027m about to head off to sleep (past midnight in my part of the world). Will let you know by this time tomorrow if the fix worked.\u003C/p\u003E\n"},{"CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-05-12T16:10:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tiron\u0022 data-cite=\u0022Tiron\u0022\u003E\u003Cdiv\u003EOn the RPM subject, it turns out that you don\u0027t have to rebuild all three plugins every time(at least with my setup). Apparently, any given RPM codebase spits the same version numbers out regardless of which plugins you build it with, the problem\u0027s just that the \u0027release\u0027 source spits out a different build ID from the official pre-built release.\u003Cp\u003ESo you can build all three *once*, and then only have to do do the \u0026lt;X\u0026gt;RPM for whichever one changes as long as you use the same RPM code.\u003C/p\u003E\u003Cp\u003ETo change RPM versions you\u0027d have to do all three again, though. Isn\u0027t this whole thing wonderfully terrible?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMy understanding is that, right now, as of v6, the version numbers are:\u003C/p\u003E\u003Cp\u003E[TABLE=class: grid, width: 500]\u003C/p\u003E\u003Cp\u003E[TR]\u003C/p\u003E\u003Cp\u003E[TD]Name[/TD]\u003C/p\u003E\u003Cp\u003E[TD]Version Format[/TD]\u003C/p\u003E\u003Cp\u003E[TD](Example) Version[/TD]\u003C/p\u003E\u003Cp\u003E[/TR]\u003C/p\u003E\u003Cp\u003E[TR]\u003C/p\u003E\u003Cp\u003E[TD]MechJeb (Release)[/TD]\u003C/p\u003E\u003Cp\u003E[TD]v.v.v.0[/TD]\u003C/p\u003E\u003Cp\u003E[TD]2.2.1.0[/TD]\u003C/p\u003E\u003Cp\u003E[/TR]\u003C/p\u003E\u003Cp\u003E[TR]\u003C/p\u003E\u003Cp\u003E[TD]MechJeb (Dev)[/TD]\u003C/p\u003E\u003Cp\u003E[TD]v.v.v.b[/TD]\u003C/p\u003E\u003Cp\u003E[TD]2.2.1.244[/TD]\u003C/p\u003E\u003Cp\u003E[/TR]\u003C/p\u003E\u003Cp\u003E[TR]\u003C/p\u003E\u003Cp\u003E[TD]RPM[/TD]\u003C/p\u003E\u003Cp\u003E[TD]v.v.x.y **[/TD]\u003C/p\u003E\u003Cp\u003E[TD]0.16.???.???[/TD]\u003C/p\u003E\u003Cp\u003E[/TR]\u003C/p\u003E\u003Cp\u003E[TR]\u003C/p\u003E\u003Cp\u003E[TD]MechJebRPM[/TD]\u003C/p\u003E\u003Cp\u003E[TD]0.0.0.0[/TD]\u003C/p\u003E\u003Cp\u003E[TD]0.0.0.0[/TD]\u003C/p\u003E\u003Cp\u003E[/TR]\u003C/p\u003E\u003Cp\u003E[TR]\u003C/p\u003E\u003Cp\u003E[TD]SCANsatRPM[/TD]\u003C/p\u003E\u003Cp\u003E[TD]0.0.0.0[/TD]\u003C/p\u003E\u003Cp\u003E[TD]0.0.0.0[/TD]\u003C/p\u003E\u003Cp\u003E[/TR]\u003C/p\u003E\u003Cp\u003E[TR]\u003C/p\u003E\u003Cp\u003E[TD]SCANsat[/TD]\u003C/p\u003E\u003Cp\u003E[TD]v.v.v.v[/TD]\u003C/p\u003E\u003Cp\u003E[TD]1.0.6.0[/TD]\u003C/p\u003E\u003Cp\u003E[/TR]\u003C/p\u003E\u003Cp\u003E[/TABLE]\u003C/p\u003E\u003Cp\u003Ewhere:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cstrong\u003Ev \u003C/strong\u003Eis a manually entered digit\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cstrong\u003Eb \u003C/strong\u003Eis the build ID, generated by the Jenkins build process\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cstrong\u003Ex\u003C/strong\u003E and \u003Cstrong\u003Ey \u003C/strong\u003Eare generated by the IDE at compile time\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cstrong\u003E??? \u003C/strong\u003Ejust means I did not bother to look it up\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[**]: In the AssemblyInfo.cs file, this would would look like: \u0022v.v.*\u0022 or \u0022v.v.*.*\u0022 where v are integers. As of now, RPM is the only one using compile-time-generated version numbers (SCANsat used to do this, and so did MechJeb a long time ago perhaps?)\u003C/p\u003E\u003Cp\u003ESo, if you build RPM yourself, you will make a DLL with a version number whose first and second components you can predict, but whose third and fourth components you can not.\u003C/p\u003E\n"},{"CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-05-12T16:43:37Z","Content":"\n\u003Cp\u003EUgh. There is a showstopping bug in my v6 release. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\u003Cp\u003EWhile trying to make a set of screenshots, I ran into this:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/ydtyBKZ.png\u0022 alt=\u0022ydtyBKZ.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EI got there by right clicking on the big map to zoom in, and it did something funny to the big map. I suspect that I have screwed up merges.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-12T16:57:34Z\u0022 title=\u002205/12/2014 04:57  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 12, 2014\u003C/time\u003E by technogeeky\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-05-12T17:07:00Z","Content":"\n\u003Cp\u003EArghh, I see the problem now, it\u0027s the same thing that was happening to me while testing the Kethane grid. The zoom map uses the same methods as the big map, so it breaks the height map array. \u003C/p\u003E\u003Cp\u003EI think I can fix it, I\u0027m testing a solution now.\u003C/p\u003E\u003Cp\u003EEdit: Should work now after my last pull, but probably warrants a bit of testing. The only end-user change is that you can\u0027t open the zoom map while the big map is still re-building (right-clicking on the map won\u0027t do anything).\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-12T18:14:04Z\u0022 title=\u002205/12/2014 06:14  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 12, 2014\u003C/time\u003E by DMagic\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"kiwiak","CreatedById":82796,"CreatedDateTime":"2014-05-12T17:18:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022technogeeky\u0022 data-cite=\u0022technogeeky\u0022\u003E\u003Cdiv\u003E I may be interested in doing line-style ground track on the big map too, since having on the order of ten thousand dots to represent several orbits is quite taxing. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat woudl be good, these dotted lines are sometimes hard to read.\u003C/p\u003E\u003Cp\u003EBy the way, another idea, showing ground track on third one orbit after current, fourth one etc, player woudl be able to enter specific number. Right now we see only current and next.\u003C/p\u003E\n"},{"CreatedByName":"Psawhn","CreatedById":109692,"CreatedDateTime":"2014-05-12T21:57:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022technogeeky\u0022 data-cite=\u0022technogeeky\u0022\u003E\u003Cdiv\u003EPsawhn (who made the ideal altitude calculator) figures that you can replicate the correct swath width of the Kethane hexes by simply using an FOV (or was it swath width?) of 2.25. Or maybe a shade less, to handle the case where you are scanning between two Kethane grids.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESwath width of 2.25, not FOV. A constant field of view will cause an increase in swath width with increasing altitude, but Kethane scanners only scan the cell directly underneath them, which are 2.25 degrees of longitude wide at the equator.\u003C/p\u003E\u003Cp\u003EFunnily enough, an orbit with \u003Cem\u003Eexactly\u003C/em\u003E 2.25 swath width and 0% sidelap shouldn\u0027t have any scanning between two Kethane grid, because of the exactness. But the calculator isn\u0027t set up to give you that (a new program with an analytical solution would be needed), and close enough is close enough anyway, so I never mind having a few missed vertical strips in my Kethane maps.\u003C/p\u003E\u003Cp\u003ENice job with the release of SCANsat v6, guys! I\u0027m looking forward to playing with it in my games!\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-12T23:02:41Z\u0022 title=\u002205/12/2014 11:02  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 12, 2014\u003C/time\u003E by Psawhn\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-05-13T03:02:28Z","Content":"\n\u003Cp\u003EAnother day, another \u0022final\u0022 version of V6 coming right up. I just need to clarify one issue with DMagic and then I\u0027ll re-publish the v6 release.\u003C/p\u003E\n"},{"CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-05-13T04:29:50Z","Content":"\n\u003Cp\u003EApologies for this taking so long... my test scanner saves with ALCOR capsules all have the rotato-kraken bug, so I have to make a new spacecraft to test it. I guess.\u003C/p\u003E\n"},{"CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-05-13T04:51:28Z","Content":"\n\u003Cp\u003EOnce again, here are the download links for the fixed, final v6 version.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/technogeeky/SCANsat/releases/tag/v6\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cstrong\u003EDOWNLOAD SCANsat v6\u003C/strong\u003E\u003C/a\u003E\u003Cstrong\u003E (from GitHub)\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/technogeeky/SCANsat/tree/v6\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cstrong\u003ESCANsat v6 SOURCE\u003C/strong\u003E\u003C/a\u003E\u003Cstrong\u003E (hosted by GitHub)\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThis version, like all new versions, has a hardcoded version (\u00221.0.6.0\u0022, meaning SCANsat 1 version 6).\u003C/p\u003E\u003Cp\u003EPlease also check out the new README. I have converted it to nice, link-filled, table-filled markdown. Please suggest fixes, changes, or additions.\u003C/p\u003E\u003Cp\u003EUnless this has any breaking changes, this \u003Cstrong\u003Efreezes\u003C/strong\u003E v6. All future features or bugfixes will be in v7 (or later).\u003C/p\u003E\u003Cp\u003EIf everything is reported as good, and Mihara is able to compile against these official versions (please inform s/he to try and do so), then I will make a new thread inthe \u003Cstrong\u003EShowcase\u003C/strong\u003E for the release version, and make a new thread in \u003Cstrong\u003EDevelopment\u003C/strong\u003E for us developers.\u003C/p\u003E\n"},{"CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-05-13T04:53:03Z","Content":"\n\u003Cp\u003EEverything I was able to test worked as I expected. There still might be some things not quite right with ssRPM, but it works at least.\u003C/p\u003E\u003Cp\u003EI will look at pushing down the map caching to ssRPM this week.\u003C/p\u003E\n"},{"CreatedByName":"phoenix_ca","CreatedById":50380,"CreatedDateTime":"2014-05-13T06:49:37Z","Content":"\n\u003Cp\u003ESo, Kethane support on a lark. Wows. Now all we need is ORS support and ScanSat will be able to scan all the things.\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-05-13T15:10:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022phoenix_ca\u0022 data-cite=\u0022phoenix_ca\u0022\u003E\u003Cdiv\u003ESo, Kethane support on a lark. Wows. Now all we need is ORS support and ScanSat will be able to scan all the things.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDoes anyone know how many resources use the Kethane grid? Or how many use ORS?\u003C/p\u003E\u003Cp\u003ESCANsat is limited to eight different scanner types, there are currently five (the mapTraq is type 0 and so doesn\u0027t count towards this limit), but I think the biome and anomaly type can be combined and the BTDT type can be dropped entirely. I can see no scenario where anyone would need background scanning for the BTDT, and it doesn\u0027t give science the way the other scanners do, so I think it would be better to create a different module specifically for that part. That leaves three default SCANsat scanner types. \u003C/p\u003E\u003Cp\u003EWith room for only five more types I\u0027m not sure how feasible it is to add support for more than the standard resources. Those would be Kethane, the Interstellar resources (maybe?, I haven\u0027t looked into these specifically) and maybe Ore. \u003C/p\u003E\u003Cp\u003EIncreasing the number of available scanner types is not trivial and might cause issues with the amount of data that needs to be stored in the persistent file. I\u0027m also not sure how feasible it is to switch which scanner types are available based on the resources mods that the user has installed. By that I mean that it might be necessary to explicitly support certain resource types (support for Kethane, but not Ore, for instance).\u003C/p\u003E\u003Cp\u003EI looked into ORS briefly. From what I can gather the scanner works by checking your vessel\u0027s current position, mapping that position onto a specific pixel on the resource texture, and checking that pixel for the presence of the specified resource. It should be no problem to adapt SCANsat to handle background scanning and map overlays for these types of resources. But again, there could be problems if there are too many types of ORS resources.\u003C/p\u003E\u003Cp\u003EThere are also massive dependency issues with all of this. I\u0027m not sure how to get around this problem other than by basically recreating large sections of the SCANsat code in a different .dll that can be optionally installed. And this would probably run into the same kinds of problems that RPM does when any of the other mods update.\u003C/p\u003E\u003Cp\u003ESo don\u0027t expect anything to come of this soon. It\u0027s obviously possible to include support for scanning other resource types, but the actual implementation has many issues that need to be worked out.\u003C/p\u003E\n"},{"CreatedByName":"Mecripp","CreatedById":181994,"CreatedDateTime":"2014-05-13T15:24:08Z","Content":"\n\u003Cp\u003E@Dmagic, I know this mods add\u0027s a hand full of thinks to scan and use\u0027s the Kethane plugin \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/79588-0-23-5-Modular-Kolonization-System-%280-16-3%29-2014-05-12\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/79588-0-23-5-Modular-Kolonization-System-%280-16-3%29-2014-05-12\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EBut the you have \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/43839-0-23-5-KSP-Interstellar-%28Toolbar-Integration-New-Models-New-Tech%29-Version-0-11\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/43839-0-23-5-KSP-Interstellar-%28Toolbar-Integration-New-Models-New-Tech%29-Version-0-11\u003C/a\u003E which think it use\u0027s ORS for all it\u0027s resorce.\u003C/p\u003E\n"},{"CreatedByName":"Starstrider42","CreatedById":104043,"CreatedDateTime":"2014-05-13T15:39:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DMagic\u0022 data-cite=\u0022DMagic\u0022\u003E\u003Cdiv\u003ESCANsat is limited to eight different scanner types, there are currently five (the mapTraq is type 0 and so doesn\u0027t count towards this limit), but I think the biome and anomaly type can be combined and the BTDT type can be dropped entirely. I can see no scenario where anyone would need background scanning for the BTDT, and it doesn\u0027t give science the way the other scanners do, so I think it would be better to create a different module specifically for that part. That leaves three default SCANsat scanner types. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI have to disagree. Biome and anomaly scanning are fundamentally different, and one might want to make a part that does one but not the other. So those should be kept separate.\u003C/p\u003E\u003Cp\u003ESecond the idea of making BTDT a fundamentally different component, though. The way it works right now is a bit unintuitive.\u003C/p\u003E\n"},{"CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-05-13T15:43:51Z","Content":"\n\u003Cp\u003EThe eight different scanner types restriction is coming from the bitmask implementation (ie, you can use any value from 2^0 to (2^8 - 1))? If that is the case, I still haven\u0027t seen any location (except that 3rd party scanner part) where the bitmask is used \u003Cem\u003Eas a bitmask\u003C/em\u003E -- and if that is the case, surely we can just claim to be able to support 255 types of scans?\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EAlso, please report back in this thread if you are using the final v6 release and it\u0027s working and doesn\u0027t have any bugs you are aware of. I still need to know that it works for others before I make the new threads.\u003C/p\u003E\n"},{"CreatedByName":"Starstrider42","CreatedById":104043,"CreatedDateTime":"2014-05-13T15:46:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022technogeeky\u0022 data-cite=\u0022technogeeky\u0022\u003E\u003Cdiv\u003EThe eight different scanner types restriction is coming from the bitmask implementation (ie, you can use any value from 2^0 to (2^8 - 1))? If that is the case, I still haven\u0027t seen any location (except that 3rd party scanner part) where the bitmask is used \u003Cem\u003Eas a bitmask\u003C/em\u003E -- and if that is the case, surely we can just claim to be able to support 255 types of scans?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat about the stock biome scanner? 24 == 16 | 8\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E\tname = SCANsat\u003Cbr\u003E\tsensorType = 24\u003Cbr\u003E\tfov = 4\u003Cbr\u003E\tmin_alt = 5000\u003Cbr\u003E\tmax_alt = 500000\u003Cbr\u003E\tbest_alt = 250000\u003Cbr\u003E\tpower = 1.5\u003Cbr\u003E\tscanName = multispectral scan\u003Cbr\u003E\tanimationName = Multi_Antenna\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-05-13T15:55:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Starstrider42\u0022 data-cite=\u0022Starstrider42\u0022\u003E\u003Cdiv\u003EWhat about the stock biome scanner? 24 == 16 | 8\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = SCANsat\u003Cbr\u003E    sensorType = 24\u003Cbr\u003E    fov = 4\u003Cbr\u003E    min_alt = 5000\u003Cbr\u003E    max_alt = 500000\u003Cbr\u003E    best_alt = 250000\u003Cbr\u003E    power = 1.5\u003Cbr\u003E    scanName = multispectral scan\u003Cbr\u003E    animationName = Multi_Antenna\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHow dare you correct my face to ... my face!\u003C/p\u003E\u003Cp\u003EFair point. \u003C/p\u003E\u003Cp\u003EThe current SCANtype code is:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        public enum SCANtype\u003Cbr\u003E        {\u003Cbr\u003E            Nothing = 0,         // no data\u003Cbr\u003E            AltimetryLoRes = 1, // low resolution altimetry (limited zoom)\u003Cbr\u003E            AltimetryHiRes = 2, // high resolution altimetry (unlimited zoom)\u003Cbr\u003E            Altimetry = 3,     // both (setting) or either (testing) altimetry\u003Cbr\u003E            //Slope = 4,        // slope data\u003Cbr\u003E            Biome = 8,        // biome data\u003Cbr\u003E            Anomaly = 16,        // anomalies (position of anomaly)\u003Cbr\u003E            AnomalyDetail = 32,    // anomaly detail (name of anomaly, etc.)\u003Cbr\u003E            Everything = 255    // everything\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI don\u0027t even know what the heck the Altimetry = 3 setting is for, but last time I checked 3 isn\u0027t a power of 2.\u003C/p\u003E\u003Cp\u003EThere also isn\u0027t a reason I can think of that this should be restricted to 2^8, other than existing support for \u0022everything\u0022.\u003C/p\u003E\u003Cp\u003EWhat I was getting at, is that you should be able to break up any part.cfg entries into multiple copies which just have each appropriate kind of scan, rather than using bitmasking. Sure, it\u0027s unnecessary duplication. And it\u0027s putting extra crap in persistent files that needn\u0027t be there.\u003C/p\u003E\u003Cp\u003EPerhaps all of this new scanning should just be in a different set of SCAN types anyway.\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-05-13T16:24:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022technogeeky\u0022 data-cite=\u0022technogeeky\u0022\u003E\u003Cdiv\u003EI don\u0027t even know what the heck the Altimetry = 3 setting is for, but last time I checked 3 isn\u0027t a power of 2.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI didn\u0027t consider using it as just a byte rather than a bitmask, but you\u0027re probably right, it should allow for plenty of different types.\u003C/p\u003E\u003Cp\u003EThe scanType of 3 is used internally for generating maps, basically it is just a way to check if the specified location has been scanned by any type of altimeter before going on to determine which type and assigning the proper terrain height value and color. I don\u0027t see any reason why it can\u0027t be modified to check either type separately rather than using the current method. Checking a small array twice is definitely not the performance-limiting step of generating the big map.\u003C/p\u003E\u003Cp\u003EUsing a separate type-enumeration might be the simplest method. I think dependency issues will require recreating a lot of this code anyway, so it might make sense to create a different scanner type for other mods and make that one not use a bitmask, while the standard scanner type could remain unchanged.\u003C/p\u003E\u003Cp\u003EMultiple modules for combined scanner types is another possibility. I figured out most of the issues with keeping things from getting too messy when I made my Universal Storage science parts with two experiments on the same part. They each have two science modules and two of my version of the environmental sensor module (that controls the readout for each part and the fancy animations).\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-13T16:32:52Z\u0022 title=\u002205/13/2014 04:32  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 13, 2014\u003C/time\u003E by DMagic\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-05-14T00:17:41Z","Content":"\n\u003Cp\u003EI checked out the latest release on my regular, full installation of KSP. I put a bunch of vessels in orbit (without cheating!) with different sensors at difference altitudes. I checked scanning for all of the different sensors, everything seems to be working, both for regular scanning and background scanning. All of my attempts to break the big map failed, so that\u0027s a good sign. \u003C/p\u003E\u003Cp\u003EI also did some brief testing without Toolbar and that was working fine. \u003C/p\u003E\u003Cp\u003EThere are a handful of very minor issues and one slightly less minor issue that I found. All of which, I think, can wait for another major update to fix. \u003C/p\u003E\u003Cp\u003EThe MapTraq has a non-functional \u0022analyze data\u0022 action group available in the VAB, and the BTDT has both the action group and the right-click event for \u0022analyze data\u0022, all of these should be removed. The commented out lines in SCANcontroller (437-439) that change the fov calculation also make it so the blinking orange/green light never goes away, at least I think that\u0027s what\u0027s happening. It doesn\u0027t affect scanning though. Also, I\u0027m not sure if anyone really cares about this, but the MapTraq and BTDT are kind-of sunken into the part they connect to.\u003C/p\u003E\u003Cp\u003EThe line in their part.cfg file should be: node_attach = 0.0, -0.1, 0.0, 0.0, -1.0, 0.0, 0, currently it\u0027s: node_attach = 0.0, 0.1, 0.0, 0.0, -1.0, 0.0, 0 (flip the sign on the second value).\u003C/p\u003E\u003Cp\u003EThe less-easy to fix problem is that when the big map overwrites low resolution altimetry data with high resolution data it only changes the color. The blockiness of the low resolution data remains until you rebuild the big map cache (just change the size a little bit). This isn\u0027t a big deal, it\u0027s easy enough to rebuild the cache and it\u0027s probably not all that common to scan with a low resolution scanner, then do it with a high resolution scanner in such quick succession. I also discovered that the big map cache is persistent through vessel and scene changes, which is nice.\u003C/p\u003E\u003Cp\u003EAlso, I would hold off on adding caching to SCANsatRPM. It\u0027s resetting the map size every time the map rebuilds, so a cache wouldn\u0027t do anything but take up space in memory. I\u0027m not entirely sure how it decides what size to set the map, so I don\u0027t know if this can be worked around easily. I\u0027ll try to test it out with RPM at some point and see if I can\u0027t get it to tell me what size it\u0027s setting the map at.\u003C/p\u003E\u003Cp\u003EOtherwise I think it\u0027s fine, everything seems to be working correctly.\u003C/p\u003E\n"},{"CreatedByName":"diomedea","CreatedById":93700,"CreatedDateTime":"2014-05-14T01:36:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DMagic\u0022 data-cite=\u0022DMagic\u0022\u003E\u003Cdiv\u003EDoes anyone know how many resources use the Kethane grid? Or how many use ORS?\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI see nobody yet provided info about the above question. \u003C/p\u003E\u003Cp\u003EI am using info from my install of the Kethane (v.0.8.5) and Interstellar mod (v.0.11, ORS comes with the latter). The current total of mappable resources tied to those mods is 6.\u003C/p\u003E\u003Cp\u003EKethane by itself defines the resources Kethane and KIntakeAir, but only Kethane is geo-localized (therefore to be mapped).\u003C/p\u003E\u003Cp\u003EAs previously said, Kethane allows its mapping to be used for Extraplanetary Launchpads, at the current version 4.1.2 EL defines one geo-localized resource (Ore) and two more non localized (Metal, RocketParts).\u003C/p\u003E\u003Cp\u003EInterStellar currently has 4 different geo-localized resources: Uranium, Thorium, Water, Alumina, the ones that may be found on land. It also defines the following atmospheric and oceanic resources (not localized):\u003C/p\u003E\u003Cp\u003EUF4, Ammonia, LqWater, Lithium, Argon, LqMethane, Deuterium, Helium-3\u003C/p\u003E\u003Cp\u003EHowever, my understanding is ORS is meant to standardize other resources, in future.\u003C/p\u003E\n"},{"CreatedByName":"phoenix_ca","CreatedById":50380,"CreatedDateTime":"2014-05-14T01:42:59Z","Content":"\n\u003Cp\u003EModular Kolonization System adds to Kethane: Minerals, Ore, Substrate, and Water. However, RoverDude has talked about adding support for ORS. (MKS is the only reason I have Kethane installed. If he switched to ORS, or added it as an option, I\u0027d dump it entirely. Then again my reason for that is how painful it is to map for kethane.)\u003C/p\u003E\n"},{"CreatedByName":"Starstrider42","CreatedById":104043,"CreatedDateTime":"2014-05-14T01:49:04Z","Content":"\n\u003Cp\u003EI believe Kethane also has its own water expansion, separate from MKS.\u003C/p\u003E\n"}]}