{"TopicId":62301,"ForumId":36,"TopicTitle":"[WIP] \u0026quot;Connected Living Space\u0026quot;- API for connected habs (new download 9 June 14)","CreatedByName":"codepoet","CreatedById":73449,"CreatedDateTime":"2014-02-05T23:05:04Z","PageNum":2,"Articles":[{"CreatedByName":"Captain Sierra","CreatedById":74666,"CreatedDateTime":"2014-02-09T17:03:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Fraz86\u0022 data-cite=\u0022Fraz86\u0022\u003E\u003Cdiv\u003EThe mk1-2 pod actually does visually have hatches on both the top and bottom nodes (and it does not have a heatshield).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECorrect. It\u0027s the Mk 1 pod that lacks hatches (heat shield on bottom, and I\u0027d like to see a kerbal get his big helmet through the node on top, which also lacks a visual hatch).\u003C/p\u003E\n"},{"CreatedByName":"Captain Sierra","CreatedById":74666,"CreatedDateTime":"2014-02-09T17:04:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022codepoet\u0022 data-cite=\u0022codepoet\u0022\u003E\u003Cdiv\u003EYep, that is what I am planning. At the moment I am just writing the code to wall the part tree, identifying which part in in which space, reading the config to take into account which parts are habitable / navigable / passable which attachment nodes are navigable / passable etc etc.\u003Cp\u003EBut once I have done all that boring sort of work, I hope to be able to add some pretty as well \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFun fun! I see many possibilities for enhanced IVA plugins based off this (clicking hatches to jump to an empty seat in the next pod, etc.).\u003C/p\u003E\n"},{"CreatedByName":"codepoet","CreatedById":73449,"CreatedDateTime":"2014-02-09T17:30:56Z","Content":"\n\u003Cp\u003EYep, that is what I am hoping. Once there is a standardised way of deciding if two parts are connected internally or not, then lots of other things become possible. (personal hygene mod anyone? - Oh, sorry - forget I mentioned it.)\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-02-09T18:31:13Z","Content":"\n\u003Cp\u003Eregex: I do like that random-walkies idea.\u003C/p\u003E\n"},{"CreatedByName":"aeTIos","CreatedById":17032,"CreatedDateTime":"2014-02-09T18:52:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Captain Sierra\u0022 data-cite=\u0022Captain Sierra\u0022\u003E\u003Cdiv\u003ECorrect. It\u0027s the Mk 1 pod that lacks hatches (heat shield on bottom, and I\u0027d like to see a kerbal get his big helmet through the node on top, which also lacks a visual hatch).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOnly 1.25m\u002B stack nodes are traversable, as mentioned in the Clamp-O-Tron Jr. description.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NathanKell\u0022 data-cite=\u0022NathanKell\u0022\u003E\u003Cdiv\u003Eregex: I do like that random-walkies idea.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI also like this. It might however be nice to have a visual indicator of moving kerbals. Maybe a dot on the pod displaying their position and when mouse-overed, their name?\u003C/p\u003E\n"},{"CreatedByName":"codepoet","CreatedById":73449,"CreatedDateTime":"2014-02-10T18:49:27Z","Content":"\n\u003Cp\u003EMore baby steps, but in the right direction. Here is a picture:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://s1.postimg.org/53yzuy027/screenshot101.png\u0022 alt=\u0022screenshot101.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EWhat this shows is that the hitchhiker storage container and the small landing can are considered to be in the same living space, even though there are two docking ports inbetween them, which themselves can not house a kerbal. This has been done by assigning configuration to the docking port parts to mark them as being \u0022passable\u0022. This can be done to any part, so parts such as the structural fusilage and 1.25m-\u0026gt;2.5m adapters will also be able to be configured to allow kerbals to pass along them to get from one habitable part to another.\u003C/p\u003E\u003Cp\u003ENext step is to make specific attachment nodes either passable or impassable.\u003C/p\u003E\n"},{"CreatedByName":"a__gun","CreatedById":83859,"CreatedDateTime":"2014-02-10T19:35:15Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022codepoet\u0022 data-cite=\u0022codepoet\u0022\u003E\u003Cdiv\u003EMore baby steps, but in the right direction. Here is a picture:\u003Cp\u003E\u003Ca href=\u0022http://s1.postimg.org/53yzuy027/screenshot101.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://s1.postimg.org/53yzuy027/screenshot101.png\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EWhat this shows is that the hitchhiker storage container and the small landing can are considered to be in the same living space, even though there are two docking ports inbetween them, which themselves can not house a kerbal. This has been done by assigning configuration to the docking port parts to mark them as being \u0022passable\u0022. This can be done to any part, so parts such as the structural fusilage and 1.25m-\u0026gt;2.5m adapters will also be able to be configured to allow kerbals to pass along them to get from one habitable part to another.\u003C/p\u003E\u003Cp\u003ENext step is to make specific attachment nodes either passable or impassable.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou previously mentioned heuristically working out wether unsupported parts were passable or not. Can I suggest that the size of attachment nodes would be a easy way to do this. Of course it does assume attachment nodes are all set to sensible sizes, which they are not, but logically anything with a 1.25m node or above should fit a kerbal through. On second thoughts, I suppose you don\u0027t want kerbals passing through fuel tanks and batteries regardless of their size.....nevermind :/\u003C/p\u003E\n"},{"CreatedByName":"codepoet","CreatedById":73449,"CreatedDateTime":"2014-02-10T21:05:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022a__gun\u0022 data-cite=\u0022a__gun\u0022\u003E\u003Cdiv\u003EYou previously mentioned heuristically working out wether unsupported parts were passable or not. Can I suggest that the size of attachment nodes would be a easy way to do this. Of course it does assume attachment nodes are all set to sensible sizes, which they are not, but logically anything with a 1.25m node or above should fit a kerbal through. On second thoughts, I suppose you don\u0027t want kerbals passing through fuel tanks and batteries regardless of their size.....nevermind :/\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat you say is good thinking. Indeed I had pretty much that in mind already. The first test is \u0022can a kerbal be inside this part?\u0022 If a kerbal can not be inside the part (ie a battery of a fuel tank) then obviously the attachment nodes on that part will not allow a kerbal in. However if a kerbal is allowed inside a part, how do we decide which of the attachment nodes will provide a sensible way in and out? So in rough outline, what I am planning is something like this:\u003C/p\u003E\u003Cp\u003E1) Can a kerbal be inside this part? if not then its attachment nodes are impassable\u003C/p\u003E\u003Cp\u003E2) Is there config provided with the part that tells us whcih nodes are passable and which are impassable? (This allows part makers to decide for themselves which of their attachment nodes they intended to be passable)\u003C/p\u003E\u003Cp\u003E3) if there is not config provided with the part, is there some config provided by the ConnectedLivingSpace mod for that particular part (I hope to provide such config for populat part packs)\u003C/p\u003E\u003Cp\u003E4) If none of the above help, then use some heuristics (ie attachment node size, does the name of the part include \u0022docking port\u0022 etc) to make an educated guess.\u003C/p\u003E\u003Cp\u003EHopefully 2 \u0026amp; 3 will answer the question for most parts, but 4 will keep things working valuely sensibly. If 4) makes a bad choice then some config can be provided in a future release of either ConnectedLivingSpace or the part to set things straight.\u003C/p\u003E\n"},{"CreatedByName":"codepoet","CreatedById":73449,"CreatedDateTime":"2014-02-10T21:22:02Z","Content":"\n\u003Cp\u003EAnother small step. Consider this image:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://s30.postimg.org/dnzddjc2p/screenshot102.png\u0022 alt=\u0022screenshot102.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EThis is the same craft as the previous image I posted. However there are now 3 seperate living spaces. The reason is that I have configured the bottom node of the Mk1 Command Pod to be impassable (as someone suggested earlier on the thread that it was supposed to have a heat shield on the bottom.)\u003C/p\u003E\u003Cp\u003EThe point here is that the CLS mod is not only taking into account whether or not a part has been marked as passable, but also if the particular nodes that the parts are attached to each other on are passable.\u003C/p\u003E\u003Cp\u003EThere is an inevitable debate that we will be able to have very soon - what is that list of stock parts that should be considered passable, and what is the list of stock parts that should be considered passable but only on certain nodes? I will post my own opinion in answer to this question soon, but if someone else wants to beat me to it, be my guest...\u003C/p\u003E\n"},{"CreatedByName":"nothke","CreatedById":51185,"CreatedDateTime":"2014-02-10T21:32:07Z","Content":"\n\u003Cp\u003ENodes are more important than parts. Consider the free attach points as well. Note that you can attach clamp-o-trons anywhere, so even if you attach them to the side of the hitchhiker they should still be passable.\u003C/p\u003E\n"},{"CreatedByName":"codepoet","CreatedById":73449,"CreatedDateTime":"2014-02-10T21:39:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nothke\u0022 data-cite=\u0022nothke\u0022\u003E\u003Cdiv\u003ENodes are more important than parts. Consider the free attach points as well. Note that you can attach clamp-o-trons anywhere, so even if you attach them to the side of the hitchhiker they should still be passable.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYep, I have got a big comment in my code at the moment that says \u0022//TODO - work out what to do with surface attachements!\u0022\u003C/p\u003E\u003Cp\u003EAs for nodes/parts, I suppose a part that can not have a kerbal in it is just a special case where all its attachment nodes are impassable.\u003C/p\u003E\n"},{"CreatedByName":"WillHop","CreatedById":67486,"CreatedDateTime":"2014-02-10T21:58:53Z","Content":"\n\u003Cp\u003EJust a suggestion I thought would be pretty cool (no idea if possible or not!) - building on from the idea that regex had a couple of pages back, as well as the randomisation of the position of Kerbals in crafts, maybe a little dot depicting where the Kerbal is in the craft, and when the position of the Kerbal changes, the dot could move around the station? No idea if possible, and quite pointless, but I think it would look pretty cool and actually make me feel like Kerbals were inside the station I spent 3 weeks building \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"nothke","CreatedById":51185,"CreatedDateTime":"2014-02-10T22:01:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022codepoet\u0022 data-cite=\u0022codepoet\u0022\u003E\u003Cdiv\u003EThere is an inevitable debate that we will be able to have very soon - what is that list of stock parts that should be considered passable, and what is the list of stock parts that should be considered passable but only on certain nodes? I will post my own opinion in answer to this question soon, but if someone else wants to beat me to it, be my guest...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, if you take out the controversial fuel tanks, batteries, (which IMO should not be passable even when they\u0027re empty), then you are left with pods, hitchhiker, lab, campotron1m, inline and senior, the 1m structural fuselage, the adapters and the 6-way node. That\u0027s basically it for the stock parts =)\u003C/p\u003E\n"},{"CreatedByName":"codepoet","CreatedById":73449,"CreatedDateTime":"2014-02-10T22:03:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022WillHop\u0022 data-cite=\u0022WillHop\u0022\u003E\u003Cdiv\u003EJust a suggestion I thought would be pretty cool (no idea if possible or not!) - building on from the idea that regex had a couple of pages back, as well as the randomisation of the position of Kerbals in crafts, maybe a little dot depicting where the Kerbal is in the craft, and when the position of the Kerbal changes, the dot could move around the station? No idea if possible, and quite pointless, but I think it would look pretty cool and actually make me feel like Kerbals were inside the station I spent 3 weeks building \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI am sure that would be possible - I think it has already been suggested by someone else earlier on the thread. I think that the scope of this mod will be just identify how the living spaces are connected and then make that information as an API to other mods, or another modder (or even myself) could be moved to impliment the functionaily that you suggest.\u003C/p\u003E\u003Cp\u003EWhat I am trying to achieve is to provide a way of ensuring that all the various different functionailties that are being suggested do not end up having to decide for themselves (possibly differently) which living spaces are connected to each other.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-10T22:04:24Z\u0022 title=\u002202/10/2014 10:04  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 10, 2014\u003C/time\u003E by codepoet\u003C/strong\u003E\n\u003Cbr\u003Espelling\n\u003C/span\u003E\n"},{"CreatedByName":"Fraz86","CreatedById":90101,"CreatedDateTime":"2014-02-10T22:04:19Z","Content":"\n\u003Cp\u003EI would suggest that surface attachments should not function as passable nodes by default behavior. Only a few specific parts should have that functionality, such as the BZ-62 Radial Attachment Point and the Clamp-O-Tron Docking Port.\u003C/p\u003E\n"},{"CreatedByName":"codepoet","CreatedById":73449,"CreatedDateTime":"2014-02-10T22:06:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nothke\u0022 data-cite=\u0022nothke\u0022\u003E\u003Cdiv\u003EWell, if you take out the controversial fuel tanks, batteries, (which IMO should not be passable even when they\u0027re empty), then you are left with pods, hitchhiker, lab, campotron1m, inline and senior, the 1m structural fuselage, the adapters and the 6-way node. That\u0027s basically it for the stock parts =)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere is also the Cupola pod that has a special case window node on the top that in my opinion should be impassable, and also the small one-man pod (mk1) which it has been suggested should be not passable on the bottom node as it is a heatshield, and not be passable on the top as it is too small. I agree with the later of these, I am undecided about the heatshield arguement.\u003C/p\u003E\n"},{"CreatedByName":"Ralathon","CreatedById":71537,"CreatedDateTime":"2014-02-10T22:23:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022codepoet\u0022 data-cite=\u0022codepoet\u0022\u003E\u003Cdiv\u003EThere is also the Cupola pod that has a special case window node on the top that in my opinion should be impassable, and also the small one-man pod (mk1) which it has been suggested should be not passable on the bottom node as it is a heatshield, and not be passable on the top as it is too small. I agree with the later of these, I am undecided about the heatshield arguement.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EA specially modded Gemini had a flight proven heatshield that doubled as hatch. So it is certainly possible to pass through a heatshield without compromising its protection.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://www.space1.com/pdf/news1096.pdf\u0022 rel=\u0022external nofollow\u0022\u003Esource\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"Fraz86","CreatedById":90101,"CreatedDateTime":"2014-02-10T22:44:15Z","Content":"\n\u003Cp\u003EUpon further consideration, I\u0027d like to argue in favor of completely disallowing surface attachments as passable nodes. It\u0027s simply too abusable, allowing players to slap on Radial Attachments to create passable nodes anywhere they desire, including clearly impassable parts of a module. Surface attachments would also be immersion-breaking in regard to consistency with the IVA view.\u003C/p\u003E\u003Cp\u003EAlong similar lines, when deciding which nodes are passable or not, it seems to me the most intuitive and immersive solution is simply: does the node visually appear intended to function as a passable hatch? I understand this is impossible to code as a heuristic, but I don\u0027t think it\u0027s necessary to have a perfect heuristic, given how easy it will be to add the needed config definitions via a ModuleManager file.\u003C/p\u003E\n"},{"CreatedByName":"codepoet","CreatedById":73449,"CreatedDateTime":"2014-02-10T22:50:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Fraz86\u0022 data-cite=\u0022Fraz86\u0022\u003E\u003Cdiv\u003E... I understand this is impossible to code as a heuristic, but I don\u0027t think it\u0027s necessary to have a perfect heuristic, given how easy it will be to add the needed config definitions via a ModuleManager file.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI am not familiar with ModuleManager, but several people have posted on this thread suggesting that it is going to make my life easier. Could someone explain very simplky what it does and how it can help with this project?\u003C/p\u003E\n"},{"CreatedByName":"Ralathon","CreatedById":71537,"CreatedDateTime":"2014-02-10T23:00:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022codepoet\u0022 data-cite=\u0022codepoet\u0022\u003E\u003Cdiv\u003EI am not familiar with ModuleManager, but several people have posted on this thread suggesting that it is going to make my life easier. Could someone explain very simplky what it does and how it can help with this project?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EModuleManager is a tiny DLL that allows you to adjust anything about any part.cfg file. For example, say you want to add a module to the small fueltank and remove its fuel content. All you need to do is add a .cfg file that contains this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E@PART[fuelTank]{\u003Cbr\u003E    !RESOURCE[LiquidFuel] {}\u003Cbr\u003E    !RESOURCE[Oxidizer] {}\u003Cbr\u003E    MODULE\u003Cbr\u003E    {\u003Cbr\u003E        name = Module_of_awesome\u003Cbr\u003E        awesomeness = 2003921337\u003Cbr\u003E        modifier = epic\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eand Modulemanager will automatically apply it to the stock fuel tank. It keeps everything tidy and is very powerful.\u003C/p\u003E\n"},{"CreatedByName":"Fraz86","CreatedById":90101,"CreatedDateTime":"2014-02-10T23:06:39Z","Content":"\n\u003Cp\u003EBasically, it allows you to easily edit the content of part cfg files (from stock or mods), without actually messing around with the individual files. So, you could use a single cfg file to add all of your node definitions. It would look like this:\u003C/p\u003E\u003Cp\u003E@PART[mk1pod]\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E [passable node definition here]\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003E@PART[mk1-2pod]\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E [passable node definition here]\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003Eetc.\u003C/p\u003E\n"},{"CreatedByName":"codepoet","CreatedById":73449,"CreatedDateTime":"2014-02-10T23:07:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ralathon\u0022 data-cite=\u0022Ralathon\u0022\u003E\u003Cdiv\u003EModuleManager is a tiny DLL that allows you to adjust anything about any part.cfg file. For example, say you want to add a module to the small fueltank and remove its fuel content. All you need to do is add a .cfg file that contains this:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E@PART[fuelTank]{\u003Cbr\u003E    !RESOURCE[LiquidFuel] {}\u003Cbr\u003E    !RESOURCE[Oxidizer] {}\u003Cbr\u003E    MODULE\u003Cbr\u003E    {\u003Cbr\u003E        name = Module_of_awesome\u003Cbr\u003E        awesomeness = 2003921337\u003Cbr\u003E        modifier = epic\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eand Modulemanager will automatically apply it to the stock fuel tank. It keeps everything tidy and is very powerful.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESo I could use it to ship default settings for stock / other modders parts (unless others modders choose to support CLS themselves)? I can see how that would be very handy!\u003C/p\u003E\u003Cp\u003ECan it be used to say \u0022add these config options unless they are already set\u0022? I would like to give first preference to any setting that modders add to their own parts. I think that it is the modder who should be the authority on which attachment nodes they wanted to be passable/impassable.\u003C/p\u003E\n"},{"CreatedByName":"Ralathon","CreatedById":71537,"CreatedDateTime":"2014-02-10T23:14:28Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022codepoet\u0022 data-cite=\u0022codepoet\u0022\u003E\u003Cdiv\u003ESo I could use it to ship default settings for stock / other modders parts (unless others modders choose to support CLS themselves)? I can see how that would be very handy!\u003Cp\u003ECan it be used to say \u0022add these config options unless they are already set\u0022? I would like to give first preference to any setting that modders add to their own parts. I think that it is the modder who should be the authority on which attachment nodes they wanted to be passable/impassable.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m not an expert on Module Manager code. But I know that it has a [final] command which means it makes that pass last. If modders want their own definitions over yours they can just add their own Module Manager file with a [final] so it executes after yours. This means that it will default to your settings but can be overwritten if the modder desires it.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/55219-Module-Manager-1-5-6-%28Jan-6%29\u0022 rel=\u0022external nofollow\u0022\u003EHere\u0027s\u003C/a\u003E the thread on Modulemanager. If there is a more elegant solution I suggest looking here.\u003C/p\u003E\n"},{"CreatedByName":"regex","CreatedById":70807,"CreatedDateTime":"2014-02-10T23:24:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Fraz86\u0022 data-cite=\u0022Fraz86\u0022\u003E\u003Cdiv\u003EUpon further consideration, I\u0027d like to argue in favor of completely disallowing surface attachments as passable nodes. It\u0027s simply too abusable, allowing players to slap on Radial Attachments to create passable nodes anywhere they desire, including clearly impassable parts of a module. Surface attachments would also be immersion-breaking in regard to consistency with the IVA view.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t see how surface attachments or other parts being passable would be \u0022abusable\u0022 in any sense, since moving Kerbals around doesn\u0027t give the player any real advantage in gameplay. I mean, you\u0027re basically arguing that people would be \u0022cheating\u0022 by moving Kerbals through surface attachable nodes. Most of this is \u0022quality of life\u0022 improvements anyway; if it needs to be refined for a life support mod that is easily done through ModuleManager. Besides, ruling out surface attach parts kills certain things like the radial attachment node being used for an impromptu corner which ruins creativity.\u003C/p\u003E\u003Cp\u003EE: Crap, sorry for ****ting up this thread after you just made a mention of using ModuleManager and having modders override your config if needed...\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-10T23:40:13Z\u0022 title=\u002202/10/2014 11:40  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 10, 2014\u003C/time\u003E by regex\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Fraz86","CreatedById":90101,"CreatedDateTime":"2014-02-11T00:10:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022regex\u0022 data-cite=\u0022regex\u0022\u003E\u003Cdiv\u003EI don\u0027t see how surface attachments or other parts being passable would be \u0022abusable\u0022 in any sense, since moving Kerbals around doesn\u0027t give the player any real advantage in gameplay. I mean, you\u0027re basically arguing that people would be \u0022cheating\u0022 by moving Kerbals through surface attachable nodes. Most of this is \u0022quality of life\u0022 improvements anyway; if it needs to be refined for a life support mod that is easily done through ModuleManager. Besides, ruling out surface attach parts kills certain things like the radial attachment node being used for an impromptu corner which ruins creativity.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027d argue that this whole plugin serves to increase immersiveness, because, as you point out, defining a contiguous habitable area has minimal implications for gameplay. So, my proposal is based on what seems most immersive to me, which would be only allowing habitable areas to connect in places where they appear to have been designed to do so.\u003C/p\u003E\n"}]}