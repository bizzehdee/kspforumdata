{"TopicId":60281,"ForumId":36,"TopicTitle":"[Hardware, Plugin] Arduino based physical display \u002B serial port io\u002B tutorial (24-11-19)","CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2014-01-18T01:25:25Z","PageNum":58,"Articles":[{"CreatedByName":"cm2227","CreatedById":54899,"CreatedDateTime":"2016-04-06T13:32:26Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222498099\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221459948493\u0022 data-ipsquote-userid=\u002211842\u0022 data-ipsquote-username=\u0022zitronen\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n17 minutes ago, zitronen said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI can add more things to the packet, but we should have a discussion of what to include, there is limited space left. Stibbons is working on adding a bunch of orbital vector stuff as well.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you are using a controller with throttle, couldn\u0027t you connect your dial to it directly?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWell that is not an option for me, as I\u0027m a USB joystick (Saitek X52) and its throttle. Also I plan on implementing an arduino-based autopilot, which would require reading back throttle to see if the command was executed correctly.\n\u003C/p\u003E\n\u003Cp\u003E\nI would gladly take part in a discussion on what to add to the VData packet. Orbital vector stuff would also be pretty interesting. What is the space limitation?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-04-06T13:33:23Z\u0022 title=\u002204/06/2016 01:33  PM\u0022 data-short=\u00228 yr\u0022\u003EApril 6, 2016\u003C/time\u003E by cm2227\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2016-04-06T13:45:16Z","Content":"\n\u003Cp\u003E\nThe code is there for different packets, we might need to do that at some point.\n\u003C/p\u003E\n\u003Cp\u003E\nThe limit isn\u0027t just the amount of data transfered though, it\u0027s also how much RAM we have to work with. If you break them into different packet sets all the data structures still have to be loaded into the RAM of the arduino. I am intentionally limiting things to 255 bytes, because I think that\u0027s a reasonably large chunk of the RAM.\n\u003C/p\u003E\n"},{"CreatedByName":"cm2227","CreatedById":54899,"CreatedDateTime":"2016-04-06T13:53:05Z","Content":"\n\u003Cp\u003E\nIf you are open to discussion - which would essentially mean letting other people interfere with your voluntary work - I have several ideas.\n\u003C/p\u003E\n\u003Cp\u003E\nHow about adding a few float variables whose content is determined by command in the control packet, i.e. the arduino requests which values it needs?\n\u003C/p\u003E\n\u003Cp\u003E\nOr a second type of packet which contains more static information, like the consumables max values or SOI and is only sent every few seconds?\n\u003C/p\u003E\n\u003Cp\u003E\nOr an optional packet with rarely used info, which is only sent on request by the arduino?\n\u003C/p\u003E\n"},{"CreatedByName":"richfiles","CreatedById":129946,"CreatedDateTime":"2016-04-06T20:23:30Z","Content":"\n\u003Cp\u003E\nI do forget how\u00A0small these things can be sometimes... It\u0027s also easier (for me) to remember them by\u00A0the flash vs the SRAM, from a program storage point of view. Is it possible to consider the option of a KSP Serial IO \u0022lite\u0022 (basically, just the current state of the plugin, which would run on\u00A0any Arduino), and a second \u0022extended data\u0022 version that maybe requires a Mega for installation, due to increased memory requirements? The difference would be that one version would enable at least one or three alternate packets (a single packet ID bit could, of course, represent 2 packets, while 2 packet ID bits would obviously be able to represent up to 4 packet configurations).\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m curious what this runs on currently. I have a pile of Megas and Pro Minis, myself. Those have 8K and 1K or SRAM respectively. I think the Uno has 2K SRAM. That means for a Mini, the packet is 1/4 of the entire RAM (would it even run on a Mini?). For\u00A0the Uno, the packet is 1/8 the RAM. For the Mega, the packet\u00A0is a far more comfortable 1/32 of the total SRAM. I think that could be a factor for those who want more from this plugin... If you want more, splurge on a higher end Arduino. Consider making the Mega a requirement for running more than 1 packet. It would make sense anyway... Someone running more packets most likely has more analog gauges, more displays, more LEDs... They probably would need the additional I/O anyway.\u003Cbr\u003E\u003Cbr\u003E\nI\u00A0myself am already looking at a proposed minimum of 3 Arduinos\u00A0for my project, and possibly a Raspberry Pi later on, just as it is! My intention is to have the main Arduino run as many analog gauges as possible, since those are just basic\u00A0PWM writes. It\u0027s probably \u0022cheaper\u0022, performance wise, to write the PWM values directly, than try to package the numbers up and\u00A0communicate those serially to another device. It really already makes sense to me, that if a project is already large enough to potentially exceed the capacity of a single Arduino, that maybe asking for a better Arduino as your starting point might actually be reasonable, at least for more complex builds. Like I said... If a build only needs one packet, then there need not be a limit. If two or more packets are desired, I think it\u0027d be fair to ask for a larger Arduino in the first place, to run it.\u003Cbr\u003E\u003Cbr\u003E\nAs for splitting my Kerbal controller project off into different microcontrollers for different distributed functions,\u00A0My FDAI (navball) is certain to require it\u0027s own controller. If an Arduino can\u0027t handle the processing grunt to calculate the attenuation and polarity values for the 9 synchro signal lines, based on the angle of the three attitude axes, then I have a Teensy 3.1 as an alternative controller.\u00A0That runs a whooping 72 MHz, and has 64K of RAM, and 256K of flash... Surely that will be fast enough for the task! I also have to calculate the heading vector and translate that to a pair of crosshair configured needle meters that hover in front of the navball. That\u0027s how I would show my node/attitude markers. Again, all that would be offloaded from the main KSP Serial IO Arduino. All the main Arduino would have to do is send out the three attitude axes and the heading values\u003Cbr\u003E\u003Cbr\u003E\nFinally, I want it to send all numeric readout data to a second Arduino, where it will break the numbers down into their individual\u00A0digits and send them out over SPI to my displays... I still find it amazing that it has to be done that way! I kinda (really) wish someone would come up with an \u0022easy\u0022 library that handled breaking up simple numbers and strings and communicating with\u00A0the MAX7219 chips\u00A0automatically. I only got mine working by editing example code... I barely even understood how it\u00A0works! Getting no compile errors was more trial and error than actually getting it... Anyhow... Those last two things ain\u0027t your problem. I just simply don\u0027t get C the way I used to get BASIC.\u00A0\u003Cimg alt=\u0022:confused:\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 title=\u0022:confused:\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-04-06T20:25:03Z\u0022 title=\u002204/06/2016 08:25  PM\u0022 data-short=\u00228 yr\u0022\u003EApril 6, 2016\u003C/time\u003E by richfiles\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Freshmeat","CreatedById":111048,"CreatedDateTime":"2016-04-07T06:32:29Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222498099\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221459948493\u0022 data-ipsquote-userid=\u002211842\u0022 data-ipsquote-username=\u0022zitronen\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n17 hours ago, zitronen said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI can add more things to the packet, but we should have a discussion of what to include, there is limited space left. Stibbons is working on adding a bunch of orbital vector stuff as well.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you are using a controller with throttle, couldn\u0027t you connect your dial to it directly?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOn orbital vectors: If we get prograde and either normal or radial, the rest will be a simple calculation. Is target and manoeuvre node in the works as well?\n\u003C/p\u003E\n\u003Cp\u003E\nI am, however, worried about memory on the Uno board if we bloat the packet too much. Perhaps time to look if we receive anything nobody needs?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-04-07T06:37:26Z\u0022 title=\u002204/07/2016 06:37  AM\u0022 data-short=\u00228 yr\u0022\u003EApril 7, 2016\u003C/time\u003E by Freshmeat\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"cm2227","CreatedById":54899,"CreatedDateTime":"2016-04-07T11:24:17Z","Content":"\n\u003Cp\u003E\n@richfiles: My approach is similar, I also have one Arduino Mega as a central unit handling communications with KSPserialIO and as many analog gauges as needed/possible plus other displays, but limited to output only. Any input is handled by other units but will in the future partially be passed through the main arduino by serial communications. I also urge everybody to spend a few moneys extra on a higher level arduino to avoid RAM shortages.\n\u003C/p\u003E\n\u003Cp\u003E\n@zitronen: For many numeric values like battery or xenon gas it could be sufficient to transmit a single byte representing only the level, e.g. current / max * 255 which would indeed save memory. At least in my case where the consumables are only used for analog display. In addition I will rarely need VData members 4,5,12,28-31. Also some of the values could be calculated if needed on the arduino, like eccentricity from major and minor axis.\n\u003C/p\u003E\n"},{"CreatedByName":"faeryty","CreatedById":135618,"CreatedDateTime":"2016-04-07T14:51:53Z","Content":"\n\u003Cp\u003E\n*delurks*\n\u003C/p\u003E\n\u003Cp\u003E\nMy project is going very slowly, so I dont really feel the right to request anything, but I just wanted to raise my hand as a member of the multiple micro-controllers club too. \u00A0It\u0027s all theoretical at the moment and I dont even have it prototyped, but my current plan is an arudino mega as my main hub, shooting off the relevant subsets of the vdata\u00A0packet\u00A0to other micro-controllers over i2c.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n*lurks back into obscurity*\n\u003C/p\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2016-04-07T15:09:33Z","Content":"\n\u003Cp\u003E\nYou have to remember that if the packet sizes are increased, the serial buffer will need to be increased as well. This is already causing problems because the packet is larger than the default serial receive buffer of 64 bytes. Ideally the receive buffer size should be equal or larger than the packet size. So once we max out the 255 bytes, without actually writing any useful code, we are using half a kilo byte of RAM. I\u0027d like to maintain the ability to run on pretty much any arduino, making it easier on new people.\n\u003C/p\u003E\n\u003Cp\u003E\nI think we should be careful with remove any existing values from the packet. Almost all the things in the packets are there because people asked for them, and I wouldn\u0027t have added them if I didn\u0027t see the need. There is still like 50 bytes left, pretty much anything you ask for now probably will be added, so no need to start worrying just yet.\n\u003C/p\u003E\n\u003Cp\u003E\nIn any case, right now the focus is getting 1.1 working.\n\u003C/p\u003E\n"},{"CreatedByName":"richfiles","CreatedById":129946,"CreatedDateTime":"2016-04-08T08:26:09Z","Content":"\n\u003Cp\u003E\nI guess what i was asking before, isn\u0027t asking if it\u0027s possible to add more packets, but rather alternate packet frames. Each packet would use a couple bits to ID the packet type, and the code would transfer unique values where they need to be stored. In cases where a particular piece of data would benefit from being\u00A0updated\u00A0on every packet, you could even have that data, in the same location in every packet. It would allow \u003Cem\u003Eportions\u003C/em\u003E of the packet to remain the same data on every frame, while other values could change. As long as the arduino software and the plug in both know what any given packet ID contains, the content that is the same between all different\u00A0packet IDs gets handled the same way every time, aways moved to the same variable, regardless of the packet ID. The content that is unique per each packet ID would be moved to the appropriate variables, based on which packet ID is sent with each packet.\u003Cbr\u003E\u003Cbr\u003E\nAs an example, let\u0027s say around 192 bytes are the same in all the packets, but with 4 possible packets (defined by a 2 bit ID, in this example), then you\u0027d have 64 bytes that could be unique per each of the 4 packets, making 256 bytes that are flexible (192 bytes more than sticking with a single packet), and 192 bytes that are always the same, regardless of packet. You\u0027d need additional memory for the extra variables to store data front he flexible packets (enough to store an additional 192 bytes of data). I don\u0027t know what the overhead is for variable storage, but If i and half an idea of what I was doing, that\u0027s probably how I\u0027d handle things... Again, no clue if I\u0027d be right or not. The following is a breakdown of this particular example. You wouldn\u0027t need to do it this way, but it\u0027s a thought.\u003Cbr\u003E\u003Cbr\u003E\n[Packet ID 00 64 bytes A]\u00A0[64 bytes B]\u00A0[64 bytes C]\u00A0[64 bytes D]\u003Cbr\u003E\n[Packet ID 01 64 bytes A]\u00A0[64 bytes B]\u00A0[64 bytes C]\u00A0[64 bytes E]\u003Cbr\u003E\n[Packet ID 10 64 bytes A]\u00A0[64 bytes B]\u00A0[64 bytes C]\u00A0[64 bytes F]\u003Cbr\u003E\n[Packet ID 11 64 bytes A]\u00A0[64 bytes B]\u00A0[64 bytes C]\u00A0[64 bytes G]\u003Cbr\u003E\u003Cbr\u003E\nMemory Variables required to store data from *\u0026lt;A, B, C\u0026gt;, *{D, *(E, F, G)}\u003Cbr\u003E\n*\u0026lt;These values are always sent in all 4 packets. They are always the same, regardless of what packet was sent\u0026gt;\u003Cbr\u003E\n*{These data sets are different in each different packet}\u003Cbr\u003E\n*(An additional 192 bytes of data can be sent and needs\u00A0to be stored in additional variables, but only when a packet\u00A0is actually sent)\u003Cbr\u003E\u003Cbr\u003E\nI can\u0027t really say I even know what\u0027s going on under the hood, but I\u0027m not talking about sending multiple sequential different packets. Maybe you send packet 00 over and over and over, and then a piece of data carried in packet 01 gets updated by KSP, so the plugin sends an alternate packet with ID 01, and then returns to sending packet 00 repeatedly. Maybe another variable is updated, and it sends packet 11, then returns to sending packet 00...\u003Cbr\u003E\u003Cbr\u003E\nThe idea isn\u0027t to send packet 00, 01, 10, 11, 00, 01, 10, 11, 00... and so on...\u003Cbr\u003E\nIt\u0027d me more like 00, 00, 00, 00, 00, ... 00,\u00A000, 00, 01, 00, 00, 00, 00, 00, ... 00, 00, 00, 00, 11, 00, 00, 00, 00, ...\u003Cbr\u003E\u003Cbr\u003E\nMaybe there could be a handshake that occurs to confirm receipt of the alt packets. Plugin would resend the alt packet if no handshake occurs, before returning to the default.\u003Cbr\u003E\u003Cbr\u003E\nAgain, I REALLY don\u0027t know the programming aspect of this all that well, but if values are moved into appropriate variables, then wouldn\u0027t\u00A0the same serial buffer be used?\u003Cbr\u003E\u003Cbr\u003E\nIf I\u0027m totally wrong, and just don\u0027t get the way this stuff can be programmed, then never mind... I\u0027m just sorta... Spewing ideas.\u003Cbr\u003E\u003Cbr\u003E\nI guess I also feel that it\u0027s not unreasonable to have two builds for different sized\u00A0Arduinos. The normal build could be considered a standard version, and optionally, there could be an advanced version. No changes would be required for a \u0022standard version\u0022. That\u0027d just be what we have already (but updated for KSP 1.1, obviously). That version would obviously work for all Arduinos currently able to run it. An advanced version\u00A0could simply require a Mega, or something, to handle the increased memory footprint. Or something. I don\u0027t know. Again, just ideas.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-04-08T08:36:38Z\u0022 title=\u002204/08/2016 08:36  AM\u0022 data-short=\u00228 yr\u0022\u003EApril 8, 2016\u003C/time\u003E by richfiles\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"stibbons","CreatedById":57865,"CreatedDateTime":"2016-04-10T05:13:30Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222499678\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221460010749\u0022 data-ipsquote-userid=\u0022111048\u0022 data-ipsquote-username=\u0022Freshmeat\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 4/7/2016 at 4:32 PM, Freshmeat said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nOn orbital vectors: If we get prograde and either normal or radial, the rest will be a simple calculation. Is target and manoeuvre node in the works as well?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nMy first pass at it is in\u00A0\u003Ca href=\u0022https://github.com/zitron-git/KSPSerialIO/pull/10\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/zitron-git/KSPSerialIO/pull/10\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThat PR added pitch and yaw for orbital prograde, normal and radial, as well as surface prograde, target and maneuver node. Basically all of the vectors that are displayed on the in-game navball. I used all three vectors because I was only sending two axes for each; not enough to properly calculate the third.\n\u003C/p\u003E\n\u003Cp\u003E\nThe problem with it, though, is that those aren\u0027t suitable for my use case. That patch calculates immediate offset from vessel heading to the target vector in two dimensions. But if the plan is to render vectors on some sort of navball display (and I can\u0027t think of any other uses for it), then what\u0027s really needed is a set of Euler angles for each vector, again relative to vessel heading. Hopefully this helps illustrate what happens when you treat those immediate offsets like Euler angles:\u00A0\n\u003C/p\u003E\n\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\n\u003Cdiv\u003E\n\u003Ciframe allowfullscreen=\u0022true\u0022 frameborder=\u00220\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/KKmnhtnKL_Y?feature=oembed\u0022 width=\u0022480\u0022\u003E\u003C/iframe\u003E\n\u003C/div\u003E\n\u003C/div\u003E\n\u003Cp\u003E\nI started out by sending two 2-byte variables (pitch and yaw) for prograde, normal and radial. With the Euler stuff I\u0027m pretty sure that\u0027ll have to be three variables, but I haven\u0027t thought much about whether I can send two or three vectors. Once I\u0027ve got something working I\u0027ll do some tests and see if the extra Arduino-side processing is worth the smaller packet.\n\u003C/p\u003E\n\u003Cp\u003E\nNote that my worst case estimates for what I\u0027m adding to the data packet take it out to about 215 bytes though, still well short of the limit imposed by the header. And I\u0027d like to claw back some more space by converting some of the other stuff from four-byte floats to two-byte fixed point numbers (although that\u0027s impossible without significant controller-side code change \u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E\u00A0). Given a lot of people are already struggling to make their microcontrollers keep up without overflowing assorted buffers around the place, what\u0027s to gain from adding a whole other packet to the mix?\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222498870\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221459974210\u0022 data-ipsquote-userid=\u0022129946\u0022 data-ipsquote-username=\u0022richfiles\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 4/6/2016 at 6:23 AM, richfiles said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI still find it amazing that it has to be done that way! I kinda (really) wish someone would come up with an \u0022easy\u0022 library that handled breaking up simple numbers and strings and communicating with\u00A0the MAX7219 chips\u00A0automatically.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nMost of that stuff is really easy already. What\u0027s so difficult about looping through a character array and writing characters to a display?\n\u003C/p\u003E\n\u003Cp\u003E\nI did, however, write \u003Ca href=\u0022https://bitbucket.org/pjhardy/engnumber\u0022 rel=\u0022external nofollow\u0022\u003EEngNumber\u003C/a\u003E\u00A0during the course of my controller build. It\u0027s a small library that converts a float to a number in engineering notation, with as many digits as your display supports (well I\u0027ve only tested it with four digits). It\u0027s based on some proposed changes to the Arduino print class that I found in the forums, uses some super fast assembly inner loops on AVR controllers, and outputs the number to an array that is really easy to write to your display.\n\u003C/p\u003E\n"},{"CreatedByName":"stibbons","CreatedById":57865,"CreatedDateTime":"2016-04-10T05:37:58Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222500177\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221460040713\u0022 data-ipsquote-userid=\u0022135618\u0022 data-ipsquote-username=\u0022faeryty\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 4/7/2016 at 0:51 AM, faeryty said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nMy project is going very slowly, so I dont really feel the right to request anything, but I just wanted to raise my hand as a member of the multiple micro-controllers club too. \u00A0It\u0027s all theoretical at the moment and I dont even have it prototyped, but my current plan is an arudino mega as my main hub, shooting off the relevant subsets of the vdata\u00A0packet\u00A0to other micro-controllers over i2c.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIf you thought the weird buffer limits in Arduino\u0027s Serial classes were bad, wait until you dive in to the Wire library!\n\u003C/p\u003E\n\u003Cp\u003E\nUsing i2c with the native Arduino Wire library is great if you have half a dozen bytes to send. But it has a packet limit of 32 bytes, so if you\u0027re planning on sending subsets of data to your different devices you need to think carefully about limiting what you send. Otherwise you need to start looping over the structs that you send. It\u0027s also worth pointing out here that the Wire library is synchronous. When you send a packet the call blocks until it\u0027s been sent and acknowledged. That\u0027s probably not an issue when you start out, but if you\u0027ve got two or three devices, and need to send two or three 32 byte packets to each, it starts to add up, and you have problems keeping your serial buffer drained.\n\u003C/p\u003E\n\u003Cp\u003E\nI decided early in my build that I would use the fact that i2c can broadcast to slaves (nobody talks about this much, but the spec says that if the i2c master addresses a packet to device 0 then all slaves should receive it. Arduino handles broadcasts with an option to the slave init.). When my master receives a serial packet, it relays the entire thing on to i2c. Every slave receives it, and every slave has the exact same code to read and verify it. Then it picks out the bits it needs and carries on.\n\u003C/p\u003E\n\u003Cp\u003E\nOf course, the Wire library is even worse for that approach. You get to loop over this 200 byte packet seven or eight times to send it all over i2c and that entire operation blocks.\n\u003C/p\u003E\n\u003Cp\u003E\nBasically, don\u0027t use Wire. For teensy based projects, use \u003Ca href=\u0022https://forum.pjrc.com/threads/21680-New-I2C-library-for-Teensy3\u0022 rel=\u0022external nofollow\u0022\u003Ei2c_t3\u003C/a\u003E\u00A0(although annoyingly that library doesn\u0027t receive broadcasts, so my controller currently sends vdata twice until I can fix it). For AVR-based Arduinos like the Uno, Leonardo and Mega, there are a handful of faster i2c implementations. But I ended up writing my own based on the example TWI code from Atmel.\n\u003C/p\u003E\n"},{"CreatedByName":"richfiles","CreatedById":129946,"CreatedDateTime":"2016-04-10T21:11:26Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222505705\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221460265210\u0022 data-ipsquote-userid=\u002257865\u0022 data-ipsquote-username=\u0022stibbons\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n16 hours ago, stibbons said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNote that my worst case estimates for what I\u0027m adding to the data packet take it out to about 215 bytes though, still well short of the limit imposed by the header. And I\u0027d like to claw back some more space by converting some of the other stuff from four-byte floats to two-byte fixed point numbers (although that\u0027s impossible without significant controller-side code change \u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E\u00A0). Given a lot of people are already struggling to make their microcontrollers keep up without overflowing assorted buffers around the place, what\u0027s to gain from adding a whole other packet to the mix?\n\u003C/p\u003E\n\u003Cp\u003E\nMost of that stuff is really easy already. What\u0027s so difficult about looping through a character array and writing characters to a display?\n\u003C/p\u003E\n\u003Cp\u003E\nI did, however, write \u003Ca href=\u0022https://bitbucket.org/pjhardy/engnumber\u0022 rel=\u0022external nofollow\u0022\u003EEngNumber\u003C/a\u003E\u00A0during the course of my controller build. It\u0027s a small library that converts a float to a number in engineering notation, with as many digits as your display supports (well I\u0027ve only tested it with four digits). It\u0027s based on some proposed changes to the Arduino print class that I found in the forums, uses some super fast assembly inner loops on AVR controllers, and outputs the number to an array that is really easy to write to your display.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nRegarding my comments about the MAX7219 display controller library, I just was stating that I found it surprising that the library stopped where it did. Sure, it works as is, but I think it would have been quite nice to be able to just setup the display with the library, and then use the library to feed the display controller a whole integer, float, or string, and just make it generally a little bit\u00A0simpler for a person to feed data into it. I suppose once you actually learn C, it\u0027s not as hard to do, but, well... I\u0027m still learning.\u00A0\u003Cimg alt=\u0022:wink:\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 title=\u0022:wink:\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\nin regards to my prior comments regarding multiple packets and the buffer... I don\u0027t know if I\u0027m just clueless on how any of this works... I \u003Cem\u003Ereally\u003C/em\u003E don\u0027t get coding all that well.\u003Cbr\u003E\u003Cbr\u003E\nWhat I was suggesting, was a structure, where a packet is sent, the significant data is pulled from the packet (presumably from the buffer? is that how this works?) and stored in appropriate fixed variables, and then the buffer is overwritten by the next packet. Data is read from it, and stored in\u00A0appropriate variables, and then once again, the buffer is overwritten by the next packet. The buffer just holds the last packet sent...\u00A0I think? It doesn\u0027t stack packets sequentially, right? Or am I wrong?\u003Cbr\u003E\u003Cbr\u003E\nMy suggestion of a packet ID was a reference to 1 or 2 bits to define the content of the packet. I read over the packet content again, and I see there is a whole byte reserved as a packet ID! That\u0027d work too, I suppose. What I was describing\u00A0would mean that if a packet is sent, if its ID is\u00A00 (presuming that means the default packet), then the individual bits and bytes of\u00A0data are read from the buffer, and stored in the appropriate variables associated with packet ID 0. The next packet is sent, overwriting the buffer. Lets say that packet\u00A0is packet ID 1. Now, because the packet ID is read as 1, the data would be moved from the buffer to variables associated with packet ID 1. Same would be true of other packet IDs, and variables associated with those specific packet IDs.\u00A0I am not aware of any need for a larger size packet on sending from Arduino to PC, so I\u0027m ignoring it, for the moment. Aside from the Control frame from Arduino to PC, where controls need to be quick,\u00A0do we \u003Cem\u003Ereally\u003C/em\u003E need \u003Cem\u003Eall\u003C/em\u003E the\u00A0data updated on \u003Cem\u003Eevery single frame\u003C/em\u003E? If we really do need some data updated every packet, I don\u0027t see why a few pieces of data could be common, across multiple packet types, so that value is updated with any packet ID that contains it.\n\u003C/p\u003E\n\u003Cp\u003E\nIf we are having buffer overflow problems, couldn\u0027t we use such a method to allow the switch to a smaller packet size (say, 128 bytes, instead of 256 bytes), and then\u00A0use\u00A0a\u00A0rotating ID to send the data, sequentially spread out over a few packet\u00A0\u0022frames\u0022?\u00A0You\u0027d end up with less data transmitted per each packet, but you\u0027d still be able to send it all out, even more than 256 bytes, just spread out over more time. It\u0027d give the Arduino more time to retrieve the received data (less at a time), while also allowing it to receive more total data (even exceeding the original 256 byte packet). Would\u00A0smaller rotating packets solve the buffer overflow issue? Using four\u00A0packet IDs, with 128 byte packets could send up to 512 bytes of data, but spread out over 4 packet \u0022frames\u0022. Using three packet IDs, could\u00A0allow 384 bytes of data to be sent over 3 frames, presumably. If the Arduino happens to miss a bit of data, that data will be back around in a few frames.\u003Cbr\u003E\u003Cbr\u003E\nEven sticking with 256 bytes of data, if you split it into a pair of 128 byte packets, you\u0027d spread that data out over 2 frames, giving the Arduino double the time to do what it needs with each variable within the packets. It\u0027d just handle the first half, then the second half, and repeat... On half the buffer size. I think.\n\u003C/p\u003E\n\u003Cp\u003E\nWith most readouts needing to be read by human eyes, I have a hard time believing that we can\u0027t wait 3 or 4 frames for an update. Even with my abysmal coding skills, I still managed to put in an update rate counter on my LED display burn in code, back in August, so the displays would update at a rate you actually had a chance to read, and not be a blurry mess.\n\u003C/p\u003E\n\u003Cp\u003E\nHonestly, \u003Cstrong\u003E\u003Cem\u003Emy\u003C/em\u003E\u003C/strong\u003E only \u003Cem\u003Ereal\u003C/em\u003E issue, is me... I have never worked with C in my life, up until\u00A0last August. \u003Cem\u003EEverything\u003C/em\u003E is new to me. I still don\u0027t understand half of the code I have on my Mega right now. Literally just copied code from two different examples, tweaked around\u00A0on it till it compiled, and\u00A0it functioned together to do what I wanted it to do. I have a Looooooong way to go before I\u0027m even remotely proficient enough to have a clue how to even begin this project\u0027s more advanced functions. I\u0027ll certainly\u00A0be able to figure out controlling LEDs, reading switches, setting analog meters and displaying data on the displays, but even if I get my FDAI hardware built, it\u0027ll be a good long while before I even know half what I need to know, to be able to write the code to make it actually operate.\u003Cbr\u003E\u003Cbr\u003E\nI honestly had to set this project aside for a few months. Getting the wrong displays last year was annoying... Finding out the replacements had a \u003Cem\u003Eworse\u003C/em\u003E than 50% defect rate was infuriating. Finding out I got fed some impossible numbers on Arduino performance capability\u00A0on another forum (which lead\u00A0me to build a nearly $45 10 DAC signal generator... that turned out to be \u003Cem\u003Eutterly\u003C/em\u003E\u00A0useless to me)... That was kinda my final straw. Between all that happening within the span of around a month or so, and the wait for 1.1, I pretty much decided to put my Kerbal controller build aside. I needed to just step back from it.\u00A0I switched 100% of my build efforts into my mechanical keyboard instead. I\u0027ve planned, purchased, and built that for the last half year instead. Guess where I\u0027m stuck... I have a finished keyboard with a blinking Caps Lock key... Cause it\u0027s still running the \u0022blink\u0022 program.\u00A0\u003Cimg alt=\u0022:huh:\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_undecided.gif\u0022 title=\u0022:huh:\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\nUnfortunately, that delay also has let every iota of what I \u003Cem\u003Edid\u003C/em\u003E learn of C, back in August, to ooze out my ears. I really need to start from scratch again. I seem to recall C is fond of something called a\u00A0\u0022void\u0022... \u003Cimg alt=\u0022:rolleyes:\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_rolleyes.gif\u0022 title=\u0022:rolleyes:\u0022\u003E\u00A0No clue why I\u0027m having so much trouble with C... You\u0027d think\u00A0my brain should do just fine learning C\u00A0then, cause I feel like I\u0027ve already got a big old void between my ears every time I try to stare glass eyed at a screen full of code!\u00A0\u003Cimg alt=\u0022:confused:\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 title=\u0022:confused:\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-04-10T21:23:17Z\u0022 title=\u002204/10/2016 09:23  PM\u0022 data-short=\u00228 yr\u0022\u003EApril 10, 2016\u003C/time\u003E by richfiles\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"faeryty","CreatedById":135618,"CreatedDateTime":"2016-04-11T10:20:46Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022http://forum.kerbalspaceprogram.com/index.php?/profile/57865-stibbons/\u0026amp;do=hovercard\u0022 data-mentionid=\u002257865\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57865-stibbons/\u0022\u003E@stibbons\u003C/a\u003E\u00A0Thanks for all the tips. I have heard plenty of less than complementary things about the Wire library, and so was expecting to probably end up butchering it/bitbanging the TWI protocol myself.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve finally sent the pcbs for my altimeter off for fab. \u00A0As my altimeter is a 6 tube\u00A0nixie display, and as has ended up costing\u00A0me far more than I would like to admit, I wanted to give it a double purpose and have it run as a clock when I\u0027m not playing KSP. \u00A0Not trying to make things harder on myself at all... \u00A0All the hardware is set up and ready to receive data over TWI. I should probably have tested it on my prototype first before fabbing my pcbs, but impatience finally got the better of me. At least it\u0027s theoretically just software at this point, which I\u0027m much more confident with than hardware.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-04-11T15:06:36Z\u0022 title=\u002204/11/2016 03:06  PM\u0022 data-short=\u00228 yr\u0022\u003EApril 11, 2016\u003C/time\u003E by faeryty\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2016-04-11T15:02:51Z","Content":"\n\u003Cp\u003E\nHeh I have my display showing CPU \u0026amp; RAM usage and stuff when I\u0027m not playing KSP.\n\u003C/p\u003E\n\u003Cp\u003E\nThe thing with smaller packets is if you are still sending data at the same rate, you still need the same buffer size. The reason we need any buffer at all is the arduino can only do one thing at a time, either it\u0027s doing your code that processes the data while buffer is filling up, or it\u0027s receiving and clearing the buffer. Smaller packets won\u0027t changes how long your code takes, so instead of filling the buffer with 1 big packet, now it\u0027s filled up with 2 smaller packets. Also smaller packets have more overhead as well. I think our current 255 byte packet is manageable. The question is what is the best thing to do if in a few months time we need a more space, can we just keep adding stuff or are we simply running out of computing resources on the normal arduino?\n\u003C/p\u003E\n\u003Cp\u003E\nBTW \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022http://forum.kerbalspaceprogram.com/index.php?/profile/57865-stibbons/\u0026amp;do=hovercard\u0022 data-mentionid=\u002257865\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57865-stibbons/\u0022\u003E@stibbons\u003C/a\u003E, what did you do to get the thing working on the teensy? I remember there were some incompatibilities with 8bit vs 32bit struct packing or some such?\n\u003C/p\u003E\n"},{"CreatedByName":"stibbons","CreatedById":57865,"CreatedDateTime":"2016-04-13T00:53:54Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222507965\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221460386971\u0022 data-ipsquote-userid=\u002211842\u0022 data-ipsquote-username=\u0022zitronen\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 4/11/2016 at 1:02 AM, zitronen said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nwhat did you do to get the thing working on the teensy? I remember there were some incompatibilities with 8bit vs 32bit struct packing or some such?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI add the packed attribute to the packet structs, ie:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\u003Cspan\u003Estruct\u003C/span\u003E\u003Cspan\u003E \u003C/span\u003E\u003Cspan\u003EVesselData\u003C/span\u003E\u003Cspan\u003E \u003C/span\u003E\u003Cspan\u003E{\u003C/span\u003E\u003Cspan\u003E\n  \u003C/span\u003E\u003Cspan\u003E// snip\u003C/span\u003E\u003Cspan\u003E\n\u003C/span\u003E\u003Cspan\u003E}\u003C/span\u003E\u003Cspan\u003E __attribute__\u003C/span\u003E\u003Cspan\u003E((\u003C/span\u003E\u003Cspan\u003Epacked\u003C/span\u003E\u003Cspan\u003E));\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThat should be all that\u0027s required to run the demo sketch on a teensy as well, but I don\u0027t think I\u0027ve personally tried it.\n\u003C/p\u003E\n\u003Cp\u003E\nSee my\u00A0\u003Ca href=\u0022https://bitbucket.org/pjhardy/ksky/src/7405e3e5df04a2956f2814864ce30cdccf2729ee/arduino/KerbalNavball?at=orbitalvectors\u0022 rel=\u0022external nofollow\u0022\u003EKerbalNavball\u003C/a\u003E\u00A0sketch for the whole thing, the packets are defined in data_packets.h.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-04-13T00:55:09Z\u0022 title=\u002204/13/2016 12:55  AM\u0022 data-short=\u00228 yr\u0022\u003EApril 13, 2016\u003C/time\u003E by stibbons\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Gemini0915","CreatedById":122158,"CreatedDateTime":"2016-04-19T17:42:50Z","Content":"\n\u003Cp\u003E\nDear Kerbonauts and Engineers,\n\u003C/p\u003E\n\u003Cp\u003E\nSince days i try to get this running, but failed all the time. Trying all the available SW-Versions, different Hardware, different USB-Cables, different USB-Ports, changing the COM-Port# in the device manager. I\u0027m using this on a Win7/64bit with KSP Steam-Version.\n\u003C/p\u003E\n\u003Cp\u003E\nI don\u0027t know if that has been mentioned already in those almighty 58 pages here, my solution was so ridiculous simple, \u003Cstrong\u003Ei just started the ksp.exe as an admin\u003C/strong\u003E ... and the red, the yellow and the green LEDs are working !\n\u003C/p\u003E\n\u003Cp\u003E\nThank you all for your direct,indirect and unintentional help and the inspiration you gave me to build my own KSP cockpit \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2016-04-20T23:31:18Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222510781\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221460508834\u0022 data-ipsquote-userid=\u002257865\u0022 data-ipsquote-username=\u0022stibbons\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 13/04/2016 at 1:53 AM, stibbons said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI add the packed attribute to the packet structs, ie:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\n\u003Cspan\u003Estruct\u003C/span\u003E\u003Cspan\u003E \u003C/span\u003E\u003Cspan\u003EVesselData\u003C/span\u003E\u003Cspan\u003E \u003C/span\u003E\u003Cspan\u003E{\u003C/span\u003E\u003Cspan\u003E\n  \u003C/span\u003E\u003Cspan\u003E// snip\u003C/span\u003E\u003Cspan\u003E\n\u003C/span\u003E\u003Cspan\u003E}\u003C/span\u003E\u003Cspan\u003E __attribute__\u003C/span\u003E\u003Cspan\u003E((\u003C/span\u003E\u003Cspan\u003Epacked\u003C/span\u003E\u003Cspan\u003E));\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThat should be all that\u0027s required to run the demo sketch on a teensy as well, but I don\u0027t think I\u0027ve personally tried it.\n\u003C/p\u003E\n\u003Cp\u003E\nSee my\u00A0\u003Ca href=\u0022https://bitbucket.org/pjhardy/ksky/src/7405e3e5df04a2956f2814864ce30cdccf2729ee/arduino/KerbalNavball?at=orbitalvectors\u0022 rel=\u0022external nofollow\u0022\u003EKerbalNavball\u003C/a\u003E\u00A0sketch for the whole thing, the packets are defined in data_packets.h.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nGreat, nice that the simple fix works.\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222522550\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221461087770\u0022 data-ipsquote-userid=\u0022122158\u0022 data-ipsquote-username=\u0022Gemini0915\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 19/04/2016 at 6:42 PM, Gemini0915 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nDear Kerbonauts and Engineers,\n\u003C/p\u003E\n\u003Cp\u003E\nSince days i try to get this running, but failed all the time. Trying all the available SW-Versions, different Hardware, different USB-Cables, different USB-Ports, changing the COM-Port# in the device manager. I\u0027m using this on a Win7/64bit with KSP Steam-Version.\n\u003C/p\u003E\n\u003Cp\u003E\nI don\u0027t know if that has been mentioned already in those almighty 58 pages here, my solution was so ridiculous simple, \u003Cstrong\u003Ei just started the ksp.exe as an admin\u003C/strong\u003E ... and the red, the yellow and the green LEDs are working !\n\u003C/p\u003E\n\u003Cp\u003E\nThank you all for your direct,indirect and unintentional help and the inspiration you gave me to build my own KSP cockpit \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOK, that\u0027s new... Has anyone had this problem before? I wonder if it\u0027s a steam thing?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAlso I just got my 1.1, working on updating it now.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-04-20T23:59:22Z\u0022 title=\u002204/20/2016 11:59  PM\u0022 data-short=\u00228 yr\u0022\u003EApril 20, 2016\u003C/time\u003E by zitronen\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2016-04-20T23:56:26Z","Content":"\n\u003Cp\u003E\n\u003Cspan style=\u0022color:#B22222;\u0022\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003EUpdate 0.18.1:\u003C/span\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nChanges:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nRecompiled for KSP 1.1\n\u003C/li\u003E\n\u003Cli\u003E\nIncluded null reference fix from \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022http://forum.kerbalspaceprogram.com/index.php?/profile/57865-stibbons/\u0026amp;do=hovercard\u0022 data-mentionid=\u002257865\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/57865-stibbons/\u0022 rel=\u0022\u0022\u003E@stibbons\u003C/a\u003E\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nDownload link:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://sites.google.com/site/zitronfiles/KSPSerialIO_018_1.zip?attredirects=0\u0026amp;d=1\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://sites.google.com/site/zitronfiles/KSPSerialIO_018_1.zip\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nI have only briefly tested this to see if it works, I wanted to get this out as quickly as possible. Please let me know if you find any problems.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-04-20T23:57:09Z\u0022 title=\u002204/20/2016 11:57  PM\u0022 data-short=\u00228 yr\u0022\u003EApril 20, 2016\u003C/time\u003E by zitronen\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"stibbons","CreatedById":57865,"CreatedDateTime":"2016-04-21T02:01:14Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222526542\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221461196586\u0022 data-ipsquote-userid=\u002211842\u0022 data-ipsquote-username=\u0022zitronen\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, zitronen said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI have only briefly tested this to see if it works, I wanted to get this out as quickly as possible. Please let me know if you find any problems.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI\u0027m pretty sure all of the VesselData apart from the current/total stage count is OK. But I didn\u0027t really test any of the controls at all. \u003Cimg alt=\u0022:(\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 title=\u0022:(\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Freshmeat","CreatedById":111048,"CreatedDateTime":"2016-04-21T05:32:40Z","Content":"\n\u003Cp\u003E\nThat would be at what time in the night? You\u0027re a machine.\n\u003C/p\u003E\n"},{"CreatedByName":"Mattew","CreatedById":144806,"CreatedDateTime":"2016-04-21T09:28:30Z","Content":"\n\u003Cp\u003E\nWau, we have 1.1 version?! Amazing Z !! Thanks. I cant play KSP without my nixie tubes \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHopefuly they fix graphics soon and we are r2g\n\u003C/p\u003E\n"},{"CreatedByName":"Sputnix","CreatedById":141420,"CreatedDateTime":"2016-04-21T12:57:02Z","Content":"\n\u003Cp\u003E\n\u003Cstrong\u003ERE: 0.18.1\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nSwitches/buttons\u00A0for RCS / SAS / LIGHT / GEAR / BRAKE / ABORT\u00A0are all working.\u003Cbr\u003E\nThrottle works (i have no \u0027controls\u0027 on my board yet).\u003Cbr\u003E\nDisplays seem to show appropriate data (Mission Time, AP / PE, Time to AP / PE, Radar Alt);\u003Cbr\u003E\nFuel readouts reflect those displayed in game.\n\u003C/p\u003E\n\u003Cp\u003E\nThe one thing I found didn\u0027t work was the \u0027stage\u0027 button... of all things\u00A0\u003Cimg alt=\u0022:huh:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_undecided.gif\u0022 title=\u0022:huh:\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-04-21T13:03:54Z\u0022 title=\u002204/21/2016 01:03  PM\u0022 data-short=\u00228 yr\u0022\u003EApril 21, 2016\u003C/time\u003E by Sputnix\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2016-04-21T17:01:48Z","Content":"\n\u003Cp\u003E\nReference to Staging\u00A0should be replaced with StageManager (and .lastStage =\u0026gt; .LastStage) and will require\u00A0adding a \u0022using KSP.UI.Screens\u0022\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nsee :\u00A0\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/135179-info-on-how-to-convert-your-plugin-to-ksp-11/\u0022 rel=\u0022\u0022\u003Ehttp://forum.kerbalspaceprogram.com/index.php?/topic/135179-info-on-how-to-convert-your-plugin-to-ksp-11/\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2016-04-21T22:14:23Z","Content":"\n\u003Cp\u003E\nThanks guys. Has anyone tried the overheat thing? They might have changed some thing with heat transfer stuff.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222528344\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221461258108\u0022 data-ipsquote-userid=\u002257146\u0022 data-ipsquote-username=\u0022sarbian\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n5 hours ago, sarbian said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nReference to Staging\u00A0should be replaced with StageManager (and .lastStage =\u0026gt; .LastStage) and will require\u00A0adding a \u0022using KSP.UI.Screens\u0022\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nsee :\u00A0\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/135179-info-on-how-to-convert-your-plugin-to-ksp-11/\u0022 rel=\u0022\u0022\u003Ehttp://forum.kerbalspaceprogram.com/index.php?/topic/135179-info-on-how-to-convert-your-plugin-to-ksp-11/\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWell, that was easy. Thanks a lot! I think I got the staging button issue fixed. I think the stage number should be too, I\u0027ll have a look at that tomorrow.\n\u003C/p\u003E\n"},{"CreatedByName":"Colray","CreatedById":156888,"CreatedDateTime":"2016-04-22T01:25:07Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222527716\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221461243422\u0022 data-ipsquote-userid=\u0022141420\u0022 data-ipsquote-username=\u0022Sputnix\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n12 hours ago, Sputnix said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cstrong\u003ERE: 0.18.1\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nSwitches/buttons\u00A0for RCS / SAS / LIGHT / GEAR / BRAKE / ABORT\u00A0are all working.\u003Cbr\u003E\nThrottle works (i have no \u0027controls\u0027 on my board yet).\u003Cbr\u003E\nDisplays seem to show appropriate data (Mission Time, AP / PE, Time to AP / PE, Radar Alt);\u003Cbr\u003E\nFuel readouts reflect those displayed in game.\n\u003C/p\u003E\n\u003Cp\u003E\nThe one thing I found didn\u0027t work was the \u0027stage\u0027 button... of all things\u00A0\u003Cimg alt=\u0022:huh:\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_undecided.gif\u0022 title=\u0022:huh:\u0022\u003E\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI take it that this does not include windows 10?\n\u003C/p\u003E\n\u003Cp\u003E\nThanks!\n\u003C/p\u003E\n"}]}