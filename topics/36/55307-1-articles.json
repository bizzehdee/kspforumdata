{"TopicId":55307,"ForumId":36,"TopicTitle":"[WIP] Re-Entry Calculator \u0026amp; Monitor","CreatedByName":"cm2227","CreatedById":54899,"CreatedDateTime":"2013-12-05T18:14:30Z","PageNum":1,"Articles":[{"CreatedByName":"cm2227","CreatedById":54899,"CreatedDateTime":"2013-12-05T18:14:30Z","Content":"\n\u003Cp\u003EHello KSP community,\u003C/p\u003E\u003Cp\u003EI just started into taking orbital mechanics a little bit more serious than just guess my touchdown location or use the mechjeb landing autopilot. No hurt feelings here, I like mechjeb and used it extensively for cargo delivery to the munar surface. But as I actually got my dad (72y/o, professor of materials science) to play KSP with me, we started taking mission planning and orbital mechanics a little bit more serious.\u003C/p\u003E\u003Cp\u003EI wrote an iterative solution to estimate the touchdown location when returning from a 0\u00C3\u201A\u00C2\u00B0 inclination orbit (actually just the longitude) in c\u002B\u002B and it works well. \u003C/p\u003E\u003Cp\u003ENow I want to include the community in my project, and the project as a plugin to get live values from the running game. \u003C/p\u003E\u003Cp\u003EOnly yesterday did I write my first class in C#, and having started programming 20years ago in BASIC and PASCAL, C# seems counter-intuitive to me.\u003C/p\u003E\u003Cp\u003EWhat I have is my iterative loop for determining the the location of touchdown, which would work in any language.\u003C/p\u003E\u003Cp\u003EHere is my first problem I want to share with you and would highly appreciate any advice, help or useful information.\u003C/p\u003E\u003Cp\u003EMy method takes the orbital parameters from your re-entry orbit, which is an elliptic orbit with apoapsis above maxAtmosphereAltitude and peripasis below maxAtmosphereAltitude.\u003C/p\u003E\u003Cp\u003EFrom that, it calculates the angular position of your re-entry interface relative to your periapsis position and from there your entry angle and expected velocity at this altitude. \u003C/p\u003E\u003Cp\u003EThen the iterative solver finds touchdown coordinates from entry angle and initial velocity.\u003C/p\u003E\u003Cp\u003EWhat I need for this calculation is spacecraft mass and parachute count.\u003C/p\u003E\u003Cp\u003EParachute release altitude has to be considered, as partially inflated parachutes do affect drag.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EHow do I get the mass of a certain stage?\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EI would give the pilot the possibility do define a re-entry stage from the current vessel, and then use the remaining weight after these stages. I happen to rember that mechjeb does not account for mass changes during descent other than fuel. I cannot take the current spacecraft mass as a de-orbit burn has yet to be performed after using my re-entry calculator, and the results are needed for this burn.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EHow do I count the parachutes on the active vessel?\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003ESomehow I have to go to the parts tree and look for parachutes. As I have not yet worked with the parts structure yet, some sort of shortcut would be appreciated. \u003C/p\u003E\u003Cp\u003EWhat I am aiming for is a useful helper for any kind of atmospheric landing, with a visual interface like the Apollo Entry Monitoring System:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://nassp.sourceforge.net/wiki/Entry_Monitoring_System\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://nassp.sourceforge.net/wiki/Entry_Monitoring_System\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ETL;DR: How do I get the mass of a certain stage? How do I count parachutes?\u003C/p\u003E\u003Cp\u003EEdit: If anybody is interested in more detailed information or ready to support my coding in C# (which would be highly appreciated) feel free to contact me.\u003C/p\u003E\u003Cp\u003EThank you in advance,\u003C/p\u003E\u003Cp\u003Ecm2227\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-05T19:23:33Z\u0022 title=\u002212/05/2013 07:23  PM\u0022 data-short=\u002210 yr\u0022\u003EDecember 5, 2013\u003C/time\u003E by cm2227\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Trueborn","CreatedById":65830,"CreatedDateTime":"2013-12-06T01:20:14Z","Content":"\n\u003Cp\u003EA lot of these calculations have been done in other mods. Take a look at MechJeb or Kerbal Engineer\u0027s source code (available in their threads). That\u0027s what I did when starting out. But here\u0027s the basics.You\u0027ll need to do is iterate through the active vessel\u0027s part list, and the module list in each part. From each part you can find its mass (also check the physicalsignificance property for each part, some parts don\u0027t have mass when flying). The mass of a specific stage is somewhat harder than simply looking at each part, but I believe both of the mods mentioned above track staging, so take a look at how they do it, and see if it works for you. Then you can look in each module for a ModuleParachute. This should also allow you to dynamically look at drag numbers and deployment parameters.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2013-12-06T04:14:25Z","Content":"\n\u003Cp\u003EAre you looking to do a stock model or something like FAR?\u003C/p\u003E\n"},{"CreatedByName":"cm2227","CreatedById":54899,"CreatedDateTime":"2013-12-06T17:45:05Z","Content":"\n\u003Cp\u003EI\u0027m not quite sure what your question is. I created a numeric solver for atmospheric re-entry on the stock aerodynamics.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2013-12-06T20:12:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022cm2227\u0022 data-cite=\u0022cm2227\u0022\u003E\u003Cdiv\u003EI\u0027m not quite sure what your question is. I created a numeric solver for atmospheric re-entry on the stock aerodynamics.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, that answered my question \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E I was wondering whether you were aiming to make a calculator for the stock aerodynamics or for FAR. The latter is a little more complicated, but very useful and interesting too. A lot of folks wanting to make accurate predictions would be using FAR.\u003C/p\u003E\n"},{"CreatedByName":"cm2227","CreatedById":54899,"CreatedDateTime":"2013-12-07T01:58:58Z","Content":"\n\u003Cp\u003EFirst things first, then I can take on new challenges.\u003C/p\u003E\u003Cp\u003EProgramming plug-ins in C# is very much like KSP itself - it has a steep learning curve. \u003C/p\u003E\u003Cp\u003ETwo days ago I found out they\u0027re written in C#, today I managed to open a second GUI window by pressing a button. That\u0027s one big step for me.\u003C/p\u003E\u003Cp\u003EI think I know how I can manage the parachute and re-entry weight issues. But another question came up today.\u003C/p\u003E\u003Cp\u003EReading the current surface coordinates is no big deal, but to predict the right orbital phase angle for the de-orbit burn, I need the current spacecraft location in surface coordinates.\u003C/p\u003E\u003Cp\u003EBut the read-out in orbit suggests that longitude and lattitude are displayed in fixed frame coordinates, not rotating frame as on the surface.\u003C/p\u003E\u003Cp\u003EDoes anybody know more about this issue? I know the reference frame switches at a certain altitude over each celestial body, but all I need is the actual position over the surface of the body. Compensating the body\u0027s rotation is no big deal.\u003C/p\u003E\u003Cp\u003EThanks\u003C/p\u003E\u003Cp\u003Ecm2227\u003C/p\u003E\n"},{"CreatedByName":"cm2227","CreatedById":54899,"CreatedDateTime":"2014-01-09T16:35:02Z","Content":"\n\u003Cp\u003EUntil now I only accomplished to run a successfull re-entry simulation in an external C\u002B\u002B program. I failed to make the same algorithm run in my KSP plug-in. I can now predict splahdown coordinates and understand a lot more about orbital mechanics. But my focus on this project has shifted. I need different sort of help than I anticipated. \u003C/p\u003E\u003Cp\u003EMass (almost) only affects touchdown time, not the coordinates. So getting the vehicle mass is not really necessary. Also, even for flat trajectories, the actual amount of parachutes or the resulting drag are almost irrelevant, except for precision landings. I am happy with a few hundred meters inaccuracy, and these problems can be postponed. The most influence on touchdown location lies in timing the de-orbit burn, in terms of exact ignition time and duration, i.e. velocity change. As discovered in the sixties (I recommend the book \u0022Digital Apollo\u0022 on this issue) no manual control can deliver the necessary precision.\u003C/p\u003E\u003Cp\u003EI now focus on two questions, for which I encourage the community to contribute:\u003C/p\u003E\u003Cp\u003EIs anybody willing to port my messy C\u002B\u002B code to a working C# plug-in? I won\u0027t publish any code yet, but I would work together with a willing partner.\u003C/p\u003E\u003Cp\u003EDoes anybody know how to make the iterative solver run in its own thread (like MechJeb does) to stop the game from freezing when the new impact point is calculated?\u003C/p\u003E\u003Cp\u003EBonus: Is any programming guru willing to solve BOTH at once?\u003C/p\u003E\u003Cp\u003EThanks\u003C/p\u003E\u003Cp\u003Ecm2227\u003C/p\u003E\n"},{"CreatedByName":"Trueborn","CreatedById":65830,"CreatedDateTime":"2014-01-09T19:32:37Z","Content":"\n\u003Cp\u003EI would be interested in integrating this into SteamGauges. Conversion to C# shouldn\u0027t be too bad, but I haven\u0027t done any threading in KSP yet. Not sure how much time that would take me, although there are some examples that should make it easier. No guarantees until I see your code though.\u003C/p\u003E\n"}]}