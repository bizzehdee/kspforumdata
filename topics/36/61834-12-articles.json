{"TopicId":61834,"ForumId":36,"TopicTitle":"kOS Autopilot","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T17:34:35Z","PageNum":12,"Articles":[{"CreatedByName":"marianoapp","CreatedById":104009,"CreatedDateTime":"2014-05-27T01:01:25Z","Content":"\n\u003Cp\u003EYou should make a fork of the github \u003Ca href=\u0022https://github.com/KSP-KOS/KOS\u0022 rel=\u0022external nofollow\u0022\u003Erepo\u003C/a\u003E, commit your changes there and then create a pull request (\u003Ca href=\u0022https://help.github.com/articles/creating-a-pull-request\u0022 rel=\u0022external nofollow\u0022\u003Ehow to create a pull request\u003C/a\u003E).\u003C/p\u003E\u003Cp\u003EBTW I like this change \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-05-27T01:18:59Z","Content":"\n\u003Cp\u003EI like that booty... eh, bootfile!\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-05-27T03:12:45Z","Content":"\n\u003Cp\u003ESigh. As it turns out, the Unity TextArea widget doesn\u0027t understand the concept of tabs, so when you indent your source code with tabs, the in-game editor won\u0027t even show one single space for them. Instead the widget assumes that hitting \u0022TAB\u0022 means \u0022go to next field\u0022, and as there is no next field, nothing happens.\u003C/p\u003E\u003Cp\u003EI\u0027m not sure it\u0027s fixable. But serious editing should be done outside the game anyway, so I guess it\u0027s workable for quick-and-dirty looking at files.\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-05-29T19:21:37Z","Content":"\n\u003Cp\u003EI\u0027ve encountered a FlightControl class in the git repository which looks like having suffixes for controlling thrusters. Are those suffixes available from the terminal?\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-05-29T19:22:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022baloan\u0022 data-cite=\u0022baloan\u0022\u003E\u003Cdiv\u003EI\u0027ve encountered a FlightControl class in the git repository which looks like having suffixes for controlling thrusters. Are those suffixes available from the terminal?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, they are detailed in the flight docs\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/summary_topics/ship_control/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC/summary_topics/ship_control/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003Eunder Raw Control\u003C/p\u003E\n"},{"CreatedByName":"IronGremlin","CreatedById":77166,"CreatedDateTime":"2014-06-04T23:16:42Z","Content":"\n\u003Cp\u003ESo this took me all day to figure out - not sure if this is a feature or a bug, but it sure as hell isn\u0027t documented...\u003C/p\u003E\u003Cp\u003EIf you have no reaction wheels anywhere on your craft, \u0027lock steering to y\u0027 will instead try to maintain current vessel heading. Adding a part with reaction wheels restores normal function. Also, ship:control seems to be unaffected.\u003C/p\u003E\u003Cp\u003EMight want to post that somewhere where all the RSS/RO folks can find it.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-06-05T03:46:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022IronGremlin\u0022 data-cite=\u0022IronGremlin\u0022\u003E\u003Cdiv\u003ESo this took me all day to figure out - not sure if this is a feature or a bug, but it sure as hell isn\u0027t documented...\u003Cp\u003EIf you have no reaction wheels anywhere on your craft, \u0027lock steering to y\u0027 will instead try to maintain current vessel heading. Adding a part with reaction wheels restores normal function. Also, ship:control seems to be unaffected.\u003C/p\u003E\u003Cp\u003EMight want to post that somewhere where all the RSS/RO folks can find it.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is a bug that we have known about for some time. The reason it isnt documented is that past me would be pissed that the bug is still around \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E we dont use engine torque to determine LOCK steering.\u003C/p\u003E\u003Cp\u003EWe had most of a solution \u003Ca href=\u0022https://github.com/erendrake/KOS/pull/48\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/erendrake/KOS/pull/48\u003C/a\u003E but that has clearly not finished development. Sorry for the trouble\u003C/p\u003E\n"},{"CreatedByName":"IronGremlin","CreatedById":77166,"CreatedDateTime":"2014-06-05T05:41:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EThis is a bug that we have known about for some time. The reason it isnt documented is that past me would be pissed that the bug is still around \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E we dont use engine torque to determine LOCK steering.\u003Cp\u003EWe had most of a solution \u003Ca href=\u0022https://github.com/erendrake/KOS/pull/48\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/erendrake/KOS/pull/48\u003C/a\u003E but that has clearly not finished development. Sorry for the trouble\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHey, no worries - Now that I figured it out I\u0027m having a great time writing all kinds of fun scripts. Thanks so much for all the hard work on an awesomely fun mod!\u003C/p\u003E\u003Cp\u003EJust to check - \u003C/p\u003E\u003Cp\u003EThis also kills aerodynamic control surfaces in absence of reaction wheels. They don\u0027t turn off, mind you, they just don\u0027t quite work - near as I can figure it provides some sort of weird attempt to hold current heading, but not real well. Once the reaction wheels exist, the aerodynamic control surfaces behave normally. \u003C/p\u003E\u003Cp\u003EJust wanted to be sure we\u0027re talking about the same behavior.\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-06-10T21:19:46Z","Content":"\n\u003Cp\u003EAnyone knows a way/mod to display a latitude/longitude grid on a planet or moon?\u003C/p\u003E\u003Cp\u003EOr to have an enhanced mouse cursor that displays latitude/longitude next to the mouse cursor?\u003C/p\u003E\u003Cp\u003EI am looking for a way to visually select latitude/longitude of a landing zone for my lander.\u003C/p\u003E\n"},{"CreatedByName":"deepholecaver","CreatedById":95943,"CreatedDateTime":"2014-06-11T12:47:48Z","Content":"\n\u003Cp\u003EIs there some data structure that I can get my ship\u0027s current stage number from? I can\u0027t find anything in the docs except list parts which does not help me.\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-06-20T13:39:18Z","Content":"\n\u003Cp\u003EI am looking for commands to end a program. The use case looks like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Edeclare parameter name.\u003Cbr\u003Eif ship:vesselname \u0026lt;\u0026gt; name { \u003Cbr\u003E    print \u0022WARNING! This script maybe incompatible.\u0022.\u003Cbr\u003E    print \u0022Designed to work with \u0027\u0022 \u002B name \u002B \u0022\u0027\u0022.\u003Cbr\u003E    print \u0022         Current ship \u0027\u0022 \u002B ship:vesselname \u002B \u0022\u0027\u0022.\u003Cbr\u003E    // end program\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIs there an existing solution? Otherwise I want to open a ticket to add an \u0022end\u0022 command.\u003C/p\u003E\n"},{"CreatedByName":"SolarLiner","CreatedById":41047,"CreatedDateTime":"2014-06-20T13:43:43Z","Content":"\n\u003Cp\u003ENope there isn\u0027t. Currently the workaround is to create an error on purpose so that the script stops working.\u003C/p\u003E\n"},{"CreatedByName":"MrOnak","CreatedById":104432,"CreatedDateTime":"2014-06-20T14:22:50Z","Content":"\n\u003Cp\u003EI end my scripts by using \u0022break\u0022 to exit the main loop. Of course that assumes that your script runs in a loop, but mine tend to do that.\u003C/p\u003E\u003Cp\u003EAlternatively I use \u0022until AG10=on {}\u0022 or something similar where I know that the action group in question is unused.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-06-20T18:48:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SolarLiner\u0022 data-cite=\u0022SolarLiner\u0022\u003E\u003Cdiv\u003ENope there isn\u0027t. Currently the workaround is to create an error on purpose so that the script stops working.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe problem with that workaround is that it breaks out of all sub-programs, not just the current one. If your script calls a script that calls a script, there\u0027s a need to differentiate between quitting the current program and quitting all programs.\u003C/p\u003E\u003Cp\u003EkOS definitely could use some sort of an \u0022exit\u0022. The reason I haven\u0027t pushed harder for it though is that its wrapped up with the idea of having functions - what is the difference between a return and and exit, does an exit return an exit code like a real program does, etc. So I\u0027d like to wait and see how functions end up being dealt with.\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-06-23T15:40:48Z","Content":"\n\u003Cp\u003EWhat do you think about monthly releases? \u003C/p\u003E\u003Cp\u003E12.2p1 has been published on May 21st and I see fixes and changes accumulating on github.\u003C/p\u003E\u003Cp\u003EIn order to have some transparency and consistency with release naming I suggest:\u003C/p\u003E\u003Cp\u003E1. only fix bugs between a 12.2* and the final 12.2 release.\u003C/p\u003E\u003Cp\u003E2. put new features in the next release 12.3 branch.\u003C/p\u003E\u003Cp\u003EDoes it make sense?\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-06-23T16:27:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022baloan\u0022 data-cite=\u0022baloan\u0022\u003E\u003Cdiv\u003EWhat do you think about monthly releases? \u003Cp\u003E12.2p1 has been published on May 21st and I see fixes and changes accumulating on github.\u003C/p\u003E\u003Cp\u003EIn order to have some transparency and consistency with release naming I suggest:\u003C/p\u003E\u003Cp\u003E1. only fix bugs between a 12.2* and the final 12.2 release.\u003C/p\u003E\u003Cp\u003E2. put new features in the next release 12.3 branch.\u003C/p\u003E\u003Cp\u003EDoes it make sense?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe current lag in release is my fault, i started a new job May 5th and it has really slowed my development. I have wanted to do a new release but i have been stymied by a new bug were RemoteTech \u002B kOS == KSP world destroy. \u003C/p\u003E\u003Cp\u003EI am hoping to steal some tech from the RT team to make a real continuous pre-release available.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-06-23T22:23:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EThe implementation of the new :VECTOR suffix for a direction is a bit limited, as it only works for some types of Direction and you have to know how the C# code implemented the Direction to know which ones it works for and which ones it doesn\u0027t. I want to fix this, because mathematically is is possible to get a unit vector from any Direction. I know because I did it in script code ages ago. But the implementation of it in the kOS suffix is a bit limited right now.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI know you are busy elsewhere, so you should in no way take this as pressure to get to work, but I was wondering whether these missing vector outputs are something I can expect to be fixed any time soon? There is something I would like to work on that could really use this, but if it is going to take a while I would rather wait than implement some workaround that will be redundant later.\u003C/p\u003E\u003Cp\u003ETake your time and make sure to have fun \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EEdit: I checked out the angular momentum and velocity vectors as an alternative and those are not implemented either.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-24T02:08:42Z\u0022 title=\u002206/24/2014 02:08  AM\u0022 data-short=\u002210 yr\u0022\u003EJune 24, 2014\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-06-23T23:36:46Z","Content":"\n\u003Cp\u003EI seen that running empty loops is not possibly anymore:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003Euntil ag2 = \u0022True\u0022 {}.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis gives me an \u003Cem\u003E\u0022Object reference not set to an instance of an object\u0022\u003C/em\u003E error. Is this intentional?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-06-24T05:45:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EI know you are busy elsewhere, so you should in no way take this as pressure to get to work, but I was wondering whether these missing vector outputs are something I can expect to be fixed any time soon? There is something I would like to work on that could really use this, but if it is going to take a while I would rather wait than implement some workaround that will be redundant later.\u003Cp\u003ETake your time and make sure to have fun \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EEdit: I checked out the angular momentum and velocity vectors as an alternative and those are not implemented either.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI want to fix this, as well as provide a way to have vectors \u0022know\u0022 their own reference frame, as in \u0022this vector knows that it\u0027s in raw coords, and this other vector knows that it\u0027s in navball coords\u0022, etc. But that was blocked for a while.\u003C/p\u003E\u003Cp\u003EI often run into problems where changes that by all rights *should* be quick and easy aren\u0027t because the KSP API is not documented at all. The only documentation for it is that created by the fan community by peeking into the DLL\u0027s public namespace, and given how long it takes to relaunch KSP after each tiny change to the mod code, the trial and error process can be quite time consuming for working out what an API routine actually does.\u003C/p\u003E\u003Cp\u003EI do want to fix Direction:Vector to always work, but my current planned queue is this:\u003C/p\u003E\u003Cp\u003E(1) Implement Future Position Solver, as in:\u003C/p\u003E\u003Cp\u003ESET MyFuturePos TO POSITIONAT( SHIP, TIME\u002B60*60*24*10 ). // get predicted position 10 days from now, taking into account all maneuver nodes on your flight plan and SOI transitions.\u003C/p\u003E\u003Cp\u003E(This is [possibly] done already - I have a pull request for it but I want to bang on it with more testing first.)\u003C/p\u003E\u003Cp\u003E(2) Return the intercept data the that player can see on the map view - the little red and orange chevrons for predicted closest pass with another object.\u003C/p\u003E\u003Cp\u003E(I have to do #1 first because the intercept is returned as a timestamp. Until you have a way to transform a timestamp into a location, it\u0027s not meaningful.)\u003C/p\u003E\u003Cp\u003E#1 and #2 were projects I started on because of the planned goal of \u0022make docking possible\u0022. If you can\u0027t plan an intercept, then you can\u0027t dock.\u003C/p\u003E\u003Cp\u003EOnly then will I want to start on:\u003C/p\u003E\u003Cp\u003E(3) Vector and Direction reference frames. At the moment the XYZ system of KSP is pretty insane and making users have to live in that coordinate system all the time is a pain. Improving vectors and directions so they may be automatically transformed between several convenient reference frames is a goal I have. Fixing the :VECTOR suffix of Direction is something that I\u0027d wait on until I hit this topic.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-06-24T06:02:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E(1) Implement Future Position Solver, as in:\u003Cp\u003ESET MyFuturePos TO POSITIONAT( SHIP, TIME\u002B60*60*24*10 ). // get predicted position 10 days from now, taking into account all maneuver nodes on your flight plan and SOI transitions.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI know you are a big supporter of letting the user figuring things out and build neat solutions, rather than handing them a solution. This seems to my uninitiated eyes a little bit of a deviation from that, even though it sounds like a useful and advanced addition. Is there any specific reason you are working on this?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EOnly then will I want to start on:\u003C/p\u003E\u003Cp\u003E(3) Vector and Direction reference frames. At the moment the XYZ system of KSP is pretty insane and making users have to live in that coordinate system all the time is a pain. Improving vectors and directions so they may be automatically transformed between several convenient reference frames is a goal I have. Fixing the :VECTOR suffix of Direction is something that I\u0027d wait on until I hit this topic.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHaving the :vector suffix fixed would be very useful (especially for my current projects), but finally breaking free from the underlying KSP coordinate system would be truly a major step in making kOS more accessible. It can already be a bit of a steep learning curve if you do not have a programming background already and throwing in something like that really leaves it to a limited few enthusiasts.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-06-24T08:21:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EI know you are a big supporter of letting the user figuring things out and build neat solutions, rather than handing them a solution. This seems to my uninitiated eyes a little bit of a deviation from that, even though it sounds like a useful and advanced addition. Is there any specific reason you are working on this?\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe math problem \u0022where will this orbiting object be at time T?\u0022 has no analytical solution unless the orbit is perfectly circular. The only solutions known to exist for the more generic elliptical case are messy numerical series approximations. There is value in executing them quicker than kOS script can do it, and, importantly, KSP already implements such an algorithm under the hood and uses it to find the red and orange chevrons in map view for intercepts. kOS should present information to the player that is as similar as possible to what the player sees when playing manually. This information is already available in the manual map view.\u003C/p\u003E\n"},{"CreatedByName":"IronGremlin","CreatedById":77166,"CreatedDateTime":"2014-06-24T14:29:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003E ... kOS should present information to the player that is as similar as possible to what the player sees when playing manually. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHow do you feel about allowing KoS to call the estimated burn time value on a maneuver node?\u003C/p\u003E\u003Cp\u003EI\u0027ve been on the fence about whether or not it seems like a consistent KoS feature myself, but am curious to know your take.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-06-24T15:39:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022IronGremlin\u0022 data-cite=\u0022IronGremlin\u0022\u003E\u003Cdiv\u003EHow do you feel about allowing KoS to call the estimated burn time value on a maneuver node?\u003Cp\u003EI\u0027ve been on the fence about whether or not it seems like a consistent KoS feature myself, but am curious to know your take.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGood question. Because while it\u0027s true that the game provides it, it\u0027s also true that the game provides it *wrongly*. The estimated burn time KSP presents to you presumes that no staging occurs during the burn and that the loss of mass during the burn is negligible.\u003C/p\u003E\u003Cp\u003ESo, I\u0027d be reluctant to present wrong information to the player as would happen if that was just passed through as-is, but also reluctant to do the work of determining fuel loss from burning and predicted staging.\u003C/p\u003E\n"},{"CreatedByName":"IronGremlin","CreatedById":77166,"CreatedDateTime":"2014-06-24T20:36:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EGood question. Because while it\u0027s true that the game provides it, it\u0027s also true that the game provides it *wrongly*. The estimated burn time KSP presents to you presumes that no staging occurs during the burn and that the loss of mass during the burn is negligible.\u003Cp\u003ESo, I\u0027d be reluctant to present wrong information to the player as would happen if that was just passed through as-is, but also reluctant to do the work of determining fuel loss from burning and predicted staging.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s a fantastic point, but honestly I feel that the inaccuracies in the default data are at least a known quantity.\u003C/p\u003E\u003Cp\u003EI\u0027d be more worried about how it doesn\u0027t calculate until you \u0027throttle up.\u0027\u003C/p\u003E\u003Cp\u003EI feel that kOS suffers from a bit of an identity crisis; it\u0027s split between quick and dirty functional scripting, and trying to satisfy a small group of enthusiasts with prior coding experience that want a more fully featured language.\u003C/p\u003E\u003Cp\u003EI\u0027m not sure how much of the \u0027quick and dirty\u0027 part comes from a desire to implement proof of concept ideas prior to fleshing out the particulars, and how much comes from trying to make basic script goals approachable.\u003C/p\u003E\u003Cp\u003EMore on point:\u003C/p\u003E\u003Cp\u003EI\u0027d lean towards saving this until functions are implemented, and making it a kind of \u0027 included library feature\u0027 rather than a core language feature. It\u0027s one of those things that is a piece of code that every user will end up using at once point or another, so it seems silly not to include it at all. Including some basic importable scripts with things like a burn time calculator or a warp to time stamp script would save new players some headache and provide neat bits of learning material.\u003C/p\u003E\u003Cp\u003EAnyway, just some thoughts.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-06-24T22:29:47Z","Content":"\n\u003Cp\u003EI was thinking that it might be an interesting feature (for a later point in the far future) to have individual parts report a vector and scalar about their position relative to the CoM and/or point of control of a vehicle. This will enable users to do stuff like figuring out the dimensions of a vehicle and how the the thrust of engines relates to the CoM. Right now those things are guesswork or a matter of trial and error by a self calibrating ship, but not easily or cleanly done.\u003C/p\u003E\u003Cp\u003EWhat do you think about his? I understand there are a lot of other priorities, but it came to mind and I feel it could be rather useful.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022IronGremlin\u0022 data-cite=\u0022IronGremlin\u0022\u003E\u003Cdiv\u003EThat\u0027s a fantastic point, but honestly I feel that the inaccuracies in the default data are at least a known quantity.\u003Cp\u003EI\u0027d be more worried about how it doesn\u0027t calculate until you \u0027throttle up.\u0027\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI agree here. I feel that passing on slightly wrong information is to be preferred over introducing a second calculation with a different result about which the user knows little. The original result is what KSP gives you and that is pretty much what the user has to deal with \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI feel that kOS suffers from a bit of an identity crisis; it\u0027s split between quick and dirty functional scripting, and trying to satisfy a small group of enthusiasts with prior coding experience that want a more fully featured language.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI am really glad to hear you say that, as I have been thinking the same for the past week. Due to other obligations I have not used kOS since Kevin dropped development. This means that I have been getting to terms with the changes and improvements made by erendrake, Steven and the other contributors for the past week, as I have finally installed both KSP and kOS again, enabling me to make a good comparison between the two.\u003C/p\u003E\u003Cp\u003EIt is really good to see there have been major improvements in a lot of areas. Kevin pretty much jumped into the project without much prior planning or system and sometimes it showed. Now, everything is quite a bit more coordinated and structured. However, kOS was initially intended to be a high level programming language that almost everyone could use. Despite some oddities, I think Kevin succeeded pretty well. Most people could just get going and be pretty well versed after a week or so. I feel the newer iteration of kOS is drifting from this approach. In itself this is not a bad thing, but you probably want to be careful not to exclude anyone without prior programming knowledge. It would leave kOS to a very select group and I think it could and should be so much more, as it is a wonderful introduction into programming, robotics and control theory. It could pretty much change people\u0027s lives by showing them this is a neat career to pursue.\u003C/p\u003E\u003Cp\u003EI see two solutions for this issue - one being another change of structure to make everything a little more simple and plain. This is probably not ideal, as it means a lot of work has to be redone and it might hurt the usefulness of kOS. The other is expanding the documentation with examples of the minimum code to make a specific command work. Some are not as obvious as others, especially to people without any experience, and a simple illustration would help a lot. Seeing how much trouble people have with simple issues, such as scripts ending right after their commands, they could probably use a little help.\u003C/p\u003E\n"}]}