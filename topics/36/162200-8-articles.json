{"TopicId":162200,"ForumId":36,"TopicTitle":"[WIP][1.8.1, 1.9.1, 1.10.1, 1.11.0\u20132, 1.12.2\u20135] Principia\u2014version \u200E\u200EKleene, released 2024-07-05\u2014n-Body and Extended Body Gravitation","CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-02-05T00:19:35Z","PageNum":8,"Articles":[{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-03-05T01:47:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SSR Kermit\u0022 data-cite=\u0022SSR Kermit\u0022\u003E\u003Cdiv\u003Ecategory theory as applied\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI didn\u0027t know this was a possibility. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E it makes sense for me to think in terms of Der (or indeed modules on rings).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m confused. ad x is indeed a derivation (it\u0027s actually by definition an inner derivation), but where do you see a module that\u0027s not a vector space?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003Enon-commutative ad T and ad V implies a concurrency barrier-- ie that would say that the order of evaluation is critical to the choice of coefficients.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf T and V commuted life would be simpler; in particular the first order integrator would be exact. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003EAlso, I edited my post slightly since you replied in order to explain the actual of role Baker-Campbell-Hausdorff here and in order to link to Yoshida. Wisdom makes some really good points in the discussion in [Yoshida 1992].\u003C/p\u003E\u003Cp\u003EEDIT answering the edit above \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 alt=\u0022:confused:\u0022\u003E:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EEDIT: Yup, Equations 17, 24-26 of the Yoshida article linked pretty much spell that out in plain!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EEquations 24-26 only say that for the integrators constructed by Yoshida for his proof, which, as pointed out by Wisdom, are suboptimal (see [Atela \u0026amp; McLachlan 1992] for optimal integrators; see also the \u003Cem\u003EMathematica\u003C/em\u003E documentation on SPRK methods for sources for their coefficients---up to order 10. I have not been able to find the Sofroniou \u0026amp; Spaletta paper outside a paywall).\u003C/p\u003E\u003Cp\u003EEquation 17 on the other hand pretty much defines SPRKs, so you won\u0027t be able to parallelise too much. GPGPU might still be beneficial from a vectorisation standpoint (I\u0027m not familiar with it though; just writing native code will already give you a nice speedup due to SSE).\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-05T03:18:21Z\u0022 title=\u002203/05/2014 03:18  AM\u0022 data-short=\u002210 yr\u0022\u003EMarch 5, 2014\u003C/time\u003E by eggrobin\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"SSR Kermit","CreatedById":82781,"CreatedDateTime":"2014-03-05T04:33:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003EI didn\u0027t know this was a possibility. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E Then you haven\u0027t experienced the joy of Monads! Apart from the category of types and CCCs though, yeah. Application outside the category of applicative domains is something of an oxymoron \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI\u0027m confused. ad x is indeed a derivation (it\u0027s actually by definition an inner derivation), but where do you see a module that\u0027s not a vector space?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh ... that\u0027s a long winded explanation; it starts with the extension of lambda calculus into an algebra and then adds simple types -- that is the internal language of a cartesian closed category -- concurrency extensions involving indeterminism generalises this further into an applicative semi-ring ... Anyways, I tend to see the \u0022vector bundle\u0022 as dependent vectors of concurrent, composable computations. Another example of an \u0022application\u0022 of category theory, I suppose. EDIT: Oh yeah, the \u003Ca href=\u0022https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence\u0022 rel=\u0022external nofollow\u0022\u003ECurry Howard isomorphism\u003C/a\u003E (properly a correspondence, which is pretty amazing) is absolutely central to how I think about algebraic structure; that is I think about structure as language.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EIf T and V commuted life would be simpler; in particular the first order integrator would be exact. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWait, what? I\u0027m missing something pretty fundamental here I think....\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAlso, I edited my post slightly since you replied in order to explain the actual of role Baker-Campbell-Hausdorff here and in order to link to Yoshida. Wisdom makes some really good points in the discussion in [Yoshida 1992].\u003C/p\u003E\u003Cp\u003EEDIT answering the edit above \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 alt=\u0022:confused:\u0022\u003E:\u003C/p\u003E\u003Cp\u003EEquations 24-26 only say that for the integrators constructed by Yoshida for his proof, which, as pointed out by Wisdom, are suboptimal (see [Atela \u0026amp; McLachlan 1992] for optimal integrators; see also the \u003Cem\u003EMathematica\u003C/em\u003E documentation on SPRK methods for sources for their coefficients---up to order 10. I have not been able to find the Sofroniou \u0026amp; Spaletta paper outside a paywall).\u003C/p\u003E\u003Cp\u003EEquation 17 on the other hand pretty much defines SPRKs, so you won\u0027t be able to parallelise too much. GPGPU might still be beneficial from a vectorisation standpoint (I\u0027m not familiar with it though; just writing native code will already give you a nice speedup due to SSE).\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ERight; my goal was to do at least one level of task parallelisation on the 6th order Yoshida-- but now having read just the introductionary article I see that all those have the same non-reducible (stateful) behaviour. That\u0027s very nice to know in such detail. Your brief explanation of BCH helped me see the connection.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-05T04:55:13Z\u0022 title=\u002203/05/2014 04:55  AM\u0022 data-short=\u002210 yr\u0022\u003EMarch 5, 2014\u003C/time\u003E by SSR Kermit\u003C/strong\u003E\n\u003Cbr\u003ECurry-Howard!\n\u003C/span\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-03-05T11:18:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SSR Kermit\u0022 data-cite=\u0022SSR Kermit\u0022\u003E\u003Cdiv\u003EThen you haven\u0027t experienced the joy of Monads! Apart from the category of types and CCCs though, yeah. Application outside the category of applicative domains is something of an oxymoron \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI have mostly seen category theory in algebraic topology (which of course has applications, such as proving that you can cut a ham sandwich in half or that you cannot comb a hairy sphere \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E), so I wasn\u0027t aware of that.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EWait, what? I\u0027m missing something pretty fundamental here I think....\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, if ad T and ad V commute, their exponentials commute (because you can apply the binomial theorem to the terms of the series), \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eexp(\u00C3\u00E2\u20AC\u017E ad H) = exp(\u00C3\u00E2\u20AC\u017E ad T) exp(\u00C3\u00E2\u20AC\u017E ad V)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eso (8) in [Yoshida 1992] is exact.\u003C/p\u003E\u003Cp\u003EAnother way to see that is that as the exponentials commute, (16) is just \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E( \u00C3\u017D\u00C2\u00A0[sub]i[/sub] exp(c[sub]i[/sub]\u00C3\u00E2\u20AC\u017E ad T) ) ( \u00C3\u017D\u00C2\u00A0[sub]i[/sub] exp(d[sub]i[/sub] \u00C3\u00E2\u20AC\u017E ad V) ) = exp(\u00C3\u017D\u00C2\u00A3[sub]i[/sub] c[sub]i[/sub] \u00C3\u00E2\u20AC\u017E ad T) exp(\u00C3\u017D\u00C2\u00A3[sub]i[/sub] d[sub]i[/sub] \u00C3\u00E2\u20AC\u017E ad V)  \u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe integrator has first order if and only if \u00C3\u017D\u00C2\u00A3\u003Csub\u003Ei\u003C/sub\u003Ec\u003Csub\u003Ei\u003C/sub\u003E = 1 and \u00C3\u017D\u00C2\u00A3\u003Csub\u003Ei\u003C/sub\u003Ed\u003Csub\u003Ei\u003C/sub\u003E = 1 (this is because they are actually the \u003Cem\u003Enodes\u003C/em\u003E of the underlying Runge-Kutta integrators, see my introduction), so any integrator that has 1st order has the highest order possible. As [Yoshida 1990] proves that you can have arbitrarily high orders, the 1st order integrator has arbitrarily high order, \u003Cem\u003Ei.e.\u003C/em\u003E, it is exact.\u003C/p\u003E\u003Cp\u003ENote that this never actually happens; writing H = H\u003Csub\u003E0\u003C/sub\u003E \u002B H\u003Csub\u003E1\u003C/sub\u003E in the general case as pointed out by Wisdom, ad H\u003Csub\u003E0\u003C/sub\u003E and ad H\u003Csub\u003E1\u003C/sub\u003E commute if and only if {H\u003Csub\u003E0\u003C/sub\u003E, H\u003Csub\u003E1\u003C/sub\u003E} = 0. This implies\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EH[sub]0[/sub]\u0027 = {H[sub]0[/sub], H} = {H[sub]0[/sub], H[sub]0[/sub] \u002B H[sub]1[/sub]} = {H[sub]0[/sub], H[sub]0[/sub]} \u002B {H[sub]0[/sub], H[sub]1[/sub]} = {H[sub]0[/sub], H[sub]1[/sub]} = 0\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eand similarly for H\u003Csub\u003E1\u003C/sub\u003E, so H\u003Csub\u003E0\u003C/sub\u003E and H\u003Csub\u003E1\u003C/sub\u003E are first integrals; in other words we are pretty much dealing with two separate Hamiltonian systems. In the usual case T(p) \u002B V(q), we get that the forces are identically 0.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-05T13:42:33Z\u0022 title=\u002203/05/2014 01:42  PM\u0022 data-short=\u002210 yr\u0022\u003EMarch 5, 2014\u003C/time\u003E by eggrobin\u003C/strong\u003E\n\u003Cbr\u003Eplural.\n\u003C/span\u003E\n"},{"CreatedByName":"SSR Kermit","CreatedById":82781,"CreatedDateTime":"2014-03-05T12:09:20Z","Content":"\n\u003Cp\u003E\u0022You have much to learn, Grasshopper\u0022\u003C/p\u003E\u003Cp\u003EI see it in the equations; that really is fundamental. A good opportunity to step back and do some review of what I\u0027ve learned the last few weeks.\u003C/p\u003E\u003Cp\u003EThanks for the knowledge bombs!\u003C/p\u003E\n"},{"CreatedByName":"rhoark","CreatedById":57151,"CreatedDateTime":"2014-03-10T22:10:57Z","Content":"\n\u003Cp\u003EI\u0027m using a class for physical quantities that\u0027s basically a tuple of quantity and unit that checks units at runtime. Even if I\u0027d rather have it at compile time, its essential to identify errors at the point they occur rather than wonder what causes some behavior downstream.\u003C/p\u003E\u003Cp\u003EWhat is/will be the shape of the interface between Principia and vessels/parts for determining on-rails thrust and resource consumption?\u003C/p\u003E\n"},{"CreatedByName":"SSR Kermit","CreatedById":82781,"CreatedDateTime":"2014-03-10T23:47:52Z","Content":"\n\u003Cp\u003EA few questions about the code of the SPRK itself:\u003C/p\u003E\u003Cp\u003EThe delegate NBodySystem.computeAccelerations takes a double that is calculated from the time plus a sum of the \u0027b\u0027 coefficients times the interval-length -- however the value is never used. Is that for future use?\u003C/p\u003E\u003Cp\u003EI\u0027m not really clear on the use of samplingPeriod and samplingPhase, could you elaborate on how that works?\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-03-11T00:49:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022rhoark\u0022 data-cite=\u0022rhoark\u0022\u003E\u003Cdiv\u003EI\u0027m using a class for physical quantities that\u0027s basically a tuple of quantity and unit that checks units at runtime. Even if I\u0027d rather have it at compile time, its essential to identify errors at the point they occur rather than wonder what causes some behavior downstream.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ERuntime checks are not very useful, especially given the time it takes to start KSP; a wrapper and testing will alleviate that, but I fundamentally like things to be sound at compile time.\u003C/p\u003E\u003Cp\u003ECompile-time checks for quantities are a pain to code in C# though, so I\u0027ll probably do quantity checking in the future refactoring that involves rewriting stuff in C\u002B\u002B/CLI. For the moment, reference frames are the greatest source of confusion (it\u0027s full of xzy and rotations and rotations conjugated by xzy), so I\u0027ll be compile-time checking those. See \u003Ca href=\u0022https://github.com/eggrobin/Principia/blob/master/NewtonianPhysics/Geometry.cs\u0022 rel=\u0022external nofollow\u0022\u003EGeometry.cs\u003C/a\u003E for the current incomplete implementation. Forgetful functors are missing, I just coded them but I didn\u0027t push them, and I still need to write the left actions of most transformations.\u003C/p\u003E\u003Cp\u003EEDIT: I didn\u0027t push permutations either.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EWhat is/will be the shape of the interface between Principia and vessels/parts for determining on-rails thrust and resource consumption?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m not sure about that, I\u0027m still trying to make the core features work properly.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SSR Kermit\u0022 data-cite=\u0022SSR Kermit\u0022\u003E\u003Cdiv\u003EA few questions about the code of the SPRK itself:\u003Cp\u003EThe delegate NBodySystem.computeAccelerations takes a double that is calculated from the time plus a sum of the \u0027b\u0027 coefficients times the interval-length -- however the value is never used. Is that for future use?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou mean the \u0027c\u0027 coefficients, right?\u003C/p\u003E\u003Cp\u003EThis value is the time. ComputeRightHandSide computes any RHS, it just turns out the one we\u0027re dealing with here is autonomous. So it\u0027s not for future use, it\u0027s for generality.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI\u0027m not really clear on the use of samplingPeriod and samplingPhase, could you elaborate on how that works?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt was something I quickly hacked together for memory usage when running long-term simulations of Alternis Kerbol; I only store the state every samplingPeriod steps (and samplingPhase just tells me how long it\u0027s been since I sampled). At the moment I\u0027m using that to plot the trajectories, but I really need to find a smarter way to sample.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-11T00:54:59Z\u0022 title=\u002203/11/2014 12:54  AM\u0022 data-short=\u002210 yr\u0022\u003EMarch 11, 2014\u003C/time\u003E by eggrobin\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"rhoark","CreatedById":57151,"CreatedDateTime":"2014-03-11T02:05:03Z","Content":"\n\u003Cp\u003EI decided runtime checks were worth having after I spent 2 hours figuring out why my fuel was turning to ice (pressure in kPa where Pa was expected).\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-03-11T02:37:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022rhoark\u0022 data-cite=\u0022rhoark\u0022\u003E\u003Cdiv\u003EI decided runtime checks were worth having after I spent 2 hours figuring out why my fuel was turning to ice (pressure in kPa where Pa was expected).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI had the same sort of experience with reference frames (planets have a tendency to go crazy when you forget a .xzy), hence the ~500 lines of reference frame management (\u002Btests, this needs tests). For the moment I\u0027m mostly dealing with distances and velocities, all in SI units. When I get to fuel and thrust management I guess I\u0027ll want strongly-typed physical quantities; writing things in C\u002B\u002B/CLI seems cleaner than doing runtime checks.\u003C/p\u003E\n"},{"CreatedByName":"KvickFlygarn87","CreatedById":76314,"CreatedDateTime":"2014-03-12T21:33:49Z","Content":"\n\u003Cp\u003EHmm, any progress on making thrust work?\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-03-12T21:47:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022KvickFlygarn87\u0022 data-cite=\u0022KvickFlygarn87\u0022\u003E\u003Cdiv\u003EHmm, any progress on making thrust work?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis will be the first thing on the list after the current refactoring. For the moment I need to write tests for the Geometry assembly, then wrap the things I need in Orbit, CelestialBody, Vessel, etc. so I have strongly-typed reference frames to work with. This will make it easier for me to understand what I\u0027m writing, spending two hours tracking a missing rotation or xzy is no fun.\u003C/p\u003E\u003Cp\u003EEDIT:\u003C/p\u003E\u003Cp\u003EI don\u0027t think I have mentioned it, but I think the jitter I was experiencing was due to the planets not quite being where they should be (inaccuracies in the Orbit code). If this is indeed the case, I can ignore it while in space (all vessels will twitch together), and at lower altitudes I can leave Unity in charge of the physics. Some of the things I was observing also came from confusion between reference frames, hence the current refactoring.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-13T01:13:54Z\u0022 title=\u002203/13/2014 01:13  AM\u0022 data-short=\u002210 yr\u0022\u003EMarch 13, 2014\u003C/time\u003E by eggrobin\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"fusty","CreatedById":39741,"CreatedDateTime":"2014-03-13T20:03:11Z","Content":"\n\u003Cp\u003EHey eggrobin, thanks for including the readings to understand all this!\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-03-15T02:01:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022fusty\u0022 data-cite=\u0022fusty\u0022\u003E\u003Cdiv\u003EHey eggrobin, thanks for including the readings to understand all this!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou\u0027re welcome! Feel free to point out any errors in my explanatory post or ask for clarifications.\u003C/p\u003E\u003Cp\u003EAfter \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/71630-0-23-SmokeScreen-Extended-FX-plugin?p=1021898\u0026amp;viewfull=1#post1021898\u0022 rel=\u0022external nofollow\u0022\u003Esome pretty fruitful forays into the nebulous realm of particle effects\u003C/a\u003E, it\u0027s time for a \u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EStatus update:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThe Geometry assembly seems to be mostly feature complete, so I\u0027ll start writing tests tomorrow (Saturday) after changing a few access modifiers, replacing the ugly switch statements in Permutation by something nicer, and a few optimisations.\u003C/p\u003E\u003Cp\u003EHere is an overview of its features; things are made rather more formal than is usual in physics (there are even a few categories, \u003Cstrong\u003ESSR Kermit\u003C/strong\u003E will be happy) because the point is type-safety and convertibility between reference frames (some direct, some indirect).\u003C/p\u003E\u003Cp\u003EAll types are generic with parameters deriving from ISpace. The parameters are tags indicating which reference frame the object belongs to or between which reference frames the transformation acts. Examples would be Local, World, MirroredWorld, Integrator, etc. I currently only support orthogonal transformations, so it cannot be scaled space. This might change in the future. From a mathematical standpoint, the tag A represents an affine space A on a three dimensional real inner product space V. The types are immutable except for R3Element.\u003C/p\u003E\u003Cp\u003EThe assembly is CLS-compliant.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:upper-roman;\u0022\u003E\u003Cli\u003E\u003Cem\u003EScalar.cs:\u003C/em\u003E\u003Cul\u003E\u003Cli\u003E Scalars (double precision floating point) are wrapped in the type Scalar so as not to risk accidental operations with stock weakly-typed quantities or single-precision floating point numbers.\u003C/li\u003E\u003C/ul\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]\u003Cem\u003ESign.cs:\u003C/em\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EA sign. We don\u0027t care about 0 since this is used for determinants of orthogonal matrices, so 0 is not specially treated (I think it\u0027s seen as negative).\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]\u003Cem\u003ER3Element.cs:\u003C/em\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003ER3Element is basically my equivalent of KSP\u0027s Vector3d, a weakly typed three dimensional real vector, on which all sorts of operations (including dot and cross product) are allowed without any regard for their invariance under transformations. It is the underlying data type for all other vectors, which have a readonly R3Element Coordinates field containing their coordinates.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]\u003Cem\u003EAffineSpace.cs:\u003C/em\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EPoint\u0026lt;A\u0026gt; is an element of the affine space A -- think of it as a position. You can\u0027t add them or scale them, but you can take the vector Vector\u0026lt;A\u0026gt;.ToFrom(p, q) from q to p, you can compute barycenters as Point\u0026lt;A\u0026gt;.Barycenter(q1, \u00C3\u017D\u00C2\u00BB1, q2, \u00C3\u017D\u00C2\u00BB2,), etc. \u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]\u003Cem\u003EGrassmann.cs:\u003C/em\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EVector\u0026lt;A\u0026gt; is a vector in the vector space V acting on A. The operations of an inner product space are available.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EBivector\u0026lt;A\u0026gt; is a bivector in V \u00C3\u00A2\u00CB\u2020\u00C2\u00A7 V. Physicists call that a pseudovector. Examples include angular velocity. The operations of an inner product space are available.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ETrivector\u0026lt;A\u0026gt; is a trivector in V \u00C3\u00A2\u00CB\u2020\u00C2\u00A7 V \u00C3\u00A2\u00CB\u2020\u00C2\u00A7 V. Physicists call that a pseudoscalar. Examples include the magnetic flux. I probably don\u0027t need this, so you can\u0027t do anything with it at the moment.\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe syntax for the inner products is Vector\u0026lt;A\u0026gt;.Inner(v, w), resp. Bivector\u0026lt;A\u0026gt;.Inner(v, w), etc.\u003C/p\u003E\u003Cp\u003EIn addition to the inner product space operations, the wedge product of the Grassmann algebra, \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u00C3\u00A2\u00CB\u2020\u00C2\u00A7: V \u00C3\u0192\u00E2\u20AC\u201D V \u00C3\u00A2\u00E2\u20AC\u00A0\u00E2\u20AC\u2122 V\u00C3\u00A2\u00CB\u2020\u00C2\u00A7V, \u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E \u00C3\u00A2\u00CB\u2020\u00C2\u00A7: V \u00C3\u0192\u00E2\u20AC\u201D V\u00C3\u00A2\u00CB\u2020\u00C2\u00A7V \u00C3\u00A2\u00E2\u20AC\u00A0\u00E2\u20AC\u2122 V\u00C3\u00A2\u00CB\u2020\u00C2\u00A7V\u00C3\u00A2\u00CB\u2020\u00C2\u00A7V,\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E \u00C3\u00A2\u00CB\u2020\u00C2\u00A7: V\u00C3\u00A2\u00CB\u2020\u00C2\u00A7V \u00C3\u0192\u00E2\u20AC\u201D V \u00C3\u00A2\u00E2\u20AC\u00A0\u00E2\u20AC\u2122 V\u00C3\u00A2\u00CB\u2020\u00C2\u00A7V\u00C3\u00A2\u00CB\u2020\u00C2\u00A7V,\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eis available. The syntax is v.Wedge(w). The wedge product of vectors is like cross product of vectors, except that by keeping the result in the Grassmann algebra things behave nicely through the looking-glass.\u003C/p\u003E\u003Cp\u003EMoreover, since in an inner product space, V\u00C3\u00A2\u00CB\u2020\u00C2\u00A7V is canonically isomorphic to the Lie algebra \u003Cstrong\u003Eso\u003C/strong\u003E(3, V), bivectors can act as antisymmetric matrices on the left and on the right, B.ActOn(v), resp. v.ActedUponBy(\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E. This corresponds to the cross product of a vector with a pseudovector.\u003C/p\u003E\u003Cp\u003EThey can also be exponentiated, yielding an element of the Lie group SO(3) of rotations of V, which is the type Rotation\u0026lt;A, A\u0026gt;. This is how you get a rotation from an angular velocity times a duration. The syntax for that, for instance, would be Bivector\u0026lt;A\u0026gt;.Exp(\u00C3\u00E2\u20AC\u00B0 * t). Finally you can take their Lie bracket, the commutator of matrices, which corresponds to the cross product of pseudovectors.\u003C/p\u003E\u003Cp\u003E[*]\u003Cem\u003EOrthogonalMaps.cs:\u003C/em\u003E\u003C/p\u003E\u003Cp\u003EThese are maps between vector spaces and their Grassmann algebras. The maps on the Grassmann algebras are uniquely defined by their action on the base spaces, so we\u0027ll look at them as maps between vector spaces.\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EOrthogonalMap\u0026lt;A, B\u0026gt; is a map between A and B (or rather between the vector spaces acting on the affine spaces A and \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E in the category of inner product spaces.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ERotation\u0026lt;A, B\u0026gt; is a map in the category of oriented inner product spaces.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EPermutation\u0026lt;A, B\u0026gt; is a map in the category of inner product spaces equipped with an unordered basis (it\u0027s a coordinate permutation).\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESince these are not implemented as matrices and have distinct representations (the rotation is a quaternion, the orthogonal map is a rotoinversion (sign and quaternion), and the permutation actually permutes the coordinates), converting a Permutation P to an OrthogonalTransformation is a nontrivial operation. This is done by evaluating P.Forget(), the forgetful functor to the category of inner product spaces.\u003C/p\u003E\u003Cp\u003E[*]\u003Cem\u003EEuclideanMaps.cs:\u003C/em\u003E\u003C/p\u003E\u003Cp\u003ESimilarly, this file contains the types for transformations between affine spaces on oriented inner product spaces (RigidTransformation) and between affine spaces on inner product spaces (EuclideanTransformation), with a forgetful functor from the first to the second.\u003C/p\u003E\u003Cp\u003E[*]\u003Cem\u003EMaps.cs\u003C/em\u003E\u003C/p\u003E\u003Cp\u003EThis class contains the composition between maps. The syntax is Maps.Compose\u0026lt;A, B, C\u0026gt;(f, g) for the composition f\u00C3\u00A2\u00E2\u20AC\u201D\u00E2\u20AC\u00B9g of two maps of the same type (i.e. in the same category, forgetful functors are not implicit) f: B\u00C3\u00A2\u00E2\u20AC\u00A0\u00E2\u20AC\u2122C and g: A\u00C3\u00A2\u00E2\u20AC\u00A0\u00E2\u20AC\u2122B.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-15T16:50:42Z\u0022 title=\u002203/15/2014 04:50  PM\u0022 data-short=\u002210 yr\u0022\u003EMarch 15, 2014\u003C/time\u003E by eggrobin\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Aghanim","CreatedById":76587,"CreatedDateTime":"2014-03-15T13:49:24Z","Content":"\n\u003Cp\u003EWow. I don\u0027t know where to start. The amount of complicated maths like \u00C3\u00A2\u00CB\u2020\u00C2\u00A7: V \u00C3\u0192\u00E2\u20AC\u201D V \u00C3\u00A2\u00E2\u20AC\u00A0\u00E2\u20AC\u2122 V\u00C3\u00A2\u00CB\u2020\u00C2\u00A7V and insert algebra here with me in the group of not even knowing what a derivative means makes me cannot contribute at all \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E But if my intuition is correct, this means that we could have Lagrange points and low-energy transfer and interplanetary transport network right?\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-03-15T14:08:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Aghanim\u0022 data-cite=\u0022Aghanim\u0022\u003E\u003Cdiv\u003EWow. I don\u0027t know where to start. The amount of complicated maths like \u00C3\u00A2\u00CB\u2020\u00C2\u00A7: V \u00C3\u0192\u00E2\u20AC\u201D V \u00C3\u00A2\u00E2\u20AC\u00A0\u00E2\u20AC\u2122 V\u00C3\u00A2\u00CB\u2020\u00C2\u00A7V and insert algebra here with me in the group of not even knowing what a derivative means makes me cannot contribute at all \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis last update was just about the technicalities of how I will implement strongly typed reference frames (in KSP, sometimes the universe rotates around you, sometime it moves with you, sometimes the y and z coordinates are flipped, i.e. you get mirrored positions; moreover I also render things in weird reference frames), so you want to be sure that when you combine things from different bits of KSP you do it in a consistent way (for instance, you don\u0027t want to apply a mirrored velocity in a non-mirrored reference frame otherwise you will go up instead of sideways).\u003C/p\u003E\u003Cp\u003EThe right way to do that involves some interesting algebra, but this only is relevant to modders who have to deal with the reference frame weirdness of KSP.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EBut if my intuition is correct, this means that we could have Lagrange points and low-energy transfer and interplanetary transport network right?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, the above post is just a lot of abstract nonsense, but yes, the point of the whole mod is to have realistic gravitation, so there will be Lagrange points, sun-synchronous orbits when I implement quadrupole moment, etc.\u003C/p\u003E\u003Cp\u003EYou can actually look at the kind of trajectories you will be dealing with once this becomes playable in the imgur album in the OP (note that some pictures are in rotating reference frames).\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-15T14:10:54Z\u0022 title=\u002203/15/2014 02:10  PM\u0022 data-short=\u002210 yr\u0022\u003EMarch 15, 2014\u003C/time\u003E by eggrobin\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2014-03-15T14:11:08Z","Content":"\n\u003Cp\u003EWhy is it that you can explain Grassman algebra in an interesting, entertaining manner, while my lecturer manages to make vector spaces sound like incomprehensive gibberish, calculating scalar products an arcane art and trivial things like martix operations utterly boring? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-03-15T17:13:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Dragon01\u0022 data-cite=\u0022Dragon01\u0022\u003E\u003Cdiv\u003EWhy is it that you can explain Grassman algebra in an interesting, entertaining manner, while my lecturer manages to make vector spaces sound like incomprehensive gibberish, calculating scalar products an arcane art and trivial things like martix operations utterly boring? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E A wild guess: I actually have a practical reason for talking about these things, rather than saying \u0022we are now going to talk about alternating multilinear maps on a finite-dimensional vector space over a field K with characteristic other than 2\u0022, which only really sounds exciting once you know why alternating maps are useful.\u003C/p\u003E\u003Cp\u003EIt turns out a lot of this abstract nonsense and algebraic structures can be used in order to strongly type stuff. Physicists usually don\u0027t bother with that and say \u0022it\u0027s a vector, but beware, it behaves weirdly under reflection\u0022. Good luck implementing that safely...\u003C/p\u003E\u003Cp\u003ESimilar considerations apply to numerical integration: I found the numerical analysis course I took last year quite boring \u0022let\u0027s make up another integrator by extrapolating an integrator we have; let\u0027s now look at ten different ways to do adaptive timestep; let\u0027s apply all of this to either a linear differential equation, the logistic equation or the two-body problem\u0022, but having an actual problem to solve is fun.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-15T21:16:21Z\u0022 title=\u002203/15/2014 09:16  PM\u0022 data-short=\u002210 yr\u0022\u003EMarch 15, 2014\u003C/time\u003E by eggrobin\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"NERVAfan","CreatedById":72817,"CreatedDateTime":"2014-03-16T06:00:52Z","Content":"\n\u003Cp\u003EI can only understand 10% (optimistically) of this, but an N-body mod sounds very interesting!\u003C/p\u003E\n"},{"CreatedByName":"DiEvAl","CreatedById":66247,"CreatedDateTime":"2014-03-16T06:55:40Z","Content":"\n\u003Cp\u003ECan you give a lower bound on when you get something playable? ;-)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-16T13:24:54Z\u0022 title=\u002203/16/2014 01:24  PM\u0022 data-short=\u002210 yr\u0022\u003EMarch 16, 2014\u003C/time\u003E by DiEvAl\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-03-16T22:22:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DiEvAl\u0022 data-cite=\u0022DiEvAl\u0022\u003E\u003Cdiv\u003ECan you give a lower bound on when you get something playable? ;-)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E1 Planck time. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EA better answer to this question depends on several things:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003EWhat you call playable. If you want to be able to see where your burn leads you in real time in the map view (dynamic integration), you will have to wait for me to implement Saha \u0026amp; Tremaine, so that would be at the very least a month. If you only require application of thrust and if I were to set the refactoring aside (which I\u0027m not likely to do, see next point), I could get that done before the end of the coming week.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EWhat I prioritise in my development process. I tend to like building up big structures for type-safety so I don\u0027t waste time tracking a missing xzy or mismatched units afterwards, but this takes time. I believe the \u0022quick and dirty\u0022 niche is already successfully filled by \u003Cstrong\u003EHoneyFox\u003C/strong\u003E\u0027s \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/70881-0-23-Orbit-Manipulator-Series-(WIP)-(Updated-March-9-2014)\u0022 rel=\u0022external nofollow\u0022\u003EOrbit Manipulator Series\u003C/a\u003E, so that this approach makes sense.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EHow much I get sidetracked by other things (I spent the second half of last week fixing and adding features to \u003Cstrong\u003Esarbian\u003C/strong\u003E\u0027s SmokeScreen plugin and I implemented physical quantities in C\u002B\u002B/CLI today).\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI think I\u0027ll use these physical quantities in Principia, I\u0027ll have to see whether I want to switch to C\u002B\u002B/CLI altogether or somehow interface that with C#. I\u0027m likely to switch to C\u002B\u002B/CLI, since I intend to interface with native C\u002B\u002B eventually (I have established that mixed-mode is not possible, but having a codebase in C\u002B\u002B/CLI and C\u002B\u002B seems saner than a mix of C#, C\u002B\u002B/CLI and C\u002B\u002B) and I needed C\u002B\u002B/CLI in order to test the Geometry assembly anyway (you can look at the existing tests on the repository).\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-17T00:43:13Z\u0022 title=\u002203/17/2014 12:43  AM\u0022 data-short=\u002210 yr\u0022\u003EMarch 17, 2014\u003C/time\u003E by eggrobin\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2014-03-16T23:44:08Z","Content":"\n\u003Cp\u003EThis is looking very nice. Take your time, I\u0060m sure it will be worth it.\u003C/p\u003E\n"},{"CreatedByName":"skykooler","CreatedById":60459,"CreatedDateTime":"2014-03-17T07:32:41Z","Content":"\n\u003Cp\u003EIf it\u0027s going to include native code, will there still be versions for those of us running OSX or Linux?\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-03-17T14:09:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022skykooler\u0022 data-cite=\u0022skykooler\u0022\u003E\u003Cdiv\u003EIf it\u0027s going to include native code, will there still be versions for those of us running OSX or Linux?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes. Native code is some time away though; at the moment the choice of language is mostly a question of deciding which language I least dislike.\u003C/p\u003E\n"},{"CreatedByName":"ummwut","CreatedById":29846,"CreatedDateTime":"2014-03-19T20:03:03Z","Content":"\n\u003Cp\u003EThis is all Newtonian; Gravity propagates at an infinite speed? Seems like having gravity propagate at any lower speed would be problematic.\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-03-19T22:30:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ummwut\u0022 data-cite=\u0022ummwut\u0022\u003E\u003Cdiv\u003EThis is all Newtonian; Gravity propagates at an infinite speed? Seems like having gravity propagate at any lower speed would be problematic.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIndeed, no GR here.\u003C/p\u003E\n"}]}