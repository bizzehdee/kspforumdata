{"TopicId":56044,"ForumId":36,"TopicTitle":"Microcontroller like mod interest survey","CreatedByName":"soxslayer","CreatedById":96580,"CreatedDateTime":"2013-12-13T18:34:16Z","PageNum":1,"Articles":[{"CreatedByName":"soxslayer","CreatedById":96580,"CreatedDateTime":"2013-12-13T18:34:16Z","Content":"\n\u003Cp\u003EI\u0027m thinking of starting a KSP mod similar to kOS in that it will allow you to write programs to control your crafts. I think kOS is a fantastic mod but I want something a little more \u0022realistic\u0022. What I\u0027m thinking of is something similar except it will behave more like an actual CPU or microcontroller.\u003C/p\u003E\u003Cp\u003EHere is a list of features I\u0027m thinking of as of now:\u003C/p\u003E\u003Cp\u003E* you\u0027ll have to program it in assembly, opens up the possibility of a higher level language compiler\u003C/p\u003E\u003Cp\u003E* access to various information/control modules will be with memory mapped I/O\u003C/p\u003E\u003Cp\u003E* there will be different craft parts which will give you more processing power and memory, possibly even co-processors\u003C/p\u003E\u003Cp\u003E* initial interrupt support, like a timer for multitasking like activities\u003C/p\u003E\u003Cp\u003EI realize this mod won\u0027t be for everyone as it will require some degree of technical background. I\u0027m looking to gauge the community\u0027s interest in something like this.\u003C/p\u003E\u003Cp\u003ESoxSlayer\u003C/p\u003E\n"},{"CreatedByName":"rbray89","CreatedById":48847,"CreatedDateTime":"2013-12-13T20:31:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022soxslayer\u0022 data-cite=\u0022soxslayer\u0022\u003E\u003Cdiv\u003EI\u0027m thinking of starting a KSP mod similar to kOS in that it will allow you to write programs to control your crafts. I think kOS is a fantastic mod but I want something a little more \u0022realistic\u0022. What I\u0027m thinking of is something similar except it will behave more like an actual CPU or microcontroller.\u003Cp\u003EHere is a list of features I\u0027m thinking of as of now:\u003C/p\u003E\u003Cp\u003E* you\u0027ll have to program it in assembly, opens up the possibility of a higher level language compiler\u003C/p\u003E\u003Cp\u003E* access to various information/control modules will be with memory mapped I/O\u003C/p\u003E\u003Cp\u003E* there will be different craft parts which will give you more processing power and memory, possibly even co-processors\u003C/p\u003E\u003Cp\u003E* initial interrupt support, like a timer for multitasking like activities\u003C/p\u003E\u003Cp\u003EI realize this mod won\u0027t be for everyone as it will require some degree of technical background. I\u0027m looking to gauge the community\u0027s interest in something like this.\u003C/p\u003E\u003Cp\u003ESoxSlayer\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs a computer engineer, I have mixed feelings about this. I already have too look at code for work... not so sure I would want to do this for a game. Especially if it would have to be done in machine-level code.\u003C/p\u003E\n"},{"CreatedByName":"JordanL","CreatedById":95655,"CreatedDateTime":"2013-12-13T20:47:11Z","Content":"\n\u003Cp\u003EI think that being forced to program in assembly is a bit too far for KSP, but that\u0027s just my opinion. The game is just a bit too fanciful, even with some hardcore/realism mods installed, to go that far I think.\u003C/p\u003E\n"},{"CreatedByName":"rbray89","CreatedById":48847,"CreatedDateTime":"2013-12-13T20:56:00Z","Content":"\n\u003Cp\u003EIf it had a good higher level compiler, I\u0027d be in. I also like the idea of control being resource based.\u003C/p\u003E\n"},{"CreatedByName":"soxslayer","CreatedById":96580,"CreatedDateTime":"2013-12-13T21:16:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022JordanL\u0022 data-cite=\u0022JordanL\u0022\u003E\u003Cdiv\u003EI think that being forced to program in assembly is a bit too far for KSP, but that\u0027s just my opinion. The game is just a bit too fanciful, even with some hardcore/realism mods installed, to go that far I think.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOnly having assembly as an option would only be an initial step. Writing an assembler is much easier than writing a full fledged language parser. Later releases would include the option for writing programs in some sort of higher level language.\u003C/p\u003E\n"},{"CreatedByName":"soxslayer","CreatedById":96580,"CreatedDateTime":"2013-12-13T21:21:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022rbray89\u0022 data-cite=\u0022rbray89\u0022\u003E\u003Cdiv\u003EIf it had a good higher level compiler, I\u0027d be in. I also like the idea of control being resource based.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAgreed on both points. It would be kinda cool if the electric draw was based on how much computation was being performed. For example if the CPU is sitting idle waiting on an event it would draw very little but if it was performing some number crunching calculations the power draw would increase.\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2013-12-13T22:20:31Z","Content":"\n\u003Cp\u003ELook up ProgCom here. Does this, basically, IIRC.\u003C/p\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2013-12-13T22:55:21Z","Content":"\n\u003Cp\u003EOther than kOS which clearly differs in it\u0027s goals, there\u0027s also ProgCom \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/24955-0-21-1-ProgCom-CPU-Emulator-V0-9\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/24955-0-21-1-ProgCom-CPU-Emulator-V0-9\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIt\u0027s programmed in assembly and as far as I\u0027m aware (which is not very far) there is a C compiler for it. Even if this still differs from your goals, it\u0027d probably be helpful to talk to SimpleSimon. He\u0027s been too busy to update ProgCom, maybe yalls could team up\u003C/p\u003E\u003Cp\u003E*this is the worst ninja I\u0027ve ever fallen to...*\u003C/p\u003E\n"},{"CreatedByName":"Sparker","CreatedById":79522,"CreatedDateTime":"2013-12-13T23:17:10Z","Content":"\n\u003Cp\u003EI don\u0027t think that it would be convenient and efficient to make programmes for rockets in assembler. It s good for small programmes, but when it comes to adding some logic to your rocket it will become really hard work. High levl programming is more suitable for this. Actually russian \u0027Proton\u0027 rocket and some others use graphical programming language \u0027DRAKON\u0027.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2013-12-14T01:50:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Greys\u0022 data-cite=\u0022Greys\u0022\u003E\u003Cdiv\u003EOther than kOS which clearly differs in it\u0027s goals, there\u0027s also ProgCom \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/24955-0-21-1-ProgCom-CPU-Emulator-V0-9\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/24955-0-21-1-ProgCom-CPU-Emulator-V0-9\u003C/a\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is exactly what I wanted to say. Although I really like that initiative, I think there is a reason that it never went as far as kOS. If you are going to do it, you need to set clear goals and a featureset (like a compiler). There has to be some central control over the prject. Otherwise it will end up as another ProgCom that did not make it.\u003C/p\u003E\u003Cp\u003EFor the moment I have enough to do with kOS, but when I am feeling more comfortable with that, chances are I want to get even more into the subject.\u003C/p\u003E\n"},{"CreatedByName":"AdmiralTigerclaw","CreatedById":92104,"CreatedDateTime":"2013-12-14T09:51:47Z","Content":"\n\u003Cp\u003EYikes...\u003C/p\u003E\u003Cp\u003EThe moment I read \u0027you\u0027ll have to program in assembly\u0027 my mind went: \u0027Oh god, why!?\u0027 in a Team Four Star Krillin voice.\u003C/p\u003E\u003Cp\u003EWhy, WHY would you inflict the torment that is Assembly on players? What cruel, sadistic thoughts swirl around in that black heart of yours to unleash such unspeakable evils upon the Kerbin Race? What madness possesses your soul to drive you to such horrors too unspeakable even for the Great Old Ones?! Think of the children! Think of the kittens! ... Actually. If you\u0027re that evil as to throw assembly at people, you\u0027ve probably already scheduled your morning torture routine with your not-to-be-trusted-but-competent-enough-to-keep-alive right hand general... But I digress. =p\u003C/p\u003E\u003Cp\u003ESecond question: What do you have planned (or rather, just roadmapped) as an architecture concept for this \u0027Mikrokontroller\u0027? I ask this because while getting all the CPU and chipset emulation working seems like a lofty goal in itself, it still runs into the problem of \u0027how does this translate from MC output to in-game commands?\u0027 How many inputs? How many outputs? What are the peripheral components this thing is to control? How do the peripherals control the vehicle they\u0027re attached to? What is the plan for an interface? In-game programming console? External editing? Programming with an actual external IDE? And how much processor overhead will the simulated processor need to operate?\u003C/p\u003E\u003Cp\u003EAre you going for a truncated experience for players, or are you aiming for unleashing a full-on, bachelors level course of Microcontroller Chaos here? This rabbit hole is deep, and realism like this is... Well. The PIC18F8680 Microcontroller\u0027s spec sheet, as an example, is 500 pages long. \u003C/p\u003E\u003Cp\u003EIn short: What is the scope and scale of this microcontroller simulation/emulation? Because in all honesty, I don\u0027t think anyone has a real clear idea of what to think until they at least know that much about it.\u003C/p\u003E\n"},{"CreatedByName":"Nuke","CreatedById":10883,"CreatedDateTime":"2013-12-14T22:43:19Z","Content":"\n\u003Cp\u003Eits not really hard to write up a fake cpu and assembler. i did a bytecode interpreter to extend the programming capability of an atmega328 microcontroller (to pretty much let me run code from anywhere, not just the flash, all be it with greatly limited performance).\u003C/p\u003E\u003Cp\u003E2 things though. first off not many people have experiece with asm. so you may want to consider emulating a cpu that has existing compilers for various languages. its considerably easier to emulate an instruction set for an existing cpu than it is to write a c compiler for a custom one. the other thing is having a computer isnt much use if you cant interface it to the ship\u0027s systems. so you need to emulate some peripherals too. not sure if any of the programmable cpu mods do this (or do this enough). and id like to see one with an interface that other mods can use. for instance id love to be able to program infernal robotics, then i can write some ik code for big stompy mech action. or you could use rover wheels and a reaction wheel for self balancing vehicles. so exposing some kind of fake peripheral bus to other mods would be awesome.\u003C/p\u003E\n"},{"CreatedByName":"diomedea","CreatedById":93700,"CreatedDateTime":"2013-12-15T13:21:37Z","Content":"\n\u003Cp\u003E@ soxslayer: I know that, if your \u0022microcontroller\u0022 already existed, I would certainly try it. I always feel a nasty attaction to things that seem overcomplex or plain difficult to make work right. Of course, I used ASM for some time, and that\u0027s a start.\u003C/p\u003E\u003Cp\u003EHowever, I believe I will feel disappointed after running my first program. Ther reason is, you\u0027re going to emulate the real thing, and unless you are building that aside from KSP (which I don\u0027t think would then work ingame) that means the emulator would be awfully slow. If I use a microcontroller, it is for speed.\u003C/p\u003E\u003Cp\u003EActually, I would love if anybody could make a kind of speedy kOS (e.g., a version running some kind of \u0022compiled program\u0022). I have projects for quite complex subsystems, that can\u0027t perform correctly due to the time required by kOS to run their control program.\u003C/p\u003E\n"},{"CreatedByName":"mossman","CreatedById":1259,"CreatedDateTime":"2013-12-15T15:56:05Z","Content":"\n\u003Cp\u003EI would be interested in this, specifically emulating peripheral control which kOS et al doesn\u0027t really do. \u003C/p\u003E\u003Cp\u003EAs others in this thread have said, a resource-based control system would be really cool.\u003C/p\u003E\u003Cp\u003EAlso, you should really consider designing the thing with remotetech compatibility in mind.\u003C/p\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2013-12-15T17:27:37Z","Content":"\n\u003Cp\u003EI checked out DRAKON, and it looks like a really interesting programming language. Comprehensive, fairly easy to understand and visualize. It basically takes a block chart of an algorithm and runs it as an actual program. Perhaps this microcontroller could emulate that.\u003C/p\u003E\n"}]}