{"TopicId":75938,"ForumId":36,"TopicTitle":"[1.0.x] [V1.9f] Kerbal Foundries wheels, anti-grav repulsors and tracks","CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-06-25T17:24:04Z","PageNum":122,"Articles":[{"CreatedByName":"Madrias","CreatedById":89995,"CreatedDateTime":"2015-06-23T11:04:18Z","Content":"\n\u003Cp\u003EGeez, I look away from here for a few days and you guys launched it past 300 pages!\u003C/p\u003E\u003Cp\u003EBy the sounds of things, I need to go do another update on Kerbal Foundries before I launch KSP again, then see if I can find something to break and give you guys something to do.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-06-23T11:27:41Z","Content":"\n\u003Cp\u003E*grin*\u003C/p\u003E\u003Cp\u003EThere\u0027s lots of stuff to break... And to address a point made above that I forgot about, the mass of a vessel is now correctly passed to the wheels, so they don\u0027t accelerate at the same rate regardless of how heavy a vehicle they are propelling. Strap powerful wheels to a light vehicle with the default torque settings, and chaos will ensue. Or strap small wheels to a heavy vessel and you\u0027ll go nowhere fast. The config stuff all needs balancing, as it\u0027s now all over the place, though. Suggestions welcome! Tracks should just about be OK - I haven\u0027t even touched wheels.\u003C/p\u003E\n"},{"CreatedByName":"Tyren","CreatedById":76757,"CreatedDateTime":"2015-06-23T11:57:38Z","Content":"\n\u003Cp\u003ESuggestion: hint about the approx. vessel mass/size wheels should be used, maybe in the part description.\u003C/p\u003E\u003Cp\u003E Is it possible to get them to break if you overdo it?\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-06-23T12:05:06Z","Content":"\n\u003Cp\u003EYeah, it\u0027s going to take a bit of figuring out. Makes a heck of a difference to the dynamics, though. No damage model as yet.\u003C/p\u003E\n"},{"CreatedByName":"Tyren","CreatedById":76757,"CreatedDateTime":"2015-06-23T12:21:01Z","Content":"\n\u003Cp\u003EYeah, i know. Can be delayed as well, just gives some more immersive feeling. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"*Aqua*","CreatedById":103926,"CreatedDateTime":"2015-06-23T16:34:43Z","Content":"\n\u003Cp\u003E@lo-fi\u003C/p\u003E\u003Cp\u003EI always wondered if we can get access to the current dev version. I\u0027ve no problem compiling the source myself. I just wonder how you did some things.\u003C/p\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2015-06-23T20:13:06Z","Content":"\n\u003Cp\u003EYou know what \u003Cem\u003EI\u003C/em\u003E find entertaining? When lo-fi commits 8 times to github, in a row, and manages to mess things up, fix them, mess more things up, fix those, and end up with a few messed up things as a grand finale.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-06-23T20:17:47Z","Content":"\n\u003Cp\u003EIt happens \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E \u0022Work fast and break stuff\u0022\u003C/p\u003E\n"},{"CreatedByName":"Tyren","CreatedById":76757,"CreatedDateTime":"2015-06-23T20:18:21Z","Content":"\n\u003Cp\u003E\u003Cimg src=\u0022http://img2.wikia.nocookie.net/__cb20140730021634/legomessageboards/images/7/76/Happy-pfftch-.png\u0022 alt=\u0022Happy-pfftch-.png\u0022\u003E\u003C/p\u003E\u003Cp\u003ENonetheless, it wouldnt be that entertaining if everything went fine, wouldnt it?\u003C/p\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2015-06-23T20:26:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003E*grin*\u003Cp\u003EThere\u0027s lots of stuff to break... And to address a point made above that I forgot about, the mass of a vessel is now correctly passed to the wheels, so they don\u0027t accelerate at the same rate regardless of how heavy a vehicle they are propelling. Strap powerful wheels to a light vehicle with the default torque settings, and chaos will ensue. Or strap small wheels to a heavy vessel and you\u0027ll go nowhere fast. The config stuff all needs balancing, as it\u0027s now all over the place, though. Suggestions welcome! Tracks should just about be OK - I haven\u0027t even touched wheels.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think something needs to be done about the super-flipping when trying to move forward under the influence of the handbrake. I also wonder if a clamp could be created that will limit the power of a wheel/track in the case of them being used on an extremely light vehicle. All this should also respond to the TS corrector.\u003C/p\u003E\u003Cp\u003EAs for the biome color stuff, I suspect maybe it has to do with something between the naming changes I made when merging with KF and the references being called up in the code. If any of the code refers to something else in a string format instead of by object, then the renaming system may not have discovered it and made the change. It\u0027s really strange though, because all of my tests have been successful. It doesn\u0027t actually change color until you touch the planetary surface though, since the edges of the runway are still part of the static model. If we could get some sort of camera-color-picker working, then you\u0027d get a change immediately upon rolling off the pavement. There\u0027s also the chance that some biome names have been altered in the latest update to KSP, in which case the config file would need to be updated. I don\u0027t know how the original was generated though, since I\u0027ve tried launching the game without a config file and the code \u003Cem\u003Edoes\u003C/em\u003E have a config writer in it somewhere, but no default file was ever generated. Overall, from what I\u0027ve seen in other mods, the complexity of this config node loader is a bit baffling. Granted, I\u0027m using an absolute \u003Cem\u003Eton\u003C/em\u003E of sub-nodes, but it\u0027s still pretty crazy. I get the feeling sometimes that I picked a really messed up project to take on all those months ago. Why couldn\u0027t I have done something so much simpler?\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-06-23T21:08:36Z","Content":"\n\u003Cp\u003EI\u0027ve not had the flipping over bug? \u003C/p\u003E\u003Cp\u003ENow you know how I felt when I was first trying to mess with wheels: I didn\u0027t even know that PartTools didn\u0027t export the scripts I was creating in Mono, and that I needed to get something to spit out a .dll to get loaded as a plugin.... As Tyren says, wouldn\u0027t be fun if it was easy!\u003C/p\u003E\u003Cp\u003EThere\u0027s some code knocking about to iterate over pixels in a textures - I can probably adapt that. We could use the new VesselModule to aim a camera at the planets surface for each vessel, take a snap, average the colour and leave DustFX to grab that. \u003C/p\u003E\u003Cp\u003ECode \u003Ca href=\u0022http://answers.unity3d.com/questions/22954/how-to-save-a-picture-take-screenshot-from-a-camer.html\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E takes care of how to get the camera to grab an image. We\u0027ll get away with quite a small grab, and it\u0027ll be quite nice to have some variation in the colour as a small sample will average quite differently to the next. I was going to explain, but I might as well just get on and do it...\u003C/p\u003E\n"},{"CreatedByName":"Tyren","CreatedById":76757,"CreatedDateTime":"2015-06-23T22:03:44Z","Content":"\n\u003Cp\u003ESounds annoying to me...maybe clean out the code from ground up? I dont want to know how much time you squeezed into it, but imho it might be a consideration to scrap and rewrite the plugin in a clean way instead of patching it up...\u003C/p\u003E\u003Cp\u003EWell, i dont know what is faster or more efficient.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EHonestly, ive been thinking lately if i should change my job in RL to programming... \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2015-06-23T22:10:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003EThere\u0027s some code knocking about to iterate over pixels in a textures - I can probably adapt that. We could use the new VesselModule to aim a camera at the planets surface for each vessel, take a snap, average the colour and leave DustFX to grab that\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s likely to be too expensive. Copying texture data back off the GPU is a slow process. You\u0027d either want another terrain rendering camera feeding its output into a custom pixel shader that does the averaging, or come up with the UV coordinates of the terrain mesh point you\u0027re driving over, sample that texture and then set your color manually if you want to go from the CPU side.\u003C/p\u003E\u003Cp\u003EI thought about it while I was working with Gaalidas on the original problem and decided not to try to convince him to change his design since both are going to be a little more complex than looking up values in a dictionary\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-06-23T22:35:26Z","Content":"\n\u003Cp\u003ETo the rescue again! Thanks for the tips, though probably a little out of my depth... GPU seems to get less of a hammering that CPU, so I guess it would make sense to attack it from that angle. How difficult are pixel shaders to work with? Seems like a promising avenue to pursue if it can be made to work - I guess I better do some reading!\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-06-23T23:13:29Z","Content":"\n\u003Cp\u003EAwwww, look! I can create tiny, pixelated screen grabs with dynamically created cameras:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/qo9U77x.png\u0022 alt=\u0022qo9U77x.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EThis may be a long road ahead....\u003C/p\u003E\n"},{"CreatedByName":"Tyren","CreatedById":76757,"CreatedDateTime":"2015-06-23T23:15:58Z","Content":"\n\u003Cp\u003EGPUs are way more effective in slamming down serious performances, rendering a vast cpu capacity almost redundant^^ Imho x64 \u002B dx11 should be task one in development of KSP stock...this would give modders even more capacity in creating ridiculous awesome stuff \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003EAwwww, look! I can create tiny, pixelated screen grabs with dynamically created cameras:\u003Cp\u003E\u003Ca href=\u0022http://i.imgur.com/qo9U77x.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://i.imgur.com/qo9U77x.png\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThis may be a long road ahead....\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EKawaii \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2015-06-24T07:29:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003EAwwww, look! I can create tiny, pixelated screen grabs with dynamically created cameras:\u003Cp\u003E\u003Ca href=\u0022http://i.imgur.com/qo9U77x.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://i.imgur.com/qo9U77x.png\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThis may be a long road ahead....\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHey, it\u0027s a start.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022xEvilReeperx\u0022 data-cite=\u0022xEvilReeperx\u0022\u003E\u003Cdiv\u003EThat\u0027s likely to be too expensive. Copying texture data back off the GPU is a slow process. You\u0027d either want another terrain rendering camera feeding its output into a custom pixel shader that does the averaging, or come up with the UV coordinates of the terrain mesh point you\u0027re driving over, sample that texture and then set your color manually if you want to go from the CPU side.\u003Cp\u003EI thought about it while I was working with Gaalidas on the original problem and decided not to try to convince him to change his design since both are going to be a little more complex than looking up values in a dictionary\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI wouldn\u0027t have understood anything you were telling me anyway, so it\u0027s better for all of us that you didn\u0027t try to explain it to me.\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2015-06-24T13:31:30Z","Content":"\n\u003Cp\u003EWell, your solution also has some possibilities that auto-selecting colors doesn\u0027t have such as being able to dynamically scale various parameters of the dust based on the kind of terrain you were driving over and maybe down the road, affecting whether or not wheels leave tracks and things like that. \u003C/p\u003E\u003Cp\u003EI didn\u0027t want to take a solution that you\u0027d already invested a ton of time and effort into and then move sideways to a different solution that isn\u0027t particularly better in my eyes. There may be some unforeseen obstacles in it, like for example dark shadows or lights affecting the look of the dust in a negative way. I didn\u0027t mean to imply you couldn\u0027t have made it work or that what you have isn\u0027t every bit as good as the others, just that there may be more working parts and that I couldn\u0027t even be certain it would work as well as yours so why toss out perfectly good, working code?\u003C/p\u003E\u003Cp\u003EI\u0027d rather see lo-fi implement his solution as an extension of yours and let a modder override the auto-picking so you get the best of both worlds.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-06-24T14:17:13Z\u0022 title=\u002206/24/2015 02:17  PM\u0022 data-short=\u00229 yr\u0022\u003EJune 24, 2015\u003C/time\u003E by xEvilReeperx\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2015-06-24T16:45:40Z","Content":"\n\u003Cp\u003EWell, as time goes on and I learn more about C#/KSP coding, the future users of this mod will have more and more options available without having to recompile anything. If there\u0027s one thing I do well, it\u0027s giving the end user a lot of power over the configuration of things. I really hate to hard-code anything at all. what I\u0027d like to see in the far future is the option to use a camera-grab for unknown locations (such as static models where the terrain system won\u0027t recognize the difference between pavement and grass), with a global override to disable that if the user has performance issues... which turns back to a biome-config list (like we have now) for PQS collisions which, in turn, can be overridden in the part config itself with either a user-specified list (maybe a config-defined definition file to look for?) or a single color to use in all situations. I\u0027d like to see base emitter strength, density, size, etc. definable per-color-definition, and for those to be modified by weight of the craft, slippage, material, speed, etc. and I\u0027d like to see a global particle emitter implemented much like smokescreen has for the global number of particles allowed to exist from a DustFX effect. Can I make this happen now? Not a chance in heck, but it\u0027ll keep me busy for the next few years at the least.\u003C/p\u003E\u003Cp\u003EOn to another subject though...\u003C/p\u003E\u003Cp\u003ESo, a long time ago I went over all of the KF parts with a mod called NodeHelper. This is a very old mod and, needless to say, does not function anymore... at all... and the author had a cultural/personal issue a while back and withdrew his stuff from the world forever. Not to be daunted, however, I found a github repository with the source for that mod and attempted to recompile it. In the recompile I was successful (after disabling the part highlighter, since the old functions for doing that are no longer available and the current version required AA, which slows my machine down a bunch.) However, the mod window still fails to load and I do not have the icon source for the toolbar implementation. Easy fix, I\u0027m sure, but without the window opening up, I\u0027m sunk.\u003C/p\u003E\u003Cp\u003ESo... I\u0027m looking into other ways to alter the positions and orientations of attach and stack nodes. One way I discovered is to import the models into Blender and use a tool from the utility release board that can turn blender-based coordinates into KSP attach node coordinates. But... the blender importer fails to read the KF parts. Another way is to use transforms from unity, but I have no clue how to add new transforms and would probably have better luck entering random values into configs and reloading KSP every 5 minutes until I get it right (I\u0027m \u003Cem\u003Enot\u003C/em\u003E going to do that, it takes longer than 5 minutes the load KSP each time.) So, I\u0027m in a bit of a conundrum right now (did i even use that word right? I\u0027ve never used \u0022conundrum\u0022 before! That was awesome.)\u003C/p\u003E\u003Cp\u003ESo, I have a few requests that don\u0027t have to be done right now, but would be awesome for the future. And... not all of them need to be fulfilled at any time, since they all produce the same end result: my ability to adjust the nodes to better fit the parts we\u0027re working on. The first choice is to possibly provide some basic exports of the parts (don\u0027t have to be functional, just a model will do to use for reference) that will load in basic blender. The second option is to make sure that all the unity stuff in the KSP422 repository are all up to date with the current parts so I can learn how to add the transforms I can use to define nodes. In the mean time, I intend to continue seeing if I can revive Nodehelper from the dead. Anyone know of a good physionecrological specialist I can talk to? (aka, bringer of \u0022dead things\u0022 into \u0022not-dead things\u0022)\u003C/p\u003E\u003Cp\u003ESo yeah, I\u0027m out now to crawl around on the floor of our church tracing wires! Fun times ahead (and possible rug burn).\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-06-24T16:52:48Z\u0022 title=\u002206/24/2015 04:52  PM\u0022 data-short=\u00229 yr\u0022\u003EJune 24, 2015\u003C/time\u003E by Gaalidas\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ZodiusInfuser","CreatedById":76163,"CreatedDateTime":"2015-06-24T17:03:36Z","Content":"\n\u003Cp\u003ERe: the node thing, the best and easiest way to go about this is either for lo-fi to do it or for him to give you the raw models. No need for some in-game utility to eyeball the position when you have the exact XYZ coordiate of a vertex/edge/plane. I\u0027ve set up many nodes for the IR Model Rework and its honestly one of the easiest phases of setting up a part.\u003C/p\u003E\u003Cp\u003EAlso, I\u0027m not sure if you\u0027re aware but if you change node positions in the cfg and reload the database, then they\u0027ll get applied in-game without having to reload KSP fully (this was a revelation for lo-fi when he first discovered this on-stream \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E)\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-06-24T17:34:23Z","Content":"\n\u003Cp\u003ESo I\u0027ve got some really rough POC code with a camera:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E    public class ModuleCameraShot : VesselModule\u003Cbr\u003E    {\u003Cbr\u003E        private bool takeHiResShot = false;\u003Cbr\u003E        private int resWidth = 128;\u003Cbr\u003E        private int resHeight = 128;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public static string ScreenShotName(int width, int height)\u003Cbr\u003E        {\u003Cbr\u003E            return string.Format(\u0022{0}/screen_{1}x{2}_{3}.png\u0022,\u003Cbr\u003E                                 Application.dataPath,\u003Cbr\u003E                                 width, height,\u003Cbr\u003E                                 System.DateTime.Now.ToString(\u0022yyyy-MM-dd_HH-mm-ss\u0022));\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public void TakeHiResShot()\u003Cbr\u003E        {\u003Cbr\u003E            takeHiResShot = true;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        //[KSPEvent(active=true,guiActive=true,guiName=\u0022Take Shot\u0022,name=\u0022Take Shot\u0022)]\u003Cbr\u003E        public void Update()\u003Cbr\u003E        {\u003Cbr\u003E            takeHiResShot |= Input.GetKeyDown(\u0022k\u0022);\u003Cbr\u003E            if (takeHiResShot)\u003Cbr\u003E            {\u003Cbr\u003E                var _vessel = GetComponent\u0026lt;Vessel\u0026gt;();\u003Cbr\u003E                var _cameraObject = new GameObject(\u0022ColourCam\u0022);\u003Cbr\u003E                _cameraObject.transform.position = _vessel.transform.position;\u003Cbr\u003E                _cameraObject.transform.LookAt(_vessel.mainBody.transform.position);\u003Cbr\u003E                _cameraObject.transform.Translate(new Vector3(0,0,-10));\u003Cbr\u003E                Debug.LogError(\u0022created camera\u0022);\u003Cbr\u003E                var _camera = _cameraObject.AddComponent\u0026lt;Camera\u0026gt;();\u003Cbr\u003E                RenderTexture rt = new RenderTexture(resWidth, resHeight, 24);\u003Cbr\u003E                _camera.targetTexture = rt;\u003Cbr\u003E                Texture2D groundShot = new Texture2D(resWidth, resHeight, TextureFormat.RGB24, false);\u003Cbr\u003E                _camera.Render();\u003Cbr\u003E                Debug.LogError(\u0022rendered something...\u0022);\u003Cbr\u003E                RenderTexture.active = rt;\u003Cbr\u003E                groundShot.ReadPixels(new Rect(0, 0, resWidth, resHeight), 0, 0);\u003Cbr\u003E                _camera.targetTexture = null;\u003Cbr\u003E                RenderTexture.active = null; // JC: added to avoid errors\u003Cbr\u003E                Destroy(rt);\u003Cbr\u003E                Destroy(_cameraObject);\u003Cbr\u003E                Color[] texColors = groundShot.GetPixels();\u003Cbr\u003E                int total = texColors.Length;\u003Cbr\u003E                float r = 0;\u003Cbr\u003E                float g = 0;\u003Cbr\u003E                float b = 0;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E                for (int i = 0; i \u0026lt; total; i\u002B\u002B)\u003Cbr\u003E                {\u003Cbr\u003E                    r \u002B= texColors[i].r;\u003Cbr\u003E                    g \u002B= texColors[i].g;\u003Cbr\u003E                    b \u002B= texColors[i].b;\u003Cbr\u003E                }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E                Color averageColor = new Color(r / total, g / total, b / total);\u003Cbr\u003E                print(averageColor);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E                takeHiResShot = false;\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI\u0027m sure it could be more efficient, but it actually does what\u0027s required. I see what you mean, xEvilReeperx. The current code does what it\u0027s supposed to, but it\u0027s not in my nature to leave well alone, so I feel compelled to see where the other path takes me, even if it turns out just to be an intellectual exercise.\u003C/p\u003E\u003Cp\u003EAs Zodius points out, it\u0027s far easier poking about in the Unity model to finalise the node positions. I usually (if I\u0027m not just guessing) just plonk an empty GameObject under the root of the model and take the relative position from that. The stuff in there doesn\u0027t change often - certainly not enough to affect the node positioning.\u003C/p\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2015-06-24T18:12:32Z","Content":"\n\u003Cp\u003EI\u0027m glad you think it\u0027s the easy part to do nodes... However, I have never made any parts from scratch, so it\u0027s still a real pain for me. Also, MM hates database reloads.\u003C/p\u003E\u003Cp\u003EI just need a way to experiment with node positions and visually see the result quickly so I can fine tune it. This is both for attach nodes and the stack nodes I like to to put on the wheels for use with things like the ERS rover body which uses stack nodes for wheels. They need to be very precise.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-06-24T18:29:23Z","Content":"\n\u003Cp\u003EYou\u0027ll get used to it, Unity really isn\u0027t difficult for the tiny bits we use making KSP parts. \u003C/p\u003E\u003Cp\u003EBy the way, this actually works!\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/mA2fgsHwxiA?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003EThat\u0027s using a camera set to render a 6x6 texture. I\u0027m currently wondering if just setting it to a size of 1x1 makes Unity do all the hard work averaging for us.... I\u0027ll experiment. I\u0027m kinda leaning towards mixing this method up with the biome colours. The \u0022live data\u0022 could be mixed with the master biome colour, which could lead to some awesome effects. Either way, I\u0027ll need to optimise and smooth the updates somewhat, but I think we\u0027re onto a winner \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EAny tips on optimisation welcome...\u003C/p\u003E\n"},{"CreatedByName":"Tyren","CreatedById":76757,"CreatedDateTime":"2015-06-24T18:33:03Z","Content":"\n\u003Cp\u003Ehmm thats pretty neat \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EAnyway, like i suggested some pages back, if possible scale the color of the thrown dust slightly different from the ground its been thrown up (darker/brighter?).\u003C/p\u003E\u003Cp\u003EImho that would look even better. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EEdit: is it possible to lock the dust behaviour to the color brightness? Lets say the brighter the color, the more dust gets thrown up? Assuming the sand particles in the desert and the pole ice are extremely tenuous.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-06-24T18:35:34Z\u0022 title=\u002206/24/2015 06:35  PM\u0022 data-short=\u00229 yr\u0022\u003EJune 24, 2015\u003C/time\u003E by Tyren\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2015-06-24T18:53:48Z","Content":"\n\u003Cp\u003EThat\u0027s why we keep a biome settings file in the plugin, to define biome-based materials and their hardnesses. I need to look into expanding the information we can define in each node in the biome color config.\u003C/p\u003E\u003Cp\u003EAs for varied colors in the dust animator... Currently the color is applied to an array. There are maybe 5-6 index levels that all get the same color. I haven\u0027t looked into applying a variance to it, like is done for the relatively untested impact sounds, but I bet it\u0027s doable.\u003C/p\u003E\n"}]}