{"TopicId":25922,"ForumId":36,"TopicTitle":"[WIP] [Plugin] KerbCom Avionics - Analytical engine and RCS thrust balancing","CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-05-07T19:55:38Z","PageNum":4,"Articles":[{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-07-28T08:26:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mizo\u0022 data-cite=\u0022mizo\u0022\u003E\u003Cdiv\u003EYeah, the current version works fine in 0.21 at least for the engine control modes. RCS modes seem to work but the game hangs completely not long after I enable it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHmmm, that sounds problematic. Are there any exceptions in the logs relating to this, or any messages printed by the plugin?\u003C/p\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-07-28T08:32:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mizo\u0022 data-cite=\u0022mizo\u0022\u003E\u003Cdiv\u003EBy the way, what really get\u0027s screwed by this plugin are the various plugins that depend on estimating how much main engine thrust you have, like engineer and mechjeb vessel info. They really don\u0027t like engines pointing directions other than straight down.\u003Cp\u003EAlso, another related issue is that, even if the bulk of your engines are pointing straight down, with only a few puny ones giving you roll authority, mechjeb landing autopilot does not account for the afflicted control losses, it assumes that all engines are running at the power of thrust specified, and so it massively overestimates how much thrust it has control over.\u003C/p\u003E\u003Cp\u003EIt seems that the autopilot runs pretty much open loop, and it\u0027s pretty aggressive in it\u0027s attempt to be delta-v efficient, and needless to say it has disastrous results.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI have been thinking about this problem for a while, and I have concluded that a custom autopilot will be required, at least for hovering. Manual landing guidance may still be necessary, but at least the hardest part (touching down) would be solved. As mentioned in a previous post I will be focussing on auto-hover after the next release. Also, since the small perpendicular engines will no longer be required due to gimbal support you should have more success with MechJeb.\u003C/p\u003E\n"},{"CreatedByName":"aquilux","CreatedById":23859,"CreatedDateTime":"2013-07-28T16:31:40Z","Content":"\n\u003Cp\u003ECould you make your code report to mechjeb the correct thrust? Would it be possible to trick mechjeb into thinking your code was the only engine and report to it what characteristics you wanted it to see?\u003C/p\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-07-28T18:04:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022aquilux\u0022 data-cite=\u0022aquilux\u0022\u003E\u003Cdiv\u003ECould you make your code report to mechjeb the correct thrust? Would it be possible to trick mechjeb into thinking your code was the only engine and report to it what characteristics you wanted it to see?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs I mentioned in my previous post this may be a non-issue once the new version with gimbal support is released - since the solver will be able to make full use of every engine most of the time its behaviour will be closer to what MechJeb expects. However it may be possible to trick MechJeb if necessary, though it is not a high priority right now.\u003C/p\u003E\n"},{"CreatedByName":"mizo","CreatedById":75837,"CreatedDateTime":"2013-07-28T23:33:28Z","Content":"\n\u003Cp\u003EBy the way, I reproduced the hang again today. It happened with a small lander with a non-optimal rcs configuration. Four rcs 4-pack around the center of mass. The lander had a really tight profile where it was balanced pretty reasonably in the entire range between full fuel and no fuel. I guess there was not much point really on running the rcs balancer on this craft, but I wanted to see if it fared well, but alas it hanged as soon as I hit the \u0027RCS linear priority control button\u0027, and \u0027Enable RCS control\u0027 wasn\u0027t even activated! No error logs related to this fault were produced.\u003C/p\u003E\u003Cp\u003EThe game hanged up pretty well, had to kill it on task manager using the keyboard only, because clicking anywhere with the mouse would bring the hanged game into focus instead.\u003C/p\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-07-29T08:54:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mizo\u0022 data-cite=\u0022mizo\u0022\u003E\u003Cdiv\u003EBy the way, I reproduced the hang again today. It happened with a small lander with a non-optimal rcs configuration. Four rcs 4-pack around the center of mass. The lander had a really tight profile where it was balanced pretty reasonably in the entire range between full fuel and no fuel. I guess there was not much point really on running the rcs balancer on this craft, but I wanted to see if it fared well, but alas it hanged as soon as I hit the \u0027RCS linear priority control button\u0027, and \u0027Enable RCS control\u0027 wasn\u0027t even activated! No error logs related to this fault were produced.\u003Cp\u003EThe game hanged up pretty well, had to kill it on task manager using the keyboard only, because clicking anywhere with the mouse would bring the hanged game into focus instead.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe current release does not support vessels with RCS blocks placed only in a single plane around the COM. Unless they are positioned perfectly around the COM (which is impossible due to fuel flow and the flexing of joints etc.) the system is not solvable. Chances are the solver did not figure out that it was not solvable and got stuck in a loop. This problem will not occur in the new version for two reasons:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EThe control modes now make use of reaction wheels, making pretty much any vessel solvable, as long as the reaction wheels are powered.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EI have integrated a stable natively-coded solver that reportedly is impossible to hang.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"mizo","CreatedById":75837,"CreatedDateTime":"2013-07-29T20:01:49Z","Content":"\n\u003Cp\u003EYeah, I did not report this problem initially because I figured it was a problem in your simplex solver code, and you said you were ditching it anyway for the next release.\u003C/p\u003E\u003Cp\u003EI just recently also realized that the rcs pack I was using on some other craft had one of it\u0027s rcs ports missing from their model, so that probably explains the other instances of this hang I experienced.\u003C/p\u003E\u003Cp\u003EBy the way, I wonder, how complicated would it be to modify your code so that it does not attempt to solve for dimensions which give too few degrees of freedom to begin with?\u003C/p\u003E\u003Cp\u003EFor example, in the hover case with only engines pointing straight down, it would ignore roll and solve it only for pitch/yaw and forward motion.\u003C/p\u003E\n"},{"CreatedByName":"japa","CreatedById":9777,"CreatedDateTime":"2013-07-29T20:06:07Z","Content":"\n\u003Cp\u003ENah, obviously in this case it should fully shut off all engines if you attempt to roll the ship.\u003C/p\u003E\u003Cp\u003EMore seriously, though, the solver now uses the reaction wheels, so it will be able to find a solution just fine.\u003C/p\u003E\u003Cp\u003EWhat I\u0027m wondering, though, is how it decides what direction is forward, so to speak, and if there\u0027s a way to easily change it. Like, suppose I make a VTOL jet, with the main engines pointing towards the back, and smaller hover engines pointing downwards. It\u0027d be nice to be able to smoothly rise up, and then fly forward, without changing the ship orientation.\u003C/p\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-07-29T20:27:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mizo\u0022 data-cite=\u0022mizo\u0022\u003E\u003Cdiv\u003EYeah, I did not report this problem initially because I figured it was a problem in your simplex solver code, and you said you were ditching it anyway for the next release.\u003Cp\u003EI just recently also realized that the rcs pack I was using on some other craft had one of it\u0027s rcs ports missing from their model, so that probably explains the other instances of this hang I experienced.\u003C/p\u003E\u003Cp\u003EBy the way, I wonder, how complicated would it be to modify your code so that it does not attempt to solve for dimensions which give too few degrees of freedom to begin with?\u003C/p\u003E\u003Cp\u003EFor example, in the hover case with only engines pointing straight down, it would ignore roll and solve it only for pitch/yaw and forward motion.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUnfortunately, the only way I know of to figure out the degrees of freedom, and more importantly which degrees of freedom are available, is to apply a solver to the system. So effectively the work is being potentially tripled depending on what you need to check to determine the DOF. Plus this problem is sort of a non-issue, as most crafts will have powered reaction wheels, and if you really do have a craft with limited degrees of freedom you\u0027re not going to be able fly it very well either, even if it is solved, due to the lack of control from the missing \u0022freedom\u0022.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022japa\u0022 data-cite=\u0022japa\u0022\u003E\u003Cdiv\u003ENah, obviously in this case it should fully shut off all engines if you attempt to roll the ship.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u0022Computer - do a barrel roll.\u0022\u003C/p\u003E\u003Cp\u003EComputer: \u0022Negative - shutting down main engines.\u0022\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022japa\u0022 data-cite=\u0022japa\u0022\u003E\u003Cdiv\u003EMore seriously, though, the solver now uses the reaction wheels, so it will be able to find a solution just fine.\u003Cp\u003EWhat I\u0027m wondering, though, is how it decides what direction is forward, so to speak, and if there\u0027s a way to easily change it. Like, suppose I make a VTOL jet, with the main engines pointing towards the back, and smaller hover engines pointing downwards. It\u0027d be nice to be able to smoothly rise up, and then fly forward, without changing the ship orientation.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECurrently \u0022forward\u0022 is determined by the weighted average of the directions of all active engines. This is not ideal in some cases, such as the one you describe, but it works for many other vessel types, including VTOLs with rotating engines. I am investigating other ways of determining the thrust direction, such as using the navball direction, or using the navball direction interpolated with the direction of gravity, which may work in your case.\u003C/p\u003E\n"},{"CreatedByName":"mizo","CreatedById":75837,"CreatedDateTime":"2013-07-29T20:38:20Z","Content":"\n\u003Cp\u003EWell, one aspect of this plugin I like is giving a step towards doing away with the silly situation of having those reaction wheels for everything.\u003C/p\u003E\u003Cp\u003EThe current plugin already allows for performing a mun landing without any use of reaction wheels or RCS during powered flight, which I think is pretty great.\u003C/p\u003E\u003Cp\u003EThe only issues are lack of gimballing and problems regarding reliability, esp regarding what japa said, the solver reaching an invalid state and making all engines go off.\u003C/p\u003E\n"},{"CreatedByName":"japa","CreatedById":9777,"CreatedDateTime":"2013-07-29T20:41:54Z","Content":"\n\u003Cp\u003EYeah, Navball direction and direction of gravity would seem to be the two main directions anybody would care about, I thin, at least while on the ground. Perhaps a separate control for each? Depending on what you have planned for hover-mode, you could either take over the linear control keys or use separate ones, to increase or decrease the desired hover altitude, while the regular throttle control controls the throttle in the direction of the navball. This way you can press whatever key to get off the ground, and rise to the height you want, and when you leave it, the solver will have the engines just strong enough to counteract gravity, and keep it steady, while you point it in the direction you want to go, and press forward.\u003C/p\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-07-29T20:44:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mizo\u0022 data-cite=\u0022mizo\u0022\u003E\u003Cdiv\u003EWell, one aspect of this plugin I like is giving a step towards doing away with the silly situation of having those reaction wheels for everything.\u003Cp\u003EThe current plugin already allows for performing a mun landing without any use of reaction wheels or RCS during powered flight, which I think is pretty great.\u003C/p\u003E\u003Cp\u003EThe only issues are lack of gimballing and problems regarding reliability, esp regarding what japa said, the solver reaching an invalid state and making all engines go off.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe new gimbal support should be just what you are after then, as this too gives the solver enough leeway to cope with most situations, like flying a lander without RCS or reaction wheels. Note that you must have at least two engines to allow this, otherwise there is no way of controlling the roll axis.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-29T20:50:16Z\u0022 title=\u002207/29/2013 08:50  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 29, 2013\u003C/time\u003E by ZRM\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-07-29T20:49:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022japa\u0022 data-cite=\u0022japa\u0022\u003E\u003Cdiv\u003EYeah, Navball direction and direction of gravity would seem to be the two main directions anybody would care about, I thin, at least while on the ground. Perhaps a separate control for each? Depending on what you have planned for hover-mode, you could either take over the linear control keys or use separate ones, to increase or decrease the desired hover altitude, while the regular throttle control controls the throttle in the direction of the navball. This way you can press whatever key to get off the ground, and rise to the height you want, and when you leave it, the solver will have the engines just strong enough to counteract gravity, and keep it steady, while you point it in the direction you want to go, and press forward.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think that will work very well, using the existing H/N keys. I will look into this after the next release, along with the auto-hover. What is really needed now is a good selection of parts for creating VTOLs - large angled radial engines, moving engines, mounts, asymmetrical structural sections etc. Almost all parts in KSP, including mods, are forced to stay rotationally symmetrical. Once I get this plugin polished more creative designs should be possible, as well as much larger lander craft that extend horizontally instead of vertically.\u003C/p\u003E\n"},{"CreatedByName":"japa","CreatedById":9777,"CreatedDateTime":"2013-07-29T20:54:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ZRM\u0022 data-cite=\u0022ZRM\u0022\u003E\u003Cdiv\u003Eas well as much larger lander craft that extend horizontally instead of vertically.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhy hello there:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://imgur.com/jFjzdH4\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg src=\u0022http://i.imgur.com/jFjzdH4l.png\u0022 alt=\u0022jFjzdH4l.png\u0022\u003E\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThis is my first, and so-far only, interplanetary lander, and it is downright hard to land, but still possible, with stock.\u003C/p\u003E\n"},{"CreatedByName":"mizo","CreatedById":75837,"CreatedDateTime":"2013-07-29T20:59:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ZRM\u0022 data-cite=\u0022ZRM\u0022\u003E\u003Cdiv\u003EUnfortunately, the only way I know of to figure out the degrees of freedom, and more importantly which degrees of freedom are available, is to apply a solver to the system. So effectively the work is being potentially tripled depending on what you need to check to determine the DOF. Plus this problem is sort of a non-issue, as most crafts will have powered reaction wheels, and if you really do have a craft with limited degrees of freedom you\u0027re not going to be able fly it very well either, even if it is solved, due to the lack of control from the missing \u0022freedom\u0022.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, well, I think your current implementation of resolving every frame might be too heavy handed, and tbh I don\u0027t see much point in it.\u003C/p\u003E\u003Cp\u003EI am very skeptical you might be able to solve the current wobble problems with it.\u003C/p\u003E\u003Cp\u003EI think the solution might have to be in the direction of doing some structural analysis and/or empirical evaluation to find resonance peaks, and then to avoid those frequencies in the flight computer in the first place, maybe by notch filtering them out for instance.\u003C/p\u003E\u003Cp\u003ESo you might be revisiting that in the future, in which case solving the system 100 times during startup is peanuts compared to every frame \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-29T21:06:43Z\u0022 title=\u002207/29/2013 09:06  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 29, 2013\u003C/time\u003E by mizo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-07-29T21:04:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022japa\u0022 data-cite=\u0022japa\u0022\u003E\u003Cdiv\u003EWhy hello there:\u003Cp\u003E\u003Cem\u003Eimage\u003C/em\u003E\u003C/p\u003E\u003Cp\u003EThis is my first, and so-far only, interplanetary lander, and it is downright hard to land, but still possible, with stock.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI did mean \u003Cem\u003Emuch\u003C/em\u003E larger than that, and asymmetrical, e.g. an entire Mun base constructed in orbit, however that is quite a nice looking mobile lander. How good is it at returning to orbit? How do you keep it powered? I think I saw something of a similar nature (weight distribution-wise) by someone who made a very well done Mars Constellation-style mission. For your very first interplanetary lander I personally would have tried something a bit smaller and simpler, and probably on Duna.\u003C/p\u003E\u003Cp\u003EEdit: I see the gigantor panels now.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-29T21:16:44Z\u0022 title=\u002207/29/2013 09:16  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 29, 2013\u003C/time\u003E by ZRM\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-07-29T21:15:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mizo\u0022 data-cite=\u0022mizo\u0022\u003E\u003Cdiv\u003EYeah, well, I think your current implementation of resolving every frame might be too heavy handed, and tbh I don\u0027t see much point in it.\u003Cp\u003EI am very skeptical you might be able to solve the current wobble problems with it.\u003C/p\u003E\u003Cp\u003EI think the solution might have to be in the direction of doing some structural analysis and/or empirical evaluation to find resonance peaks, and then to avoid those frequencies in the flight computer in the first place, maybe by notch filtering them out for instance.\u003C/p\u003E\u003Cp\u003ESo you might be revisiting that in the future, in which case solving the system 100 times during startup is peanuts compared to every frame \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe native solver I am using now is very fast, and as a bonus it uses the last solution where possible as a starting point for the next one. This has two benefits - even better performance, and wobbling is practically eradicated, since the wobbling I have encountered is caused by the temporally varying thrusts due to there being multiple solutions to the problem, so starting from the previous solution makes the result more stable by picking the new solution closest to the previous one.\u003C/p\u003E\u003Cp\u003EI am reluctant to analyse the system at startup since factors that affect flight such as structural flexing, other mechanical movement and fuel usage/flow could significantly change the characteristics of the vessel during flight. I will prefer refining the current solution for the time being.\u003C/p\u003E\n"},{"CreatedByName":"japa","CreatedById":9777,"CreatedDateTime":"2013-07-29T21:18:54Z","Content":"\n\u003Cp\u003EUnfortunately, it doesn\u0027t really have any capability to get back into orbit.\u003C/p\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-07-29T21:28:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022japa\u0022 data-cite=\u0022japa\u0022\u003E\u003Cdiv\u003EUnfortunately, it doesn\u0027t really have any capability to get back into orbit.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHere\u0027s the first one I did in 0.20 - designed to be a no-fuss, in-out flying visit to Duna:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/dak0bVW.jpg\u0022 alt=\u0022dak0bVW.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EIt attaches directly to the end of a CSM consisting of a probe on a hitchhiker module (\u002B essentials) via the senior docking port on the top. No wobble at all during the flight.\u003C/p\u003E\u003Cp\u003EIt uses one non-stock part (the tank), but that is purely for aesthetic reasons, and could easily be replaced. Plenty of fuel for landing and returning to the CSM.\u003C/p\u003E\u003Cp\u003E/Temporary off-topic topic.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-07-29T21:31:09Z\u0022 title=\u002207/29/2013 09:31  PM\u0022 data-short=\u002210 yr\u0022\u003EJuly 29, 2013\u003C/time\u003E by ZRM\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"mizo","CreatedById":75837,"CreatedDateTime":"2013-07-29T21:39:44Z","Content":"\n\u003Cp\u003EHere is the one I did, though it uses some parts from NP and KW:\u003C/p\u003E\u003Cp\u003EThe docking port is from bobcat ind.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/tjKflxHh.jpg\u0022 alt=\u0022tjKflxHh.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/d2oo038h.jpg\u0022 alt=\u0022d2oo038h.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/HCRFILHh.jpg\u0022 alt=\u0022HCRFILHh.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EIt has a very low CoG, and it survives pretty rough landings with some horizontal speed.\u003C/p\u003E\n"},{"CreatedByName":"mizo","CreatedById":75837,"CreatedDateTime":"2013-07-29T21:50:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ZRM\u0022 data-cite=\u0022ZRM\u0022\u003E\u003Cdiv\u003EThe native solver I am using now is very fast, and as a bonus it uses the last solution where possible as a starting point for the next one. This has two benefits - even better performance, and wobbling is practically eradicated, since the wobbling I have encountered is caused by the temporally varying thrusts due to there being multiple solutions to the problem, so starting from the previous solution makes the result more stable by picking the new solution closest to the previous one.\u003Cp\u003EI am reluctant to analyse the system at startup since factors that affect flight such as structural flexing, other mechanical movement and fuel usage/flow could significantly change the characteristics of the vessel during flight. I will prefer refining the current solution for the time being.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI see. Well I did not realize you were encountering wobble caused by your code itself. I was talking more in general about SAS and mechjeb autopilot induced wobble.\u003C/p\u003E\u003Cp\u003EBut still, I think structural flexing shouldn\u0027t matter much, I mean I suspect there should have too much wobble for it to mean anything.\u003C/p\u003E\u003Cp\u003EAbout the shifting CoM I agree it\u0027s a problem, but how hard for example would it be to solve the system with CoM being another free variable?\u003C/p\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-07-30T10:10:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mizo\u0022 data-cite=\u0022mizo\u0022\u003E\u003Cdiv\u003EI see. Well I did not realize you were encountering wobble caused by your code itself. I was talking more in general about SAS and mechjeb autopilot induced wobble.\u003Cp\u003EBut still, I think structural flexing shouldn\u0027t matter much, I mean I suspect there should have too much wobble for it to mean anything.\u003C/p\u003E\u003Cp\u003EAbout the shifting CoM I agree it\u0027s a problem, but how hard for example would it be to solve the system with CoM being another free variable?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAll wobble caused by SAS and MechJeb is nothing to do with me, hence the attempt on my part to figure out what you meant by wobble. It is not my fault if a PID controller I have no control over overcompensates.\u003C/p\u003E\u003Cp\u003EI am now not sure which problem you are trying to solve. What exactly are you suggesting? You mention solving the system at least once per update, and my current solution requires use of the solver at most 4 times per update, with negligible performance impact. COM already is a free variable in the current solution.\u003C/p\u003E\n"},{"CreatedByName":"mizo","CreatedById":75837,"CreatedDateTime":"2013-07-30T11:18:56Z","Content":"\n\u003Cp\u003EI think I misunderstood you then. I thought you were proposing a solution where you would somehow actively dampen the SAS oscillations.\u003C/p\u003E\u003Cp\u003EAnyway the main problem I see with solving the system every update is with regards reliability.\u003C/p\u003E\u003Cp\u003EWith it being done once per startup, and ignoring structural flexing altogether, you get a sense how the ship handles from launch, and there is not much variation there, and chances of something then going wrong deep into the mission are low.\u003C/p\u003E\u003Cp\u003ENow doing that every update and accounting for strut flexing introduces a lot of unknowns and possibilities of failure there.\u003C/p\u003E\u003Cp\u003EFor example you might be introducing new paths of positive feedback. Or also depending on a combination of user input, attitude, flexing and/or damage to the ship, it can fail to solve the system and that then leads to loss of control.\u003C/p\u003E\n"},{"CreatedByName":"helldiver","CreatedById":74755,"CreatedDateTime":"2013-07-30T16:22:04Z","Content":"\n\u003Cp\u003EThis MOD is absolutely necessary for the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/showthread.php/40761-Kerbin-Mini-Shuttle\u0022 rel=\u0022external nofollow\u0022\u003EKerbin Orbiter\u003C/a\u003E I\u0027m working on.\u003C/p\u003E\u003Cp\u003EI\u0027d been wanting an FCS (Flight Control System) like the real shuttles have for a while. SAS, ASAS, Avionics haven\u0027t really worked too well. Your mod seems to be exactly what I needed.\u003C/p\u003E\u003Cp\u003EWould it be alright if I incorporated into the Avionics part of the Kerbin Shuttle?\u003C/p\u003E\u003Cp\u003EHow does your mod work? Is it loaded on a part? Or is it a DLL, or?\u003C/p\u003E\n"},{"CreatedByName":"japa","CreatedById":9777,"CreatedDateTime":"2013-07-30T16:23:46Z","Content":"\n\u003Cp\u003ERight now it\u0027s a DLL that gets attached to most of the stock command pods. probably a better solution would be to make a dedicated part for it, but that\u0027s not there yet.\u003C/p\u003E\n"}]}