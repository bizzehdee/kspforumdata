{"TopicId":79554,"ForumId":36,"TopicTitle":"[0.90] TestFlight [0.4.6.1][04FEB15] -Configurable, extensible, parts research \u0026amp; reliability system","CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-07-26T00:33:29Z","PageNum":8,"Articles":[{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-28T23:01:05Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003EAlpha Release\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/jwvanderbeck/TestFlight/releases/tag/v0.4.0\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jwvanderbeck/TestFlight/releases/tag/v0.4.0\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EThis is an early alpha development release and thus should be assumed to be buggy, and capable of breaking your game and game saves. Please do not test this in a game save that you care about!\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EIMPORTANT NOTE\u003C/strong\u003E Due to many changes in how settings are handled, and stored, as well as the removal and addition of different settings than previous releases, please completely delete any previous install of TestFlight before installing this version. In addition it is \u003Cstrong\u003Ehighly recommended\u003C/strong\u003E to start a new save game for this release.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EMajor thanks to NonWonderDog for major help with the math behind the new MTBF system, and to razark for tons of testing of the 0.4 experimental builds\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EHighlights\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E \u003Cstrong\u003ETestFlight API completely overhauled and is not backwards compatible\u003C/strong\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Totally rewritten underlying core systems\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Migrated from a polling \u0022pull\u0022 style system to a \u0022push\u0022 style system where the individual parts are responsible for their own state, and the core manager/GUI only asks for that state when needed to update the GUI or save to disk\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Brand new Editor Window allows you to inspect your parts while building.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Initial implementation of new Mean Time Between Failure (MTBF) system.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EMTBF System\u003C/span\u003E\u003C/p\u003E\u003Cp\u003ESome things to understand about the new MTBF system.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003E MTBF does \u003Cstrong\u003Enot\u003C/strong\u003E mean time until failure. A MTBF of 60 seconds does not mean your part will fail in 60 seconds. It could fail well before 60s or well after 60s. But on average it will fail sometime around 60s. Maybe.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Probability is a ...... Just because something is highly unlikely does not mean it is impossible.\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EImportant testing in this update is \u0022How does it feel?\u0022. I know this is subjective and everyone will have a different opinion, but please let me know how it feels to you. Both on early flights, and later flights once your parts have gained reliability. I have some knobs I can tune.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/xDKU0P6.png\u0022 alt=\u0022xDKU0P6.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EIn the VAB you will now see TestFlight on the AppLauncher. Click to open the Editor Window. The Editor Window will show you details on your parts so you can make decisions on what to use on your craft. It shows you the flight data and reliability of the part for all scopes with recorded flight data.\u003C/p\u003E\u003Cp\u003ETo use:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003E Open the window by clicking the TestFlight icon in the AppLauncher bar\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Mouse over parts in the parts bin on the left. As you mouse over parts, you will see that part\u0027s data in the window.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Right click a part in the parts bin to \u003Cstrong\u003Elock\u003C/strong\u003E the window to that part. Once locked, you can move your mouse wherever and it will continue to show the data from the locked part. Right click the same part again to \u003Cstrong\u003Eunlock\u003C/strong\u003E the window, or right click a new part to change the lock to that part.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Left clicking a part to add it to the craft will automatically \u003Cstrong\u003Eunlock\u003C/strong\u003E the window if it is locked.\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAs with the main TestFlight window, you can click the \u0022Lock Window\u0022 button to lock or unlock the window to the dock. If unlocked, you can position it wherever you want.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EAPI Changes\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EThe TestFlight API is not backwards compatible with previous versions\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EThis release contains a completely overhauled API. If you have written a module for TestFlight it will need to be updated to use the new API.\u003C/p\u003E\u003Cp\u003EThe good news is that while the API got a lot more flexible and a lot more powerful,most of the changes \u003Cem\u003Efor now\u003C/em\u003E are in the Core, not the plugin modules. Changes to compile against this release will probably be minor. \u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EChange Log\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E Rewrote core scenario code. TestFlightManagerScenario is now only a data store for the persistent data, and contains no appreciable game logic\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Redesigned TestFlightCore API to accommodate both the new \u0022push\u0022 method as well as upcoming changes to the underlying reliability and failure architecture\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Flight Data and Flight Time now stored as doubles\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Implemented brand new Test Flight API\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Changes to ITestFlightCore interface\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Changes to ITestFlightDataRecorder interface\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Changes to ITestFlightReliability interface\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Core system refreshes status more often now that there is less of a performance hit\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Changed method of configuring how FlightData converts into Reliability in the config files. This is now done using a FloatCurve which allows the modder to make it as simple or as complex as desired\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Fixed a bug that caused reliability to not load properly when going through the VAB with a craft\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Fixed a bug causing \u0022sub\u0022 modules to load before the Core and therefore never attaching properly\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Added new Editor Window to see part\u0027s flight data and reliability while building\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Defer loading of prefab data to Start() in case KSP is being slothful. Should fix reliability not loading correctly in Flight.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Initial implementation of new MTBF system\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E MSD now shows MTBF\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E MSD now shows Failure Rate\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Make font in MSD smaller, and adjusted window to accommodate new data\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Updated settings pane in MSD to remove no longer used settings, and rename/tweak ones that are left.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E New Reflection Interface for other mods to integrate with TestFlight. This is still a WIP and feedback is more than welcome.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Fix issue #11 - Settings Dropdown List hard to read\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Fix issues #14 - Data rate multiplier being incorrectly applied and giving zillions of data units (or none!)\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E New API methods to allow repairs to take time to complete\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Expanded Reflection Interface and API\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E MSD can now show failure rate in addtion to MTBF\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E failure rate in MSD now properly shows the \u0027worst\u0027 momentary failure rate\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E DataRecorder modules can now control when a part is considered \u0022operating\u0022\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Mission time is now calculated from activation of first stage, \u003Cstrong\u003Enot\u003C/strong\u003E from MET which KSP does not start until you leave the pad. This means two main things. \u003Cbr\u003E\u003Cul\u003E\u003Cli\u003E Engine test stands are a thing\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E The practice of igniting your first stage \u003Cstrong\u003Ebefore\u003C/strong\u003E releasing the launch clamps is a good one, to ensure you engine(s) are ignited and running properly.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*] Added new Reliability module that increase the failure rate of an engine for the first 5 seconds after ignition. This is also a sample of the power of the new system to do things like this! Currently enabled on liquid engines.\u003C/p\u003E\u003Cp\u003E[*] Added new API methods to control flow of Flight Data\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E SetDataRateLimit()\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E SetDataCap()\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*] Changed failure checks to be a constant chance of failure, rather than increasing towards MTBF\u003C/p\u003E\u003Cp\u003E[*] Added Travis CI integration for continuous integration testing of commits, and automated builds.\u003C/p\u003E\u003Cp\u003E[*] TestFlight configs are now built in JSON and then compiled to standard ModuleManager config format upon build and release. This standardizes the configs, as well as makes them easier to write by removing redundancy and allowing re-use of setups.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-28T23:12:00Z\u0022 title=\u002201/28/2015 11:12  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 28, 2015\u003C/time\u003E by Agathorn\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-02-03T02:53:41Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003Ev0.4.5 Stock \u0026amp; Realism Overhaul Releases!\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EAs of 0.4.5, TestFlight officially supports RealismOverhaul! The configs are still very light (in fact only supports one engine lol), but the code has been updated to seamlessly integrate with Real Fuels and ModuleEngineConfigs which was vital to proper RO support.\u003C/p\u003E\u003Cp\u003EFrom this version on, TerstFlight will be released in two versions, one for Stock and one for RealismOverhaul. Please make sure you download the proper one for whichever you need.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003EAlpha Release\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EStock\u003C/strong\u003E: \u003Ca href=\u0022https://github.com/jwvanderbeck/TestFlight/releases/tag/0.4.5-Stock\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jwvanderbeck/TestFlight/releases/tag/0.4.5-Stock\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERealismOverhaul\u003C/strong\u003E: \u003Ca href=\u0022https://github.com/jwvanderbeck/TestFlight/releases/tag/0.4.5-RealismOverhaul\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jwvanderbeck/TestFlight/releases/tag/0.4.5-RealismOverhaul\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EThis is an Alpha Development Release and thus should be assumed to contain bugs that may or make not break your game. Use of this release in a clean test save game is highly recommended.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EHighlights\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E Initial release of TestFlight with Realism Overhaul compatibility\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Support for MFT/RF ModuleEngineConfig system\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Support for Technology Transfer from part to part\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Initial configs for RealismOverhaul\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EStock \u0026amp; Realism Overhaul Support\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EAs of this release, TestFlight now officially supports Realism Overhaul. Currently configs exist for only a single part, the Aerobee engine line. Each version of the Aerobee has different failure rates based on real data, and tech transfer exists throughout the line. Feedback on this is most appreciated!\u003C/p\u003E\u003Cp\u003EMoving forward there will be separate releases for Stock and Realism Overhaul so that each contains the correct configs. Choose the **one** you want and download that. They will be clearly marked as Stock or Realism Overhaul.\u003C/p\u003E\u003Cp\u003EThey both are the same code and the same Plugins, it is just the ModuleManager configs that differ.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EChange Log\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E All TestFlight modules can now use a new property \u003Cstrong\u003E\u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003Econfiguration\u003C/span\u003E\u003C/strong\u003E. If specified TestFlight will only enable that module if the part\u0027s currently active MFT/RF configuration matches the specified value. This allows configuration of ModuleEngineConfig parts as if they were their own separate parts.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E DataRecorder runs off \u003Cstrong\u003E\u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003EoperatingTime\u003C/span\u003E\u003C/strong\u003E now and therefore will not record data if the part is in a failed state\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E \u003Cstrong\u003EAPI\u003C/strong\u003E: Added new methods for retrieving TestFlight modules on a part.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E \u003Cstrong\u003ENew Module\u003C/strong\u003E: Added new Failure module, TestFlightFailure_IgnitionFail which is works a bit different than most, and would be considered a FailureTrigger module. It monitors for an engine to change states from not ignited, to ignited, and applies a chance for that ignition to fail. This chance is based on FlightData and the curve can be configured in .cfg file.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Initial configs for RO starting with the WAC-Corporal/Aerobee engine line.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E \u003Cstrong\u003E\u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003EoperatingTime\u003C/span\u003E\u003C/strong\u003E is no longer capped at MTBF so parts can still fail after MTBF has passed\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Added new class to TestFlightAPI to wrap up the annoying duality of ModuleEngines and ModulesEnginesFX\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E New property added to all Module Interfaces \u0060TestFlightEnabled\u0060 determines if the module is currently running under TestFlight\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Fixed bug with \u00220 time to repair\u0022 failures not giving the Repair Button\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Fixed bug with failures that had no repair config breaking the system\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Added Technology Transfer system that allows partial flight data to transfer from one part to another part that is considered to be a related technology path.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Swapped to using System.Random for random numbers since apparently KSP spews out the same random sequence each time you load a game.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Added instance of System.Random to TestFlightCore and TestFlightManagerScenario for use by other modules.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Fixed issue #16 - parts continue to accrue operating time even when failed\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Fixed issue #19 - operating time wasn\u0027t respecting IsPartOperating\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E More adjustments to MSD window size to avoid horizontal scrolling\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Updates to build system to allow building Stock and RealismOverhaul configs as needed\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-03T02:56:40Z\u0022 title=\u002202/03/2015 02:56  AM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 3, 2015\u003C/time\u003E by Agathorn\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-02-03T21:52:21Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003Ev0.4.6 Stock \u0026amp; Realism Overhaul Releases\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EStock\u003C/strong\u003E: \u003Ca href=\u0022https://github.com/jwvanderbeck/TestFlight/releases/tag/v0.4.6-Stock\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jwvanderbeck/TestFlight/releases/tag/v0.4.6-Stock\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERealism Overhaul\u003C/strong\u003E: \u003Ca href=\u0022https://github.com/jwvanderbeck/TestFlight/releases/tag/0.4.6-RealismOverhaul\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jwvanderbeck/TestFlight/releases/tag/0.4.6-RealismOverhaul\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EAlpha Release\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EThis is an Alpha Development Release and thus should be assumed to contain bugs that may or make not break your game. Use of this release in a clean test save game is highly recommended.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EChange Log\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E FIX #21 When triggering a random failure, skip ones marked as disabled\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E FIX #22 Only add positive flight data. Should resolve issue with 0 or negative du showing in MSD\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E NEW #23 Parts can now gain bonus flight data when they fail, and when failures are repaired. After all, we\u0027re supposed to learn from our failures! New properties \u0060\u003Cstrong\u003E\u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003EduFail\u003C/span\u003E\u003C/strong\u003E\u0060 and \u0060\u003Cstrong\u003E\u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003EduRepair\u003C/span\u003E\u003C/strong\u003E\u0060 added to Failure modules and implemented automatically by the base class.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E NEW #26 Failures can be \u0022one-shot\u0022 which means the bad stuff from the failure happens but the part is not placed into a failed state and continues to operate (if possible). New property \u0060\u003Cstrong\u003E\u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003EoneShot\u003C/span\u003E\u003C/strong\u003E\u0060 added to Failure modules.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E NEW #29 Support for EngineIgnitor mod. The IgnitionFail Failure Module can optionally restore a used up ignition when it fails. New property \u0060\u003Cstrong\u003E\u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003ErestoreIgnitionCharge\u003C/span\u003E\u003C/strong\u003E\u0060 added to TestFlightFailure_IgnitionFail Module\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E FIX EngineCycle Reliability was incorrectly modifying Base Failure Rate, and was being enabled when it should have been. Both issues fixed.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E NEW #31 Instead of defining a reliabilityCurve for every one of the possible 33 scopes, even when they were the same, a \u0022default\u0022 scope curve can now be used and TestFlightReliability will use the default scope if a specific one is not found.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E \u003Cstrong\u003E[RealismOverhaul]\u003C/strong\u003E Removed accidental double definition of Aerobee-150.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E \u003Cstrong\u003E[RealismOverhaul]\u003C/strong\u003E Re-added use of IgnitionFail failure after bugs were fixed.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E \u003Cstrong\u003E[RealismOverhaul]\u003C/strong\u003E Added large chance of ignition failure to X-405 Vanguard.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E \u003Cstrong\u003E[RealismOverhaul]\u003C/strong\u003E WAC-Corporal/Aerobee Line, X-405, and AJ-10-37/42 all use EngineCycle Reliability now, which defines a \u0022bathtub\u0022 curve for reliability over the expected operating cycle of the engine, based on real manufacturer specs. This means the engine will have an increase in failure rate for the first few seconds of operation, smooth out to normal Base Failure Rate for the \u0022Rated Burn Time\u0022 of the engine, and the the failure rate will slowly start increasing as the engine exceeds the manufacturer\u0027s \u0022Rated Burn Time\u0022. Rated burn times: WAC/Aerobee: 47 seconds, X-405: 145 seconds, AJ-10-37/42:L 115 seconds.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003E\u003Cspan style=\u0022font-family:\u0027Arial Black\u0027;\u0022\u003EThe Road to Release\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EI feel that TestFlight is shaping up very nicely, and that the time for a full release is rapidly approaching. Therefore I am now focused on the march to v1.0 and a full release. I have created my initial list of issues that need to be addressed on GitHub: \u003Ca href=\u0022https://github.com/jwvanderbeck/TestFlight/issues?q=is%3Aopen\u002Bis%3Aissue\u002Bmilestone%3A1.0\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jwvanderbeck/TestFlight/issues?q=is%3Aopen\u002Bis%3Aissue\u002Bmilestone%3A1.0\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIf anyone has anything to add that should be done by 1.0 please add it to GitHub or let me know. Thanks!\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-02-05T02:52:55Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003Ev0.4.6.1 Stock \u0026amp; Realism Overhaul Releases\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EStock\u003C/strong\u003E: \u003Ca href=\u0022https://github.com/jwvanderbeck/TestFlight/releases/tag/0.4.6.1-Stock\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jwvanderbeck/TestFlight/releases/tag/0.4.6.1-Stock\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERealism Overhaul\u003C/strong\u003E: \u003Ca href=\u0022https://github.com/jwvanderbeck/TestFlight/releases/tag/0.4.6.1-RealismOverhaul\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jwvanderbeck/TestFlight/releases/tag/0.4.6.1-RealismOverhaul\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003EAlpha Release\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EThis is an Alpha Development Release and thus should be assumed to contain bugs that may or make not break your game. Use of this release in a clean test save game is highly recommended.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EChange Log\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E ShutdownEngine failure should now also shutdown the visual effects playing with certain mods like RealPlume/Smoekscreen\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E ShutdownEngine failure now uses the common EngineModuleWrapper\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E ReducedMaxThrust should now work properly with RF/MFT or any other ModuleEngineConfigs based mod\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E TestFlight now has AVC .version files. It does \u003Cstrong\u003Enot\u003C/strong\u003E include miniAVC, but if you are using the full AVC mod (which I \u003Cstrong\u003Ehighly suggest\u003C/strong\u003E because its awesome) you should now be notified of updates\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E TestFlight now generates CKAN files so should be on CKAN soon\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E FIX Fixed a bug in Failure modules that was preventing the \u0060\u003Cstrong\u003E\u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003EduFail\u003C/span\u003E\u003C/strong\u003E\u0060 and \u0060\u003Cstrong\u003E\u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003EduRepair\u003C/span\u003E\u003C/strong\u003E\u0060 properties from working. Unfortunately due to the way KSP works, you will need to create new craft for this fix to take effect. Any existing craft or saved .craft files will not work.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-02-06T23:08:30Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003Ev0.4.6.2 Stock and Realism Overhaul Releases\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EStock\u003C/strong\u003E: \u003Ca href=\u0022https://github.com/jwvanderbeck/TestFlight/releases/tag/0.4.6.2-Stock\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jwvanderbeck/TestFlight/releases/tag/0.4.6.2-Stock\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERealism Overhaul\u003C/strong\u003E: \u003Ca href=\u0022https://github.com/jwvanderbeck/TestFlight/releases/tag/0.4.6.2-RealismOverhaul\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jwvanderbeck/TestFlight/releases/tag/0.4.6.2-RealismOverhaul\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EAlpha Release\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EThis is an Alpha Development Release and thus should be assumed to contain bugs that may or make not break your game. Use of this release in a clean test save game is highly recommended.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EChange Log\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E FIX AVC .version file had bad formatting\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E FIX autogenerated URLs for AVC and CKAN had incorrect URLs\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E FIX Output pretty JSON for CKAN\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E FIX ID in .version file was backwards\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E FIX Property \u0060\u003Cstrong\u003E\u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003EdeepSpaceThreshold\u003C/span\u003E\u003C/strong\u003E\u0060 in Core was wrong format\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E NEW #37 MSD will now restore its previous visibility state\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E FIX #38 DataRecorder_Engine now uses the common engine wrapper\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E FIX #39 Improved support for RF/MFT and ModuleEngineConfig. Derivative engines should work properly now.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E NEW #40 The amount of thrust lost in the ReducedMaxThrust failure can now be configured with the \u0060\u003Cstrong\u003E\u003Cspan style=\u0022font-family:\u0027Courier New\u0027;\u0022\u003EthrustReduction\u003C/span\u003E\u003C/strong\u003E\u0060 property which is a multiplier from 0 to 1.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E \u003Cstrong\u003E[RealismOverhaul]\u003C/strong\u003E Major work on tweaking Aerobee, X-405, and AJ-10 engines for both realistic reliability and fun gameplay. \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E \u003Cstrong\u003E[RealismOverhaul]\u003C/strong\u003E NEW Engine configs for AJ10-142 and AJ10-104D\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E \u003Cstrong\u003E[RealismOverhaul]\u003C/strong\u003E NEW Engine configs for LR-89-5\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E \u003Cstrong\u003E[RealismOverhaul]\u003C/strong\u003E NEW Engine configs for LR-105-5\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E \u003Cstrong\u003E[RealismOverhaul]\u003C/strong\u003E NEW Engine configs for Bell 80XX series engine\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-02-07T17:23:51Z","Content":"\n\u003Cp\u003ETestFlight will be going 1.0 very soon, and I wanted to thank everyone here who has helped test and contribute ideas.\u003C/p\u003E\u003Cp\u003ETestFlight is more certainly not \u0022done\u0022 but the core of the mod is to what I believe is a mature state where it can be released and grow from there.\u003C/p\u003E\u003Cp\u003EAdditionally however I wanted to say that upon release I will no longer be \u003Cstrong\u003Edirectly\u003C/strong\u003E supporting Stock configs. I will be distributing only with Realism Overhaul configs. The reason for this is quite simply I do not play Stock, at all, and I am finding it very hard to make fun playable configs for something that I really know nothing about \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003Cstrong\u003ETestFlight still fully supports Stock\u003C/strong\u003E, and well pretty much any mod, its just the config of parts that I can\u0027t do myself. If anyone wants to step up and create configs for Stock parts as their own mod that uses TestFlight\u0027s core, I will fully support you in this, but moving forward I will only be releasing configs for Realism Overhaul.\u003C/p\u003E\n"},{"CreatedByName":"Scientist","CreatedById":129760,"CreatedDateTime":"2015-05-08T14:30:23Z","Content":"\n\u003Cp\u003Eis this planning to goto 1.0.2? loved the mod \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-05-11T02:30:42Z","Content":"\n\u003Cp\u003EHey Scientist, yes 1.02 support is coming very soon. But I don\u0027t really update this thread anymore. Please move on over to the release thread, which is where TestFlight went once it was well released \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/109901-0-90-TestFlight-v1-2-1-14-Mar-2015-Bring-Flight-Testing-to-KSP%21\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/109901-0-90-TestFlight-v1-2-1-14-Mar-2015-Bring-Flight-Testing-to-KSP%21\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThanks!\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2015-05-11T08:11:10Z","Content":"\n\u003Cp\u003ELocked by request. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"}]}