{"TopicId":60281,"ForumId":36,"TopicTitle":"[Hardware, Plugin] Arduino based physical display \u002B serial port io\u002B tutorial (24-11-19)","CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2014-01-18T01:25:25Z","PageNum":5,"Articles":[{"CreatedByName":"Mulbin","CreatedById":55562,"CreatedDateTime":"2014-02-10T14:13:09Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022zitronen\u0022 data-cite=\u0022zitronen\u0022\u003E\u003Cdiv\u003EOk the problem is say you have a switch that turns the lights on, but what if your lights are already on? If you flip the switch to on the lights will turn off.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAhhhhh... ok, I see why \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Yes my method would require you to set all your switches to starting position before loading the flight, yours could ignore the switch being moved to ON if it is already ON and vice versa... very clever. You may be able to bypass the current bug with landing gear (the first time you use landing gear in KSP you have to hit the button twice!)... with my setup the way round would be to set the gear to \u0022UP\u0022 before launch to get it in sync with the bug.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022zitronen\u0022 data-cite=\u0022zitronen\u0022\u003E\u003Cdiv\u003EEdit: If you guys want to put together a list of data you want sent from KSP that would be nice too. I will start on that when I get basic inputs working.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m working at the moment but I can put a list together a bit later, if eveyone does a list you wont miss anything and can merge them together \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"katton","CreatedById":97529,"CreatedDateTime":"2014-02-10T17:21:45Z","Content":"\n\u003Cp\u003EI thought that sending commands through the arduino program rather than emulating a keyboard would be good for a few reasons.\u003C/p\u003E\u003Cp\u003E- it seems a bit kludge-y. If we\u0027ve got a direct route between the arduino and the game, why go the roundabout route.\u003C/p\u003E\u003Cp\u003E- arduino limitations: I was under the impression that if you started the arduino-keyboard mode, you would have trouble doing other things. I could be completely off base on this one, though.\u003C/p\u003E\u003Cp\u003E- non-mapped keys: going directly through the arduino lets you use commands that currently aren\u0027t mapped to the keyboard (for instance RCS on, rather than RCS toggle)\u003C/p\u003E\u003Cp\u003EI am interested in the joystick command sending because I found a pair of (relatively) cheap 3-axis potentiometer joysticks, but that means they\u0027re not really plug-and-play compatible. Also, just for simplicity\u0027s sake, it would be nice to have everything go through the arduino.\u003C/p\u003E\u003Cp\u003EAs far as a list of variables to pass back to the arduino, my wishlist is (with the ones you\u0027ve already implemented marked with an X):\u003C/p\u003E\u003Cp\u003E - Flight Time\u003C/p\u003E\u003Cp\u003E - Time to Node\u003C/p\u003E\u003Cp\u003E - Real Time (from the system clock, just for the heck of it)\u003C/p\u003E\u003Cp\u003E X Time to Apo\u003C/p\u003E\u003Cp\u003E X Time to Peri\u003C/p\u003E\u003Cp\u003E - Time to Sphere of Influence Switch\u003C/p\u003E\u003Cp\u003E - Current Stage Number\u003C/p\u003E\u003Cp\u003E - Current Throttle\u003C/p\u003E\u003Cp\u003E X Current G Force\u003C/p\u003E\u003Cp\u003E - Heading\u003C/p\u003E\u003Cp\u003E - Pitch\u003C/p\u003E\u003Cp\u003E - Roll\u003C/p\u003E\u003Cp\u003E - Orbital Velocity\u003C/p\u003E\u003Cp\u003E X Surface Velocity\u003C/p\u003E\u003Cp\u003E - Target Velocity\u003C/p\u003E\u003Cp\u003E - Altitude (normal)\u003C/p\u003E\u003Cp\u003E X Radar Altitude\u003C/p\u003E\u003Cp\u003E - Target Distance\u003C/p\u003E\u003Cp\u003E X Apoapsis\u003C/p\u003E\u003Cp\u003E - Target Apoapsis\u003C/p\u003E\u003Cp\u003E X Vertical Velocity\u003C/p\u003E\u003Cp\u003E X Periapsis\u003C/p\u003E\u003Cp\u003E - Target Periapsis\u003C/p\u003E\u003Cp\u003E - Horizontal Velocity (lazy to ask for both instead of computing it... but there\u0027s a lot more spare power in the computer than in the arduino)\u003C/p\u003E\u003Cp\u003E - Liquid Fuel Total\u003C/p\u003E\u003Cp\u003E - Liquid Fuel on Current Stage\u003C/p\u003E\u003Cp\u003E - Liquid Fuel Consumption\u003C/p\u003E\u003Cp\u003E - Electric Charge Total\u003C/p\u003E\u003Cp\u003E - Solid Fuel Total\u003C/p\u003E\u003Cp\u003E - Solid Fuel on Current Stage\u003C/p\u003E\u003Cp\u003E - Mono Propellant Total\u003C/p\u003E\u003Cp\u003E - Oxidizer Total\u003C/p\u003E\u003Cp\u003E - Xenon Total (?)\u003C/p\u003E\u003Cp\u003E - Current Time Warp\u003C/p\u003E\u003Cp\u003E - Current time warp state (physical or not)\u003C/p\u003E\u003Cp\u003E - Max Time Warp State (I guess you could also just get this from altitude)\u003C/p\u003E\u003Cp\u003E - SAS, RCS, Precision Mode, Lights, Gear and Brakes: Current Status\u003C/p\u003E\u003Cp\u003E - Whether action groups 1-10 have any actions assigned to them (maybe just on startup, does\u0027t really need to be polled at any frequency)\u003C/p\u003E\u003Cp\u003EI\u0027ve crossed off the ones that I think you\u0027ve already got. \u003C/p\u003E\u003Cp\u003ELooking at this list, there are a lot of variables, hopefully that stays in your 255 bytes limit. I\u0027m sure there are important ones that I\u0027ve completely forgotten to consider.\u003C/p\u003E\n"},{"CreatedByName":"Mulbin","CreatedById":55562,"CreatedDateTime":"2014-02-10T17:27:05Z","Content":"\n\u003Cp\u003ENice list, just finished my first draft too \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E Also probably forgotten things...\u003C/p\u003E\u003Cp\u003EResources\u003C/p\u003E\u003Cp\u003ETotal Fuel (percentage)\u003C/p\u003E\u003Cp\u003ETotal Oxidizer (Percentage)\u003C/p\u003E\u003Cp\u003EStage Fuel (Percentage)\u003C/p\u003E\u003Cp\u003EStage Oxidizer (Percentage)\u003C/p\u003E\u003Cp\u003ETotal Monopropellant (Percentage)\u003C/p\u003E\u003Cp\u003EStage Monopropellant (Percentage)\u003C/p\u003E\u003Cp\u003ETotal Electricity (Percentage)\u003C/p\u003E\u003Cp\u003EStage Electricity (Percentage)\u003C/p\u003E\u003Cp\u003EElectric drain/charge rate (-100.00 to \u002B100.00?)\u003C/p\u003E\u003Cp\u003EFlight data\u003C/p\u003E\u003Cp\u003ECurrent MET (Numeric, time)\u003C/p\u003E\u003Cp\u003EAP (numeric)\u003C/p\u003E\u003Cp\u003EPE (Numeric)\u003C/p\u003E\u003Cp\u003ETime to AP/PE (Numeric, Time)\u003C/p\u003E\u003Cp\u003EInclination (\u002B/- Numeric)\u003C/p\u003E\u003Cp\u003EExcentricity (\u002B/- Numeric)\u003C/p\u003E\u003Cp\u003EAltitude, sea level (Numeric)\u003C/p\u003E\u003Cp\u003ERadar Altitude (Numeric)\u003C/p\u003E\u003Cp\u003EAir pressure\u003C/p\u003E\u003Cp\u003ETemperature\u003C/p\u003E\u003Cp\u003EGravity\u003C/p\u003E\u003Cp\u003ESpeed, surface\u003C/p\u003E\u003Cp\u003ESpeed, Orbit\u003C/p\u003E\u003Cp\u003ESpeed, Target\u003C/p\u003E\u003Cp\u003EPitch (Degrees)\u003C/p\u003E\u003Cp\u003ERoll (Degrees)\u003C/p\u003E\u003Cp\u003EYaw (Degrees)\u003C/p\u003E\u003Cp\u003EHeading/prograde (degrees)\u003C/p\u003E\u003Cp\u003EData to control dashboard lights..\u003C/p\u003E\u003Cp\u003EThese could be tied in with coresponding inputs.\u003C/p\u003E\u003Cp\u003ERCS ON/OFF?\u003C/p\u003E\u003Cp\u003ESAS ON/OFF?\u003C/p\u003E\u003Cp\u003EGear UP/Down?\u003C/p\u003E\u003Cp\u003EStage\u003C/p\u003E\u003Cp\u003EStage lock\u003C/p\u003E\u003Cp\u003ENormal/fine control\u003C/p\u003E\u003Cp\u003ELights ON/OFF?\u003C/p\u003E\u003Cp\u003EBrakes\u003C/p\u003E\u003Cp\u003ETranslation/rotation mode\u003C/p\u003E\n"},{"CreatedByName":"Mulbin","CreatedById":55562,"CreatedDateTime":"2014-02-10T17:32:06Z","Content":"\n\u003Cp\u003EI can see things that are on one but not the other (and vice versa!)... xitronen might need to set up a spreadsheet \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EI may not be much use with electronics... but I\u0027m a proffessional designer. Hurry up and think of a cool name for your plugin xitronen and I\u0027ll see if I have time for a logo. Least I can do after all the noob herding you have done to get me on track!\u003C/p\u003E\n"},{"CreatedByName":"Mulbin","CreatedById":55562,"CreatedDateTime":"2014-02-10T17:34:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022katton\u0022 data-cite=\u0022katton\u0022\u003E\u003Cdiv\u003EI thought that sending commands through the arduino program rather than emulating a keyboard would be good for a few reasons.\u003Cp\u003E- it seems a bit kludge-y. If we\u0027ve got a direct route between the arduino and the game, why go the roundabout route.\u003C/p\u003E\u003Cp\u003E- arduino limitations: I was under the impression that if you started the arduino-keyboard mode, you would have trouble doing other things. I could be completely off base on this one, though.\u003C/p\u003E\u003Cp\u003E- non-mapped keys: going directly through the arduino lets you use commands that currently aren\u0027t mapped to the keyboard (for instance RCS on, rather than RCS toggle)\u003C/p\u003E\u003Cp\u003EI am interested in the joystick command sending because I found a pair of (relatively) cheap 3-axis potentiometer joysticks, but that means they\u0027re not really plug-and-play compatible. Also, just for simplicity\u0027s sake, it would be nice to have everything go through the arduino.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECool, I suspected I might be missing something... all good reasons! It might also offer a way to have multiple joysticks without them conflicting now I think about it...\u003C/p\u003E\n"},{"CreatedByName":"katton","CreatedById":97529,"CreatedDateTime":"2014-02-10T17:38:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Mulbin\u0022 data-cite=\u0022Mulbin\u0022\u003E\u003Cdiv\u003ECool, I suspected I might be missing something... all good reasons! It might also offer a way to have multiple joysticks without them conflicting now I think about it...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETo be perfectly honest, I fear that getting the joysticks working through the arduino is going to be way more trouble than it\u0027s worth - in hindsight I wish I\u0027d just gone with some normal ones. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Mulbin","CreatedById":55562,"CreatedDateTime":"2014-02-12T17:54:49Z","Content":"\n\u003Cp\u003EEDIT - Ignore this post... talking nonsense as usual!\u003C/p\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2014-02-15T15:27:21Z","Content":"\n\u003Cp\u003EGuys I have the basics of inputs working. I have a question about how you guys would like the input packet to look like. We can go the easy and inefficient rout: \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Estruct ControlPacket {\u003Cbr\u003Ebyte SAS;\u003Cbr\u003Ebyte RCS;\u003Cbr\u003E...\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWhich means we are using a whole byte for each switch button, which limits us to 255 buttons (minus bytes needed for analogue axes). But this is really easy to use, you just do ControlPacket.SAS = 1; in arduino. The alternative is to use the full byte with bit math (\u003Ca href=\u0022http://playground.arduino.cc/Code/BitMath\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://playground.arduino.cc/Code/BitMath\u003C/a\u003E).\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Estruct ControlPacket {\u003Cbr\u003Ebyte ControlByte1;\u003Cbr\u003Ebyte ControlByte2;\u003Cbr\u003E...\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis is much more efficient (8 times!), we can do up to 2048 buttons, but it will be more difficult to use, you will have to remember which bit is for what, i.e. bit 1 of byte 1 is SAS, and you will have to do something like ControlPacket.ControlByte1 |= (1 \u0026lt;\u0026lt; 7); (turns highest bit to 1).\u003C/p\u003E\n"},{"CreatedByName":"katton","CreatedById":97529,"CreatedDateTime":"2014-02-15T18:23:08Z","Content":"\n\u003Cp\u003EThat is excellent progress zitronen! Very exciting stuff \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EAs for the options, I would definitely prefer the second one (one bit per toggle, keeping as much space as possible for options that will need more degrees of resolution).\u003C/p\u003E\u003Cp\u003EI am curious about why you\u0027ve chosen this way of sending commands. It is a nice counterpoint to the data-to-arduino sending (and maybe having both structured in the same way makes it easier to keep track of), but I was wondering why you would need to send all the commands all the time. For the display data (in the other direction), it makes sense, because you don\u0027t want to make the arduino have to ask for particular variables, but I don\u0027t know how often you\u0027ll be sending more than a handful of commands at a time. Would there be any benefit in limiting yourself to say 16 commands at once (probably a safe assumption?), and having the variables be passed as:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Estruct ControlPacket {\u003Cbr\u003Ebyte VariableNumber1;\u003Cbr\u003Ebyte VariableValue1;\u003Cbr\u003Ebyte VariableNumber2;\u003Cbr\u003Ebyte VariableValue2;\u003Cbr\u003E...\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWhere you could define a list of variables that are changeable (RCS = 1, SAS = 2, throttle = 3, etc.), and then pass them whatever value you want to be assigned to that particular one. If you had a max of 16 variables (per packet), that would cut down your packet size to 32 bytes, instead of 255 (or something around there, with checksums and whatnot). That way you could have thousands of possible variables (which is total overkill), and I think it would make it easier to add new ones later on. This would also make it so you wouldn\u0027t have to keep track of (and retransmit) the state of all the variables every time. Of course, the down-side is that if you somehow managed to miss a packet, it wouldn\u0027t be fixed on subsequent ones.\u003C/p\u003E\u003Cp\u003EJust a thought, I am still super excited about your way, I don\u0027t mean to sound unappreciative. The work that you\u0027ve been doing is amazing!\u003C/p\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2014-02-15T20:09:09Z","Content":"\n\u003Cp\u003EWell there are many different ways to do this, but there are some down sides to what you are suggesting. First the arduino will have to keep track of which input changed, which was sent and manage the queue of what to send next. This seems like more work than just sending some bytes at regular intervals. Secondly, now you need 2 bytes to send 1 bit. The 32 byte structure you are proposing is used to send 16 bits, but the same 32 byte structure can easily be used to send 32 bits or 256 bits. So you might as well just send everything. (edit: this is how USB joysticks work, everything in one frame)\u003C/p\u003E\u003Cp\u003EAlso I am not sending 255 bytes, 255 bytes is the maximum size of the structure, the actual size of the packet depends on what\u0027s in it. So it may only be 50 bytes. If we run out of space in one structure we can simply make a new one, e.g. we could have one struct for switches and one for axes.\u003C/p\u003E\n"},{"CreatedByName":"katton","CreatedById":97529,"CreatedDateTime":"2014-02-15T21:30:27Z","Content":"\n\u003Cp\u003EThat makes sense, I hadn\u0027t thought of it that way. Thanks for the patient explanation \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022zitronen\u0022 data-cite=\u0022zitronen\u0022\u003E\u003Cdiv\u003EWell there are many different ways to do this, but there are some down sides to what you are suggesting. First the arduino will have to keep track of which input changed, which was sent and manage the queue of what to send next. This seems like more work than just sending some bytes at regular intervals. Secondly, now you need 2 bytes to send 1 bit. The 32 byte structure you are proposing is used to send 16 bits, but the same 32 byte structure can easily be used to send 32 bits or 256 bits. So you might as well just send everything. (edit: this is how USB joysticks work, everything in one frame)\u003Cp\u003EAlso I am not sending 255 bytes, 255 bytes is the maximum size of the structure, the actual size of the packet depends on what\u0027s in it. So it may only be 50 bytes. If we run out of space in one structure we can simply make a new one, e.g. we could have one struct for switches and one for axes.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"Mulbin","CreatedById":55562,"CreatedDateTime":"2014-02-15T21:59:04Z","Content":"\n\u003Cp\u003EI like the sound of the simpler version \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E but only if it doesn\u0027t cause problems with the limitation. I\u0027ll leave it up to those who know more about coding!\u003C/p\u003E\u003Cp\u003EGreat news on the progress!\u003C/p\u003E\u003Cp\u003EI now have my control board up and running but I\u0027m really starting to appreciate the limitations of the system I have used (an off the peg board designed for flightsims... don\u0027t ask me how much I could have saved building it myself - hindsight is a wonderful thing) - I frequently get tripped up by the switch positions not matching the game state, particularly if I switch ships, quickload etc.\u003C/p\u003E\u003Cp\u003EIt would be great if your plugin constantly checks the switch state and matches the game to it! For example If I load a game up and the RCS switch on my board is already set to \u0022ON\u0022 I\u0027d like the plugin to instantly read this state and turn the RCS on... without me having to touch the switch or reset its position. At present my board simply sends a keystroke pulse each time the switch is moved from one state to the other... ksp cant tell the difference between switching to \u0022ON\u0022 or switching to \u0022OFF\u0022 it simply toggles exactly the same for either.\u003C/p\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2014-02-16T02:03:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Mulbin\u0022 data-cite=\u0022Mulbin\u0022\u003E\u003Cdiv\u003EI like the sound of the simpler version \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E but only if it doesn\u0027t cause problems with the limitation. I\u0027ll leave it up to those who know more about coding!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOK that\u0027s one vote for the simple version and one vote for the efficient version. I think it will come down to how many axes and buttons you guys think you will need. For the simple version 1 button/switch is 1 byte and one analogue axis is 2 bytes. If you add it up and it\u0027s less than 255 then we can do the simple version. I think I will do a hybrid, i.e. map the common stuff (RCS, SAS, Gear, etc.) to 1 byte each and add a couple bytes at the end for other stuff. Like this: \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Estruct ControlPacket {\u003Cbr\u003Ebyte SAS;\u003Cbr\u003Ebyte RCS;\u003Cbr\u003E...\u003Cbr\u003Euint ControlGroup;  //control groups 1-10 in 2 bytes\u003Cbr\u003Ebyte AdditionalControlByte1;  //other stuff\u003Cbr\u003Ebyte AdditionalControlByte2;\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis way for simple stuff it\u0027s really easy, but if you want to control more things then some code is required.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Mulbin\u0022 data-cite=\u0022Mulbin\u0022\u003E\u003Cdiv\u003EIt would be great if your plugin constantly checks the switch state and matches the game to it! For example If I load a game up and the RCS switch on my board is already set to \u0022ON\u0022 I\u0027d like the plugin to instantly read this state and turn the RCS on... without me having to touch the switch or reset its position. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s what it should do.\u003C/p\u003E\n"},{"CreatedByName":"Mulbin","CreatedById":55562,"CreatedDateTime":"2014-02-16T11:32:57Z","Content":"\n\u003Cp\u003EI can\u0027t imagine needing more than 255 inputs... I\u0027m struggling to fill 25 with my current switch board. Is there anyway to increase the inputs with 2 arduinos on two com ports?... or would that need a reworking of the plugin... \u003C/p\u003E\u003Cp\u003EI think usability could be imporatant for those with less knowledge (like me) and would encourage more users to give hardware building a try!\u003C/p\u003E\u003Cp\u003EI like the idea of a hybrid! Allows for everyone \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"katton","CreatedById":97529,"CreatedDateTime":"2014-02-16T14:51:36Z","Content":"\n\u003Cp\u003EI was wondering - what happens to the control packet when a control panel doesn\u0027t actually have buttons for every function (and let\u0027s say for example you want SAS to be controlled normally). It seems like you\u0027d have to send a value for everything, or else have a different command packet structure for each control board. Or is there going to be some sort of config so define what the command struct will be? I guess that would be the easiest way?\u003C/p\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2014-02-16T16:47:12Z","Content":"\n\u003Cp\u003Ehmm... I didn\u0027t think about that. I was going to have a custom struct for each board but obviously that will require everyone to change the plugin code. I think the easiest way is to have a config file that allows you to to choose which commands and axes are enabled.\u003C/p\u003E\n"},{"CreatedByName":"Mulbin","CreatedById":55562,"CreatedDateTime":"2014-02-19T13:41:14Z","Content":"\n\u003Cp\u003EOk some more things I thought of for the outputs (I forgot about the science values within KSP)\u003C/p\u003E\u003Cp\u003ETemp\u003C/p\u003E\u003Cp\u003EAtmosphere\u003C/p\u003E\u003Cp\u003ESeismic \u003C/p\u003E\u003Cp\u003EGravity\u003C/p\u003E\u003Cp\u003Ealso will it be possible to set up custom inputs and outputs for custom resources? For example I use the TAC life support mod so would be great to have a gauge for O2. Or will these need to be defined within the plugin?\u003C/p\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2014-02-19T13:49:50Z","Content":"\n\u003Cp\u003ETemperature atmosphere and gravity I can do, atmosphere density is already included. These will output regardless whether you have instruments or not. I donno where seismic comes from. \u003C/p\u003E\u003Cp\u003EWorking with other plugins is possible but pretty low on the priorities right now, but it shouldn\u0027t be to difficult to define custom resources for output. I will just leave some generic variables free to be used for whatever.\u003C/p\u003E\n"},{"CreatedByName":"Mulbin","CreatedById":55562,"CreatedDateTime":"2014-02-19T14:12:15Z","Content":"\n\u003Cp\u003ESorry I meant acceleration - which is read by the Seismic Accelerometer stock part \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2014-02-23T02:04:18Z","Content":"\n\u003Cp\u003EFinally got it working! Please help test it before I put an update on the first post. As it turned out it was not an easy job!\u003C/p\u003E\u003Cp\u003EPlugin: \u003Ca href=\u0022https://sites.google.com/site/zitronfiles/KSPSerialIO_013.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://sites.google.com/site/zitronfiles/KSPSerialIO_013.zip\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EArduino Code: \u003Ca href=\u0022https://sites.google.com/site/zitronfiles/KSPIODemo2.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://sites.google.com/site/zitronfiles/KSPIODemo2.zip\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EAdd switches between pins 8 (SAS) and 9 (RCS) and ground to test.\u003C/p\u003E\u003Cp\u003EImportant changes: \u003C/p\u003E\u003Cp\u003E1. The plugin now detects the ports before flight instead of at main menu, so the first time you launch there will be a delay, but only the first launch. (This is because reasons)\u003C/p\u003E\u003Cp\u003E2. I decided to go with efficient packets, but also included an easy way to code it in arduino, you simply do \u0022MainControls(SAS, HIGH);\u0022 to turn on SAS, see the controls tab in the arduino code\u003C/p\u003E\u003Cp\u003E3. Currently only implemented RCS and SAS\u003C/p\u003E\u003Cp\u003E4. Arduino sends control packets at 40Hz, the plugin only does something when inputs change, so you can override switches with keyboard.\u003C/p\u003E\u003Cp\u003EI need to find out how to get the status of RCS, SAS, Lights, etc. from KSP.\u003C/p\u003E\n"},{"CreatedByName":"Katamari","CreatedById":38096,"CreatedDateTime":"2014-02-23T03:48:08Z","Content":"\n\u003Cp\u003EZitronen, I just wanted to say Thank you for making this. I love KSP and enjoy working with Arduinos and I am so glad there is now an easy way to interface between them that is only going to become better.\u003C/p\u003E\n"},{"CreatedByName":"Mulbin","CreatedById":55562,"CreatedDateTime":"2014-02-23T10:40:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022zitronen\u0022 data-cite=\u0022zitronen\u0022\u003E\u003Cdiv\u003EFinally got it working! Please help test it before I put an update on the first post. As it turned out it was not an easy job!\u003Cp\u003EPlugin: \u003Ca href=\u0022https://sites.google.com/site/zitronfiles/KSPSerialIO_013.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://sites.google.com/site/zitronfiles/KSPSerialIO_013.zip\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EArduino Code: \u003Ca href=\u0022https://sites.google.com/site/zitronfiles/KSPIODemo2.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://sites.google.com/site/zitronfiles/KSPIODemo2.zip\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EAdd switches between pins 8 (SAS) and 9 (RCS) and ground to test.\u003C/p\u003E\u003Cp\u003EImportant changes: \u003C/p\u003E\u003Cp\u003E1. The plugin now detects the ports before flight instead of at main menu, so the first time you launch there will be a delay, but only the first launch. (This is because reasons)\u003C/p\u003E\u003Cp\u003E2. I decided to go with efficient packets, but also included an easy way to code it in arduino, you simply do \u0022MainControls(SAS, HIGH);\u0022 to turn on SAS, see the controls tab in the arduino code\u003C/p\u003E\u003Cp\u003E3. Currently only implemented RCS and SAS\u003C/p\u003E\u003Cp\u003E4. Arduino sends control packets at 40Hz, the plugin only does something when inputs change, so you can override switches with keyboard.\u003C/p\u003E\u003Cp\u003EI need to find out how to get the status of RCS, SAS, Lights, etc. from KSP.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGreat! I\u0027ll wire my rcs and sas switch on my control panel tonight and test it out! Hopefully the port detection before the flight might fix the bug on some megas \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Mulbin","CreatedById":55562,"CreatedDateTime":"2014-02-23T18:14:34Z","Content":"\n\u003Cp\u003EOk first test run... and it didn\u0027t seem to do anything. Oddly though when the flight loaded in the SAS and RCS were both already on. Using the switches had no effect but I could turn sas and rcs on/off with the usual keyboard commands.\u003C/p\u003E\u003Cp\u003EMaking a clean install to test again.\u003C/p\u003E\u003Cp\u003EEDIT - forgot to mention I\u0027m testing on an official Arduino Uno, not a copy.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-23T18:21:37Z\u0022 title=\u002202/23/2014 06:21  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 23, 2014\u003C/time\u003E by Mulbin\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Mulbin","CreatedById":55562,"CreatedDateTime":"2014-02-23T18:18:11Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022zitronen\u0022 data-cite=\u0022zitronen\u0022\u003E\u003Cdiv\u003Ethe plugin only does something when inputs change, so you can override switches with keyboard.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDoesn\u0027t this mean it will go out of sync with your switches every time you quickload / dock / change ships etc? Or will you change it later... I thought the point was it constantly checked the state of the switches so you could trust the game to accurately reflect the control panel.\u003C/p\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2014-02-23T19:11:52Z","Content":"\n\u003Cp\u003EEvery time you load a scene it will sync with the arduino at the start, that\u0027s why your SAS was on. Every time you flip a switch the states are synced. \u003C/p\u003E\u003Cp\u003EAre you sure your switches are wired to ground? It needs to be PIN --\u0026gt; Switch --\u0026gt; Ground, not PIN --\u0026gt; Switch --\u0026gt; \u002B 5V.\u003C/p\u003E\n"}]}