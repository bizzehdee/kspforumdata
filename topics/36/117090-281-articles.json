{"TopicId":117090,"ForumId":36,"TopicTitle":"[WIP][1.8.x] SSTULabs - Low Part Count Solutions (Orbiters, Landers, Lifters) - Dev Thread [11-18-18]","CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2015-07-28T18:13:57Z","PageNum":281,"Articles":[{"CreatedByName":"Gibster","CreatedById":97634,"CreatedDateTime":"2017-10-18T15:59:59Z","Content":"\u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed1684606244\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/166629-mods-with-non-cylindrical-fuel-parts/\u0026do=embed\u0022 style=\u0022height:212px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\nHey I came here from this post and have to say, this is a nice looking mod you got here,  personally really interested in the fuel tanks. That said I do have a bit of a selfish question: Is it possible to isolate the fuel tank parts from the rest of the mod? I already have a few mods that add all the engines and command modules I need (Near Future Tech and Space Y) and I kind of want to keep less clutter in my parts list (and try not to overwhelm my computer). If not (at least if its not easy), its alright, I\u0027ll manage. Thanks!"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-10-18T16:21:45Z","Content":"Hmm... got the in-orbit reflections to include \u003Cabbr title=\u0022Environmental Visual Enhancement (mod)\u0022\u003EEVE\u003C/abbr\u003E clouds.  The solution, as are many in Unity, was to use \u0027MAOR SHADERS!!\u0027.  No, seriously, all I had to do was write a post-process shader to overwrite the alpha channel on the rendered cubemap, and suddenly all of Eves cloud problems went away (apparently the \u003Cabbr title=\u0022Environmental Visual Enhancement (mod)\u0022\u003EEVE\u003C/abbr\u003E shadow-shaders do wierd things and write 0\u0027s into the alpha channel when rendering).\n\n![9GsZwrs.png](https://i.imgur.com/9GsZwrs.png)\n\nAnd now that I\u0027ve spent all this time getting the shiny reflections working, I decided it was time to make them blurry (specular environment map convolution), which gives the proper \u0027not-quite-a-mirror\u0027 reflection properties to the chrome tank texture:\n\n![rabDKmR.png](https://i.imgur.com/rabDKmR.png)\n\nAnd which also gives very nice subtle effects like the \u0027colored ambient light\u0027 from the planet (who needs planetshine?):\n\n![gTxFcIG.png](https://i.imgur.com/gTxFcIG.png)\n\n(nom, nom... such tasty shading...)\n\nGetting closer.  A bit more work on it and I\u0027m going to call the solution \u0027working\u0027; nearly all of the initial problems have been solved in one fashion or another.\n\nThe next set of issues that I\u0027ll be tackling is proper specular convolution of the cubemap (currently its a giant hack).  I\u0027m really not sure how Unity does it -- supposedly it uses the GPU, but compute shaders aren\u0027t available on all platforms, so even that must be some sort of hack (convoluting to 6x render texture outputs, one per side, and recompositing back into a cubemap?). \n\nMy options are:\n\n- CPU based convolution, which will be slow (scene must be rendered, sent from GPU to CPU, processed, and uploaded back to GPU).\n- GPU based convolution, which would be much like posted above -- use a shader and process each face of the cube as a separate output rendertexture, and combining those back into a full cube-map.\n- Evolution of the current hack that I\u0027m using -- render into a RenderTexture-Cubemap, assign that texture/material to an object/skybox, and let the ReflectionProbe capture -that- reflection and do the convolution internally.\n\nNone are ideal or fast, but one or the other will be necessary."},{"CreatedByName":"Jimbodiah","CreatedById":152759,"CreatedDateTime":"2017-10-18T17:05:07Z","Content":"Send it to the GPU, less lag on the game (moar cpu loading) that way which is already pushing it in some cases. My GPU at the moment is wondering if it needs to go into sleep mode, it\u0027s not being used much by KSP."},{"CreatedByName":"Theysen","CreatedById":144656,"CreatedDateTime":"2017-10-18T17:18:17Z","Content":"\u003E \n\u003E \n\u003E 8 minutes ago, Jimbodiah said:\n\u003E \n\u003E \n\u003E Send it to the GPU, less lag on the game (moar cpu loading) that way which is already pushing it in some cases. My GPU at the moment is wondering if it needs to go into sleep mode, it\u0027s not being used much by KSP.\n\u003E \n\nI melt as soon as I have scatterer installed. my game dies fps wise. I can\u2019t actually tell you if it\u2019s gpu or cpu bound to the point where I neglect installing it. \n\nId prefer the hack."},{"CreatedByName":"gmiddlemass","CreatedById":111037,"CreatedDateTime":"2017-10-18T18:23:54Z","Content":"\u003E \n\u003E \n\u003E 1 hour ago, Jimbodiah said:\n\u003E \n\u003E \n\u003E Send it to the GPU, less lag on the game (moar cpu loading) that way which is already pushing it in some cases. My GPU at the moment is wondering if it needs to go into sleep mode, it\u0027s not being used much by KSP.\n\u003E \n\nI have to side with Jimbodiah on this one. I think generally the GPU isn\u0027t doing much at all with Kerbal whereas the CPU is reasonably loaded already with the game physics."},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-10-18T18:27:52Z","Content":"\u003E \n\u003E \n\u003E 1 hour ago, Gibster said:\n\u003E \n\u003E \n\u003E \u003Ciframe allowfullscreen=\u0022\u0022 data-controller=\u0022core.front.core.autosizeiframe\u0022 data-embedcontent=\u0022\u0022 data-embedid=\u0022embed3731728131\u0022 scrolling=\u0022no\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/166629-mods-with-non-cylindrical-fuel-parts/\u0026do=embed\u0022 style=\u0022height:212px;max-width:502px;\u0022\u003E\u003C/iframe\u003E\n\u003E \n\u003E \n\u003E Hey I came here from this post and have to say, this is a nice looking mod you got here,  personally really interested in the fuel tanks. That said I do have a bit of a selfish question: Is it possible to isolate the fuel tank parts from the rest of the mod? I already have a few mods that add all the engines and command modules I need (Near Future Tech and Space Y) and I kind of want to keep less clutter in my parts list (and try not to overwhelm my computer). If not (at least if its not easy), its alright, I\u0027ll manage. Thanks!\n\u003E \n\nPossible -- absolutely.  Easy -- very much not.\n\nThere is so much inter-linking of the models/configs/textures that trying to trim down the install is not easy.  The basics of it are to keep the part configs from SSTU/Parts/ShipCore/Tanks, keep all of the models that are used (SC-TANK-XXXX), as well as their textures.  You\u0027ll also need all of the models for the adapters that are used in the tanks (many and various), as well as their textures and texture-set configs.  Trying to find each specific model, config file, and texture needed would be... difficult (WTB KSP-config-node IDE where I can go \u0027show references\u0027....).\n\nThankfully one of SSTU\u0027s biggest \u0027selling points\u0027 is part-list-clutter reduction (or at least I would like to think so).  About the only thing that might seem cluttered from SSTU parts would be the engines, and even then there is quite a bit of built-in clutter reduction (via the built-in clustering and mount selection options).  I would say to give the full install a try -- you might just find yourself not needing some of those other mods anymore (or trimming their parts rather than SSTU\u0027s).  I\u0027ve never used Space-Y, but I know that I stopped even installing KW-Rocketry quite awhile back.  NearFuture is still quite useful for the electric propulsion options, but I\u0027ve never tried out the lifters pack (cryo engines are mostly unneccessary with SSTUs HLOX selection).\n\nIn development news:\n\n-Finally- found how to access a Cubemap-RenderTexture\u0027s alternate cube faces.  Only took the past 3 days of searching, to find a function call so buried in Unity documentation that it would be surprising if anyone else ever legitimately found it.\n\nSo now I can actually implement GPU based cubemap convolution.  After I learn how to implement it ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif \u0022:)\u0022)  (have all of the tools, just need to learn and write the functions).  Thankfully I\u0027ve also been stashing links on the implementations that I\u0027ve ran into over the past days of research, so I\u0027m sure I\u0027ll be able to get something working.\n\nAlso got my \u0027hack\u0027 cleaned up quite a bit in case I need to use that method.  Render the scenery into a basic cubemap (no convolution/MIPs), apply that cube-map to a sphere using a special unlit/skybox shader, set the sphere to an otherwise unused/unrendered layer, and set the reflection probe to capture only that layer.  The probe then captures the interior of that sphere as if it were the actual surroundings and runs it internal convolution code to spit out the proper MIP-mapped cubemap to use for PBR reflections."},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-10-18T18:44:54Z","Content":"\u003E \n\u003E \n\u003E 2 hours ago, Jimbodiah said:\n\u003E \n\u003E \n\u003E Send it to the GPU, less lag on the game (moar cpu loading) that way which is already pushing it in some cases. My GPU at the moment is wondering if it needs to go into sleep mode, it\u0027s not being used much by KSP.\n\u003E \n\n\u003E \n\u003E \n\u003E 2 hours ago, Theysen said:\n\u003E \n\u003E \n\u003E I melt as soon as I have scatterer installed. my game dies fps wise. I can\u2019t actually tell you if it\u2019s gpu or cpu bound to the point where I neglect installing it. \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E Id prefer the hack.\n\u003E \n\n\u003E \n\u003E \n\u003E 1 hour ago, gmiddlemass said:\n\u003E \n\u003E \n\u003E I have to side with Jimbodiah on this one. I think generally the GPU isn\u0027t doing much at all with Kerbal whereas the CPU is reasonably loaded already with the game physics.\n\u003E \n\nI\u0027ll see what I can do about including some options for different update paths. \n\n- The GPU-based solution will be -much- faster, even on older hardware (potentially up-to realtime).\n- The CPU-based solution would severely limit the update frequency -- would only update the probes once per second / every few seconds.\n- The hack-based solution would also use the GPU based setup, but it would be Unity\u0027s internal GPU setup, so I would have no control over quality / speed / etc.  It also is far-from-optimal as the reflection needs to be rendered twice (first by me into the \u0027skybox\u0027 sphere, a second time by the reflection-probe into the reflection map).  The reflection-probes internal render/capture should be fairly quick as it is only capturing a single simple sphere object, but it is still an extra step that needs to be taken.\n\nIn order of what I\u0027ll be investigating will be hack first (as it is far simpler to implement; development time is important...), then the GPU solution (more optimal), and finally a CPU solution.\n\nOne thing that I should mention is that I\u0027ll be including options for update frequency, including an \u0027only update once\u0027 (or use pre-baked maps) setting for performance-limited setups.  The reflections wouldn\u0027t be \u0027proper\u0027, but for most (non-mirror) materials, -any- reflection is good enough for much improved visuals compared to legacy KSP shading.\n\n**Edited \u003Ctime datetime=\u00222017-10-18T19:55:54Z\u0022 title=\u002210/18/2017 07:55  PM\u0022 data-short=\u00226 yr\u0022\u003EOctober 18, 2017\u003C/time\u003E by Shadowmage**"},{"CreatedByName":"gmiddlemass","CreatedById":111037,"CreatedDateTime":"2017-10-18T18:45:44Z","Content":"\u003E \n\u003E \n\u003E 5 minutes ago, Shadowmage said:\n\u003E \n\u003E \n\u003E give the full install a try -- you might just find yourself not needing some of those other mods anymore (or trimming their parts rather than SSTU\u0027s).\n\u003E \n\nThis is exactly what I do now.\n\nSSTU has totally spoiled  me and I find myself trying to trim more and more parts from my install with each SSTU update, hopefully the Dragon capsules will be added soon (pretty please ![:D](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif \u0022:D\u0022)) and that will be another load of parts that can be trimmed back. Presently I\u0027m using the [Kerbalized Spacex](https://forum.kerbalspaceprogram.com/index.php?/topic/162949-kerbalized-spacex-wip/\u0026tab=comments#comment-3112773) mod for the capsules (which seems to fit well with SSTU when rescaled down in size) but I just can\u0027t wait for the flexibility and look of the SSTU versions when they arrive.\n\nMost of the other mods I use now are for visuals or gameplay \u0022quality of life\u0022 enhancements rather than parts."},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-10-19T04:10:04Z","Content":"Initial performance testing (on desktop), using 54 identical tanks sitting on the launchpad, each around ~7k tris (~375k tris in the scene in the tanks alone).  All render settings at max, v-sync and frame cap off, 8x AA.  128x128x128 environment map.  \u003Cabbr title=\u0022Environmental Visual Enhancement (mod)\u0022\u003EEVE\u003C/abbr\u003E and scatterer disabled.\n\nSSTU/Masked Shader = 179 fps  \n\nSSTU/Standard Shader (no reflection update) = 175 fps  \n\nSSTU/Standard Shader (60 frame interval update) = 174fps  \n\nSSTU/Standard Shader (near realtime update, 1 face per frame) = 156fps\n\nWill do some more serious performance testing on a few different machines to see how it handles on lower spec / older hardware, including a round of testing with Eve/scatterer installed.\n\nSo yes, there are performance differences between the PBR shader and the classic shaders, which was to be expected.  It is however quite minor on the system used for testing (~2.5% of fps), and a very acceptable trade-off for the improved lighting.  The reflection updates however can be far more costly, but that was to be expected.  The reflection cost can also be reduced substantially if updated incrementally and/or in larger intervals.\n\nCurrently the update speed is tied to frame-rate; lower FPS situations will naturally update the reflections slower so that they don\u0027t bog things down even further.  Will also investigate a purely time-based solution, as well as a time \u002B altitude \u002B velocity solution (intelligent updates; no need to update often when sitting still or you know the scenery won\u0027t change much).\n\nOne final thing to note on the subject -- I can make the entire PBR system optional and run alongside the existing textures and shaders.  The new textures can be treated as additional texture sets for the parts, and the existing texture-set code used for everything already supports switching shaders and assigning arbitrary shader property values and texture names.  Could even offer the entire thing as an optional download/expansion pack.\n\nThe refined hack is working very well so far (refl probe inside a sphere with the raw cubemap).  Allows me to control the layered rendering, but still take advantage of the reflection probes gpu-based convolution (which I really didn\u0027t want to write).  Certainly not the most efficient, but if updates are kept to a minimum it should be acceptable (hopefully just until a more proper solution can be found).\n\nMore glamour shots -- these aren\u0027t renders, but in-game screenshots.  I actually enabled in-flight switching on the texture-switch module so I could do this sort of testing.\n\n![4LUapHr.png](https://i.imgur.com/4LUapHr.png)![6FQECwN.png](https://i.imgur.com/6FQECwN.png)\n\n![Drbp5zO.png](https://i.imgur.com/Drbp5zO.png)![BGb8yqe.png](https://i.imgur.com/BGb8yqe.png)\n\nBonus - Eve orbit, showing the natural colored ambient light handling\n\n![vq5lJqz.png](https://i.imgur.com/vq5lJqz.png)\n\n2nd Bonus - Dark side of Laythe, showing a bit of half-lit Jool in reflection\n\n![HDapZjT.png](https://i.imgur.com/HDapZjT.png)\n\nSeems likely that I\u0027ll be putting out a testing release for the new shader(s) sometime this weekend.  Everything is working well in testing so far, and I would say the visuals are exceptional.  The initial test release will only contain the single non-functional part and will serve for compatibility testing purposes only -- need to ensure that the features that I\u0027m using are widely supported, especially across OS and graphics APIs.\n\nThe next bit of development work that will be done on this feature will likely be trying out a few more models and textures/materials.  Would be nice to see what a full rocket would look like.... or possibly a lander?  Also considering the PBR assets from the PorkJet reworked 1.25m parts for some quick additional testing parts/models.  Now that I\u0027ve determined it is doable, I need to determine if it is viable and worthwhile.  I have a feeling it will look a bit out of place in a stock game, but would fit in very well with the full eve/scatterer/sve/svt/realplume setup."},{"CreatedByName":"vossiewulf","CreatedById":179033,"CreatedDateTime":"2017-10-19T04:57:40Z","Content":"\u003E \n\u003E \n\u003E 12 hours ago, Shadowmage said:\n\u003E \n\u003E \n\u003E My options are:\n\u003E \n\u003E \n\u003E \n\u003E - CPU based convolution, which will be slow (scene must be rendered, sent from GPU to CPU, processed, and uploaded back to GPU).\n\u003E - GPU based convolution, which would be much like posted above -- use a shader and process each face of the cube as a separate output rendertexture, and combining those back into a full cube-map.\n\u003E - Evolution of the current hack that I\u0027m using -- render into a RenderTexture-Cubemap, assign that texture/material to an object/skybox, and let the ReflectionProbe capture -that- reflection and do the convolution internally.\n\u003E \n\u003E \n\u003E \n\u003E None are ideal or fast, but one or the other will be necessary.\n\u003E \n\nOne thing I\u0027m pretty sure of and that is this game needs no help loading the CPU, while the GPU is mostly hanging out down at the pool and drinking mojitos."},{"CreatedByName":"vossiewulf","CreatedById":179033,"CreatedDateTime":"2017-10-20T03:32:19Z","Content":"And it looks better by the day. I suggest you play with generators in SP and see if you can bring across the procedural subtle surface modifications you can get with ripples that are correct for riveted aluminum and scratches at least, but also the various grunge generators designed to work in recesses and the ones for paint dings.\n\nI also think you should look at the camo-pattern generation generators, not that you would use them as is but to see how they work; unfortunately that would require Substance Designer, just remembered that. The reason is that from my own looks those generators can be quite powerful in generating patterns and multiple color versions of patterns, but are also straightforward enough that you don\u0027t need to get out your textbook on the physics of electromagnetism to understand. I have a feeling you\u0027d figure it out fairly quickly and it could be another powerful tool for you in generating textures, although maximum utility would probably involve going bitmap over your procedural recoloring.\n\nAlso, crashes continue for me entering or exiting the \u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E, and didn\u0027t even get logs last several times, even though overall log much much cleaner now. I finally got a log with this last crash, there are two sets of exceptions, one is JSI/RPM and the other is where Ferram apparently doesn\u0027t like some of your procedural object modification tools and it fails trying to build its own mesh of some kind. I\u0027m still 1.30 with KSP and SSTU and Ferram. \n\nSpoiler\n\n[MechJeb2] Loading Mechjeb 2.6.1  \n\n(Filename: C:/buildslave/unity/build/artifacts/generated/common/runtime/UnityEngineDebugBindings.gen.cpp Line: 42)\n\nNullReferenceException: Object reference not set to an instance of an object  \n\n  at FerramAerospaceResearch.FARPartGeometry.GeometryPartModule.RebuildAllMeshData () [0x00000] in \u003Cfilename unknown=\u0022\u0022\u003E:0 \u003Cbr\u003E\n  at FerramAerospaceResearch.FARPartGeometry.GeometryPartModule.GeometryPartModuleRebuildMeshData () [0x00000] in \u003Cfilename unknown=\u0022\u0022\u003E:0 \u003Cbr\u003E\nUnityEngine.Component:SendMessage(String, Object, SendMessageOptions)\u003Cbr\u003E\nUnityEngine.Component:SendMessage(String)\u003Cbr\u003E\nSSTUTools.SSTUModInterop:onPartGeometryUpdate(Part, Boolean)\u003Cbr\u003E\nSSTUTools.SSTUModularFuelTank:updateModels()\u003Cbr\u003E\nSSTUTools.SSTUModularFuelTank:initialize()\u003Cbr\u003E\nSSTUTools.SSTUModularFuelTank:OnLoad(ConfigNode)\u003Cbr\u003E\nPartModule:Load(ConfigNode)\u003Cbr\u003E\nPart:LoadModule(ConfigNode, Int32\u0026)\u003Cbr\u003E\nShipConstruct:LoadShip(ConfigNode)\u003Cbr\u003E\nShipConstruction:LoadShip(String)\u003Cbr\u003E\nFlightDriver:Start()\u003Cbr\u003E\n \u003Cbr\u003E\n(Filename:  Line: -1)\n\u003C/filename\u003E\u003C/filename\u003E\n\nNullReferenceException: Object reference not set to an instance of an object  \n\n  at FerramAerospaceResearch.FARPartGeometry.GeometryPartModule.RebuildAllMeshData () [0x00000] in \u003Cfilename unknown=\u0022\u0022\u003E:0 \u003Cbr\u003E\n  at FerramAerospaceResearch.FARPartGeometry.GeometryPartModule.GeometryPartModuleRebuildMeshData () [0x00000] in \u003Cfilename unknown=\u0022\u0022\u003E:0 \u003Cbr\u003E\nUnityEngine.Component:SendMessage(String, Object, SendMessageOptions)\u003Cbr\u003E\nUnityEngine.Component:SendMessage(String)\u003Cbr\u003E\nSSTUTools.SSTUModInterop:onPartGeometryUpdate(Part, Boolean)\u003Cbr\u003E\nSSTUTools.SSTUModularEngineCluster:initialize()\u003Cbr\u003E\nSSTUTools.SSTUModularEngineCluster:OnLoad(ConfigNode)\u003Cbr\u003E\nPartModule:Load(ConfigNode)\u003Cbr\u003E\nPart:LoadModule(ConfigNode, Int32\u0026)\u003Cbr\u003E\nShipConstruct:LoadShip(ConfigNode)\u003Cbr\u003E\nShipConstruction:LoadShip(String)\u003Cbr\u003E\nFlightDriver:Start()\u003Cbr\u003E\n \u003Cbr\u003E\n(Filename:  Line: -1)\n\u003C/filename\u003E\u003C/filename\u003E\n\nNullReferenceException: Object reference not set to an instance of an object  \n\n  at FerramAerospaceResearch.FARPartGeometry.GeometryPartModule.RebuildAllMeshData () [0x00000] in \u003Cfilename unknown=\u0022\u0022\u003E:0 \u003Cbr\u003E\n  at FerramAerospaceResearch.FARPartGeometry.GeometryPartModule.GeometryPartModuleRebuildMeshData () [0x00000] in \u003Cfilename unknown=\u0022\u0022\u003E:0 \u003Cbr\u003E\nUnityEngine.Component:SendMessage(String, Object, SendMessageOptions)\u003Cbr\u003E\nUnityEngine.Component:SendMessage(String)\u003Cbr\u003E\nSSTUTools.SSTUModInterop:onPartGeometryUpdate(Part, Boolean)\u003Cbr\u003E\nSSTUTools.SSTUModularFuelTank:updateModels()\u003Cbr\u003E\nSSTUTools.SSTUModularFuelTank:initialize()\u003Cbr\u003E\nSSTUTools.SSTUModularFuelTank:OnLoad(ConfigNode)\u003Cbr\u003E\nPartModule:Load(ConfigNode)\u003Cbr\u003E\nPart:LoadModule(ConfigNode, Int32\u0026)\u003Cbr\u003E\nShipConstruct:LoadShip(ConfigNode)\u003Cbr\u003E\nShipConstruction:LoadShip(String)\u003Cbr\u003E\nFlightDriver:Start()\u003Cbr\u003E\n \u003Cbr\u003E\n(Filename:  Line: -1)\n\u003C/filename\u003E\u003C/filename\u003E\n\nNullReferenceException: Object reference not set to an instance of an object  \n\n  at FerramAerospaceResearch.FARPartGeometry.GeometryPartModule.RebuildAllMeshData () [0x00000] in \u003Cfilename unknown=\u0022\u0022\u003E:0 \u003Cbr\u003E\n  at FerramAerospaceResearch.FARPartGeometry.GeometryPartModule.GeometryPartModuleRebuildMeshData () [0x00000] in \u003Cfilename unknown=\u0022\u0022\u003E:0 \u003Cbr\u003E\nUnityEngine.Component:SendMessage(String, Object, SendMessageOptions)\u003Cbr\u003E\nUnityEngine.Component:SendMessage(String)\u003Cbr\u003E\nSSTUTools.SSTUModInterop:onPartGeometryUpdate(Part, Boolean)\u003Cbr\u003E\nSSTUTools.SSTUModularEngineCluster:initialize()\u003Cbr\u003E\nSSTUTools.SSTUModularEngineCluster:OnLoad(ConfigNode)\u003Cbr\u003E\nPartModule:Load(ConfigNode)\u003Cbr\u003E\nPart:LoadModule(ConfigNode, Int32\u0026)\u003Cbr\u003E\nShipConstruct:LoadShip(ConfigNode)\u003Cbr\u003E\nShipConstruction:LoadShip(String)\u003Cbr\u003E\nFlightDriver:Start()\u003Cbr\u003E\n \u003Cbr\u003E\n(Filename:  Line: -1)\n\u003C/filename\u003E\u003C/filename\u003E\n\nAlso going to ask in the RPM thread, not sure which of these, if either, are involved with the crashes. It may be something else I guess, but these are the only exceptions I see now."},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-10-20T05:12:17Z","Content":"![ur8F6ED.png](https://i.imgur.com/ur8F6ED.png)\n\n![ItKch5q.png](https://i.imgur.com/ItKch5q.png)\n\nCM is a WIP.  SM is partially converted from existing textures.  Figured out that I could easily extract the existing details from my textures and use them as masks in SP to speed up the process of reworking additional sets.\n\nSadly I found out that certain high-metallic materials have problems under dx9 due to ??  that causes seams in the blurred/mipped reflection probe textures.  DX11 looks great though (SS above..).  OpenGL seems fine as well.  I guess I finally have a reason to use dx11?\n\n\u003E \n\u003E \n\u003E 1 hour ago, vossiewulf said:\n\u003E \n\u003E \n\u003E and the other is where Ferram apparently doesn\u0027t like some of your procedural object modification tools and it fails trying to build its own mesh of some kind. I\u0027m still 1.30 with KSP and SSTU and Ferram.\n\u003E \n\nPlease open an issue ticket on that (otherwise I\u0027ll forget about it as I already have a few times=\\);  I recently had to fix a similar issue in KSPWheel.  The solution is \u0027simple\u0027, delay \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E updates until Start();  changing all of the places it is used might take some doing though.\n\nThis ^^^ could be causing quite a few other problems with parts, as it is crashing out halfway during initialization (but Unity/KSP still calls the update methods on them afterwards; yuck)."},{"CreatedByName":"vossiewulf","CreatedById":179033,"CreatedDateTime":"2017-10-20T11:09:52Z","Content":"Latest screenshots are like I said, it looks better every day ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif \u0022:)\u0022) Also [#585](https://github.com/shadowmage45/SSTULabs/issues/585). Also also, I like that you\u0027ve already started documenting the shader work on the wiki. Hopefully it can be made easy enough for most of the major part mods to make use of it, would increase the visual quality of KSP so much you\u0027ll get a triple length extra double super special episode of KSP mods where Scott Manley asks if he can marry you.\n\n**Edited \u003Ctime datetime=\u00222017-10-20T11:29:18Z\u0022 title=\u002210/20/2017 11:29  AM\u0022 data-short=\u00226 yr\u0022\u003EOctober 20, 2017\u003C/time\u003E by vossiewulf**"},{"CreatedByName":"Jimbodiah","CreatedById":152759,"CreatedDateTime":"2017-10-20T16:07:28Z","Content":"Oh, shiny! Me want shiny!!!!"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-10-20T18:13:52Z","Content":"\u003E \n\u003E \n\u003E 13 hours ago, vossiewulf said:\n\u003E \n\u003E \n\u003E And it looks better by the day. I suggest you play with generators in SP and see if you can bring across the procedural subtle surface modifications you can get with ripples that are correct for riveted aluminum and scratches at least, but also the various grunge generators designed to work in recesses and the ones for paint dings.\n\u003E \n\nYeah, certainly still some improvements that can be made to the textures.  For now I\u0027m concentrating on getting the rendering bits all sorted out -- the textures are good enough for that.  Seems like I\u0027ve nearly got it worked out though, so this next week will be more modeling work on the reworked LC fuel tanks (they are nowhere near finished), and additional texture-work / learning of SP while adapting some existing models/textures.\n\n\u003E \n\u003E \n\u003E 13 hours ago, vossiewulf said:\n\u003E \n\u003E \n\u003E I also think you should look at the camo-pattern generation generators, not that you would use them as is but to see how they work; unfortunately that would require Substance Designer, just remembered that. The reason is that from my own looks those generators can be quite powerful in generating patterns and multiple color versions of patterns, but are also straightforward enough that you don\u0027t need to get out your textbook on the physics of electromagnetism to understand. I have a feeling you\u0027d figure it out fairly quickly and it could be another powerful tool for you in generating textures, although maximum utility would probably involve going bitmap over your procedural recoloring.\n\u003E \n\nHeh, I\u0027ve been getting the feeling that I\u0027m going to need SD in order to get the most use out of this system.   I\u0027ve got a good head for technical work, and am already familiar with a vast array of noise functions and procedural generation techniques (having implemented many myself over the years), but it would be one more license to pick up, and more time needed to create the new substances/effects/etc.\n\nUsing the textures/materials/effects created by others is fine (and the work well for the most part), but you are limited to what is available.  Things that I would consider simple like a \u0027radial tile generator\u0027 (for generating the tile pattern on a pod heat shield) are... missing?  Seems like I\u0027ll still be having to do work in GIMP to create the masks to feed into the existing SP generators/filters.\n\n\u003E \n\u003E \n\u003E 1 hour ago, Jimbodiah said:\n\u003E \n\u003E \n\u003E Oh, shiny! Me want shiny!!!!\n\u003E \n\n![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif \u0022:)\u0022)   That is only the beginning....\n\nI should note that just because I have a PBR shader doesn\u0027t mean my texturing (or modeling) skills will get any better (SP will help... but I simply don\u0027t have a head for \u0027art\u0027).  I also don\u0027t (currently) intend on changing my texture style much on the PBR sets -- textures will still be fairly \u0027plain\u0027 and simple, with noise/etc mostly being used to generate surface detail.  I probably won\u0027t be adding very much scratches/rust/wear/weathering as I feel it simply doesn\u0027t belong on parts that are supposed to be \u0027new, right from the manufacturer\u0027.  One thing that might change would be the addition of more texture-based surface details (greeble) to some models/textures (paneling lines, ports, vents and whatnot) -- with the ability to paint things in model-space (and using generators to help doing so), doing these becomes so much simpler.  Not going for \u0027photo-realistic\u0027, but more aiming for a look of \u0027a very well done scale model\u0027.\n\nFor this weekends\u0027 \u0027testing\u0027 release I\u0027m working on getting a mostly full Saturn-V stack to be usable with (basic/simple) PBR textures sets.  F1, J2, AJ10-137, MFT, ISDC, IPA, SC-B-CM/SM/BPC.  CM and SM are started, BPC/ISDC/IPA will be quick, MFT shouldn\u0027t be too hard either -- its really the engines that might take awhile.  Initial testing setup for PBR textures will not support recoloring as I have not yet developed that feature in the new shader -- want to make sure everything else is working first before I start mucking about with its internals."},{"CreatedByName":"Jimbodiah","CreatedById":152759,"CreatedDateTime":"2017-10-20T19:16:55Z","Content":"Gold plated engines for the win!\n\nReally looking forward to seeing how this looks. My dreams of a completely golden Saturn is within reach!"},{"CreatedByName":"Temeter","CreatedById":58056,"CreatedDateTime":"2017-10-20T20:39:13Z","Content":"\u003E \n\u003E \n\u003E 2 hours ago, Shadowmage said:\n\u003E \n\u003E \n\u003E For this weekends\u0027 \u0027testing\u0027 release I\u0027m working on getting a mostly full Saturn-V stack to be usable with (basic/simple) PBR textures sets.  F1, J2, AJ10-137, MFT, ISDC, IPA, SC-B-CM/SM/BPC.  CM and SM are started, BPC/ISDC/IPA will be quick, MFT shouldn\u0027t be too hard either -- its really the engines that might take awhile.  Initial testing setup for PBR textures will not support recoloring as I have not yet developed that feature in the new shader -- want to make sure everything else is working first before I start mucking about with its internals.\n\u003E \n\n![:o](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/ZNGIcon2.png \u0022:o\u0022) \u003C3 \u003C3 \u003C3"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2017-10-20T21:48:27Z","Content":"Today has seen a bit of plugin/code work (cleanup some \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E incompatibilities hopefully), as well as a bit of getting back to work on the LC fuel tank geometry (as the stuff used for testing the shader is far from finished).\n\nThe major changes were to finalize my decision on an 8-tank layout, finalize my decision to get rid of external bracing, work on some fuel lines/routing, and some poly reduction in the fuel tanks themselves (down from 8k \u003E 6k tris, even with fuel lines).\n\nBasic tank:\n\n![oFySyIY.png](https://i.imgur.com/oFySyIY.png)\n\nAnd with all braces for the standard circular-interface adapter (including fuel lines that match up with the existing MFT and engine mount tank caps):\n\n![2y0GCta.png](https://i.imgur.com/2y0GCta.png)\n\nBasic hollow variant:\n\n![qlZE5vc.png](https://i.imgur.com/qlZE5vc.png)\n\nCapped hollow variant (hollow attach plate, for engines/legs/whatnot) (might bevel the edges on the exterior of the top/bottom caps a bit)\n\n![YgDcPRL.png](https://i.imgur.com/YgDcPRL.png)\n\nPaneled hollow variant:\n\n![FUECHXQ.png](https://i.imgur.com/FUECHXQ.png)\n\nThe geometry for all of these is -nearly- finished.  Some bits to cleanup, but that is basically it (mostly fuel line stuff); I don\u0027t think I\u0027ll be adding too much new geometry beyond some small weld-points/endcaps where the braces converge."},{"CreatedByName":"Sudragon","CreatedById":53192,"CreatedDateTime":"2017-10-20T21:53:05Z","Content":"This...this is *most excellent.*"},{"CreatedByName":"vossiewulf","CreatedById":179033,"CreatedDateTime":"2017-10-20T23:45:14Z","Content":"\u003E \n\u003E \n\u003E 5 hours ago, Shadowmage said:\n\u003E \n\u003E \n\u003E Using the textures/materials/effects created by others is fine (and the work well for the most part), but you are limited to what is available.  Things that I would consider simple like a \u0027radial tile generator\u0027 (for generating the tile pattern on a pod heat shield) are... missing?  Seems like I\u0027ll still be having to do work in GIMP to create the masks to feed into the existing SP generators/filters.\n\u003E \n\nYeah there are excellent free things available, and some odd gaps still. However you could do it pretty quickly non-procedurally, just cover whole thing in ablative material, add a new layer and do your panel lines with circular line brush stamps and straight lines, mask it and give the panel lines a darken/color burn filter and a procedural dust set to very dark. You think considerably more procedurally than the average artist does, or at least your case requires you to do so.\n\nCreating a full generator for it would certainly make future variations a breeze, but not sure if it\u0027s worth the effort unless you know you can port the actual procedural generation logic compiled into a .sbr to KSP. If that\u0027s the case then buy SD tomorrow as you could solve many procedural issues that way.\n\n\u003E \n\u003E \n\u003E 5 hours ago, Shadowmage said:\n\u003E \n\u003E \n\u003E I should note that just because I have a PBR shader doesn\u0027t mean my texturing (or modeling) skills will get any better (SP will help... but I simply don\u0027t have a head for \u0027art\u0027).  I also don\u0027t (currently) intend on changing my texture style much on the PBR sets -- textures will still be fairly \u0027plain\u0027 and simple, with noise/etc mostly being used to generate surface detail.  I probably won\u0027t be adding very much scratches/rust/wear/weathering as I feel it simply doesn\u0027t belong on parts that are supposed to be \u0027new, right from the manufacturer\u0027.  One thing that might change would be the addition of more texture-based surface details (greeble) to some models/textures (paneling lines, ports, vents and whatnot) -- with the ability to paint things in model-space (and using generators to help doing so), doing these becomes so much simpler.  Not going for \u0027photo-realistic\u0027, but more aiming for a look of \u0027a very well done scale model\u0027.\n\u003E \n\nYour textures are clean, I don\u0027t see any much better in the game.\n\nWeathering - yes you do want to use them and learn how to use them. You won\u0027t, of course, use them to the level I did for giant metal robots running at speed cross country, but there is no such thing as a perfectly clean surface unless someone washed it literally 60 seconds ago. Anything that\u0027s been in the sun for any length of time will start to see differences in value between the high spots with high ambient access and the low spots that don\u0027t get as much light. And I\u0027d be willing to bet that even the Apollo 11 Saturn V had a few chips of paint from the large movements induced by huge thermal gradients and pressurizing/unpressurizing tanks. All of these subtle things add much more realism than you\u0027d first think.\n\nSo learn them, they\u0027re easy to use once you do. Experiment with subtle, understated wear and dust and paint dings. I\u0027m sure you\u0027ll think the result was worth the effort.\n\nGreeble/details, yes look at the hard surface normal stamps. Go download more. You can very quickly add all sorts of panels and lines and raised areas just stamping them into the normal map and that keeps your geometry light and poly count low."},{"CreatedByName":"tater","CreatedById":119411,"CreatedDateTime":"2017-10-21T04:37:45Z","Content":"With the exception of reusable craft, there is no weathering to speak of, every flight is the first and only flight of most spacecraft, so I\u0027m not keen on weathering in many cases. \n\nUnrelated, but I found this image of the ATK Liberty capsule interesting (composite competitor to Orion):\n\n![atk_liberty_llm01-lg.jpg](http://www.collectspace.com/review/atk_liberty_llm01-lg.jpg)"},{"CreatedByName":"vossiewulf","CreatedById":179033,"CreatedDateTime":"2017-10-21T05:17:16Z","Content":"Click for full size.\n\n[![c4j4fBIl.jpg](http://i.imgur.com/c4j4fBIl.jpg)](https://imgur.com/c4j4fBI)"},{"CreatedByName":"Temeter","CreatedById":58056,"CreatedDateTime":"2017-10-21T16:47:54Z","Content":"That\u0027s the picture that really made me want reflections in KSP. Didn\u0027t actually think it would happen^^"},{"CreatedByName":"Jimbodiah","CreatedById":152759,"CreatedDateTime":"2017-10-21T17:22:13Z","Content":"FASA used to have a reflections plugin that was used on their Apollo version, but it got borked in KSP 1.1 or 1.2 I think.\n\n**Edited \u003Ctime datetime=\u00222017-10-21T17:22:47Z\u0022 title=\u002210/21/2017 05:22  PM\u0022 data-short=\u00226 yr\u0022\u003EOctober 21, 2017\u003C/time\u003E by Jimbodiah**"},{"CreatedByName":"Theysen","CreatedById":144656,"CreatedDateTime":"2017-10-21T17:31:06Z","Content":"\u003E \n\u003E \n\u003E 7 minutes ago, Jimbodiah said:\n\u003E \n\u003E \n\u003E FASA used to have a reflections plugin that was used on their Apollo version, but it got borked in KSP 1.1 or 1.2 I think.\n\u003E \n\nRaidernick preserved e.g. the reflection on agena and Apollo iirc via texturereplacer if I am not mistaken, same with windowshine. \n\nSince I have no clue - those are purely reflections and not real pbr right?"}]}