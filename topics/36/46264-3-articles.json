{"TopicId":46264,"ForumId":36,"TopicTitle":"[WIP] The REAL Nav Ball Project Thread","CreatedByName":"NeoMorph","CreatedById":58200,"CreatedDateTime":"2013-09-18T00:03:54Z","PageNum":3,"Articles":[{"CreatedByName":"richfiles","CreatedById":129946,"CreatedDateTime":"2015-06-26T22:26:48Z","Content":"\n\u003Cp\u003ESo, I had an opportunity to actually buy a real FDAI. I think it was from an F-4 Phantom simulator. Do you know anything about actually interfacing the real deal? it\u0027s not quite as fancy as the Apollo ones. It doesn\u0027t have all the needle indicators that that one does, but it is a 3 axis ball.\u003C/p\u003E\n"},{"CreatedByName":"ArsenioDev","CreatedById":79965,"CreatedDateTime":"2015-06-26T23:09:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022richfiles\u0022 data-cite=\u0022richfiles\u0022\u003E\u003Cdiv\u003ESo, I had an opportunity to actually buy a real FDAI. I think it was from an F-4 Phantom simulator. Do you know anything about actually interfacing the real deal? it\u0027s not quite as fancy as the Apollo ones. It doesn\u0027t have all the needle indicators that that one does, but it is a 3 axis ball.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFirst I\u0027\u0027m going to need images of the connectors to get a rough idea of the currents involved. Its going to need several things including a gyro voltage, then slewing (?) control signals\u003C/p\u003E\n"},{"CreatedByName":"richfiles","CreatedById":129946,"CreatedDateTime":"2015-07-18T10:13:44Z","Content":"\n\u003Cp\u003E\u003Cimg src=\u0022http://richfiles.solarbotics.net/eb/KerbalCM_FDAIdetail.jpg\u0022 alt=\u0022KerbalCM_FDAIdetail.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EShe\u0027s real beaut, this one...\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://richfiles.solarbotics.net/eb/KerbalCM_FDAIgimbal.jpg\u0022 alt=\u0022KerbalCM_FDAIgimbal.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EThat ball turns smooth as butter! OHCRAPOHCRAP!!! Neilmon, you\u0027re getting mighty close to gimbal lock... Oh wait... Kerbals DID get an extra gimbal for Khristmas! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003EThe reason a Kerbal Pilot can hold vectors and nodes and such, is the Scientists and Engineers ask what direction \u0022Z\u0022 and \u0022M\u0022 are. Jeb says \u0022You\u0027re kidding, right?\u0022 \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_undecided.gif\u0022 alt=\u0022:huh:\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://richfiles.solarbotics.net/eb/KerbalCM_FDAIcircuit.jpg\u0022 alt=\u0022KerbalCM_FDAIcircuit.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EThat Raytheon \u0022chip in a can\u0022 has a date code of 1974! This puppy is 5 years older than ME! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_shocked.gif\u0022 alt=\u0022:0.0:\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv style=\u0022text-align:left;\u0022\u003E\u003Cp\u003EThis type of FDAI uses a 115 volt 400 Hz signal, driven through synchro control transformers (rotated by the gyro assembly). There are 9 synchro signal lines (3 per synchro/axis) as well as the base inverter reference signal going into it. My FDAI is an ARU-11A, from an Israeli F-4 Phantom simulator... Mil spec site says 3 axis, specifically \u0022Three axes attitude indicator used to provide continuous pitch, roll and azimuth information\u0022. Funny, I used to BUILD synchros for both the US DoD and some weather tracking equipment suppliers at my old job! IF ONLY I STILL HAD SOME SYNCHROS!!!\u003C/p\u003E\u003C/div\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EElsewhere, I found the pinouts: \u0022\u003Cem\u003EThe heading, pitch and roll can be moved using synchros\u003C/em\u003E. Pin connections are: \u003Cstrong\u003EA=Ground, B=115 V- 400 Hz\u003C/strong\u003E, \u003Cstrong\u003EF=Heading-x, G=Heading-y, H=Heading-z\u003C/strong\u003E, J=Glide-slope-flag\u002B, K=Glide-slope-flag-, P=rate-gyroscope-power-warning-flag\u002B, R= rate-gyroscope-power-warning-flag-, S=glideslope-pointer\u002B , T=glideslope-pointer-, U=vert-ptr-flag\u002B, V=vert-ptr-flag-, W=horiz-ptr-, X=horiz-ptr\u002B, Y=vert-ptr-, Z=vert-prt\u002B, \u003Cstrong\u003Ea=pitch-x, b=pitch-y, c=pitch-z\u003C/strong\u003E, \u003Cstrong\u003Ed=roll-x, e=roll-y, f=roll-z\u003C/strong\u003E, g=lighting (5 V), h=lighting (GND), C,D,E,L,M,N and j not used.\u003C/p\u003E\u003Cp\u003EFunny thing, I almost panicked and thought that I had bought a 2 axis unit by mistake, cause I couldn\u0027t see the \u003Cem\u003Eyaw\u003C/em\u003E X, Y and Z in the pinout. Using \u003Cem\u003Eheading\u003C/em\u003E as the label threw me WAY off! I eventually figured it out. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 alt=\u0022:confused:\u0022\u003E\u003C/p\u003E\u003Cp\u003EThe flag items are small solenoid like actuators that flip out warning flags on the unit. The pointers are basically analog meters. I do not know if they are voltmeters or ammeters. I have not yet determined this information. The lighting only requires 5 volts.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://aviation.watergeek.eu/images/f-4b/aru-11a_connector.png\u0022 alt=\u0022aru-11a_connector.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EA person could operate this two ways... Software emulation of the three synchros. You could use something like an arduino with 10 analog outputs (smoothed PWM, I guess) and processing to simulate the the 400 Hz reference sine wave needed, plus the amplitude multiplier for x, y, and z representative of the angular position of the rotor on a real synchro, and feed those into an amplifier that can drive the 115 volt outputs at the 400 Hz frequency...\u003C/p\u003E\u003Cp\u003EThe other way is to buy three synchros, and mechanically pair them to some stepper or closed loop servo motors, and drive the motors using a more traditional motor control program to represent the three axes. Then all you need is a single 115 volt, 400 Hz inverter to supply the FDAI and synchro control transformers.\u003C/p\u003E\u003Cp\u003EAlso... It is painted with a thick paint (I know... I\u0027ve DONE THIS to products we made back at my old job)... Any trace of screws are well and thoroughly covered. I do want to pop it open at some point, but not if I risk damaging it in any way shape or form... So for now, I shall resist the urge, and just focus on getting it to work. i also gotta say, the pics don\u0027t do it justice... It really looks bigger in person. The visible portion of the ball, the aperture that it is exposed though, measures 3 inches in diameter (7.35 cm). That size quite literally doubles the width of the ball I have on screen! It\u0027s also QUITE visibly pleasant to look at. You don\u0027t EVER strain to see the numbers or markings. They are simply clear, and highly contrasting.\u003C/p\u003E\u003Cp\u003EI certainly still wanna see this project come to fruition. Not everyone can get their hands on one of these.\u003C/p\u003E\u003Cp\u003EAlso, to an earlier post regarding tape gauges... If one were to go to a vinyl/screenprinting shop, I\u0027d say price out a strip of vinyl from them, screen printed with the gauge. If you go with something on a clear base (not sure if you can do that or not), then you could make the tape wider than the display glass, and have an encoder strip on the side. That gets you your position feedback. To reset, roll to zero, detect index, and then count up and down as your values fluctuate.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-18T10:35:08Z\u0022 title=\u002207/18/2015 10:35  AM\u0022 data-short=\u00228 yr\u0022\u003EJuly 18, 2015\u003C/time\u003E by richfiles\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Stoney3K","CreatedById":139954,"CreatedDateTime":"2015-09-04T21:33:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022wile1411\u0022 data-cite=\u0022wile1411\u0022\u003E\u003Cdiv\u003EAnother option here:\u003Cp\u003E\u003Ca href=\u0022http://eclecti.cc/computergraphics/snow-globe-part-one-cheap-diy-spherical-projection\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://eclecti.cc/computergraphics/snow-globe-part-one-cheap-diy-spherical-projection\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://eclecti.cc/files/2011/08/snow_globe-e1312774018118-700x1050.jpg\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://eclecti.cc/files/2011/08/snow_globe-e1312774018118-700x1050.jpg\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf you want to go the spherical display route, you would only need a hemisphere since you can\u0027t see the back of your navball anyway. Get a frosted plastic or glass hemisphere and a pico projector and you\u0027re pretty much done.\u003C/p\u003E\u003Cp\u003EBut frankly, this would replicate the look of ancient oscilloscope-style CRT displays more than it would look like a mechanical ball, might still be neat for other instruments or camera views.\u003C/p\u003E\n"},{"CreatedByName":"richfiles","CreatedById":129946,"CreatedDateTime":"2015-09-04T22:52:51Z","Content":"\n\u003Cp\u003EBack to my comments about tape meters... sewing tape measures. These are flexible rulers, usually marked between 0-150cm (or 0-60 inches, sometimes both, one scale on either side), used for making fabric and tailoring measurements. If you spool one of these things up on two motorized reels, and have an optical sensor to watch the ticks on the back side of the tape, you could index off of that, while moving the tape up and down for your readout. Just an option. Also, I\u0027ve since built my DAC/Pre-Amp board for my synchro emulator!\u003C/p\u003E\u003Cp\u003ECrude wire wrapping, cheap Chinese made LM386 audio amps, and DACs marketed for Arduino usage, all cobbled together. I still need 10 transformers, and I need to build the power driver for the reference voltage output, which also functions as the FDAI\u0027s power supply... But I think I\u0027m making progress! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue2.gif\u0022 alt=\u0022:sticktongue:\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://richfiles.solarbotics.net/eb/KerbalCM_FDAI_DACampTop.jpg\u0022 alt=\u0022KerbalCM_FDAI_DACampTop.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://richfiles.solarbotics.net/eb/KerbalCM_FDAI_DACampBot.jpg\u0022 alt=\u0022KerbalCM_FDAI_DACampBot.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003E(This is old news from the hardware simpit megathread, but I figured since I started discussion here, I may as well follow up on it)\u003C/p\u003E\n"},{"CreatedByName":"csx23","CreatedById":152361,"CreatedDateTime":"2015-11-02T22:05:28Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NeoMorph\u0022 data-cite=\u0022NeoMorph\u0022\u003E\u003Cdiv\u003ESo someone thought that having a thread would get more views than a blog so I thought, what the heck...\u0026lt;snip\u0026gt;\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ejust discovered this via your not-so-subtle signature and glad I did. wow man all the hardware, cool B/W navball picture from the 30s and stuff - on a serious note I applaud your keenness.\u003C/p\u003E\u003Cp\u003Eyou call it your \u0022your KSP sim\u0022 - it is more like a comic-character-game for me but that\u0027s the evidence of Squad\u0027s success, I guess this game can be what you want it to be. at least the building block for it \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003Ealso many thanks for the clear picture with your fingertips - finally got you Neo. wait there, we\u0027ll be with you in 5!\u003C/p\u003E\n"},{"CreatedByName":"NeoMorph","CreatedById":58200,"CreatedDateTime":"2016-04-01T07:28:56Z","Content":"\n\u003Cp\u003E\nI keep trying... I really need a CNC machine but every time I get close to having enough money to buy one something else pops up... like my fridge dying and then my main router, then the hard drive in my home server... it\u0027s just one thing after another.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m still working on it... BUT... (and it\u0027s a big Kardashian butt)... I need to engrave the sphere... which is another reason I am going a bit wobbly on the enthusiasm. I would have to really learn 3D CNC engraving and omg would that be a tough thing with my memory.\n\u003C/p\u003E\n\u003Cp\u003E\nStill, every summer (only time I can do any work due to disability) I get out my plans and try to update them. The software side works (or it did do last year) but that is only because of the lovely Telemachus mod. I\u0027m probably going to do a sim that will be a fixed version (hopefully 1.1) to build the sim around. That way I will know what mods work or not.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m still playing KSP... and I doubt that will stop anytime soon and once I get the 3 axis version working (got a 2 axis aeroplane one working for a friend\u0027s sim) I\u0027ll carry on posting. I will keep on trying.\n\u003C/p\u003E\n"},{"CreatedByName":"Deserdi Verimas","CreatedById":100022,"CreatedDateTime":"2016-04-04T20:19:10Z","Content":"\n\u003Cp\u003E\nWhat is your sphere made of?\n\u003C/p\u003E\n"},{"CreatedByName":"Space_Artist (4 real)","CreatedById":166755,"CreatedDateTime":"2016-07-18T19:34:19Z","Content":"\n\u003Cp\u003E\nYour construction project is about a NavBall that would connect to KSP for game purposes, but I am looking forward to an actual self-made NavBall that would stay in the same direction\u00A0to show the rotation\u00A0of a\u00A0craft. Is it possible to build a NavBall\u0027s wich stabilisation system consists of the stabilisation force of gyroscopes coupled with the axis system posted by NeoMorph at the end of page 1. Are there such things as miniature good\u00A0quality motor-driven\u00A0gyroscopes that could fit inside a NavBall and, if so, what manufacturer produces them?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, NeoMorph, are you a standard-looking neomorph or are you customized and, if so, just how comfortable are full float traction belts? I\u0027m not sure wether or not I should visit Timbl or content myself of Talsit sessions...\u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n==========================================EDIT===========================================\n\u003C/p\u003E\n\u003Cp\u003E\nI forgot to mention but this project is great\u00A0keep\u00A0goin\u0027!\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-07-18T19:39:00Z\u0022 title=\u002207/18/2016 07:39  PM\u0022 data-short=\u00227 yr\u0022\u003EJuly 18, 2016\u003C/time\u003E by Space_Artist (4 real)\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"thehellhound","CreatedById":175969,"CreatedDateTime":"2017-03-17T20:27:19Z","Content":"\n\u003Cp\u003E\nI\u0027m trying to build an interface for a ROVsub and everyone just uses I-pads with digital displays, which lead me to KSP for ideas on physical hardware. I had a thought, it really doesn\u0027t need to be a real nav-ball, just walk like one and talk like one right?\n\u003C/p\u003E\n\u003Cp\u003E\nturn this upside down and you have a three axis high speed nav-ball. If you used motors with encoders, or stepper motors you could position the ball with very high accuracy and calibrate to a home position. A small spring mounted ball on the top would hold the \u0022nav-ball\u0022 against the drive wheels without needing to fear the ball jumping. Being as the drive wheels have one drive axis and one free wheel axis, your ball wouldn\u0027t suffer from skidding on the drive.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022ASM_PIC_1.PNG\u0022 class=\u0022ipsImage\u0022 src=\u0022https://2.bp.blogspot.com/-OMMfjWg9hDQ/T42l6JffjeI/AAAAAAAAAAQ/wd23c_7rQrQ/s1600/ASM_PIC_1.PNG\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"NeoMorph","CreatedById":58200,"CreatedDateTime":"2017-06-25T07:07:05Z","Content":"\n\u003Cp\u003E\nWelllllllll.... after all this time I am STILL coming back to this project and looking for ways to make a real nav ball work for me. Sooooooo many small and large hurdles but the one really hard\u00A0part was money as I only live on a disability benefit. The problem with my project is that the tools I would need to build this thing small as the Apollo FDAI is just beyond me... yet there are now, real world parts that are smaller versions of the parts that are in the FDAI (such as the attitude error servos that drive the arrows you see above, below and to the right of the 8-ball). So overall I think my bodge should be reasonably sized (i.e. Not football sized heh).\n\u003C/p\u003E\n\u003Cp\u003E\nSo hopefully I will have some new progress pictures here shortly... I\u0027ve got to wait for some more parts to arrive from Europe and China you see before I can finish prototype 6. I really wish I hadn\u0027t lost the pictures of the failures I\u0027ve had so far... 5 was really spectacular (and that is why I took a long break). Damn thing tore itself to bits when I induced a fast roll to the rig. \u00A0Then it started smoking and killed the driver board due to a bad short.\n\u003C/p\u003E\n\u003Cp\u003E\nI was NOT amused... but I suppose it was very Kerbal. It was an expensive failure though. \u00A0Something I really couldn\u0027t afford. Home made pcb... kaput (cpu chip died but at least I bought a bunch of them for this very reason.\u00A0\u00A0In the end\u00A0it was all my fault (badly made contacts in the ball itself unfortunately... but man.... the amount of smoke it made... I thought it was going up in flames).\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWe will have to see if this\u00A0is failure 6 or success 1. But this time I\u0027m backing up my photos via USB (I pulled the card out last time and the damned thing came apart on me). Oh and the the thing that keeps me trying is a saying I believe in... \u0022Every cock-up teaches you at least one new thing\u0022. I learn a lot!\n\u003C/p\u003E\n\u003Cp\u003E\nOh and I think that if I get this beast working the REAL hard part will then be engraving a sphere. I know how to do it but I\u0027m going to have to make a couple of custom rigs to do so... and yeah, I\u0027m going to have to learn cnc arrggggh.\n\u003C/p\u003E\n"},{"CreatedByName":"NeoMorph","CreatedById":58200,"CreatedDateTime":"2017-06-29T12:01:41Z","Content":"\n\u003Cp\u003E\nWell, another year and I\u0027m starting my prototyping again. But I have realised that because I haven\u0027t really coded anything for several years I am vastly out of practice. Plus the fact that I learned too many languages means I keep getting them mixed up.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003EBasically I need help on the KRPC to Arduino coding side!\u003C/strong\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nAs a programmer its tough asking for help. It means I can no longer keep up with the current systems... but as they say, \u0022If you don\u0027t use it, you lose it!\u0022 which is very true. I suppose I could kickstart my brain if I could just see some code that lets me extract the data that my navball needs. I\u0027ve seen people code software versions using KRPC which looks even harder than what I need so I know it can be done.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ll post the requirements shortly because I need to go do some real world stuff. Oh and my brain is still hurting from trying to figure out stuff.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nLink to old Nav Ball Thread -\u0026gt;\u00A0 \u00A0\u00A0 \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/46264-wip-the-real-nav-ball-project-thread/\u0026amp;do=edit\u0022 rel=\u0022\u0022\u003Ehttp://forum.kerbalspaceprogram.com/index.php?/topic/46264-wip-the-real-nav-ball-project-thread/\u003C/a\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-06-29T12:12:19Z\u0022 title=\u002206/29/2017 12:12  PM\u0022 data-short=\u00227 yr\u0022\u003EJune 29, 2017\u003C/time\u003E by NeoMorph\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"NeoMorph","CreatedById":58200,"CreatedDateTime":"2017-07-04T10:18:29Z","Content":"\n\u003Cp\u003E\nOh the horrors of eBay...\n\u003C/p\u003E\n\u003Cp\u003E\nJust received the heavy gear I needed for the main axis. Only when I went to try fit the gear to the axle... it doesn\u0027t fit. Measured the axle 9.98mm... gear hole... 9.18mm... and I ordered 10mm for both.\n\u003C/p\u003E\n\u003Cp\u003E\n*facepalm*\n\u003C/p\u003E\n\u003Cp\u003E\nSo now I\u0027ve got to go out and get a brand new 10mm drill and drill the hole myself... through a big chunk of metal.\n\u003C/p\u003E\n\u003Cp\u003E\nEdit 2: I\u0027ve now asked the supplier to send me a better one... all the other gears came out perfect... it was just this one that is a botch job. Here is one of the good ones (this is the supposed matching gear to the botched one).\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022odVPRtj.jpg\u0022 class=\u0022ipsImage\u0022 height=\u0022768\u0022 src=\u0022https://i.imgur.com/odVPRtj.jpg\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nEdit: And here\u00A0is the offending item....\n\u003C/p\u003E\n\u003Cp\u003E\nThis hole was supposed to be for a grub screw... but he somehow screwed it up and then he just left it. Also note the dents in the teeth... was this a 12 year old making it? I think I made better when I was at school.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u002228qgPps.jpg\u0022 class=\u0022ipsImage\u0022 height=\u0022768\u0022 src=\u0022https://i.imgur.com/28qgPps.jpg\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022XApTJoY.jpg\u0022 class=\u0022ipsImage\u0022 height=\u0022768\u0022 src=\u0022https://i.imgur.com/XApTJoY.jpg\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-07-04T11:16:51Z\u0022 title=\u002207/04/2017 11:16  AM\u0022 data-short=\u00227 yr\u0022\u003EJuly 4, 2017\u003C/time\u003E by NeoMorph\u003C/strong\u003E\n\u003Cbr\u003EAdded photos of gear.\n\u003C/span\u003E\n"},{"CreatedByName":"Freshmeat","CreatedById":111048,"CreatedDateTime":"2017-07-04T11:39:50Z","Content":"\n\u003Cp\u003E\nGood luck on the endeavor. There has been a lot a talk about the hardware in Mulbins thread, but I have not seen a software solution anywhere. I don\u0027t want to bother the esteemed gentlemen, but Stibbons have done a lot of work on a navball display and Richfiles has been giving advice on the hardware side.\n\u003C/p\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2017-07-04T21:14:50Z","Content":"\n\u003Cp\u003E\nI\u0027m happy to help with the krpc side, if you\u0027re still wondering about that part? \u00A0 Do you just want heading, pitch, and roll, referenced to the planet you\u0027re orbiting?\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"NeoMorph","CreatedById":58200,"CreatedDateTime":"2017-07-05T10:04:38Z","Content":"\n\u003Cp\u003E\nHeading, pitch and roll (or properly said, X, Y and Z axis)\u00A0are the basics but then I want the rates of change for all three too... then that pesky target you get on the nav ball when you set a burn too will be translated to the error needles on the FDAI (that\u0027s the error or how far out of alignment you are to the burn target in the X,\u00A0Y and\u00A0Z axis). So that\u0027s 9 variables I need.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022JspFHBb.jpg\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/JspFHBb.jpg\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nOh and thanks for the help. I\u0027ve programmed in all sorts of stuff over the years, from huge mainframes to tiny embedded stuff... but living on morphine really defocuses the memory... and without memory I end up spending more time looking something up than coding these days.\n\u003C/p\u003E\n\u003Cp\u003E\nThe way I will set up the navball will be to have a Cage option where the switch disconnects the FDAI from the input and returns to 0, 0, 0 position (or where it thinks the 0 position is) and then I just offset the ball using rotary encoders to align the ball... pretty much like how the Apollo Astronauts did...\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m also going to have to select the guidance mode from surface to orbital a target which should affect the FDAI 8-ball like the KSP navball.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nChanging the guidance mode is easy (joystick button) but I don\u0027t know (yet) how it affects the data coming out to the nav ball. My motors can change the orientation really quickly but I think I will include a ramping system to stop any sudden jolts (I\u00A0think I broke prototype 4 that way... may have been 5). Because my old version wasn\u0027t balance right it was like something had hit\u00A0the prototype with a metal bar. I had used 2 point support made out of crappy acrylic sheet layered together and the thing just shattered when I switched instantly from prograde to retrograde in a tiny craft. To say I jumped when the thing just disintegrated in front of me was an understatement.\n\u003C/p\u003E\n\u003Cp\u003E\nI will probably shift to weaker motors when I build a production model design (if I do that is) but I want to see how fast I can drive he changes without it falling apart.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe reason for this is that I\u0027m using 10mm acrylic to make the cage and outer chassis so you can see the thing working inside. If I stress test it and it stays working I won\u0027t even need to switch to metal.\n\u003C/p\u003E\n\u003Cp\u003E\nOh and here is how the ball is actually two hemispheres connected through\u00A0a central disk of metal... and actually the pitch and yaw motors are INSIDE the ball.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022O8WbTq4.jpg\u0022 class=\u0022ipsImage\u0022 height=\u0022768\u0022 src=\u0022https://i.imgur.com/O8WbTq4.jpg\u0022 width=\u0022953\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u00223FdSIaB.jpg\u0022 class=\u0022ipsImage\u0022 height=\u0022768\u0022 src=\u0022https://i.imgur.com/3FdSIaB.jpg\u0022 width=\u0022882\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-07-05T11:24:43Z\u0022 title=\u002207/05/2017 11:24  AM\u0022 data-short=\u00227 yr\u0022\u003EJuly 5, 2017\u003C/time\u003E by NeoMorph\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"NeoMorph","CreatedById":58200,"CreatedDateTime":"2017-07-05T10:15:07Z","Content":"\n\u003Cp\u003E\nWell... got some good news...\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nQuote\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022color:#231f20;\u0022\u003EHi, dear customer,\u003C/span\u003E\u003Cbr style=\u0022color:#231f20;\u0022\u003E\u003Cspan style=\u0022color:#231f20;\u0022\u003EThanks for your picture. We apologize for the problem/. Pls take ot easy, we will be responsible for your purchase. Thanks.\u003C/span\u003E\u003Cbr style=\u0022color:#231f20;\u0022\u003E\u003Cspan style=\u0022color:#231f20;\u0022\u003EWould you mena that the large gear was defective and in wrong bore diameter, right? To solve it, we would like to resend a new and correct bore size large to you, is that Ok?\u00A0\u003C/span\u003E\u003Cbr style=\u0022color:#231f20;\u0022\u003E\u003Cspan style=\u0022color:#231f20;\u0022\u003ELook for your reply. Thanks.\u00A0\u003C/span\u003E\u003Cbr style=\u0022color:#231f20;\u0022\u003E\u003Cspan style=\u0022color:#231f20;\u0022\u003EHave a nice day! : )\u003C/span\u003E\u003Cbr style=\u0022color:#231f20;\u0022\u003E\u003Cbr style=\u0022color:#231f20;\u0022\u003E\u003Cspan style=\u0022color:#231f20;\u0022\u003EBest regards\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI so love Chinglish... heh. But the good news is they are sending one out with the right bore size.\n\u003C/p\u003E\n"},{"CreatedByName":"NeoMorph","CreatedById":58200,"CreatedDateTime":"2017-07-05T12:40:02Z","Content":"\n\u003Cp\u003E\nEven more good news... these arrived...\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022SboHl1i.jpg\u0022 class=\u0022ipsImage\u0022 height=\u0022768\u0022 src=\u0022https://i.imgur.com/SboHl1i.jpg\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\ncan anyone guess what they are?\n\u003C/p\u003E\n\u003Cp\u003E\nThey basically replace this record player thing in the 1960\u0027s FDAI...\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022pMDL907.png\u0022 class=\u0022ipsImage\u0022 src=\u0022https://i.imgur.com/pMDL907.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"NeoMorph","CreatedById":58200,"CreatedDateTime":"2017-07-05T18:50:29Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223111321\u0022 data-ipsquote-contentid=\u0022162666\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221499202890\u0022 data-ipsquote-userid=\u0022118388\u0022 data-ipsquote-username=\u0022artwhaley\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n21 hours ago, artwhaley said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027m happy to help with the krpc side, if you\u0027re still wondering about that part? \u00A0 Do you just want heading, pitch, and roll, referenced to the planet you\u0027re orbiting?\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nArt, do you happen to do physical interfaces too?\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2017-07-05T20:28:32Z","Content":"\n\u003Cp\u003E\nThe physical side of it is probably more than I should get into, though it seems like it wouldn\u0027t be hard to use pyserial to command movements to an arduino or similar, and use the arduino to drive the stepper or continuous rotation servos?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHere\u0027s a quick script to get you started with those nine variables. \u00A0I\u0027m SURE there are ways to streamline it... and I need to think more about if there\u0027s a way to get more useful numbers for the error indicator needles... \u00A0since as it is the heading and pitch needles correspond to the arbitrary roll value that isn\u0027t very important to node burns... \u00A0and it would be better if they just responded to the vessel\u0027s pitch and yaw instead? \u00A0But it should get you to the next stage of testing! \u00A0It, of course, just prints the values - but you shouldn\u0027t have trouble finding pyserial examples, or similar, for how to pass them out to a microcontroller to drive the motors.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\u003Cspan class=\u0022kwd\u0022\u003Eimport\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E time\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eimport\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E krpc\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Edef\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E main\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E():\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    hz \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#update rate in updates per second!\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#Setup KRPC\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    conn \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E krpc\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Econnect\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    sc \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E conn\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Espace_center\n    v \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E sc\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eactive_vessel\n\n    last_pitch \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    last_head \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    last_roll \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    surf\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E v\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eflight\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ev\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Esurface_reference_frame\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ewhile\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003ETrue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#First, grab pitch, heading and roll, referenced to the surface.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        pitch \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E surf\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Epitch\n        heading \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E surf\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eheading\n        roll \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E surf\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eroll\n\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#calculate rate of change\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        pitch_chng \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E pitch\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Elast_pitch \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E hz\n        heading_chng \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E heading\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Elast_head \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E hz\n        roll_chng \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E roll\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Elast_roll \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E hz\n\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#and store current values for next time\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        last_pitch \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E pitch\n        last_head \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E heading\n        last_roll \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E roll\n        \n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etry\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#If there\u0027s a maneuver node, grab it\u0027s data\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            node \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E v\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Econtrol\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Enodes\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            nav \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E v\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eflight\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Enode\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ereference_frame\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            pitch_error \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E nav\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Epitch\n            heading_error \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E nav\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eheading\n            roll_error \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E nav\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eroll\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eexcept\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#otherwise center the nav needles\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            pitch_error \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            heading_error \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            roll_error \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0.0\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022NavBall     : {:03.2f}     {:03.2f}     {:03.2f}\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eformat\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Epitch\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E heading\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E roll\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E))\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Change Rate : {:03.2f}     {:03.2f}     {:03.2f}\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eformat\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Epitch_chng\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E heading_chng\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E roll_chng\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E))\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Nav Needles : {:03.2f}     {:03.2f}     {:03.2f}\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eformat\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Epitch_error\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E heading_error\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E roll_error\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E))\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n        time\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Esleep\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1.0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E/\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ehz\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#delay \u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E##This calls the main function which is at the top of the file for readability\u0027s sake!\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E __name__ \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0027__main__\u0027\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    main\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0027--\u0027\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"NeoMorph","CreatedById":58200,"CreatedDateTime":"2017-07-08T08:19:37Z","Content":"\n\u003Cp\u003E\nThe physical engineering side of things I\u0027ve finally sorted out (thank god) and I just need my damned bearings to arrive and I can finally put together prototype 7 which will be the first \u0022all up\u0022 build with all three axes modelled and will include the control panel and associated parts.\n\u003C/p\u003E\n\u003Cp\u003E\nThe weird thing is that the bearings were ordered from 3 different suppliers and none have arrived yet items ordered from Hong Kong two\u00A0weeks before I ordered the bearings\u00A0have arrived already. I hope they haven\u0027t vanished somewhere in Europe...\n\u003C/p\u003E\n\u003Cp\u003E\nI hope they arrive soon.\n\u003C/p\u003E\n\u003Cp\u003E\nRegarding the programming... where is that code running? This is the problem that got my brain in a fug. There are so many different languages that krpc supports and I can\u0027t find an example of getting that data down to an Arduino yet I know it\u0027s possible. My previous setup (several years ago) used Telemachus and I had the data transmitted\u00A0over the network and the Arduino used an Ethernet shield. I basically got a line of numbers separated by comma\u00A0(iirc). The Arduino took that line, split the data and passed it to the motor drivers.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-07-08T08:43:48Z\u0022 title=\u002207/08/2017 08:43  AM\u0022 data-short=\u00227 yr\u0022\u003EJuly 8, 2017\u003C/time\u003E by NeoMorph\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"NeoMorph","CreatedById":58200,"CreatedDateTime":"2017-07-08T08:59:27Z","Content":"\n\u003Cp\u003E\nLOL.... please forgive this rough code but this is from the early version I was running back in 2013 (yeah, long project heh). I can\u0027t seem to find the later ones yet I know they existed because they were the ones that crashed Prototype 5 so dramatically and set the driver board for one axis to smoking like a firebomb...\n\u003C/p\u003E\n\u003Cp\u003E\nI tend to really code in simple to read blocks these days (and add numerous comments) becase all my streamlined code I used to write back in the 90\u0027s is basically gibberish to my drugged up brain now. Hell, I used to code in APL Darn it and if you have ever seen it you would have thought it was in greek lol... mind you it does use a lot of mathematical notation.\n\u003C/p\u003E\n\u003Cp\u003E\nAnyway, this was the first example to get the data across the network and into the Arduino.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E/*\n\nThis is the basis for the Aduino Main Brain reading from Telemachus on the net\n\n*/\n#include \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;Ethernet.h\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n#include \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;SPI.h\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n////////////////////////////////////////////////////////////////////////\n//CONFIGURE\n////////////////////////////////////////////////////////////////////////\nbyte server[] = { 192,168,1,182 }; //ip Address of the server you will connect to\n\n//The location to go to on the server\n//make sure to keep HTTP/1.0 at the end, this is telling it what type of file it is\nString location = \u0022/telemachus/datalink?pitch=n.rawpitch\u0026amp;roll=n.rawroll\u0026amp;yaw=n.rawheading HTTP/1.0\u0022;\n\n\n// if need to change the MAC address (Very Rare)\nbyte mac[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED };\n////////////////////////////////////////////////////////////////////////\n\nEthernetClient client;\n\nchar inString[50]; // string for incoming serial data\nint stringPos = 0; // string index counter\nboolean startRead = false; // is reading?\n\nvoid setup(){\n  Ethernet.begin(mac);\n  Serial.begin(115200);\n}\n\nvoid loop(){\n  String split = connectAndRead(); //connect to the server and read the output\n\n // Serial.println(split); //print out the findings.\n  \n  //String split = \u0022pitch:328.6074,roll:64.62955,yaw:143.8955\u0022;\n  String AllPitch = getValue(split, \u0027,\u0027, 0);\n  String Pitch = getValue(AllPitch, \u0027:\u0027, 1);\n\n  String AllRoll = getValue(split, \u0027,\u0027, 1);\n  String Roll = getValue(AllRoll, \u0027:\u0027, 1);\n\n  String AllYaw = getValue(split, \u0027,\u0027, 2);\n  String Yaw = getValue(AllYaw, \u0027:\u0027, 1);\n \n  \n  //Serial.println(split); \n  \n  float fPitch = getFloat(Pitch);\n  float fRoll = getFloat(Roll);\n  float fYaw = getFloat(Yaw);\n\n\n  Serial.print(\u0022Pitch:\u0022);\n  Serial.println(fPitch);\n  Serial.print(\u0022Roll:\u0022);  \n  Serial.println(fRoll);\n  Serial.print(\u0022Yaw:\u0022);\n  Serial.println(fYaw);\n  Serial.println(\u0022====================\u0022);\n\n  \n\n  delay(30); //wait 5 seconds before connecting again\n}\n\n//========== Subroutines ====================\n\nfloat getFloat(String inputString)\n{\n   char carray[inputString.length() \u002B 1]; //determine size of the array\n   inputString.toCharArray(carray, sizeof(carray)); //put readStringinto an array\n //int n = atoi(carray); //convert the array into an Integer\n float f = atof(carray);\n return f;\n}\n\nString getValue(String data, char separator, int index)\n{\n  int found = 0;\n  int strIndex[] = {0, -1};\n  int maxIndex = data.length()-1;\n\n  for(int i=0; i\u0026lt;=maxIndex \u0026amp;\u0026amp; found\u0026lt;=index; i\u002B\u002B){\n    if(data.charAt(i)==separator || i==maxIndex){\n        found\u002B\u002B;\n        strIndex[0] = strIndex[1]\u002B1;\n        strIndex[1] = (i == maxIndex) ? i\u002B1 : i;\n    }\n  }\n\n  return found\u0026gt;index ? data.substring(strIndex[0], strIndex[1]) : \u0022\u0022;\n}\n\n\nString connectAndRead(){\n  //connect to the server\n\n  //Serial.println(\u0022connecting...\u0022);\n\n  //port 80 is typical of a www page\n  if (client.connect(server, 8085)) {\n    //Serial.println(\u0022connected\u0022);\n    client.print(\u0022GET \u0022);\n    client.println(location);\n    client.println();\n\n    //Connected - Read the page\n    return readPage(); //go and read the output\n\n  }else{\n    return \u0022connection failed\u0022;\n  }\n\n}\n\nString readPage(){\n  //read the page, and capture \u0026amp; return everything between \u0027\u0026lt;\u0027 and \u0027\u0026gt;\u0027\n\n  stringPos = 0;\n  memset( \u0026amp;inString, 0, 32 ); //clear inString memory\n\n  while(true){\n\n    if (client.available()) {\n      char c = client.read();\n\n      if (c == \u0027\u0022\u0027 ) { // is our begining character\n        startRead = true; //Ready to start reading the part \n      }else if(startRead){\n\n        if(c != \u0027}\u0027){ // is our ending character\n          inString[stringPos] = c;\n          stringPos \u002B\u002B;\n        }else{\n          //got what we need here! We can disconnect now\n          startRead = false;\n          client.stop();\n          client.flush();\n          //Serial.println(\u0022inString:\u0022);\n          //Serial.println(inString);\n          return inString;\n\n        }\n\n      }\n    }\n\n  }\n\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nI seem to remember there was a problem with Telemachus back when I was coding this... namely Telemachus would crash and burn if you requested data too quickly. Considering I was only requesting 3 values over a gigabit network I should have been able to access it faster but programs are notorious for doing stuff they shouldn\u0027t.\n\u003C/p\u003E\n\u003Cp\u003E\nRegarding the choice of motors, I finally decided on steppers over all other different methods. I tried using a continuous rotation server with a resolver to find the position the ball is at, I tried using a motor and optical led locator, I tried using a motor and limit switches... but in the end the KISS principle is ultimately the easiest way to go... So I\u0027m making Prototype 7 an oversize version of the final version to make it easier to access the mechanics and install the motors and wire them up. I also had to order a new ball because I dropped the old one.\u003Cbr\u003E\u003Cbr\u003E\nThere is another fun part to do once the prototype is proven to work... and that is labelling the darn ball itself. I\u0027ve got the fix in mind already but that is going to be a seperate project in itself.\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT:\n\u003C/p\u003E\n\u003Cp\u003E\nHmmmm... just came across this that would definitely make it better. Instead of a fixed time to transmit data you could only transmit when the data changes using \u0022available()\u0022.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan class=\u0022com\u0022\u003E#include\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0026lt;Ethernet.h\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E#include\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0026lt;SPI.h\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\nbyte mac\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0xDE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0xAD\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0xBE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0xEF\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0xFE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0xED\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E};\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nbyte ip\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E10\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E177\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E};\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nbyte server\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E64\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E233\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E187\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E99\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E};\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Google\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan\u003EEthernetClient\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E client\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E setup\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan\u003EEthernet\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ebegin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Emac\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E ip\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan\u003ESerial\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ebegin\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E9600\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n  delay\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1000\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n  \u003C/span\u003E\u003Cspan\u003ESerial\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eprintln\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022connecting...\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eclient\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Econnect\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eserver\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E80\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E))\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan\u003ESerial\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eprintln\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022connected\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    client\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eprintln\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022GET /search?q=arduino HTTP/1.0\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    client\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eprintln\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eelse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan\u003ESerial\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eprintln\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022connection failed\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E loop\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eclient\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eavailable\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E())\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Echar\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E c \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E client\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eread\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan\u003ESerial\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eprint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ec\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(!\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eclient\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Econnected\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E())\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan\u003ESerial\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eprintln\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan\u003ESerial\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eprintln\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022disconnecting.\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    client\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estop\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(;;)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://www.arduino.cc/en/Reference/ClientAvailable\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.arduino.cc/en/Reference/ClientAvailable\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-07-08T09:25:28Z\u0022 title=\u002207/08/2017 09:25  AM\u0022 data-short=\u00227 yr\u0022\u003EJuly 8, 2017\u003C/time\u003E by NeoMorph\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dr.Vulpinus","CreatedById":179616,"CreatedDateTime":"2017-07-08T19:47:01Z","Content":"\n\u003Cp\u003E\nWow NeoMorph! \u00A0That is quite the setup you have! \u00A0I have been trying to figure out how those navballs worked for quite some time, but I have never been able to figure it out. \u00A0I would suggest kRPC is the way to go, I am\u00A0familiar with C# and I used it to send data using USB serial before.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso, I saw in your previous posts \u00A0about trying to machine the navball on a CNC and the massive hassle that will be.\u00A0Why not 3D print? \u00A0You could even print the lines into the ball and then just paint in them to highlight them.\n\u003C/p\u003E\n\u003Cp\u003E\nKeep up the great work!\n\u003C/p\u003E\n"},{"CreatedByName":"NeoMorph","CreatedById":58200,"CreatedDateTime":"2017-07-08T21:43:45Z","Content":"\n\u003Cp\u003E\nWahoooo... finally got Krpc\u00A0running and wanging data over to one of my Arduinos today. Then I got sidetracked fixing an LCD 20x4 display with a busted backlight (I just want the LCD to monitor the values being sent over to the arduino to verify).\n\u003C/p\u003E\n\u003Cp\u003E\nReally feeling great now I can at least see two sides of this project linking up for the first time in 4 years.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nOh and for those who eventually want to build their own I will be posting how to do it yourself (and hopefully get you sucke... errr, fine people...\u00A0to improve it).\n\u003C/p\u003E\n\u003Cp\u003E\nKSP has given me hours, no WEEKS of fun... I just want to see how far we can push it. Now who\u0027s going to make a DSKY linked to kOS?\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-07-08T21:46:14Z\u0022 title=\u002207/08/2017 09:46  PM\u0022 data-short=\u00227 yr\u0022\u003EJuly 8, 2017\u003C/time\u003E by NeoMorph\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"NeoMorph","CreatedById":58200,"CreatedDateTime":"2017-07-09T20:45:25Z","Content":"\n\u003Cp\u003E\nI\u0027ve decided that until I get this project running I will be doing a post every Sunday evening (if my disability lets me).\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cu\u003E9th July 2017\u003C/u\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nSo what have I done this week... well, a lot actually. I managed to finally get data from KSP into one of the motors I will be using for my 16cm model. To say I was happy when the servo turned when the navball did was an understatement.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSo now it\u0027s time to start work on the full 16cm model. First it will be the \u00A0main axes and getting them right followed by the 3 error needles and 3 outer rate needles. The\u00A0\u00A0production blueprints for the final version will be made based on a 12cm ball and general made out of the lowest cost parts I can get working but to make it easier to test I\u0027m building this one a little oversized (cramming everything into a 12cm one right away is probably what led to Prototype 6 bursting into flames... well maybe not flames but lots of smoke heh.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIt would be simple to make a navball that works but costs \u00A3500 but I want it to be buildable by anyone.\u00A0Granted the research on this project probably has cost me more than \u00A3500\u00A0since 2013 but I\u0027ve enjoyed myself along the way. I\u0027ve gone from not knowing how they got the real nav ball working to pretty much understanding everything about it now... well except the math... oh god... THAT MATH!... Euler error rates sounds like something an American football team does when they drop the ball a lot.\n\u003C/p\u003E\n\u003Cp\u003E\nSo what have I bought for this project over the years? This photo below is a small collection of bits that I\u0027m currently using to build Prototype 7. The clear plastic ball is what it eventually will be built around.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022xM3Rn2i.jpg\u0022 class=\u0022ipsImage\u0022 height=\u0022768\u0022 src=\u0022https://i.imgur.com/xM3Rn2i.jpg\u0022 width=\u00221024\u0022\u003E\u003C/p\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\nYikes... that\u0027s a bunch of parts for one Navball!\n\u003C/p\u003E\n\u003Cp style=\u0022text-align:center;\u0022\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp style=\u0022color:#272a34;\u0022\u003E\nOne thing that has amazed me is that my final sim will probably be running on 5 separate voltages.\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli style=\u0022color:#272a34;\u0022\u003E\n220v ac\u00A0for the the computer, display and power supply to the sim\n\u003C/li\u003E\n\u003Cli style=\u0022color:#272a34;\u0022\u003E\n24v dc for\u00A0the motors driving the ball (this still might change down to 12v).\n\u003C/li\u003E\n\u003Cli style=\u0022color:#272a34;\u0022\u003E\n12v dc for the Arduinos (yes multiple but only one for the FDAI navball), indicator lights and control systems.\n\u003C/li\u003E\n\u003Cli style=\u0022color:#272a34;\u0022\u003E\n5v Warning and fault generation system, switch arrays (powered by USB from the computer).\n\u003C/li\u003E\n\u003Cli style=\u0022color:#272a34;\u0022\u003E\n3.3v for the pro-mini Arduino that will be handling the error and rate needles in the nav ball\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nI do know I aimed big and several times down the road I thought it was going to beat me... but thanks to Chinese parts (and of course eBay) I think I\u0027m on the final lap. And yeah, hopefully I will be drawing up plans so you can make your own... and sadly, no, I won\u0027t be making and selling them.\n\u003C/p\u003E\n\u003Cp\u003E\nThats all for this week. Keep the faith... this WILL be done.\n\u003C/p\u003E\n"}]}