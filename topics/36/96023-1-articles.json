{"TopicId":96023,"ForumId":36,"TopicTitle":"NODE{}, stack_node, nodeTransformName and referenceAttachNode problems.","CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2015-01-08T17:06:24Z","PageNum":1,"Articles":[{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2015-01-08T17:06:24Z","Content":"\n\u003Cp\u003EI\u0027ve tried a bunch of permutations of these and the only way to make a working docking port that can undock after being docked in the VAB is to still use the old stack_node definitions (instead of NODE{}) and referenceAttachNode referring to a stack node (rather than nodeTransformName referring to an empty) for the docking node.\u003C/p\u003E\u003Cp\u003EIs this a bug or am I not doing it right?\u003C/p\u003E\u003Cp\u003EOh and it looks like a dockingNode empty still needs to be in the model eventhough it\u0027s not being used. Is this right?\u003C/p\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2015-01-09T03:49:48Z","Content":"\n\u003Cp\u003EI\u0027ve got it working with NODE{} defined nodes... well, it\u0027s not USING the NODE... \u003C/p\u003E\u003Cp\u003EWhat I\u0027m doing is defining 3 nodes, all at the same location - a controlNode, dockingNode, and bottomNode. \u003C/p\u003E\u003Cp\u003EThe bottonNode is in the NODE{} tag, with blue axis arrow pointing out.\u003C/p\u003E\u003Cp\u003Ethe dockingNode points the same way - blue arrow out\u003C/p\u003E\u003Cp\u003Ethe controlNode points with the green axis arrow out.\u003C/p\u003E\u003Cp\u003EMy docking module looks like this: \u003C/p\u003E\u003Cp\u003EMODULE\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E name = ModuleDockingNode\u003C/p\u003E\u003Cp\u003E referenceAttachNode = bottom\u003C/p\u003E\u003Cp\u003E nodeType = size1\u003C/p\u003E\u003Cp\u003E controlTransformName = nodeControl\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003EnodeDocking DOES need to be present, it just doesn\u0027t have to be listed in the cfg file if you\u0027re naming it nodeDocking as this is the default.\u003C/p\u003E\n"},{"CreatedByName":"Starwaster","CreatedById":71262,"CreatedDateTime":"2015-01-09T04:07:29Z","Content":"\n\u003Cp\u003EI have had docks working that utilized NODE, but I ended up reverting them to the old attach_node_* system. I forget why.... I think maybe because I needed them to be rescalable and they weren\u0027t. (needed 4 different sizes of the same thing)\u003C/p\u003E\u003Cp\u003EOn the subject the control transform, it is optional IF your control vector is the same as the part\u0027s transform. (in fact, if controlTransformName is omitted then it defaults to the part\u0027s transform). You only \u003Cem\u003Ehave \u003C/em\u003Eto have a separate control transform if the dock points in a different direction than the part\u0027s Y axis.\u003C/p\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2015-01-09T09:11:22Z","Content":"\n\u003Cp\u003EAnd... in checking one of my parts to try to help you... I discovered that I\u0027d broken something else that I thought worked. Or maybe it did use to work and it\u0027s broken on it\u0027s own over the last update? \u003C/p\u003E\u003Cp\u003EWhen I add a docking module to a part that is ALSO a probe core, I get two \u0027Control From Here\u0027 buttons in the context menu. I SWEAR that the top one used to set the reference transform back to the pod\u0027s rotation, and the bottom one set it to the docking port. Which was what I wanted.\u003C/p\u003E\u003Cp\u003EWhat happens now is that the vessel starts out using the part\u0027s transform, and when I click the bottom \u0022Control From Here\u0022 it switches to the docking port\u0027s transform... but neither button can make it switch back to the part\u0027s transform. It stays on the docking node\u0027s transform forever. Any thought on what\u0027s broken and how to fix it?\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2015-01-09T10:46:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022artwhaley\u0022 data-cite=\u0022artwhaley\u0022\u003E\u003Cdiv\u003EI\u0027ve got it working with NODE{} defined nodes... well, it\u0027s not USING the NODE...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESo it\u0027s using stack_node definitions?\u003C/p\u003E\u003Cp\u003EAlso I reponded to your question \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/94742\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E because it\u0027s off topic.\u003C/p\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2015-01-09T11:19:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cpt. Kipard\u0022 data-cite=\u0022Cpt. Kipard\u0022\u003E\u003Cdiv\u003ESo it\u0027s using stack_node definitions?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo, both stack nodes are defined via NODE{} tags. But the docking module also requires two additional gameobjects placed in Unity. That\u0027s what I meant by not USING them. With a dockingNode and controlNode, you don\u0027t NEED any stack nodes... I believe, but could be wrong because I haven\u0027t deleted the line and tested, that pointing \u003Cspan style=\u0022color:#333333;\u0022\u003EreferenceAttachNode at a stack node is the bit that allows you to connect it in the VAB and then undock it later... and this works just fine with NODE{} defined attachment points.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EAnd to add to Starwaster\u0027s point, a separately placed control transform can be useful even if the docking axis lines up with the part axis if the dockingnode isn\u0027t in the same exact position as the object\u0027s center in all 3 directions. Both RPM and DPAI calculate x,y and closure distances based on the reference transform, so it can be beneficial to specify exactly where you want them to measure from.\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2015-01-09T11:37:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022artwhaley\u0022 data-cite=\u0022artwhaley\u0022\u003E\u003Cdiv\u003ENo, both stack nodes are defined via NODE{} tags. But the docking module also requires two additional gameobjects placed in Unity. That\u0027s what I meant by not USING them. With a dockingNode and controlNode, you don\u0027t NEED any stack nodes... I believe, but could be wrong because I haven\u0027t deleted the line and tested, that pointing \u003Cspan style=\u0022color:#333333;\u0022\u003EreferenceAttachNode at a stack node is the bit that allows you to connect it in the VAB and then undock it later... and this works just fine with NODE{} defined attachment points.\u003C/span\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EThe key question that I asked and no one answered yet, is whether anyone managed to get it working \u003C/span\u003E\u003Cstrong\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EAND\u003C/span\u003E\u003C/strong\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E have it decouple when coupled in the VAB or SPH. I\u0027m pretty sure you need a stack node of some kind at the same place as the docking node.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EMy problem so far is that with NODE{} and a dockingNode empty (with nodeTransformName ) instead of a referenceAttachNode it, wont decouple when launched, in fact the button says \u0022Undock\u0022 instead of \u0022Decouple Node\u0022, which is my first clue that the NODEs are connected, and the docking port is just docked after the launch \u003C/span\u003E\u003Cspan style=\u0022color:#A9A9A9;\u0022\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003E(you know how people create double dock connection? one of the docking ports docks immediately after launch)\u003C/span\u003E\u003C/span\u003E and undocking it does nothing, because the NODEs are connected.\u003C/p\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2015-01-09T19:47:33Z","Content":"\n\u003Cp\u003EI did. The example I posted with both a control transform and a reference transform works correctly including decouple after launch.\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2015-01-09T20:32:28Z","Content":"\n\u003Cp\u003ECould you post the whole config? Are you sure you\u0027re distinguishing between referenceAttachNode and nodeTransformName? You\u0027re really confusing me.\u003C/p\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2015-01-09T20:59:12Z","Content":"\n\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EPART\u003Cbr\u003E{\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E// --- general parameters ---\u003Cbr\u003Ename = ltskycrane\u003Cbr\u003Emodule = Part\u003Cbr\u003Eauthor = Art\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E// --- asset parameters ---\u003Cbr\u003EMODEL\u003Cbr\u003E{\u003Cbr\u003E\tmodel = AxialAerospace/Parts/landertek/ltskycrane\u003Cbr\u003Escale=1,1,1\u003Cbr\u003E}\u003Cbr\u003Escale = 1\u003Cbr\u003ErescaleFactor = 1\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E// --- node definitions ---\u003Cbr\u003ENODE\u003Cbr\u003E{\u003Cbr\u003E   name = top\u003Cbr\u003E   transform = nodeTop // Or whatever your transform name is.\u003Cbr\u003E   size = 1 // Will always be 0 until fixed.\u003Cbr\u003E   method = FIXED_JOINT // will always be FIXED_JOINT until fixed.\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003ENODE\u003Cbr\u003E{\u003Cbr\u003E   name = bottom\u003Cbr\u003E   transform = nodeBot // Or whatever your transform name is.\u003Cbr\u003E   size = 1 // Will always be 0 until fixed.\u003Cbr\u003E   method = FIXED_JOINT // will always be FIXED_JOINT until fixed.\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E// --- FX definitions ---\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Efx_exhaustFlame_blue_small = 0.0, -21.0, 0.0, 0.0, 1.0, 0.0, running\u003Cbr\u003Efx_exhaustLight_blue = 0.0, -21.0, 0.0, 0.0, 0.0, 1.0, running\u003Cbr\u003Efx_smokeTrail_light  = 0.0, -21.0, 0.0, 0.0, 1.0, 0.0, running\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E// --- Sound FX definition ---\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Esound_vent_medium = engage\u003Cbr\u003Esound_rocket_hard = running\u003Cbr\u003Esound_vent_soft = disengage\u003Cbr\u003Esound_explosion_low = flameout\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E// --- editor parameters ---\u003Cbr\u003ETechRequired = survivability\u003Cbr\u003EentryCost = 1600\u003Cbr\u003Ecost = 750\u003Cbr\u003Ecategory = Pods\u003Cbr\u003Esubcategory = 0\u003Cbr\u003Etitle = LT Sky Crane\u003Cbr\u003Emanufacturer = Axial Aerospace\u003Cbr\u003Edescription =Skycrane... crane in the sky.\u003Cbr\u003E// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision\u003Cbr\u003EattachRules = 1,0,1,1,0\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E// --- standard part parameters ---\u003Cbr\u003Emass = 1.2\u003Cbr\u003EdragModelType = default\u003Cbr\u003Emaximum_drag = 0.2\u003Cbr\u003Eminimum_drag = 0.2\u003Cbr\u003EangularDrag = 2\u003Cbr\u003EcrashTolerance = 12\u003Cbr\u003EmaxTemp = 3600\u003Cbr\u003EvesselType = Probe\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E\tname = ModuleCommand\u003Cbr\u003E\tminimumCrew = 0\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003ERESOURCE\u003Cbr\u003E{\u003Cbr\u003E\tname = ElectricCharge\u003Cbr\u003E\tamount = 150\u003Cbr\u003E\tmaxAmount = 150\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E\tname = ModuleSAS\u003Cbr\u003E\tSASServiceLevel = 3\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E\tname = ModuleDockingNode\u003Cbr\u003E\treferenceAttachNode = bottom\u003Cbr\u003E\tnodeType = size1\u003Cbr\u003E\tcontrolTransformName = nodeControl\u003Cbr\u003E}\u003Cbr\u003E MODULE\u003Cbr\u003E{\u003Cbr\u003E\tname = ModuleReactionWheel\u003Cbr\u003E\u003Cbr\u003E\tPitchTorque = 4\u003Cbr\u003E\tYawTorque = 4\u003Cbr\u003E\tRollTorque = 3\u003Cbr\u003E\u003Cbr\u003E\tRESOURCE\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = ElectricCharge\u003Cbr\u003E\t\trate = .4\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E\tname = ModuleEngines\u003Cbr\u003E\tthrustVectorTransformName = thrustTransform\u003Cbr\u003E\texhaustDamage = True\u003Cbr\u003E\tignitionThreshold = 0.1\u003Cbr\u003E\tminThrust = 0\u003Cbr\u003E\tmaxThrust = 50\u003Cbr\u003E\theatProduction = 300\u003Cbr\u003E\tfxOffset = 0, 0, 0.21\u003Cbr\u003E\tPROPELLANT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = LiquidFuel\u003Cbr\u003E        \tratio = 0.9\u003Cbr\u003E\t\tDrawGauge = True\u003Cbr\u003E\t}\u003Cbr\u003E\tPROPELLANT\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = Oxidizer\u003Cbr\u003E\t\tratio = 1.1\u003Cbr\u003E\t}\u003Cbr\u003E\tatmosphereCurve\u003Cbr\u003E \t{\u003Cbr\u003E   \t key = 0 390\u003Cbr\u003E  \t key = 1 300\u003Cbr\u003E \t}\u003Cbr\u003E\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E\tname = ModuleGimbal\u003Cbr\u003E\tgimbalTransformName = thrustTransform\u003Cbr\u003E\tgimbalRange = 0.5\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003ERESOURCE\u003Cbr\u003E{\u003Cbr\u003E name = LiquidFuel\u003Cbr\u003E amount = 90\u003Cbr\u003E maxAmount = 90\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003ERESOURCE\u003Cbr\u003E{\u003Cbr\u003E name = Oxidizer\u003Cbr\u003E amount = 110\u003Cbr\u003E maxAmount = 110\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E \u003Cimg src=\u0022http://i.imgur.com/FiiSECX.jpg\u0022 alt=\u0022FiiSECX.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EreferenceAttachNode - the node that attaches in VAB (and subsequently decouples) (uses node name, not transform name- bottom or top in this example, not nodeBot or nodeTop)\u003C/p\u003E\u003Cp\u003EnodeTransformName - allows you to explicitly rename the docking node. Not necessary if you\u0027re using dockingNode as the node name in Unity\u003C/p\u003E\u003Cp\u003EcontrolTransformName - the transform that specifies the control axis, used for \u0027Control From Here\u0027. \u003C/p\u003E\u003Cp\u003ENow, why ksp doesn\u0027t automatically use one transform for nodeTransformName and controlTransformName, I don\u0027t know, but it doesn\u0027t. So I create all three transforms at the same place (with appropriately different rotations), turn nodeBot into a node named bottom (using the NODE{} tag) and define the other two transforms in the docking module cfg.\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2015-01-09T21:18:38Z","Content":"\n\u003Cp\u003EI think I get it now. Thanks.\u003C/p\u003E\u003Cp\u003ESee I tried to use a dockingNode transform for both the stack node and the docking node. I\u0027ll give this a try.\u003C/p\u003E\n"}]}