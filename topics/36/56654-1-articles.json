{"TopicId":56654,"ForumId":36,"TopicTitle":"Resource Flow Mechanics Overhaul","CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2013-12-18T08:03:01Z","PageNum":1,"Articles":[{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2013-12-18T08:03:01Z","Content":"\n\u003Cp\u003EThere have been several discussions on this topic in #kspmodders, so I thought I\u0027d bring this to the forum so we can better organize our thoughts.\u003C/p\u003E\u003Cp\u003ESeveral mods are limited by the current resource flow mechanics. There\u0027s been discussion about overriding the resource request routines to better facilitate the needs of mods. Some relevant mods:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EKethane would like to be able to simulate resource flow on unloaded vessels.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EKSP Interstellar has an internal resource manager for handling vast quantities of electricity.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ETAC Life Support bypasses the stock resource draw mechanic and substitutes its own.\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThere are implementation details which make it difficult for mods to individually implement desired features without conflicting with others. The goal of this post is to gather requirements for a resource flow API that mods can optionally use.\u003C/p\u003E\u003Cp\u003EA few items to get us started:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EBatch resource requests. Producing or consuming multiple resources in proportion is non-trivial, and the rest of the library may necessitate this feature.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EStorage-independent request resolution. In other words, how much (or little) resource storage a vessel has should not influence how resources flow in that vessel. This applies to high-timewarp situations but also comes up when a vessel has zero storage for some resource but produces and consumes it simultaneously.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EOffline resource flow. This might be implemented by allowing modules to declare a constant resource flow rate and resolving storage deltas when the vessel is loaded again.\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EMy intent is to foster discussion, so please, post suggestions and critiques.\u003C/p\u003E\n"},{"CreatedByName":"damny","CreatedById":78621,"CreatedDateTime":"2013-12-18T15:20:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Majiir\u0022 data-cite=\u0022Majiir\u0022\u003E\u003Cdiv\u003Eallowing modules to declare a constant resource flow rate\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis may not be enough, e.g. the output of a solar panel depends on where it is in space. Ideally, it would be possible to (optionally) specify a class that can handle the calculations.\u003C/p\u003E\n"},{"CreatedByName":"Fractal_UK","CreatedById":61595,"CreatedDateTime":"2013-12-18T17:17:07Z","Content":"\n\u003Cp\u003ESo, the Interstellar resource manager covers some of the objectives named here but let me go through and briefly discuss what it does well and what it doesn\u0027t do so well.\u003C/p\u003E\u003Cp\u003ECapabilities of the Interstellar Resource Manager:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cstrong\u003EManaged Supply of Resources\u003C/strong\u003E - The idea here is that the resource manager doesn\u0027t want to produce more of a resource than can be used, so, if we are using the resource manager to manage a supply of Thermal Power created by a nuclear reactor, we want to supply enough to provide for the ship\u0027s power needs and no more - otherwise we are wasting nuclear fuel.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cstrong\u003EStorage Independence\u003C/strong\u003E - We don\u0027t want huge buffers to make everything work at high time acceleration, the Interstellar resource manager should still function properly with only 1 unit of storage of a given resource - it is capable of using ongoing supply to meet demand.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cstrong\u003EPower Organisation and Prioritisation\u003C/strong\u003E - Not everything needs power to the same degree, if you\u0027re running lots of science equipment on your ship that\u0027s nice but I\u0027m guessing you want power to the engines first. The Interstellar resource manager works by organising resources by demand and by priority, it supplies the smallest demand of the highest priority and then moves onto the next smallest of the highest priority, etc. until either all the needed power has been supplied or the power has been exhausted.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cstrong\u003EMinimal Conversion from Stock Resource API\u003C/strong\u003E - No one wants to rewrite lots of code so that idea was to encapsulate all of this functionality into something very much like the part.RequestResource() method. The resource manager typically uses just two methods, supplyFNResource() and consumeFNResource(), though PartModules that wish to supply a resource must also declare which resources they intent to supply OnStart.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe Interstellar resource manager is very powerful but it isn\u0027t perfect and has some drawbacks\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cstrong\u003EOffline Resources\u003C/strong\u003E - This is totally unsupported at present and Interstellar\u0027s handling of offline resources is, for the most part, a very simple delta fudge.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cstrong\u003EOne-Off Supply and Demand\u003C/strong\u003E - The resource manager is heavily optimised toward the handling of power supply and demand that goes on continuously for at least several frames, supplies and demands that last for only an instant are not well supported.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHere is an example of the resource manager in action with many demands. Here all the draws are of the same priority so the resource manager has organised them solely by demand and you can see that the science lab with it\u0027s huge 5GW power draw is the one that missed out in order to keep the other components supplied.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/2Ub99Gx.jpg\u0022 alt=\u00222Ub99Gx.jpg\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2013-12-18T18:40:00Z","Content":"\n\u003Cp\u003EOther desiderata:\u003C/p\u003E\u003Cp\u003E*Max flow rate: necessary to properly model batteries (and provide a use for capacitors) but also useful to model a tank\u0027s max fuel outflow. It\u0027s probably too much work to separate that into volts and amps, though, and instead we can just consider a battery\u0027s max flow in its own units per second.\u003C/p\u003E\u003Cp\u003E*More control over flow: fuel should flow from the lowest tank first...except if there are decoupleable tanks (aka \u0022STACK_PRIORITY_SEARCH has issues\u0022).\u003C/p\u003E\n"},{"CreatedByName":"DerekL1963","CreatedById":57091,"CreatedDateTime":"2013-12-18T20:02:46Z","Content":"\n\u003Cp\u003EAs a user, my main interest is backwards compatibility... should mod \u0027x\u0027 require version 2.3.2, it should still support the features of version 2.3.0 for mod \u0027y\u0027. I give and grant there will be cases (such as changes to the game itself) where this is not possible, but backing the user into the corner of choosing one mod over another should be avoided if at all possible.\u003C/p\u003E\n"},{"CreatedByName":"rbray89","CreatedById":48847,"CreatedDateTime":"2013-12-18T21:09:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022damny\u0022 data-cite=\u0022damny\u0022\u003E\u003Cdiv\u003EThis may not be enough, e.g. the output of a solar panel depends on where it is in space. Ideally, it would be possible to (optionally) specify a class that can handle the calculations.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis. There should be a template class that would have methods for generation \u0026amp; consumption. If this were standardized, then these instantiated classes could simply be plugged into the resource manager.\u003C/p\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2013-12-20T04:43:19Z","Content":"\n\u003Cp\u003ESolar panels vary in a \u0027daily\u0027 cycle that is largely but not entirely uniform from \u0027day\u0027 to \u0027day\u0027, if you define a day to be one complete movement around the parent body and thus one surface day is conceptually the same as one orbital day. It should be possible to keep a history of samples (say one sample every 2 seconds) and if you have a minimum of one day\u0027s worth then that ship is unloaded or when the player leaves the flightspace; calculate a curve from those samples and store it to the craft\u0027s persistence; then you could cheaply calculate production for solar dependent factors at any point from a simple request instead of adding new constant simulations.\u003C/p\u003E\u003Cp\u003EAlternately it should be easy to use a spherical intersection comparison somethingerother to determine what percentage of the day you\u0027re exposed to the sun.\u003C/p\u003E\n"},{"CreatedByName":"Chris_W","CreatedById":96985,"CreatedDateTime":"2013-12-20T05:51:13Z","Content":"\n\u003Cp\u003EFrom my work with BioMass and TAC LS so far I fully agree that we need a clever resource handler.\u003C/p\u003E\u003Cp\u003ESome thoughts on things:\u003C/p\u003E\u003Cp\u003EFlow modes\u003C/p\u003E\u003Cp\u003EI just had the thought \u0022why not leave this up to the designers of the craft\u0022.\u003C/p\u003E\u003Cp\u003EIdea being, a Tweakable that specifies a priority - or a variable in the part.cfg.\u003C/p\u003E\u003Cp\u003EPriority could be twofold, for input and output.\u003C/p\u003E\u003Cp\u003EA command pod would for instance hold..\u003C/p\u003E\u003Cp\u003EOxygen - Input prio 10, output prio 1 (first to store, last to give away)\u003C/p\u003E\u003Cp\u003ECO2 - Input 1, output 10 (first to give away, last to store)\u003C/p\u003E\u003Cp\u003EWhereas a greenhouse would beg for CO2 and give away oxygen.\u003C/p\u003E\u003Cp\u003ESome canister somewhere on the craft could let the user decide how important it would be and default to 5.\u003C/p\u003E\u003Cp\u003ELocking certain containers should still be possible as well (emergency batteries for instance that you unlock by hand later).\u003C/p\u003E\u003Cp\u003EActivation\u003C/p\u003E\u003Cp\u003ECurrent stock model makes no sense whatsoever.\u003C/p\u003E\u003Cp\u003EI\u0027d like to be able to specify if I want an on/off switch and the state the switch should be in on load.\u003C/p\u003E\u003Cp\u003ESome things better start activated already. Other things I\u0027d declare always active, like bacteria growth, without a switch.\u003C/p\u003E\u003Cp\u003EAlso resources should prevent the reaction from ocurring if they\u0027re not available and specified as vital.\u003C/p\u003E\u003Cp\u003ESometimes you can still get things happening with one resource less, just at a lower efficiency.\u003C/p\u003E\u003Cp\u003EOutput\u003C/p\u003E\u003Cp\u003ESpecifying what output should be generated is tricky sometimes.\u003C/p\u003E\u003Cp\u003ECame across this when handling the bacteria from BioMass.. they \u0022feed\u0022 on waste products and they generate two other products. One of them they should always generate, just because they exist onboard. The other one should be governed by the input. So what I\u0027d like here is a method to say \u0022this depends on efficiency, this does not and is always generated\u0022.\u003C/p\u003E\u003Cp\u003EUnits\u003C/p\u003E\u003Cp\u003EI\u0027d very much like to be able to specify \u0022units per time\u0022 more efficiently.\u003C/p\u003E\u003Cp\u003EAllowing to specify an amount and a time would greatly ease things. \u003C/p\u003E\u003Cp\u003Eunits = 1, time = day.. much easier to handle than \u00220.0000117 per second\u0022.\u003C/p\u003E\u003Cp\u003EUpdate time scaling\u003C/p\u003E\u003Cp\u003EOther than the obvious, a given amount of time between updates per reaction would make the whole thing more enjoyable.\u003C/p\u003E\u003Cp\u003EIf something creates 1 unit per day you most likely want to reduce it every 6 hours by a fraction if it is food, yet by a much smaller amount and every second if it is oxygen or electricity. Even Kerbals are not permanently eating.. their microbacteria in the lab on the other hand don\u0027t have much else to do, so they sure are.\u003C/p\u003E\u003Cp\u003EJust my two cents on what I experienced thus far, might not be much but.. may help thinking.\u003C/p\u003E\n"},{"CreatedByName":"BioSehnsucht","CreatedById":1071,"CreatedDateTime":"2013-12-20T09:00:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Greys\u0022 data-cite=\u0022Greys\u0022\u003E\u003Cdiv\u003ESolar panels vary in a \u0027daily\u0027 cycle that is largely but not entirely uniform from \u0027day\u0027 to \u0027day\u0027, if you define a day to be one complete movement around the parent body and thus one surface day is conceptually the same as one orbital day. It should be possible to keep a history of samples (say one sample every 2 seconds) and if you have a minimum of one day\u0027s worth then that ship is unloaded or when the player leaves the flightspace; calculate a curve from those samples and store it to the craft\u0027s persistence; then you could cheaply calculate production for solar dependent factors at any point from a simple request instead of adding new constant simulations.\u003Cp\u003EAlternately it should be easy to use a spherical intersection comparison somethingerother to determine what percentage of the day you\u0027re exposed to the sun.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECould probably just check the max power generation of all deployed panels when craft goes on rails and store it (so we don\u0027t have to compute it again later), assume craft is optimally pointed at sun, and for each timestep calculate based on distance from sun and really simple approximation check of whether the craft can \u0027see\u0027 the sun from it\u0027s location (and whenever the time step is such that the craft may have changed state between being in a shadow and not, back-compute some number of sub-steps between the last step and this one to figure out when it changed state, otherwise the entire time step it was either in light or not).\u003C/p\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2013-12-20T18:33:53Z","Content":"\n\u003Cp\u003EThat would be precisely what I was trying to avoid, new constant simulation, an approximated curve is marginally less accurate but ends up as a simple lookup based on a percentage of orbital offset from zero position.\u003C/p\u003E\n"},{"CreatedByName":"JordanL","CreatedById":95655,"CreatedDateTime":"2013-12-20T20:31:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Greys\u0022 data-cite=\u0022Greys\u0022\u003E\u003Cdiv\u003EThat would be precisely what I was trying to avoid, new constant simulation, an approximated curve is marginally less accurate but ends up as a simple lookup based on a percentage of orbital offset from zero position.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, a lookup table that\u0027s created once it can be for the vehicle is actually going to be more accurate in most cases, simply because there is less room for error/bugs. This sort of this probably should be done on a curve lookup.\u003C/p\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2013-12-30T06:27:04Z","Content":"\n\u003Cp\u003EThe biggest issue that I can foresee with my limited abilities is that we won\u0027t be able to make the stock modules and partmodules use our manager; I may be wrong about that, and I will be wrong gladly; but if I\u0027m not wrong it would mean that this alternate resource manager (ARM) would need to also contain either natively or as a pack-along sibling project, a set of replacement modules for anything in KSP that consumes or creates resources.\u003C/p\u003E\u003Cp\u003Eas far as I recall that\u0027s\u003C/p\u003E\u003Cp\u003EModuleEngine\u003C/p\u003E\u003Cp\u003EModuleAlternator\u003C/p\u003E\u003Cp\u003EModuleGenerator\u003C/p\u003E\u003Cp\u003EModuleDataTransmitter\u003C/p\u003E\u003Cp\u003EModuleDeployableSolarPanel\u003C/p\u003E\u003Cp\u003EModuleLight\u003C/p\u003E\u003Cp\u003EModuleRCS\u003C/p\u003E\u003Cp\u003EModuleReactionWheel\u003C/p\u003E\u003Cp\u003EModuleResourceIntake\u003C/p\u003E\u003Cp\u003EModuleEnviroSensor\u003C/p\u003E\u003Cp\u003EModuleScienceLab?\u003C/p\u003E\u003Cp\u003EModuleWheel\u003C/p\u003E\u003Cp\u003EPlus some modules that some people would probably like to have consume resources like ModuleControlSurface and ModuleLandingLeg/Gear, maybe even ModuleDockingNode; those probably aren\u0027t permanent magnets helping us snap ships together.\u003C/p\u003E\u003Cp\u003ETaking that into account, this project has a lot of potential, as I can name major known flaws in the behavior or performance of almost everything in that list.\u003C/p\u003E\n"},{"CreatedByName":"Sakata","CreatedById":95648,"CreatedDateTime":"2013-12-30T20:52:06Z","Content":"\n\u003Cp\u003EI agree that this project would be very good for many mods.\u003C/p\u003E\u003Cp\u003EBiomass is one that comes to mind, but others would also benefit from a common DLL, so that they can focus on their mod, and not the resource bugs/features in the default game. If a sufficiently robust system were made, then many mods would be able to focus more on other things, instead of each modder having to write their own libraries to deal with resource calculations which I\u0027m sure many have had to do over and over. Its like re-inventing the wheel...\u003C/p\u003E\u003Cp\u003EThis IMHO would be awesome!\u003C/p\u003E\n"},{"CreatedByName":"Papa_Joe","CreatedById":10788,"CreatedDateTime":"2013-12-31T06:43:50Z","Content":"\n\u003Cp\u003EI\u0027m new to unity and KSP modding, but not new to coding.\u003C/p\u003E\u003Cp\u003EI\u0027m just beginning to grapple with these very questions as I try to implement a \u0022realistic\u0022 resource transfer from part to part in Ship Manifest. I want a realism mode that would simulate the time, flow characteristics and mechanical sounds for moving resources that can be moved, based on flow modes, flowstate and connected path.\u003C/p\u003E\u003Cp\u003EMy concerns are how to best handle the duration based on amount to move and some flow rate, and have it sync with whatever sound(s) I\u0027m choosing for that resource. I\u0027m thinking it probably needs to be an event on the part, but, not sure how to sync it to a second based duration. I\u0027m now perusing various mods to learn how all this is currently being accomplished. A library is exactly what is needed for the community. I would contribute.\u003C/p\u003E\n"},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2013-12-31T13:09:43Z","Content":"\n\u003Cp\u003EWould it be possible to include a handler for the nullref exception when you try to request a resource that the vessel cannot store. For example when you use the ISRUScoop () component from kspi.\u003C/p\u003E\u003Cp\u003EPS:\u003C/p\u003E\u003Cp\u003EAny snippet to do a check of resource to request against vessel.activeresources(etc. Sorry on my phone. Cant copypaste from the api) before requesting would be greatly appriciated btw.would probably go in the partmodule class under OnUpdate () probably (just guessing since thats when ypu switch resource and online the extraction) Havent got it working myself both due to lacking experience with c# and lacking documentation on that api\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-31T13:22:50Z\u0022 title=\u002212/31/2013 01:22  PM\u0022 data-short=\u002210 yr\u0022\u003EDecember 31, 2013\u003C/time\u003E by landeTLS\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Papa_Joe","CreatedById":10788,"CreatedDateTime":"2013-12-31T16:29:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022landeTLS\u0022 data-cite=\u0022landeTLS\u0022\u003E\u003Cdiv\u003EWould it be possible to include a handler for the nullref exception when you try to request a resource that the vessel cannot store. For example when you use the ISRUScoop () component from kspi.\u003Cp\u003EPS:\u003C/p\u003E\u003Cp\u003EAny snippet to do a check of resource to request against vessel.activeresources(etc. Sorry on my phone. Cant copypaste from the api) before requesting would be greatly appriciated btw.would probably go in the partmodule class under OnUpdate () probably (just guessing since thats when ypu switch resource and online the extraction) Havent got it working myself both due to lacking experience with c# and lacking documentation on that api\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt is a bit of brute force approach, but this snippet collects all the parts and organizes them by Resource. the end result is a Dictionary object that can be interrogated by PartsByResource.Keys.Contains(resource.info.name), that provides a list of parts that contain the desired resource.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        // Provides a list of resources and the parts that contain that resource.\u003Cbr\u003E        private Dictionary\u0026lt;string, List\u0026lt;Part\u0026gt;\u0026gt; _partsByResource;\u003Cbr\u003E        private Dictionary\u0026lt;string, List\u0026lt;Part\u0026gt;\u0026gt; PartsByResource\u003Cbr\u003E        {\u003Cbr\u003E            get\u003Cbr\u003E            {\u003Cbr\u003E                if (_partsByResource == null)\u003Cbr\u003E                    _partsByResource = new Dictionary\u0026lt;string, List\u0026lt;Part\u0026gt;\u0026gt;();\u003Cbr\u003E                else\u003Cbr\u003E                    _partsByResource.Clear();\u003Cbr\u003E\u003Cbr\u003E                foreach (Part part in Vessel.Parts)\u003Cbr\u003E                {\u003Cbr\u003E                    // Part has Resources, now where to put them...  (may be more than one place... \u003Cbr\u003E                    foreach (PartResource resource in part.Resources)\u003Cbr\u003E                    {\u003Cbr\u003E                        bool vFound = false;\u003Cbr\u003E                        // is resource in the list yet?.\u003Cbr\u003E                        if (_partsByResource.Keys.Contains(resource.info.name))\u003Cbr\u003E                        {\u003Cbr\u003E                            vFound = true;\u003Cbr\u003E                            List\u0026lt;Part\u0026gt; eParts = _partsByResource[resource.info.name];\u003Cbr\u003E                            eParts.Add(part);\u003Cbr\u003E                        }\u003Cbr\u003E                        if (!vFound)\u003Cbr\u003E                        {\u003Cbr\u003E                            // found a new resource.  lets add it to the list of resources.\u003Cbr\u003E                            List\u0026lt;Part\u0026gt; nParts = new List\u0026lt;Part\u0026gt;();\u003Cbr\u003E                            nParts.Add(part);\u003Cbr\u003E                            _partsByResource.Add(resource.info.name, nParts);\u003Cbr\u003E                        }\u003Cbr\u003E                    }\u003Cbr\u003E                 }\u003Cbr\u003E\u003Cbr\u003E                return _partsByResource;\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-31T16:48:44Z\u0022 title=\u002212/31/2013 04:48  PM\u0022 data-short=\u002210 yr\u0022\u003EDecember 31, 2013\u003C/time\u003E by Papa_Joe\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2013-12-31T19:03:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Papa_Joe\u0022 data-cite=\u0022Papa_Joe\u0022\u003E\u003Cdiv\u003EIt is a bit of brute force approach, but this snippet collects all the parts and organizes them by Resource. the end result is a Dictionary object that can be interrogated by PartsByResource.Keys.Contains(resource.info.name), that provides a list of parts that contain the desired resource.\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        // Provides a list of resources and the parts that contain that resource.\u003Cbr\u003E        private Dictionary\u0026lt;string, List\u0026lt;Part\u0026gt;\u0026gt; _partsByResource;\u003Cbr\u003E        private Dictionary\u0026lt;string, List\u0026lt;Part\u0026gt;\u0026gt; PartsByResource\u003Cbr\u003E        {\u003Cbr\u003E            get\u003Cbr\u003E            {\u003Cbr\u003E                if (_partsByResource == null)\u003Cbr\u003E                    _partsByResource = new Dictionary\u0026lt;string, List\u0026lt;Part\u0026gt;\u0026gt;();\u003Cbr\u003E                else\u003Cbr\u003E                    _partsByResource.Clear();\u003Cbr\u003E\u003Cbr\u003E                foreach (Part part in Vessel.Parts)\u003Cbr\u003E                {\u003Cbr\u003E                    // Part has Resources, now where to put them...  (may be more than one place... \u003Cbr\u003E                    foreach (PartResource resource in part.Resources)\u003Cbr\u003E                    {\u003Cbr\u003E                        bool vFound = false;\u003Cbr\u003E                        // is resource in the list yet?.\u003Cbr\u003E                        if (_partsByResource.Keys.Contains(resource.info.name))\u003Cbr\u003E                        {\u003Cbr\u003E                            vFound = true;\u003Cbr\u003E                            List\u0026lt;Part\u0026gt; eParts = _partsByResource[resource.info.name];\u003Cbr\u003E                            eParts.Add(part);\u003Cbr\u003E                        }\u003Cbr\u003E                        if (!vFound)\u003Cbr\u003E                        {\u003Cbr\u003E                            // found a new resource.  lets add it to the list of resources.\u003Cbr\u003E                            List\u0026lt;Part\u0026gt; nParts = new List\u0026lt;Part\u0026gt;();\u003Cbr\u003E                            nParts.Add(part);\u003Cbr\u003E                            _partsByResource.Add(resource.info.name, nParts);\u003Cbr\u003E                        }\u003Cbr\u003E                    }\u003Cbr\u003E                 }\u003Cbr\u003E\u003Cbr\u003E                return _partsByResource;\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECool. Thank you so much ill try it tonight\u003C/p\u003E\n"},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2013-12-31T22:48:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Papa_Joe\u0022 data-cite=\u0022Papa_Joe\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        // Provides a list of resources and the parts that contain that resource.\u003Cbr\u003E        private Dictionary\u0026lt;string, List\u0026lt;Part\u0026gt;\u0026gt; _partsByResource;\u003Cbr\u003E        private Dictionary\u0026lt;string, List\u0026lt;Part\u0026gt;\u0026gt; PartsByResource\u003Cbr\u003E        {\u003Cbr\u003E            get\u003Cbr\u003E            {\u003Cbr\u003E                if (_partsByResource == null)\u003Cbr\u003E                    _partsByResource = new Dictionary\u0026lt;string, List\u0026lt;Part\u0026gt;\u0026gt;();\u003Cbr\u003E                else\u003Cbr\u003E                    _partsByResource.Clear();\u003Cbr\u003E\u003Cbr\u003E                foreach (Part part in Vessel.Parts)\u003Cbr\u003E                {\u003Cbr\u003E                    // Part has Resources, now where to put them...  (may be more than one place... \u003Cbr\u003E                    foreach (PartResource resource in part.Resources)\u003Cbr\u003E                    {\u003Cbr\u003E                        bool vFound = false;\u003Cbr\u003E                        // is resource in the list yet?.\u003Cbr\u003E                        if (_partsByResource.Keys.Contains(resource.info.name))\u003Cbr\u003E                        {\u003Cbr\u003E                            vFound = true;\u003Cbr\u003E                            List\u0026lt;Part\u0026gt; eParts = _partsByResource[resource.info.name];\u003Cbr\u003E                            eParts.Add(part);\u003Cbr\u003E                        }\u003Cbr\u003E                        if (!vFound)\u003Cbr\u003E                        {\u003Cbr\u003E                            // found a new resource.  lets add it to the list of resources.\u003Cbr\u003E                            List\u0026lt;Part\u0026gt; nParts = new List\u0026lt;Part\u0026gt;();\u003Cbr\u003E                            nParts.Add(part);\u003Cbr\u003E                            _partsByResource.Add(resource.info.name, nParts);\u003Cbr\u003E                        }\u003Cbr\u003E                    }\u003Cbr\u003E                 }\u003Cbr\u003E\u003Cbr\u003E                return _partsByResource;\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOk i may be a c# noob(i am) but copying this directly into a class causes an error here \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eforeach (Part part in Vessel.(error---\u0026gt;)Parts(\u0026lt;---error))\u003C/pre\u003E\u003Cp\u003E does it need to be encapsulated into a method? I am finding the definition \u0022Vessel.Parts\u0022 when i do a goto definition in the ide\u003C/p\u003E\u003Cp\u003EAlso. Would it be possible to do something like this using a method with a bool returnvalue:\u003C/p\u003E\u003Cp\u003EIf ActiveVesselCanStoreResource(resourcename)\u003C/p\u003E\u003Cp\u003E{ resource extractioncode here } else \u003C/p\u003E\u003Cp\u003E{ do something else here }\u003C/p\u003E\u003Cp\u003EEDIT:\u003C/p\u003E\u003Cp\u003Ei figured out doing some debugging that the nullref was not because of requesting resource not storable on vessel in the code, appearently the api is able to handle that, what it doesnt handle is trying to request a resource that is not defined, which was my problem. i seem to have defined either too many resorces in the cfg or have some other issue. but its working now(removed the gas resourses and have used the same definitions as the solid ones eg. propellium instead of propelliumgas) no nullrefs\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-02T00:22:33Z\u0022 title=\u002201/02/2014 12:22  AM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 2, 2014\u003C/time\u003E by landeTLS\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"seanth","CreatedById":79989,"CreatedDateTime":"2014-01-01T03:31:27Z","Content":"\n\u003Cp\u003EA few thoughts as a coder that has not done any coding for KSP. Some general, some specific:\u003C/p\u003E\u003Cp\u003E1.) Squad\u0027s generator module is truly and deeply broken when it comes to using more than one input resource. That alone pretty much guarantees that modders needs to roll their own generator code or use ones made by others.\u003C/p\u003E\u003Cp\u003E2.) There are lots of mods out there with great, useful features. For example, I use Majiir\u0027s KethaneConverter a lot right now. However, these useful bits are often bundled in with code that might not be wanted. It would be supremely useful if things were more modular, even if it meant including multiple dlls with mods. \u003C/p\u003E\u003Cp\u003E3.) To my knowledge, there is no generator module that takes into account the amount of a resource and performs an adjustment on the base output based on that. In my specific case, there is no way to scale oxygen output with amount of photosynthetic biomass. Ideally, the more biomass present, the greater the amount of O2 produced. Put another way: current generators \u003Cem\u003EI know of\u003C/em\u003E just take a fixed amount of a resource A per unit time and turn it into resource B. I would love something that takes the amount of resource A, has a baseline conversion rate, and then uses the total amount of A to scale the amount of B accordingly. If I am wrong here, please oh please point me in the correct directions. See also point 2. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\u003Cp\u003E4.) This is a stretch, but it would nice if we could code right in a cfg using something lightweight (lua? I dunno what else would be considered light weight. Python seems heavy). Then people could roll their own code without needing C# and making a dll. \u003C/p\u003E\u003Cp\u003EThat\u0027s all I have. I mean, I have very specific things I\u0027d love to see--and may end up doing some coding, though I do enough of that and would rather not--but the above points hit my basic thoughts.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-01T03:36:56Z\u0022 title=\u002201/01/2014 03:36  AM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 1, 2014\u003C/time\u003E by seanth\u003C/strong\u003E\n\u003Cbr\u003Eimproved readability\n\u003C/span\u003E\n"},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2014-01-02T03:52:39Z","Content":"\n\u003Cp\u003ENr 3 is something that would be really nice to have. I remember trying to do something like that in a part config with a complex line of kethaneconverter modules. But couldnt get it working. Something that would be able to accept a powercurve(like the solarpanel module) in the cfg would probably be the best approach.\u003C/p\u003E\n"},{"CreatedByName":"Aatch","CreatedById":98993,"CreatedDateTime":"2014-01-06T03:56:46Z","Content":"\n\u003Cp\u003EOk, so this doesn\u0027t get too fragmented, there are currently two projects related to resources going on: \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/61605-Modding-Team-Wanted-the-Resource-Expansion-Module-Project\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/61605-Modding-Team-Wanted-the-Resource-Expansion-Module-Project\u003C/a\u003E and \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/64595-Open-Resource-System-%28ORS%29-Mod-Resource-API-version-1-0-0\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/64595-Open-Resource-System-%28ORS%29-Mod-Resource-API-version-1-0-0\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EWe probably don\u0027t want to end up with a million different ways to handle resources, so it\u0027d be nice to work together to make sure there\u0027s only really one canonical way to do this.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-06T04:36:40Z\u0022 title=\u002201/06/2014 04:36  AM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 6, 2014\u003C/time\u003E by Aatch\u003C/strong\u003E\n\u003Cbr\u003Eaccidentally a word\n\u003C/span\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2014-01-06T04:40:15Z","Content":"\n\u003Cp\u003EThe ORS is completely unrelated to this; it\u0027s an open resource spawning and collection system similar to Kethane\u003C/p\u003E\u003Cp\u003EThe other \u0027thing\u0027 is a bunch of nonsense and is mostly attempting the same thing.\u003C/p\u003E\u003Cp\u003EThis thread is looking to replace how resources in parts that are on ships behave, and how other parts that need to create or consume those resources do so.\u003C/p\u003E\n"},{"CreatedByName":"Aatch","CreatedById":98993,"CreatedDateTime":"2014-01-06T05:36:24Z","Content":"\n\u003Cp\u003EAh yes, I see that now, just a little difficult to figure out which system is doing what. Still, probably a good idea to keep related projects in mind while working on this.\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2014-01-13T07:27:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Greys\u0022 data-cite=\u0022Greys\u0022\u003E\u003Cdiv\u003EThe biggest issue that I can foresee with my limited abilities is that we won\u0027t be able to make the stock modules and partmodules use our manager; I may be wrong about that, and I will be wrong gladly; but if I\u0027m not wrong it would mean that this alternate resource manager (ARM) would need to also contain either natively or as a pack-along sibling project, a set of replacement modules for anything in KSP that consumes or creates resources.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs of KSP 0.23, we can once again override Part.RequestResource(). In other words, we can rewrite the resource handling code for \u003Cem\u003Eany\u003C/em\u003E module\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20ACpast, present or future. I recommend caution to anyone who feels like doing this, because it\u0027s a core part of the game and only one mod can reasonably override resource behavior at a time. That said, I expect that whatever solution comes out of this thread will use it.\u003C/p\u003E\n"},{"CreatedByName":"Hyomoto","CreatedById":64780,"CreatedDateTime":"2014-01-13T22:25:11Z","Content":"\n\u003Cp\u003EI didn\u0027t see this mentioned but I feel this should really be at the top of the list. Some method that can avoid modders creating their own versions of the same resources. The user doesn\u0027t want to deal with your uranium and his uranium, he just wants the uranium to work. I\u0027m not sure if that\u0027s more of a common courtesy for the user situation, but something like the ore dictionary with the Minecraft Forge API. This sort of ties into a \u0027plain language\u0027 approach as well. KWatts or TACOxygen isn\u0027t useful information for the user, it just serves to scatter the concept.\u003C/p\u003E\u003Cp\u003EIdeally it wouldn\u0027t just an API for creating and handling new resources, but also for tying together existing ones to promote a higher level of compatibility between mods.\u003C/p\u003E\n"}]}