{"TopicId":62902,"ForumId":36,"TopicTitle":"[1.8.x to 1.12.x] kRPC: Remote Procedure Call Server (v0.5.1, 2nd March 2023)","CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-02-11T20:00:32Z","PageNum":2,"Articles":[{"CreatedByName":"diomedea","CreatedById":93700,"CreatedDateTime":"2014-02-13T01:12:45Z","Content":"\n\u003Cp\u003E@ djungelorm: happy about the changes, real good improvements already, and good plans for further.\u003C/p\u003E\u003Cp\u003EAnd, even more important, you are telling users what to expect from kRPC, so they can (at least in theory) take their precautions if trying to use it outside the protection offered by their home networks.\u003C/p\u003E\n"},{"CreatedByName":"Nuke","CreatedById":10883,"CreatedDateTime":"2014-02-13T04:30:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022djungelorm\u0022 data-cite=\u0022djungelorm\u0022\u003E\u003Cdiv\u003EThe main use case I had in mind for the plugin was for use just on the local machine. However, TCP sockets happened to be the simplest cross-platform and language-agnostic way of doing interprocess communication - but appear to have opened a can of worms! Ideally (for local use) it should use something like unix pipes (for performance reasons as well as security!) although I\u0027m not sure what the Windows equivalent would be. Anyone know?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ei want to say named pipes is what they go by on windows. its pretty much the same thing as whats used on *nix. good luck finding a library that works on all platforms though. tcp/ip beats it out in this regard. \u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://msdn.microsoft.com/en-us/library/windows/desktop/aa365590%28v=vs.85%29.aspx\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://msdn.microsoft.com/en-us/library/windows/desktop/aa365590%28v=vs.85%29.aspx\u003C/a\u003E\u003C/p\u003E\u003Cp\u003Eive tried to use them before for other projects but i was never satisfied with the results. its just so much easier to use the loopback address (127.0.0.1) under tcp/ip. i kinda like the idea of being able to use network assets if i want to (like being able to talk to a tablet or a raspberry pi). you might want to keep the loopback as the default address though. it should be pretty secure since it will never leave the local machine.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-13T04:46:14Z\u0022 title=\u002202/13/2014 04:46  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 13, 2014\u003C/time\u003E by Nuke\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Pontiac","CreatedById":62216,"CreatedDateTime":"2014-02-13T14:52:24Z","Content":"\n\u003Cp\u003E@Dio\u0026gt;\u003C/p\u003E\u003Cp\u003EMaybe I misinterpreted the order you had listed as a \u0022list of things that should be in\u0022 versus \u0022priorities of what should be considered\u0022.\u003C/p\u003E\u003Cp\u003EThe lack of authentication AND having a window come up and say \u0022Hey, is this connection from this other device OK?\u0022 was NEVER thought of to be taken off the table for this mod, but, there are exploits that get around authentication entirely, depending on the program.\u003C/p\u003E\u003Cp\u003EThe other thing is, at a hardware level, encryption might not be done at the NIC level, but at the CPU level. Some NICs are extremely dumb devices, meaning, they receive information from the CPU, which determines everything about the package (Except headers and such) and out it goes, which is where my concern is about the encryption. The CPU still needs to handle it, and on a multi-proc, multi-threaded CPU system not a big deal. But only if it is outside of KSP. There are some NICs where you tell the driver \u0022Use this key with this protocol, and everything will be zen\u0022 and the CPU just pumps the raw data to the NIC and the NIC handles everything. Even if a separate application were to be running that would do the encryption/decryption and keep network communication limited to LOCALHOST for unencrypted traffic, while, anything out on the network goes through encryption, OK, I\u0027m fine with that. But it\u0027d need to be a completely different program, outside of KSP.\u003C/p\u003E\u003Cp\u003E@Nuke\u0026gt;\u003C/p\u003E\u003Cp\u003EI THOUGHT about named pipes as well, but the drawback on that is, as you mentioned, but its not all that fun to play with. Windows also has an inter-process communication protocol as well, that isn\u0027t named pipes, works on a client/server kind of concept, sits 100% local to the machine, but for the life of me, I just can\u0027t freak\u0027n think of it. I was playing with it it back in the Win 9x days and after my experience with it, I gave up with it.\u003C/p\u003E\u003Cp\u003ELOCALHOST for default listening should be the way to go. With the third-party app I mentioned above if you want to be security conscious, go for it. But if you want the plain text, the option to listen to a physical NIC on a real IP, then it should be allowed as well.\u003C/p\u003E\u003Cp\u003E@All\u0026gt; I\u0027m glad no one has battered me with \u0022What the hell is up with that long post?\u0022 or I get that post reported... At least people took notice. YAY!\u003C/p\u003E\n"},{"CreatedByName":"diomedea","CreatedById":93700,"CreatedDateTime":"2014-02-13T15:47:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Pontiac\u0022 data-cite=\u0022Pontiac\u0022\u003E\u003Cdiv\u003E... but, there are exploits that get around authentication entirely, depending on the program.\u003Cp\u003E...\u003C/p\u003E\u003Cp\u003E... But it\u0027d need to be a completely different program, outside of KSP.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAgreed. Very good points. \u003C/p\u003E\u003Cp\u003EExploits certainly exist, and even more measures than suggested til now would be needed to further limit them. Though, I am not considering system-wide vulnerabilities that should not be this plugin business to amend. But certainly, if you spot any other measure that would significantly improve security with this plugin, please tell.\u003C/p\u003E\u003Cp\u003EUnderstood what is your point with encryption load. Yes, there may be machines running KSP that only have dumb NICs and not multithreading. If I\u0027m right, you\u0027re suggesting a different program, outside KSP, handling encryption and traffic to/from kRPC, could be a better solution. It\u0027s kind of an interesting sys architecture that should work. I suspect something useful for this purpose may already exist, need not be developed; but you may already have something up your mind?\u003C/p\u003E\n"},{"CreatedByName":"Nuke","CreatedById":10883,"CreatedDateTime":"2014-02-13T17:06:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Pontiac\u0022 data-cite=\u0022Pontiac\u0022\u003E\u003Cdiv\u003E@Nuke\u0026gt;\u003Cp\u003EI THOUGHT about named pipes as well, but the drawback on that is, as you mentioned, but its not all that fun to play with. Windows also has an inter-process communication protocol as well, that isn\u0027t named pipes, works on a client/server kind of concept, sits 100% local to the machine, but for the life of me, I just can\u0027t freak\u0027n think of it. I was playing with it it back in the Win 9x days and after my experience with it, I gave up with it.\u003C/p\u003E\u003Cp\u003ELOCALHOST for default listening should be the way to go. With the third-party app I mentioned above if you want to be security conscious, go for it. But if you want the plain text, the option to listen to a physical NIC on a real IP, then it should be allowed as well.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Emsdn\u0027s list of the means of interprocess communication on windows.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://msdn.microsoft.com/en-us/library/windows/desktop/aa365574%28v=vs.85%29.aspx#base.using_com_for_ipc\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://msdn.microsoft.com/en-us/library/windows/desktop/aa365574%28v=vs.85%29.aspx#base.using_com_for_ipc\u003C/a\u003E\u003C/p\u003E\u003Cp\u003Eproblem is all this stuff only works on windows. there may be a *nix equivalent for some of those, but as i said earlier good luck finding a cross platform library. im 100% in support of using tcp/ip and defaulting to localhost.\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-02-13T18:35:47Z","Content":"\n\u003Cp\u003EThanks for the pointer Nuke. Also, handling multiple clients with TCP/IP is a breeze compared to some of the other options, so I\u0027ll stick with it.\u003C/p\u003E\n"},{"CreatedByName":"Pontiac","CreatedById":62216,"CreatedDateTime":"2014-02-14T13:49:15Z","Content":"\n\u003Cp\u003EAhhhh yeah... Dynamic Data Exchange. DDE. That was what I was playing with. Must have blocked that outta my memory or something. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003EBut yes, this is a Windows Only thing. The only other thing that could possibly work on *Nix systems is to create a FIFO file and stream the data in and out. You\u0027d probably need two files though, one for client-\u0026gt;Server and another Server-\u0026gt;Client. I don\u0027t think FIFOs are two way capable.\u003C/p\u003E\n"},{"CreatedByName":"mic_e","CreatedById":60757,"CreatedDateTime":"2014-02-16T05:01:12Z","Content":"\n\u003Cp\u003ELooking good so far, nice work. Having tried several times to get IronPython running in KSP, I feel your pain and appreciate your solution.\u003C/p\u003E\u003Cp\u003EOne thing to think about for the far future:\u003C/p\u003E\u003Cp\u003E(0) Add RPCs for creating in-game GUIs; imagine the possibilities: Display KER-like readouts, or even send commands to the script via GUI buttons. The latter might even incorporate RT2\u0027s control lag system; I _think_ I heard Cilph mention that he\u0027s working on an API for other mods to use, I suggest talking to him on #kspmodders.\u003C/p\u003E\u003Cp\u003EOne thing for the slightly nearer future:\u003C/p\u003E\u003Cp\u003E(1) For basic autopiloting (especially, pointing prograde/retrograde/maneuver-grade/etc), I\u0027d recommend looking into how Mechjeb does that, and probably even out-right copying most of the code; no need to re-invent the wheel. In fact, both RT2 and kOS simply use Mechjeb\u0027s code. Your MIT license as opposed to MechJeb\u0027s GPL might pose a problem though... If I were You I\u0027d simply switch over to GPL anyways.\u003C/p\u003E\u003Cp\u003EAnd... a few more immediately-relevant things, mostly regarding your distribution:\u003C/p\u003E\u003Cp\u003E(2) Your shebang line in the example python script is #!/usr/bin/env python. Some more modern distros such as Arch Linux already use python3 as standard python interpreter, so many scripts that use this shebang line break. I\u0027d heavily recommend writing #!/usr/bin/env python2 instead.\u003C/p\u003E\u003Cp\u003E(3) I\u0027d appreciate it if you\u0027d ship the auto-generated proto.py file... It would save the trouble of having to download protobuf-csharp-port and figure out/run the Makefile.\u003C/p\u003E\u003Cp\u003E(4) You should probably publish more detailed build instructions... I\u0027m too lazy to figure out the Makefile right now, but simply changing KSP_DIR to my path in the Makefile didn\u0027t fix the \u0022can\u0027t find Assembly-CSharp\u0022 errors. Probably I\u0027ll have to copy the whole project into my ~/kerb/GameData folder, but that shouldn\u0027t really be neccesary.\u003C/p\u003E\u003Cp\u003E(5) I managed to break the Control class by using it in an interactive python interpreter and pressing ^C while it was executing a command... Though I admit that adding KeyboardInterrupt exception handlers everywhere wouldn\u0027t be worth it.\u003C/p\u003E\u003Cp\u003E(6) You\u0027ll want to look into toolbar integration for the UI.\u003C/p\u003E\u003Cp\u003EEdit after reading the full thread:\u003C/p\u003E\u003Cp\u003ENetwork sockets are perfectly fine IMHO, just limit to localhost or ask the user on connection attempt (as you\u0027re already doing) will be enough security. Don\u0027t artificially limit yourself to platform-specific solutions.\u003C/p\u003E\u003Cp\u003EFIFOs are 1-way indeed. On POSIX you\u0027d want to use UNIX sockets (which work and are used exactly like network sockets, but instead of connecting to an IP/Port you open a file).\u003C/p\u003E\u003Cp\u003EP.S. wow this post has evolved into a wall of text over a few edits, and I guess this P.S. message isn\u0027t making it better \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EP.P.S. nice to meet a fellow Linux developer, who shows the boldness of delivering a Makefile with his C# project.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-16T06:47:36Z\u0022 title=\u002202/16/2014 06:47  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 16, 2014\u003C/time\u003E by mic_e\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-02-16T13:50:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mic_e\u0022 data-cite=\u0022mic_e\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E(0) Add RPCs for creating in-game GUIs...\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENice idea! I had in mind that the you\u0027d just output stuff to the terminal or something like an R script to draw graphs, but this would be a great inclusion too. Displaying data to a custom window would be easy. I\u0027m not so sure about sending commands to client scripts - the architecture is designed for the request/response to happen in one direction, so isn\u0027t set up for clients to receive commands.\u003C/p\u003E\u003Cp\u003EThere are probably workarounds though. Its not pretty, but we could have the clients actively polling the server for new commands.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mic_e\u0022 data-cite=\u0022mic_e\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E(1) For basic autopiloting (especially, pointing prograde/retrograde/maneuver-grade/etc), I\u0027d recommend looking into how Mechjeb does that...\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI agree - it would be a lot of wasted effort coding an autopilot that MechJeb already does very well. krpc.dll should provide an API so that other plugins can expose functionality as RPC calls, e.g. autopilot commands from MechJeb. I haven\u0027t found the time to look into this in any detail yet though.\u003C/p\u003E\u003Cp\u003EAnd for the more immediate stuff:\u003C/p\u003E\u003Cp\u003E(2) Fixed!\u003C/p\u003E\u003Cp\u003E(3) \u002B (4) I\u0027ve updated the readmes with build instructions, and included dependencies in the repository - so it should be much easier to figure out now!\u003C/p\u003E\u003Cp\u003E(5) Fun. I need to revisit the python client code - it doesn\u0027t do clean disconnection from the server yet.\u003C/p\u003E\u003Cp\u003E(6) Yep! On the todo list.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EP.P.S. nice to meet a fellow Linux developer, who shows the boldness of delivering a Makefile with his C# project.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E I\u0027m doing all my development in MonoDevelop on Ubuntu, and it\u0027s nice having a makefile so I can just type \u0022make ksp\u0022 into a terminal and have it deploy the plugin to gamedata, launch ksp and switch to an active vessel. And it handles all the jiggery pokery of compiling protocol buffer definitions...\u003C/p\u003E\n"},{"CreatedByName":"ElasticRaven","CreatedById":25316,"CreatedDateTime":"2014-02-16T15:48:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022djungelorm\u0022 data-cite=\u0022djungelorm\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI might try to automatically export the public KSP API through the RPC server, but this needs more research...\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt looks like you are sending the field values as part of the response to the client. If those values change on the server, the client wouldn\u0027t know. So what about on the server keeping a map from object IDs (which you make up) to the actual objects. The client can have a peer object, and when you call a method or get/set a field on the client peer object, it sends a message to the server to actually perform the operation. All state is maintained on the server, so there\u0027s no chance of the client thinking a field is one value but actually it has been changed on the server.\u003C/p\u003E\u003Cp\u003EThen it might be possible to write a script or some C# code to create all the client peer object classes instead of creating them manually.\u003C/p\u003E\u003Cp\u003EI\u0027m working on some proof of concept code if you\u0027re interested.\u003C/p\u003E\u003Cp\u003EBtw, I\u0027m not a C# developer, nor do I have much experience with networking code, so if any of that sounds like gibberish just let me know \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"mic_e","CreatedById":60757,"CreatedDateTime":"2014-02-16T22:02:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022djungelorm\u0022 data-cite=\u0022djungelorm\u0022\u003E\u003Cdiv\u003EI\u0027m not so sure about sending commands to client scripts - the architecture is designed for the request/response to happen in one direction, so isn\u0027t set up for clients to receive commands.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E(0) My basic idea: Use a multi-threaded client. One thread does a blocking RPC for waits for user input, and the other does its usual stuff. That way, you can let the script writer worry about this stuff. Disclaimer: I didn\u0027t really look at your C# or Python code, so I don\u0027t know whether this would be possible/easy. That being said, polling is something truly horrible, and you should avoid it at all costs.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022djungelorm\u0022 data-cite=\u0022djungelorm\u0022\u003E\u003Cdiv\u003Ekrpc.dll should provide an API so that other plugins can expose functionality as RPC calls\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s a great idea, but\u003C/p\u003E\u003Cp\u003E(1.0) I think you\u0027d need quite the critical userbase to get the authors of the big plugins like Mechjeb to expose their functionality via it.\u003C/p\u003E\u003Cp\u003E(1.1) There\u0027s many other plugins (Selene, kOS, Jebnix, ...) that probably also want to an API like this, so the API should probably be its own plugin, and I imagine it would be a rather large project.\u003C/p\u003E\u003Cp\u003E(1.2) I\u0027d prefer not having to install Mechjeb for my main save (Yes, I\u0027m one of those guys who refuse to use Mechjeb, and among the \u0027hey I want to write my own autopilot\u0027 faction that will basically be your userbase, I think a lot of people are)\u003C/p\u003E\u003Cp\u003EIn conclusion, I\u0027d really recommend stealing Mechjebs code and copying it into the core plugin - This is basic functionality, and without it, there\u0027s no way I\u0027m gonna use kRPC in my main save.\u003C/p\u003E\u003Cp\u003EIdeally the game should simply expose a method to change the heading that the SAS is locked to, to prevent every mod developer from having to entirely re-implement SAS.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022\\\u0022 data-cite=\u0022\\\u0022\u003E\u003Cdiv\u003E(stuff)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think you\u0027ll want to look into System.Reflection on the C# side. Overloading the getter/setter methods on the python side sounds like a good idea.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-16T22:07:05Z\u0022 title=\u002202/16/2014 10:07  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 16, 2014\u003C/time\u003E by mic_e\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-02-17T01:51:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ElasticRaven\u0022 data-cite=\u0022ElasticRaven\u0022\u003E\u003Cdiv\u003EIt looks like you are sending the field values as part of the response to the client. If those values change on the server, the client wouldn\u0027t know...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EProxy objects (i.e. objects whose properties auto-update from the server) is definitely something I want to include. I think it can be implemented solely on the client side though (in the python code) which would allow the server to be kept stateless which keeps things simple (ignoring state being held by the game of course!). Although if we do do it on the client side we might get some fun issues when there are multiple clients!\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EThen it might be possible to write a script or some C# code to create all the client peer object classes instead of creating them manually.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYep definately. The python client library currently does this for RPC calls. There is an RPC call that lists all the available methods and their parameter/return types. The python uses this info to create a bunch of objects representing the RPC calls, to make them appear like normal python methods. We could do something similar to create auto-create objects for the parameter/return values.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ElasticRaven\u0022 data-cite=\u0022ElasticRaven\u0022\u003E\u003Cdiv\u003EI\u0027m working on some proof of concept code if you\u0027re interested.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESure! Be happy to take a look at what you come up with.\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-02-17T02:19:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mic_e\u0022 data-cite=\u0022mic_e\u0022\u003E\u003Cdiv\u003E(0) My basic idea: Use a multi-threaded client ... That being said, polling is something truly horrible, and you should avoid it at all costs.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah that could work. The server would need to be extended slightly to not hang the game when an RPC is blocked, but I don\u0027t think that\u0027d be hard to do.\u003C/p\u003E\u003Cp\u003EAgreed that we should avoid polling! This reminds me of an idea I had where you use an RPC call to request a stream of e.g. flight data from the server. Then you don\u0027t have to keep requesting it from the server. Would save the overhead of making repeated calls to poll for it. But that idea can wait...\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E(1.0) I think you\u0027d need quite the critical userbase to get the authors of the big plugins like Mechjeb to expose their functionality via it.\u003C/p\u003E\u003Cp\u003E(1.1) There\u0027s many other plugins (Selene, kOS, Jebnix, ...) that probably also want to an API like this, so the API should probably be its own plugin, and I imagine it would be a rather large project.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah I didn\u0027t expect that the big plugins would jump to modify themselves to include this stuff! But it might be possible to write a thin wrapper over plugins like mechjeb to expose their functionality through the RPC server (e.g. include a krpc-mechjeb.dll with kRPC). I had a quick look at the code for mechjeb and a lot of its functionality is exposed as public classes. This way we can expose features from the big plugins without needing to modify them.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E(1.2) I\u0027d prefer not having to install Mechjeb for my main save (Yes, I\u0027m one of those guys who refuse to use Mechjeb, and among the \u0027hey I want to write my own autopilot\u0027 faction that will basically be your userbase, I think a lot of people are)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETotally agree, MechJeb should not be a prerequisite for kRPC. I don\u0027t want to use it in my scripts either, but it might be nice to include so that people starting out writing autopilot scripts can use bits of MechJeb, then slowly replace them with their own code (that uses just basic autopilot such as setting headings).\u003C/p\u003E\u003Cp\u003EkRPC should definately be useful in its own right - without needing to rely on having other plugins. I think a good plan would be to ship 2 dlls: krpc.dll provides just the RPC server and an API for adding functionality to it (which I\u0027ve just implemented - I\u0027ll add details to the OP), and krpc-services.dll provides a set of useful functionality (basic autopiloting, getting flight data etc.)\u003C/p\u003E\u003Cp\u003EThat way kRPC will be useful on its own, and if this stuff takes off and other plugins want expose their functionality via it they could just include krpc.dll\u003C/p\u003E\n"},{"CreatedByName":"mic_e","CreatedById":60757,"CreatedDateTime":"2014-02-23T04:20:47Z","Content":"\n\u003Cp\u003ESounds like a pretty good concept; it\u0027d also solve some licensing issues for the Smart SAS code - simply put that in its own service provider DLL and GPL only that DLL.\u003C/p\u003E\u003Cp\u003EAlso, the Makefile still doesn\u0027t work, it didn\u0027t find the references: I needed to create a symlink ln -s ~/kerb/KSP_Data/Managed lib/ksp\u003C/p\u003E\u003Cp\u003EI think your Makefile could auto-create that symlink depending on the KSP_DIR variable.\u003C/p\u003E\u003Cp\u003Etest -d lib/ksp || ln -s \u0022$(KSP_DIR)/KSP_Data/Managed\u0022\u003C/p\u003E\u003Cp\u003EAlso, I needed to install inkscape (you should add that to your apt-get example command, or instead use something more common/lightweight like imagemagick (I have no idea whether imagemagick supports svgs, but in my experience it can do absolutely everything)\u003C/p\u003E\u003Cp\u003EApart from that, I really like your build system... the most fun so far I\u0027ve had building a KSP mod.\u003C/p\u003E\u003Cp\u003EOh, and I also suggest a test in the install recipe:\u003C/p\u003E\u003Cp\u003Etest -d \u0022$(KSP_DIR)/GameData\u0022\u003C/p\u003E\u003Cp\u003EOoooh... looking at example.py, the actual project has evolved nicely... but it gave me a python exception after clicking \u0027Allow\u0027: \u003Ca href=\u0022http://pastebin.com/EG8df23Z\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://pastebin.com/EG8df23Z\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EAfter hacking around that issue, there also seems to be a problem with setting throttle... which I\u0027m not motivated to look into right now. Ideally, the python-side interface would allow something like\u003C/p\u003E\u003Cp\u003EControls.throttle *= 0.95\u003C/p\u003E\u003Cp\u003Eand\u003C/p\u003E\u003Cp\u003EControls.SAS = True\u003C/p\u003E\u003Cp\u003Eon the .NET side, service providers could hint that something is a getter/setter method pair for a field that should be called \u0027SAS\u0027.\u003C/p\u003E\u003Cp\u003Eon the python side, you could use the built-in \u0027property\u0027.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-23T05:57:09Z\u0022 title=\u002202/23/2014 05:57  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 23, 2014\u003C/time\u003E by mic_e\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-02-23T20:10:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mic_e\u0022 data-cite=\u0022mic_e\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAlso, the Makefile still doesn\u0027t work...\u003C/p\u003E\u003Cp\u003E...\u003C/p\u003E\u003Cp\u003EApart from that, I really like your build system... the most fun so far I\u0027ve had building a KSP mod.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks! I was worried my build scripts were a little arcane... I\u0027ve fixed the errors you found, and incorporated your suggestions into the build script. A quick googling suggests imagemagick\u0027s handling of svg files isn\u0027t great, so I\u0027ll stick with inkscape for now. I\u0027ve added it to the readme along with install instructions. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mic_e\u0022 data-cite=\u0022mic_e\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EOoooh... looking at example.py, the actual project has evolved nicely... but it gave me a python exception after clicking \u0027Allow\u0027: \u003Ca href=\u0022http://pastebin.com/EG8df23Z\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://pastebin.com/EG8df23Z\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe client code on the master branch is a bit broken at the moment (as I added the ability to pass value types - int, float, string etc. - as parameters to procedures in the server code, but the client code hasn\u0027t been updated to use it yet).\u003C/p\u003E\u003Cp\u003EI\u0027m, currently rewriting the client code to make it more robust and work with this new feature (the previous implementation was just a quick and dirty first attempt anyway). I\u0027ll let you know when I\u0027ve merged the changes back into master. (If your interested it\u0027s on this branch: \u003Ca href=\u0022https://github.com/djungelorm/krpc/tree/feature/python-client\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/djungelorm/krpc/tree/feature/python-client\u003C/a\u003E). \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mic_e\u0022 data-cite=\u0022mic_e\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EIdeally, the python-side interface would allow something like\u003C/p\u003E\u003Cp\u003EControls.throttle *= 0.95\u003C/p\u003E\u003Cp\u003Eand\u003C/p\u003E\u003Cp\u003EControls.SAS = True\u003C/p\u003E\u003Cp\u003Eon the .NET side, service providers could hint that something is a getter/setter method pair for a field that should be called \u0027SAS\u0027.\u003C/p\u003E\u003Cp\u003Eon the python side, you could use the built-in \u0027property\u0027.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah that would be a nice feature! I\u0027ll add it to the todo list.\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-02-24T02:07:38Z","Content":"\n\u003Cp\u003EI\u0027ve finished my rewrite of the client code, so the example script should work properly now. I\u0027ll try to not make any breaking changes to the master branch on github in future...\u003C/p\u003E\u003Cp\u003EI\u0027ve also updated the OP with a download link to the latest built binaries.\u003C/p\u003E\n"},{"CreatedByName":"Aghanim","CreatedById":76587,"CreatedDateTime":"2014-02-24T11:44:23Z","Content":"\n\u003Cp\u003ESo, let me compile every info I have found here...\u003C/p\u003E\u003Cp\u003EThis mod allows us to remote control KSP ships from outside the game, using every application that supports TCP serialization. It accepts multiple connections. In this sense, its like Orb::Connect. So, the first thing that comes to my head is tablet based RasterPropMonitor \u003C/p\u003E\u003Cp\u003EThe second thing that would be very interesting is an external map view program. The program will also have maneuver editor and better maneuver node, with MechJeb autopilot and KSPTOT-like trajectory optimization. Using this, we could automate tedious tasks like periapsis kicks easier\u003C/p\u003E\n"},{"CreatedByName":"mic_e","CreatedById":60757,"CreatedDateTime":"2014-03-12T14:35:26Z","Content":"\n\u003Cp\u003EFollowing the progress in the git repo, this seems to be coming along really nicely.\u003C/p\u003E\u003Cp\u003EIn fact, I think it has a stable enough interface to write 3rd-party service providers. I\u0027m gonna try and implement a heading service provider, which reports and holds different kinds of headings in surface/orbit/target/... mode, and report back any issues.\u003C/p\u003E\u003Cp\u003EOne thing I already know I want: Support for enums. Think ksp.heading.mode = ksp.heading.SURFACE instead of ksp.heading.mode = 3.\u003C/p\u003E\u003Cp\u003EEdit: Another thing that would be awesome: Support for default arguments (specify default arguments in C#, and they get transferred to Python)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-12T19:17:36Z\u0022 title=\u002203/12/2014 07:17  PM\u0022 data-short=\u002210 yr\u0022\u003EMarch 12, 2014\u003C/time\u003E by mic_e\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-03-13T11:28:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mic_e\u0022 data-cite=\u0022mic_e\u0022\u003E\u003Cdiv\u003EFollowing the progress in the git repo, this seems to be coming along really nicely.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E I\u0027m quite pleased with the way the services api has turned out.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mic_e\u0022 data-cite=\u0022mic_e\u0022\u003E\u003Cdiv\u003E... I\u0027m gonna try and implement a heading service provider, which reports and holds different kinds of headings in surface/orbit/target/... mode, and report back any issues.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027d be excellent, thanks. I have a design document I wrote a while ago for \u0022essential\u0022 services such as this, and have put it on the wiki here \u003Ca href=\u0022https://github.com/djungelorm/krpc/wiki/SpaceCenter-Service\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/djungelorm/krpc/wiki/SpaceCenter-Service\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EYou might also want to take a look at this branch on github, where I\u0027ve implemented bits and pieces of it \u003Ca href=\u0022https://github.com/djungelorm/krpc/tree/feature/basic-services\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/djungelorm/krpc/tree/feature/basic-services\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EEnums are supported by protocol buffers, so it should be possible to include them. I\u0027ll have a look into default arguments too, I think that should be an easy to implement.\u003C/p\u003E\u003Cp\u003ESome other things kRPC can\u0027t do are calling constructors and function overloading. I think constructors are worth supporting, but am not so sure about overloading. Python for example doesn\u0027t have overloading, so I\u0027m not sure how it\u0027d work on that end.\u003C/p\u003E\u003Cp\u003EEdit: Would be nice to add support for named arguments too.\u003C/p\u003E\u003Cp\u003EEdit again: Named arguments and optional parameters have now been implemented!\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-14T01:16:33Z\u0022 title=\u002203/14/2014 01:16  AM\u0022 data-short=\u002210 yr\u0022\u003EMarch 14, 2014\u003C/time\u003E by djungelorm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"mic_e","CreatedById":60757,"CreatedDateTime":"2014-03-14T16:28:06Z","Content":"\n\u003Cp\u003EMy Autopilot service is basically done; the important parts, found in ReferenceRotation.cs and AutoPilotAddon.cs, are taken and modified from RT2, which took the relevant code form kOS, which took and modified the relevant code from MJ2.\u003C/p\u003E\u003Cp\u003EIf it was a larger project, I\u0027d GPL it, but you (and everyone else) can have it and do with it whatever you want, under the condition that you credit me. Note, however, that the MJ2/kOS/RT2 parts are GPL\u0027d.\u003C/p\u003E\u003Cp\u003EAn example session would be:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003Eksp=krpc.connect()\u003C/p\u003E\u003Cp\u003Eksp.Autopilot.Engage(\u0022surface\u0022, 90, 45) #set east heading at 45 deg pitch\u003C/p\u003E\u003Cp\u003Ewhile ksp.Autopilot.ErrorYP \u0026gt; 1: #while the error in Yaw/Pitch direction is \u0026gt; 1deg\u003C/p\u003E\u003Cp\u003E time.sleep(1)\u003C/p\u003E\u003Cp\u003Eksp.Autopilot.Engage(\u0022orbitv\u0022) #set heading to orbital velocity vector\u003C/p\u003E\u003Cp\u003Eksp.Heading.Mode = \u0022surface\u0022\u003C/p\u003E\u003Cp\u003Ewhile True:\u003C/p\u003E\u003Cp\u003E print((ksp.Heading.Yaw, ksp.Heading.Pitch, ksp.Heading.Roll))\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENote that the Autopilot is not without flaws yet: When docking two craft it will freak out reproducably. However, I\u0027m currently not motivated to debug that as I have a lot of other stuff to do.\u003C/p\u003E\u003Cp\u003EI\u0027ve uploaded the source files \u003Ca href=\u0022http://pub.sft.mx/kRPCHeadingService2014031400.tar\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003EAll in all, using your API was a pleasant experience; would develop against again.\u003C/p\u003E\u003Cp\u003EOh, and an other request for the python client code: Automatically convert property and function names to lower case or at least camel case, to match python code standards.\u003C/p\u003E\u003Cp\u003EAlso, I\u0027ve no idea how docstrings work in C#, but if those would somehow appear in python help(), that would be pretty neat, too.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-03-14T16:30:55Z\u0022 title=\u002203/14/2014 04:30  PM\u0022 data-short=\u002210 yr\u0022\u003EMarch 14, 2014\u003C/time\u003E by mic_e\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Aghanim","CreatedById":76587,"CreatedDateTime":"2014-03-16T06:28:39Z","Content":"\n\u003Cp\u003EHow do I install this? The content inside the gamedata folder go inside KSP gamedata folder, but how about python and schema?\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-03-16T22:52:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Aghanim\u0022 data-cite=\u0022Aghanim\u0022\u003E\u003Cdiv\u003EHow do I install this? The content inside the gamedata folder go inside KSP gamedata folder, but how about python and schema?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou\u0027re correct about the game data folder. To install the python module, you just need to add the path to the python folder to your module search path (e.g. PYTHONPATH), then you can do \u0027import krpc\u0027 from a python script. I plan to implement an installer (likely using python pip) to make installing it simpler. The top-level schema directory isn\u0027t needed - not sure why I included it!\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-03-16T23:04:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mic_e\u0022 data-cite=\u0022mic_e\u0022\u003E\u003Cdiv\u003EMy Autopilot service is basically done...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECool! I\u0027ll take a closer look at the code when I have some free time. I\u0027m tempted to make the kRPCServices dll LGPL so I can reuse bits of MJ/RT2 etc.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mic_e\u0022 data-cite=\u0022mic_e\u0022\u003E\u003Cdiv\u003EOh, and an other request for the python client code: Automatically convert property and function names to lower case or at least camel case, to match python code standards.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGood idea. Although I\u0027m slightly worried that it\u0027d be confusing having different things for the C# and python names. Maybe provide both?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mic_e\u0022 data-cite=\u0022mic_e\u0022\u003E\u003Cdiv\u003EAlso, I\u0027ve no idea how docstrings work in C#, but if those would somehow appear in python help(), that would be pretty neat, too.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe documentation is stripped out by the compiler, so we can\u0027t get hold of it via reflection. I think the only way to do this would be to generate an XML documentation file from the code (which most C# compilers can do for you) and distribute that with the dll.\u003C/p\u003E\n"},{"CreatedByName":"tja","CreatedById":106062,"CreatedDateTime":"2014-03-18T09:43:10Z","Content":"\n\u003Cp\u003Ehi dj (and all the others her),\u003C/p\u003E\u003Cp\u003Efound KRPC and its exactly what i wanted to start for some time to get some sort of remote control and using additional screenspace (sucks to sit in front of multiple screens and having all that plugin information stuff clogging the view). luckily u did this, thx for that.\u003C/p\u003E\u003Cp\u003Ei try to build on KRPC to first get a simple webserver showing flight information. my later plans would include scriptable control (like KOS but thru a web app) etc, sky is the limit ...\u003C/p\u003E\u003Cp\u003Emy idea is to also use other devices like laptop displays, tablets etc for additional views on the KSP instance ... so a webapp is it.\u003C/p\u003E\u003Cp\u003Ei will use groovy/grails and GWT for it as this is my bread \u0026amp; butter and it scales nicely.\u003C/p\u003E\u003Cp\u003Ei successfull protoc\u0027d and implemented an equivalent to python/krpc.py in java, will post after some cleanup.\u003C/p\u003E\u003Cp\u003Ei\u0027ve got one problem thou which i found while playin around with the stuff:\u003C/p\u003E\u003Cp\u003Eif i just use your original stuff (KRPC on one the KSP host and example.py w. changed address on my development machine) to remote control KSP on another machine the KSP instance gets extremly laggy (around one frame per second and worse).\u003C/p\u003E\u003Cp\u003Ei just added a long sleep after the connect and it seems the connect alone puts KSP down. disconnecting from either side will bring KSP to senses again.\u003C/p\u003E\u003Cp\u003EKSP.log shows nothing unusual.\u003C/p\u003E\u003Cp\u003EKSP runs flawless on the machine otherwise. both machines are linux, sorry no windows here.\u003C/p\u003E\u003Cp\u003Ei will test further and try to find whats the cause but maybe you have an idea ?!?\u003C/p\u003E\u003Cp\u003Ewbr,tja...\u003C/p\u003E\n"},{"CreatedByName":"tja","CreatedById":106062,"CreatedDateTime":"2014-03-19T08:32:57Z","Content":"\n\u003Cp\u003Ehi again,\u003C/p\u003E\u003Cp\u003Eafter some further testing the picture changed a bit.\u003C/p\u003E\u003Cp\u003Ethe second machine i used for testing has some older hardware with just enuf juice to do KSP @ 1080p/30FPS\u002B - which brought the issue to light as the performance on this machine is horrible as soon as a client connects via KRPC.\u003C/p\u003E\u003Cp\u003Ebut the issue is there on my faster development host too, regardless of \u0022remote\u0022 or \u0022local\u0022 KRPC. i didnt pay attention to the FPS drop in my past experiments but i measured drops to 5FPS\u002B from my usual smooth 60\u002B.\u003C/p\u003E\u003Cp\u003Ei even installed windows 7 and KSP on a spare disk but the problem is there in windows too.\u003C/p\u003E\u003Cp\u003Ei wonder, is nobody out there experiencing this ? everyone plays KSP on perfect HW ?!? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_huh.gif\u0022 alt=\u0022:confused:\u0022\u003E\u003C/p\u003E\n"}]}