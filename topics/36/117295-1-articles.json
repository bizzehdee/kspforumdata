{"TopicId":117295,"ForumId":36,"TopicTitle":"[Solved] How can one mod determine if another is loaded?","CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2015-07-31T02:24:40Z","PageNum":1,"Articles":[{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2015-07-31T02:24:40Z","Content":"I\u0027m looking at the possibility of having my AutomatedScreenshots mod do something if the Historian mod is loaded.\n\nRight now they don\u0027t play well together (Historian doesn\u0027t know when I take a screenshot), and I\u0027m looking into the possibility of having my mod tell Historian that a screenshot is in progress.\n\nSo, I\u0027m looking for an example of one mod detecting if another is installed, and if it is, then calling a public function in that mod.\n\nThanks in advance\n\nLGG\n\n**Edited \u003Ctime datetime=\u00222015-08-02T14:54:51Z\u0022 title=\u002208/02/2015 02:54  PM\u0022 data-short=\u00228 yr\u0022\u003EAugust 2, 2015\u003C/time\u003E by linuxgurugamer**"},{"CreatedByName":"nightingale","CreatedById":119307,"CreatedDateTime":"2015-07-31T02:28:35Z","Content":"\u003E \n\u003E I\u0027m looking at the possibility of having my AutomatedScreenshots mod do something if the Historian mod is loaded.\n\u003E Right now they don\u0027t play well together (Historian doesn\u0027t know when I take a screenshot), and I\u0027m looking into the possibility of having my mod tell Historian that a screenshot is in progress.\n\u003E \n\u003E So, I\u0027m looking for an example of one mod detecting if another is installed, and if it is, then calling a public function in that mod.\n\u003E \n\u003E Thanks in advance\n\u003E \n\u003E LGG\n\nTwo methods off the top of my head:\n\n1. Check if the assembly for Historian is loaded (example [here](https://github.com/jrossignol/ContractConfigurator/blob/master/source/ContractConfigurator/Util/Version.cs#L29)).\n2. Use ModuleManager silliness - have a node of some sort that has NEEDS[Historian]. Check if that node is loaded."},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2015-07-31T11:00:49Z","Content":"\u003E \n\u003E Two methods off the top of my head:\n\u003E \n\u003E \n\u003E 1. Check if the assembly for Historian is loaded (example [here](https://github.com/jrossignol/ContractConfigurator/blob/master/source/ContractConfigurator/Util/Version.cs#L29)).\n\u003E 2. Use ModuleManager silliness - have a node of some sort that has NEEDS[Historian]. Check if that node is loaded.\n\nThanks, #1 works well.\n\nAlthough you do have a function to look for RemoteTech internal to the Version class\n\n#2 is silly as you said, since not only do I need to know if it\u0027s there, I need to be able to access a public function in it.\n\nThe name of the public function will be known, as will the parameter list.\n\nI think I\u0027ve figured it out, I will need to use the function GetComponent.\n\nSuggestions are useful, but (hopefully) not needed right now.\n\nThanks\n\n**Edited \u003Ctime datetime=\u00222015-07-31T11:16:34Z\u0022 title=\u002207/31/2015 11:16  AM\u0022 data-short=\u00228 yr\u0022\u003EJuly 31, 2015\u003C/time\u003E by linuxgurugamer**"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2015-07-31T17:57:10Z","Content":"Ok, I\u0027m officially frustrated :-)\n\nFirst, what I\u0027m trying to do:\n\nUsing Xamarin Studio\n\nI created a local copy of the Historian mod, and added a couple of public functions so that I can properly tell it when to activate.\n\nI have verified that it is built targeting \u0022Mono/.NET 3.5\u0022 in the project options\n\nAfter building it, I manually copied the DLL into my dev install.\n\nI\u0027m trying to access this from my AutomatedScreenshots mod.\n\nI have verified that it is built targeting \u0022Mono/.NET 3.5\u0022 in the project options\n\nFirst, I added a reference to the Historian dll in the References\n\nThen, I added the following to the top of my file. There are two lines for Historian, I\u0027ve tried it with each one by itself, and both together:\n\n    using System.Reflection;using KSEA.Historian;using Historian;\n\nWhen I build with just the above addition, it builds and then runs properly.\n\nThe only thing I tried to do is to create a private variable which will be used to get a pointer to the component. For now, the ONLY code I added is the following:\n\n    private Historian historian;\n\nI\u0027m getting the following error in the log :\n\n    [LOG 13:29:22.986] PhysicsGlobals: Loading database[LOG 13:29:23.304] Load(Assembly): /ModuleManager.2.6.6[LOG 13:29:23.353] AssemblyLoader: Loading assembly at R:\\KSP_1.0.4_Dev\\GameData\\ModuleManager.2.6.6.dll[LOG 13:29:24.139] AssemblyLoader: KSPAssembly \u0027ModuleManager\u0027 V2.5[LOG 13:29:24.139] Load(Assembly): 000_Toolbar/Toolbar[LOG 13:29:24.140] AssemblyLoader: Loading assembly at R:\\KSP_1.0.4_Dev\\GameData\\000_Toolbar\\Toolbar.dll[LOG 13:29:24.142] AssemblyLoader: KSPAssembly \u0027Toolbar\u0027 V1.0[LOG 13:29:24.142] Load(Assembly): AutomatedScreenShots/Plugins/AutomatedScreenshots[LOG 13:29:24.143] AssemblyLoader: Loading assembly at R:\\KSP_1.0.4_Dev\\GameData\\AutomatedScreenShots\\Plugins\\AutomatedScreenshots.dll[LOG 13:29:24.145] Load(Assembly): KSEA/Historian/Historian[LOG 13:29:24.145] AssemblyLoader: Loading assembly at R:\\KSP_1.0.4_Dev\\GameData\\KSEA\\Historian\\Historian.dll[LOG 13:29:24.147] Load(Assembly): MinAmbience/MinAmbience[LOG 13:29:24.147] AssemblyLoader: Loading assembly at R:\\KSP_1.0.4_Dev\\GameData\\MinAmbience\\MinAmbience.dll[LOG 13:29:24.151] AssemblyLoader: Loading assemblies[ERR 13:29:24.173] AssemblyLoader: Exception loading \u0027AutomatedScreenshots\u0027: System.Reflection.ReflectionTypeLoadException: The classes in the module cannot be loaded.  at (wrapper managed-to-native) System.Reflection.Assembly:GetTypes (bool)  at System.Reflection.Assembly.GetTypes () [0x00000] in :0   at AssemblyLoader.LoadAssemblies () [0x00000] in :0Additional information about this exception: System.TypeLoadException: Could not load type \u0027AutomatedScreenshots.AS\u0027 from assembly \u0027AutomatedScreenshots, Version=1.0.5690.22431, Culture=neutral, PublicKeyToken=null\u0027.\n\nI\u0027m obviously doing something wrong, but can\u0027t figure out what. I\u0027m guessing it probably has to do with my unfamiliarity with the language.\n\nHelp would be appreciated.\n\nThanks in advance.\n\n**Edited \u003Ctime datetime=\u00222015-07-31T18:07:31Z\u0022 title=\u002207/31/2015 06:07  PM\u0022 data-short=\u00228 yr\u0022\u003EJuly 31, 2015\u003C/time\u003E by linuxgurugamer**"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-07-31T19:20:36Z","Content":"My suspicion is that you are running into a race condition.\n\nBased on the names, your mod (AutomatedScreenshots) with the letter A loads before the mod you are referencing (Historian) with the letter H. Therefore when your mod tries to find the Historian dependency, it\u0027s not there as it has not loaded yet.\n\nDoes it work (or at least give you a different error) if you change the name of the Historian folder so that it is named 000Historian? KSP loads mod in alphabetical order of the folder names in GameData AFAIK.\n\nPersonally, I prefer to use Reflection for this as it does not run into this issue because it does not check to see if the other mod is loaded until you actually make the call in your code.\n\nI use reflection extensively in my AGX mod, the code in AGX to receive reflection calls [is found here in the External.cs file](https://github.com/SirDiazo/AGExt/blob/master/AGExt/External.cs) and the code needed in the other mod to make reflection calls [can be found here.](https://forum.kerbalspaceprogram.com/threads/74199-Action-Groups-Extended-Development-Thread-and-External-Interface) (Ignore the warning about being out of date, just make sure you are calling the correct method name as listed in External.cs.)\n\nThe added bonus to reflection is that the mod does not care if the other mod is present or not. With the reference method you are using currently, if the mod you reference is missing your mod will always fail to load as it currenltly is.\n\nHope that helps,\n\nD.\n\nedit: It looks like there is also something called [KSPAssemblyDependency you could use?](https://forum.kerbalspaceprogram.com/threads/130306-Referencing-other-mod-s-assemblies)\n\n**Edited \u003Ctime datetime=\u00222015-07-31T19:25:05Z\u0022 title=\u002207/31/2015 07:25  PM\u0022 data-short=\u00228 yr\u0022\u003EJuly 31, 2015\u003C/time\u003E by Diazo**"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2015-07-31T19:53:32Z","Content":"Many big thanks to Sarbian, who identified the fact that the DLLs weren\u0027t being loaded in the right order.\n\nQuick fix was to add a z to the beginning of the directory name.\n\n- - - Updated - - -\n\n\u003E \n\u003E My suspicion is that you are running into a race condition.\n\u003E Based on the names, your mod (AutomatedScreenshots) with the letter A loads before the mod you are referencing (Historian) with the letter H. Therefore when your mod tries to find the Historian dependency, it\u0027s not there as it has not loaded yet.\n\u003E \n\u003E Does it work (or at least give you a different error) if you change the name of the Historian folder so that it is named 000Historian? KSP loads mod in alphabetical order of the folder names in GameData AFAIK.\n\u003E \n\u003E Personally, I prefer to use Reflection for this as it does not run into this issue because it does not check to see if the other mod is loaded until you actually make the call in your code.\n\u003E \n\u003E I use reflection extensively in my AGX mod, the code in AGX to receive reflection calls [is found here in the External.cs file](https://github.com/SirDiazo/AGExt/blob/master/AGExt/External.cs) and the code needed in the other mod to make reflection calls [can be found here.](https://forum.kerbalspaceprogram.com/threads/74199-Action-Groups-Extended-Development-Thread-and-External-Interface) (Ignore the warning about being out of date, just make sure you are calling the correct method name as listed in External.cs.)\n\u003E \n\u003E The added bonus to reflection is that the mod does not care if the other mod is present or not. With the reference method you are using currently, if the mod you reference is missing your mod will always fail to load as it currenltly is.\n\u003E \n\u003E Hope that helps,\n\u003E \n\u003E D.\n\u003E \n\u003E edit: It looks like there is also something called [KSPAssemblyDependency you could use?](https://forum.kerbalspaceprogram.com/threads/130306-Referencing-other-mod-s-assemblies)\n\nIt was, Sarbian helped me on IRC.\n\nI now have it working using the KSPAssemblyDependency, but will be looking at your code since I think that would be safer.\n\nThanks"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2015-07-31T21:16:21Z","Content":"\u003E \n\u003E My suspicion is that you are running into a race condition.\n\u003E Based on the names, your mod (AutomatedScreenshots) with the letter A loads before the mod you are referencing (Historian) with the letter H. Therefore when your mod tries to find the Historian dependency, it\u0027s not there as it has not loaded yet.\n\u003E \n\u003E Does it work (or at least give you a different error) if you change the name of the Historian folder so that it is named 000Historian? KSP loads mod in alphabetical order of the folder names in GameData AFAIK.\n\u003E \n\u003E Personally, I prefer to use Reflection for this as it does not run into this issue because it does not check to see if the other mod is loaded until you actually make the call in your code.\n\u003E \n\u003E I use reflection extensively in my AGX mod, the code in AGX to receive reflection calls [is found here in the External.cs file](https://github.com/SirDiazo/AGExt/blob/master/AGExt/External.cs) and the code needed in the other mod to make reflection calls [can be found here.](https://forum.kerbalspaceprogram.com/threads/74199-Action-Groups-Extended-Development-Thread-and-External-Interface) (Ignore the warning about being out of date, just make sure you are calling the correct method name as listed in External.cs.)\n\u003E \n\u003E The added bonus to reflection is that the mod does not care if the other mod is present or not. With the reference method you are using currently, if the mod you reference is missing your mod will always fail to load as it currenltly is.\n\u003E \n\u003E Hope that helps,\n\u003E \n\u003E D.\n\u003E \n\u003E edit: It looks like there is also something called [KSPAssemblyDependency you could use?](https://forum.kerbalspaceprogram.com/threads/130306-Referencing-other-mod-s-assemblies)\n\nI\u0027ve been trying to get this reflection code working.\n\nThis is the top of the Historian.cs file:\n\n    namespace KSEA.Historian{    [KSPAddon(KSPAddon.Startup.MainMenu, true)]    public class Historian : Singleton\n\nI have a modified copy of Historian, with the following added functions:\n\n            public bool set_m_Active(bool m)        {            m_Active = m;            return m_Active;        }        public bool get_m_Active() {            return m_Active;        }\n\nI have the following:\n\n            public static bool get_m_active()        {            if (!historianAvailable) {                Log.Info (\u0022historian not available\u0022);                return false;            }            try            {                Type calledType = Type.GetType(\u0022KSEA.Historian.Historian, Historian\u0022);                if (calledType != null)                {                Log.Info(\u0022calledType: \u0022 \u002B calledType.ToString());                    return (bool)calledType.InvokeMember(\u0022get_m_Active\u0022, BindingFlags.InvokeMethod |  BindingFlags.Public | BindingFlags.Static , null, null, null);                }            }            catch (Exception e)            {                Log.Info (\u0022Error calling type: \u0022 \u002B e );                return false;            }            return false;        }\n\nbut I\u0027m getting the following error:\n\n    [LOG 17:09:26.356] AutomatedScreenshots: Error calling type: System.MissingMethodException: Cannot find method get_m_Active.  at System.MonoType.InvokeMember (System.String name, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object target, System.Object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, System.String[] namedParameters) [0x00000] in :0  at System.Type.InvokeMember (System.String name, BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object target, System.Object[] args) [0x00000] in :0  at AutomatedScreenshots.Version.get_m_active () [0x00000] in :0\n\nAny ideas?\n\nThanks\n\n**Edited \u003Ctime datetime=\u00222015-07-31T21:29:37Z\u0022 title=\u002207/31/2015 09:29  PM\u0022 data-short=\u00228 yr\u0022\u003EJuly 31, 2015\u003C/time\u003E by linuxgurugamer**"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-07-31T21:40:34Z","Content":"You are running into a reference issue.\n\nNote the \u0022Binding.Static\u0022 line here:\n\n     return (bool)calledType.InvokeMember(\u0022get_m_Active\u0022, BindingFlags.InvokeMethod |  BindingFlags.Public | BindingFlags.Static , null, null, null);\n\nYou would need to make your \u0022get\\_m\\_Active\u0022 method static for that to work.\n\nOtherwise, you need to get a reference to the Historian object that get\\_m\\_Active resides in first.\n\nSomething like this would work I think?\n\n    Type calledType = Type.GetType(\u0022KSEA.Historian.Historian, Historian\u0022);MonoBehaviour HistorianRef = (MonoBehaviour)UnityEngine.Object.FindObjectOfType(calledType); //assumes only one instance of class Historian exists as this command returns first instance found, also must inherit MonoBehavior for this command to work. Getting a reference to your Historian object another way would work also.MethodInfo myMethod = calledType.GetMethod(\u0022get_m_Active\u0022, BindingFlags.Instance | BindingFlags.Public);myMethod.Invoke(HistorianRef, null);\n\nNote I\u0027m copying some of my code where I didn\u0027t return anything, I think changing the last line to:\n\n    bool ReturnVal = myMethod.Invoke(HistorianRef, null);\n\n will work, but you will probably want to double check with Google.\n\nD."},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2015-07-31T23:09:30Z","Content":"\u003E \n\u003E You are running into a reference issue.\n\u003E Note the \u0022Binding.Static\u0022 line here:\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E      return (bool)calledType.InvokeMember(\u0022get_m_Active\u0022, BindingFlags.InvokeMethod |  BindingFlags.Public | BindingFlags.Static , null, null, null);\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E You would need to make your \u0022get\\_m\\_Active\u0022 method static for that to work.\n\u003E \n\u003E Otherwise, you need to get a reference to the Historian object that get\\_m\\_Active resides in first.\n\u003E \n\u003E Something like this would work I think?\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E     Type calledType = Type.GetType(\u0022KSEA.Historian.Historian, Historian\u0022);MonoBehaviour HistorianRef = (MonoBehaviour)UnityEngine.Object.FindObjectOfType(calledType); //assumes only one instance of class Historian exists as this command returns first instance found, also must inherit MonoBehavior for this command to work. Getting a reference to your Historian object another way would work also.MethodInfo myMethod = calledType.GetMethod(\u0022get_m_Active\u0022, BindingFlags.Instance | BindingFlags.Public);myMethod.Invoke(HistorianRef, null);\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E Note I\u0027m copying some of my code where I didn\u0027t return anything, I think changing the last line to:\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E     bool ReturnVal = myMethod.Invoke(HistorianRef, null);\n\u003E \n\u003E \n\u003E  will work, but you will probably want to double check with Google.\n\u003E \n\u003E D.\n\nyes, that did it.\n\nNow I have another problem, but that should be simple (I know, famous last words)"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2015-08-02T14:54:26Z","Content":"problems solved, now just waiting to hear from Zeenobit to see if he will be willing to add a simple function to Historian which i can call.\n\nThanks all for your help\n\nLGG"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2015-08-07T22:26:27Z","Content":"\u003E \n\u003E problems solved, now just waiting to hear from Zeenobit to see if he will be willing to add a simple function to Historian which i can call.\n\u003E Thanks all for your help\n\u003E \n\u003E LGG\n\nJust an update, Zeebobit and I have worked together to get Historian updated, so now AutomatedScreenshots works with Historian\n\nyay!"}]}