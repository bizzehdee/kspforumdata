{"TopicId":62352,"ForumId":36,"TopicTitle":"Topographic Map","CreatedByName":"SiliconPyro","CreatedById":19734,"CreatedDateTime":"2014-02-06T15:42:14Z","PageNum":1,"Articles":[{"CreatedByName":"SiliconPyro","CreatedById":19734,"CreatedDateTime":"2014-02-06T15:42:14Z","Content":"\n\u003Cp\u003EWhat would be the most efficient way to create a topographic display is KSP? The idea is that it would appear as a fixed camera looking directly downward. The important information is going to be presented on top of the topo lines, I just want them as a background, but I want them to be real.\u003C/p\u003E\u003Cp\u003EFor those who don\u0027t know, this is a topographic map: \u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://www.soe.uoguelph.ca/webfiles/wjames/homepage/Teaching/661/BobsModule9/Figure%2016.jpg\u0022 alt=\u0022Figure%2016.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EIt occurred to me that I could generate a plane for each elevation increment, then LineRender wherever those planes intersect the terrain collider. Now just to figure out how to do that!\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-06T18:43:55Z\u0022 title=\u002202/06/2014 06:43  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 6, 2014\u003C/time\u003E by norcalairman\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Runescope","CreatedById":2947,"CreatedDateTime":"2014-02-06T19:21:56Z","Content":"\n\u003Cp\u003EWell, I used to use a mapping plugin to output the elevation data to a CSV file and then input it into Surfer 10 to make different types of maps, topographic being one of them. I haven\u0027t done that in a while though as the mapping plugin hasn\u0027t been updated to work with .23 as far as I know.\u003C/p\u003E\n"},{"CreatedByName":"SiliconPyro","CreatedById":19734,"CreatedDateTime":"2014-02-06T20:55:48Z","Content":"\n\u003Cp\u003EI think I found a solution using a custom shader, but it might look wrong on flatter surfaces. I\u0027m going to do some experimentation and see what looks good.\u003C/p\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2014-02-07T08:41:41Z","Content":"\n\u003Cp\u003Ethe terrain is defined as pairs of rather large triangles which together form \u0027perfect squares\u0027 in a 2D sense with the vertexes raised or lowered to create the variance; the best way in my eyes would be the planar section method but instead of making a line render of the collision pattern, simply determine where triangular edges intersect the plane and draw lines between them, rather than sampling along the mesh more frequently than may be necessary. The hard part will likely be assembling the lines in the correct order. From there you would only need to determine the highest and lowest vertexes in the region you care about and distribute however many planes you want between them; if done correctly it should be a rather cheap check to run but the entire map may be expensive to compile.\u003C/p\u003E\n"},{"CreatedByName":"cyberKerb","CreatedById":28891,"CreatedDateTime":"2014-02-08T21:14:44Z","Content":"\n\u003Cp\u003EThis would be cool. I\u0027d be able to 3d print sections of the terrain after scaling it a bit.\u003C/p\u003E\n"},{"CreatedByName":"lincourtl","CreatedById":72218,"CreatedDateTime":"2014-02-09T01:34:43Z","Content":"\n\u003Cp\u003EIt\u0027d be awesome if you could integrate this with damny\u0027s ScanSat.\u003C/p\u003E\n"},{"CreatedByName":"SasquatchM","CreatedById":11888,"CreatedDateTime":"2014-02-09T01:45:06Z","Content":"\n\u003Cp\u003Eway back in the days of ISA I used a program called Quick grid to get results like these:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://imageshack.com/i/0qeve3dj\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg src=\u0022http://imagizer.imageshack.us/v2/xq90/26/eve3d.jpg\u0022 alt=\u0022eve3d.jpg\u0022\u003E\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://imageshack.com/i/ndeve2dj\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cimg src=\u0022http://imagizer.imageshack.us/v2/xq90/841/eve2d.jpg\u0022 alt=\u0022eve2d.jpg\u0022\u003E\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"cyberKerb","CreatedById":28891,"CreatedDateTime":"2014-02-10T01:01:41Z","Content":"\n\u003Cp\u003EYou could try using progressing with the various libraries mentioned here.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://www.onformative.com/lab/creating-contour-maps/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.onformative.com/lab/creating-contour-maps/\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"SiliconPyro","CreatedById":19734,"CreatedDateTime":"2014-02-27T20:15:46Z","Content":"\n\u003Cp\u003EHow would I go about generating a greyscale heightmap, or is that data available through the API already?\u003C/p\u003E\n"},{"CreatedByName":"Daemoria","CreatedById":103696,"CreatedDateTime":"2014-02-27T23:15:28Z","Content":"\n\u003Cp\u003EYou can either use the heightmap from the planetary shader, or use a z-depth pass to get the information in realtime. Zdepth would only work if the camera was perfectly perpendicular to the ground tho. I would recommend looking at the SCANSAT plugin to see how he does it.\u003C/p\u003E\n"}]}