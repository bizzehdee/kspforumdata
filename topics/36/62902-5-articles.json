{"TopicId":62902,"ForumId":36,"TopicTitle":"[1.8.x to 1.12.x] kRPC: Remote Procedure Call Server (v0.5.1, 2nd March 2023)","CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-02-11T20:00:32Z","PageNum":5,"Articles":[{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-05-21T21:15:18Z","Content":"\n\u003Cp\u003EI\u0027m working on putting together a new release this evening. The way vectors are passed around is going to change to use lists (this should interface better with math libraries like numpy) and the resources stuff will be fixed up to match the staging on the game ui. I\u0027ll provide more details when I make the release.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022baloan\u0022 data-cite=\u0022baloan\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E2. Can I run multiple threads using a kRPC connection?\u003C/p\u003E\u003Cp\u003EI\u0027d like to run a thread monitoring conditions for staging in a separate thread:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Edef run_thread():\u003Cbr\u003E    while liquid_fuel() \u0026gt; 0: \u003Cbr\u003E        time.sleep(1)\u003Cbr\u003E    control.activate_next_stage()\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIf not: events might be an elegant alternative as they spare the effort of polling.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe client connection isn\u0027t thread safe, so you can\u0027t use the objects from multiple threads without guarding the method calls with locks (or similar). I\u0027ll have a look into making it thread safe. What you can do in the meantime is have a separate connection for each thread, as the server supports multiple connections.\u003C/p\u003E\u003Cp\u003EI plan to add something like events in the future, so we can avoid all these horrid polling loops, although it\u0027s low on the priority list at the moment.\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-05-22T00:14:40Z","Content":"\n\u003Cp\u003EI\u0027ve made a new release (see OP for download link). There are lots of changes (\u003Ca href=\u0022https://github.com/djungelorm/krpc/releases/tag/v0.1.3\u0022 rel=\u0022external nofollow\u0022\u003Esee github\u003C/a\u003E for the full list), but here are the highlights:\u003C/p\u003E\u003Cp\u003ENew features:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EAdded various new functions, including SpaceCenter.Vessels and SpaceCenter.Bodies. See the wiki for details.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAdded support for collections. Procedures can now return or be passed lists, dictionaries and sets.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EFixes and improvements:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E Added support for action group 0 and abort action group\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Fixed bug with maneuver node reference frame\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Clarified the altitude properties for Flight objects\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Improved the Resources methods\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENote that Flight.altitude has been renamed to Flight.true_altitiude, and Flight.true_altitude has been renamed to Flight.absolute_altitude (which is the standard aviation terminology).\u003C/p\u003E\u003Cp\u003EI\u0027m going to be away on holiday for 2 weeks, so development is going to pause for a bit. See you soon!\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-05-22T00:20:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022baloan\u0022 data-cite=\u0022baloan\u0022\u003E\u003Cdiv\u003ETwo questions:\u003Cp\u003E1. How do I instantiate a vector in Python?\u003C/p\u003E\u003Cp\u003EAs an example I\u0027d like to take\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eimport krpc\u003Cbr\u003Ep = krpc.space_center.active_vessel.flight().prograde\u003Cbr\u003Epn = norm(p)\u003Cbr\u003E[B]v = (1,0,0)     # what is the correct type to use here? Geometry.Vector3?[/B]\u003Cbr\u003Ea = cross(pn,v)\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou can create a Geometry.Vector3 as follows:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Ev = krpc.schema.Geometry.Vector3()\u003Cbr\u003Ev.x = 1\u003Cbr\u003Ev.y = 0\u003Cbr\u003Ev.z = 0\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis isn\u0027t particularly elegant, so I\u0027m considering ditching the Geometry.Vector3 type altogether in future versions. Now that kRPC supports collections, it could return a vector as a list of floats.\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-05-22T16:52:57Z","Content":"\n\u003Cp\u003EDocumentation question:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003Edouble CelestialBody.atmosphere_pressure\u003Cp\u003E Pressure of the atmosphere at the surface in kPa.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESure it is at the surface (SFC)?\u003C/p\u003E\u003Cp\u003EI guess it is at mean sea level (MSL) or the mean radius (for planets and moons without oceans).\u003C/p\u003E\u003Cp\u003EBtw: \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u00C3\u00A2\u00E2\u20AC\u201D\u00C2\u00A6Rename Flight.Altitude to Flight.TrueAltitude\u003Cp\u003E\u00C3\u00A2\u00E2\u20AC\u201D\u00C2\u00A6Rename Flight.TrueAltitude to Flight.AbsoluteAltitude\u003C/p\u003E\u003Cp\u003E\u00C3\u00A2\u00E2\u20AC\u201D\u00C2\u00A6Add Flight.SurfaceAltitude\u003C/p\u003E\u003Cp\u003E\u00C3\u00A2\u00E2\u20AC\u201D\u00C2\u00A6Add Flight.Elevation\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHow about:\u003C/p\u003E\u003Cp\u003E1. SurfaceAltitude (above surface, either rock or sea) [now absolute_altitude]\u003C/p\u003E\u003Cp\u003E2. MeanAltitude (above MSL, or mean) [now true_altitude]\u003C/p\u003E\u003Cp\u003E3. BedrockAltitude (above hard surface) [now surface_altitude]\u003C/p\u003E\u003Cp\u003E4. elevation is self explanatory.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-22T18:46:20Z\u0022 title=\u002205/22/2014 06:46  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 22, 2014\u003C/time\u003E by baloan\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-05-22T19:26:17Z","Content":"\n\u003Cp\u003EIn Autopilot methods the description says:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EPoints the vessels Vessel.up_direction in the direction \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ebut I think it should read \u003Cstrong\u003EVessel.direction\u003C/strong\u003E. Vessel.direction in kOS corresponds to FACING which is the direction of the rocket or plane axis. \u003C/p\u003E\u003Cp\u003EUP in kOS always points away from the center of the celestial body through the ship.\u003C/p\u003E\u003Cp\u003EAnother one:\u003C/p\u003E\u003Cp\u003Eclear_heading() should be replaced with disengage()\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-22T19:41:32Z\u0022 title=\u002205/22/2014 07:41  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 22, 2014\u003C/time\u003E by baloan\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-05-22T19:44:30Z","Content":"\n\u003Cp\u003EI\u0027m using a second thread for staging. It actually works!\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Edef stage_thread(name_):\u003Cbr\u003E    ksp = krpc.connect(name=name_)\u003Cbr\u003E    print \u0027Connected to server, version\u0027, ksp.krpc.get_status().version\u003Cbr\u003E\u003Cbr\u003E    space_center = ksp.space_center\u003Cbr\u003E    vessel = space_center.active_vessel\u003Cbr\u003E    control = vessel.control\u003Cbr\u003E    resources = vessel.resources\u003Cbr\u003E\u003Cbr\u003E    oxi0 = resources.amount(\u0027SolidFuel\u0027, stage=4, cumulative=False)\u003Cbr\u003E    time.sleep(1)\u003Cbr\u003E    oxi1 = resources.amount(\u0027SolidFuel\u0027, stage=4, cumulative=False)\u003Cbr\u003E    ops = oxi0 - oxi1\u003Cbr\u003E    time_to_flameout = oxi1 / ops\u003Cbr\u003E    print \u0022Booster flameout in {} sec\u0022.format(time_to_flameout)\u003Cbr\u003E    time.sleep(time_to_flameout - 1)\u003Cbr\u003E    print \u0022Checking for flameout\u0022.format(time_to_flameout)\u003Cbr\u003E\u003Cbr\u003E    while True:\u003Cbr\u003E        oxidizer = resources.amount(\u0027SolidFuel\u0027, stage=4, cumulative=False)\u003Cbr\u003E        if oxidizer \u0026lt; 0.1:\u003Cbr\u003E            control.activate_next_stage()\u003Cbr\u003E            break \u003Cbr\u003E        time.sleep(0.1)\u003Cbr\u003E\u003Cbr\u003E    while True:\u003Cbr\u003E        lox = resources.amount(\u0027LiquidFuel\u0027, stage=3, cumulative=False)\u003Cbr\u003E        if lox \u0026lt; 0.1:\u003Cbr\u003E            control.activate_next_stage()\u003Cbr\u003E            time.sleep(1)\u003Cbr\u003E            control.activate_next_stage()\u003Cbr\u003E            break \u003Cbr\u003E        time.sleep(0.1)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ECalled from the main program like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Edef main():\u003Cbr\u003E    stage = Thread(target=stage_thread, args=[\u0022Autostage\u0022,])\u003Cbr\u003E    ...\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-05-25T19:36:44Z","Content":"\n\u003Cp\u003EDuring launch I observer time lag in the main while loop. My guess this is due to the many round-trips for RPC the code is doing. My code queries a few parameters in the while loop.\u003C/p\u003E\u003Cp\u003EWouldn\u0027t it be nice if the KSP based code pushes all telemetry data every 100ms to the kRPC client? In the kRPC client a background thread receives the data and applies it to shadow variables in the Python space. Since the main idea is to reduce latency and round-trips it makes most sense to collect all telemetry data in one protobuf message and send this one buffer every 100ms. RPC calls will only be necessary for control type or auto_pilot requests to the vessel. Any data queries can be satisfied from the local cache.\u003C/p\u003E\u003Cp\u003EI thought about implementing this optimization but realized it involves KSP side changes.\u003C/p\u003E\u003Cp\u003EAny plans to implement something like this?\u003C/p\u003E\n"},{"CreatedByName":"nubnax","CreatedById":111682,"CreatedDateTime":"2014-05-26T11:07:25Z","Content":"\n\u003Cp\u003Ein your documentation for the space_center is a vessel.target command. but if i try using it i get this exception\u003C/p\u003E\u003Cp\u003E \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003ERPCError: KRPC.Service.RPCException: Procedure \u0027SpaceCenter.Vessel_get_Target\u0027 threw an exception. System.NotImplementedException: The requested feature is not implemented.\u003Cp\u003E at KRPC.Service.Services.HandleRequest (KRPC.Service.Scanner.ProcedureSignature procedure, KRPC.Schema.KRPC.Request request) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003C/p\u003E\u003Cp\u003E at KRPC.Service.RequestContinuation.Run () [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003C/p\u003E\u003Cp\u003E at KRPC.KRPCServer.ExecuteContinuation (KRPC.Service.RequestContinuation continuation) [0x00000] in \u0026lt;filename unknown\u0026gt;:0 \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eis this feature not yet implemented as the exception says or is something else amiss?\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-05-26T20:32:41Z","Content":"\n\u003Cp\u003EI am trying to determine burn end time for arbitrary maneuver nodes.\u003C/p\u003E\u003Cp\u003ENode.delta_v is not updated during a burn while on the UI the remaining delta_v counts down. So it can\u0027t be used.\u003C/p\u003E\u003Cp\u003EThinking about it I see potential alternative solutions:\u003C/p\u003E\u003Cp\u003E1. pre-calculate burn time and thrust (difficult because neither thrust nor vessel mass are available)\u003C/p\u003E\u003Cp\u003E2. cross check against the target speed in flight.velocity. I am wondering though whether flight in orbit reference frame will do? Probably you will have to use flight in maneuver reference frame. Can I simply add node.vector to flight.velocity in maneuver reference frame? Anyone knows?\u003C/p\u003E\u003Cp\u003E@nubnax: can reproduce vessel.target issue. Same here.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-26T20:38:03Z\u0022 title=\u002205/26/2014 08:38  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 26, 2014\u003C/time\u003E by baloan\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Garek","CreatedById":73214,"CreatedDateTime":"2014-05-29T19:55:16Z","Content":"\n\u003Cp\u003EI just wanted to inform you that I won\u0027t be creating client modules in C\u002B\u002B (or any other language). Although it\u0027s a fun and interesting project, I just don\u0027t have the time to do it and play KSP, and I would rather do that.\u003C/p\u003E\u003Cp\u003EI will still happily use this mod, but using the python client modules.\u003C/p\u003E\n"},{"CreatedByName":"3_14159","CreatedById":112409,"CreatedDateTime":"2014-06-07T08:49:40Z","Content":"\n\u003Cp\u003EI am currently looking into building an automated script to rocket-soft-land pods (similar to what SpaceX is promising from DragonFly). For this to work beautiful, I plan on doing the main thrust as late as possible.\u003C/p\u003E\u003Cp\u003ETherefore, my question is: Is there a way to get the currently possible thrust (similarly to how MechJeb is displaying it) for every - or even just the current - stage, either in TWR or Newton, and ideally in vacuum, current altitude and sea level configurations.\u003C/p\u003E\u003Cp\u003EThank you in advance for the answers, and thank you for enabling me to use python to program my rockets!\u003C/p\u003E\u003Cp\u003EEdit: Also, current mass, and maybe ISP/maximum fuel flow for the engines would be great.\u003C/p\u003E\u003Cp\u003EEdit 2: Is there a way to get the current body a vessel is in flight on? That is, the Celestial Body representing it.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-07T10:17:05Z\u0022 title=\u002206/07/2014 10:17  AM\u0022 data-short=\u002210 yr\u0022\u003EJune 7, 2014\u003C/time\u003E by 3_14159\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-06-07T21:15:33Z","Content":"\n\u003Cp\u003EI\u0027m back from my 2 week holiday, time to answer your queries and resume development!\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022baloan\u0022 data-cite=\u0022baloan\u0022\u003E\u003Cdiv\u003EDocumentation question:\u003Cp\u003Edouble CelestialBody.atmosphere_pressure\u003C/p\u003E\u003Cp\u003EPressure of the atmosphere at the surface in kPa. \u003C/p\u003E\u003Cp\u003ESure it is at the surface (SFC)?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s at MSL/mean radius. Docs updated to clarify this.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022baloan\u0022 data-cite=\u0022baloan\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EBtw: \u003C/p\u003E\u003Cp\u003EHow about:\u003C/p\u003E\u003Cp\u003E1. SurfaceAltitude (above surface, either rock or sea) [now absolute_altitude]\u003C/p\u003E\u003Cp\u003E2. MeanAltitude (above MSL, or mean) [now true_altitude]\u003C/p\u003E\u003Cp\u003E3. BedrockAltitude (above hard surface) [now surface_altitude]\u003C/p\u003E\u003Cp\u003E4. elevation is self explanatory.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve named them according to the standard aviation terms from here: \u003Ca href=\u0022https://en.wikipedia.org/wiki/Altitude#Altitude_in_aviation_and_in_spaceflight\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://en.wikipedia.org/wiki/Altitude#Altitude_in_aviation_and_in_spaceflight\u003C/a\u003E I think that\u0027s the clearest way of doing it.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022baloan\u0022 data-cite=\u0022baloan\u0022\u003E\u003Cdiv\u003EI\u0027m using a second thread for staging. It actually works!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt will work most of the time, but might behave strangely if the threads try to send data over the connection at the same instant. I\u0027ll update the client to be thread safe so that it always works in the next release.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022baloan\u0022 data-cite=\u0022baloan\u0022\u003E\u003Cdiv\u003EDuring launch I observer time lag in the main while loop. My guess this is due to the many round-trips for RPC the code is doing. My code queries a few parameters in the while loop.\u003Cp\u003EWouldn\u0027t it be nice if the KSP based code pushes all telemetry data every 100ms to the kRPC client? In the kRPC client a background thread receives the data and applies it to shadow variables in the Python space. Since the main idea is to reduce latency and round-trips it makes most sense to collect all telemetry data in one protobuf message and send this one buffer every 100ms. RPC calls will only be necessary for control type or auto_pilot requests to the vessel. Any data queries can be satisfied from the local cache.\u003C/p\u003E\u003Cp\u003EI thought about implementing this optimization but realized it involves KSP side changes.\u003C/p\u003E\u003Cp\u003EAny plans to implement something like this?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou could achieve this caching behaviour by writing your own background thread that polls the telemetry and caches it in python. Another option would be to add an RPC that provides all of the required telemetry in one RPC call (so you don\u0027t repeat the RPC invocation overhead). I\u0027d like to keep this sort of service-specific behaviour separate from any client-side code. Otherwise, in the future when we have multiple client libraries for multiple languages, if the service code changes we\u0027d have to modify every client library. Which would be a pain to maintain.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nubnax\u0022 data-cite=\u0022nubnax\u0022\u003E\u003Cdiv\u003Ein your documentation for the space_center is a vessel.target command. but if i try using it i get this exception\u003Cp\u003E...\u003C/p\u003E\u003Cp\u003Eis this feature not yet implemented as the exception says or is something else amiss?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah it\u0027s not been implemented yet.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022baloan\u0022 data-cite=\u0022baloan\u0022\u003E\u003Cdiv\u003EI am trying to determine burn end time for arbitrary maneuver nodes.\u003Cp\u003ENode.delta_v is not updated during a burn while on the UI the remaining delta_v counts down. So it can\u0027t be used.\u003C/p\u003E\u003Cp\u003EThinking about it I see potential alternative solutions:\u003C/p\u003E\u003Cp\u003E1. pre-calculate burn time and thrust (difficult because neither thrust nor vessel mass are available)\u003C/p\u003E\u003Cp\u003E2. cross check against the target speed in flight.velocity. I am wondering though whether flight in orbit reference frame will do? Probably you will have to use flight in maneuver reference frame. Can I simply add node.vector to flight.velocity in maneuver reference frame? Anyone knows?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ll add an RPC to get the remaining delta-v. That\u0027d probably be the easiest way of support this use case. Regarding adding node.vector and flight.velocity, flight will need to be in the maneuver reference frame.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u00223_14159\u0022 data-cite=\u00223_14159\u0022\u003E\u003Cdiv\u003EI am currently looking into building an automated script to rocket-soft-land pods (similar to what SpaceX is promising from DragonFly). For this to work beautiful, I plan on doing the main thrust as late as possible.\u003Cp\u003ETherefore, my question is: Is there a way to get the currently possible thrust (similarly to how MechJeb is displaying it) for every - or even just the current - stage, either in TWR or Newton, and ideally in vacuum, current altitude and sea level configurations.\u003C/p\u003E\u003Cp\u003EThank you in advance for the answers, and thank you for enabling me to use python to program my rockets!\u003C/p\u003E\u003Cp\u003EEdit: Also, current mass, and maybe ISP/maximum fuel flow for the engines would be great.\u003C/p\u003E\u003Cp\u003EEdit 2: Is there a way to get the current body a vessel is in flight on? That is, the Celestial Body representing it.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis sort of thing hasn\u0027t been implemented yet. I plan to add functionality for getting max thrust/current thrust/TWR/total mass/dry mass/ISP etc. for the vessel as a whole, for the current stage and also on a per part/engine basis.\u003C/p\u003E\u003Cp\u003EYou can get the body currently being orbited using:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Evessel = conn.active_vessel\u003Cbr\u003Ebody = vessel.orbit.body\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe object returned by vessel.orbit.body is documented here: \u003Ca href=\u0022https://github.com/djungelorm/krpc/wiki/SpaceCenter-Service#celestial-body-objects\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/djungelorm/krpc/wiki/SpaceCenter-Service#celestial-body-objects\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"MaHuJa","CreatedById":58370,"CreatedDateTime":"2014-06-10T10:48:16Z","Content":"\n\u003Cp\u003EI\u0027ve taken on the problem of doing this in C\u002B\u002B.\u003C/p\u003E\u003Cp\u003ESo far my merit list is connecting, getting the version, and querying getservices to a file. \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EPROC  SpaceCenter:WarpTo\u003Cbr\u003E\tdouble UT\u003Cbr\u003E\tdouble maxRate\u003Cbr\u003EPROC  SpaceCenter:get_ActiveVessel\u003Cbr\u003E\t-\u0026gt; uint64\u003Cbr\u003E\t-- Property.Get(ActiveVessel)\u003Cbr\u003E\t-- ReturnType.Class(SpaceCenter.Vessel)\u003Cbr\u003EPROC  SpaceCenter:get_Vessels\u003Cbr\u003E\t-\u0026gt; KRPC.List\u003Cbr\u003E\t-- Property.Get(Vessels)\u003Cbr\u003E\t-- ReturnType.List(Class(SpaceCenter.Vessel))\u003Cbr\u003E(omitted)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI believed I had the protocol down.\u003C/p\u003E\u003Cp\u003EAnd then... it stopped working as documented.\u003C/p\u003E\u003Cp\u003EI call get_ActiveVessel. Simply leaving the craft on the pad and krpc running, I got these hex returns on the socket:\u003C/p\u003E\u003Cp\u003Ea8 63 b2 2c ed d6 40 1a 01\u003C/p\u003E\u003Cp\u003Eor trying again\u003C/p\u003E\u003Cp\u003E81 39 bf 41 4d 21 d7 40 1a 01 01\u003C/p\u003E\u003Cp\u003Eor again\u003C/p\u003E\u003Cp\u003Efe e0 2f 7f 39 48 d7 40 1a 01 01\u003C/p\u003E\u003Cp\u003Eor\u003C/p\u003E\u003Cp\u003Eee c2 d3 ef 76 bc d7 40 1a 01 01 01 01\u003C/p\u003E\u003Cp\u003EThere\u0027s nothing left to get from the socket afterwards.\u003C/p\u003E\u003Cp\u003EThe leading varint of the last one claims the following data element is greater than 4GB rather than 8 bytes.\u003C/p\u003E\u003Cp\u003EAll I can see from the logs is that it received a message and sent a reply.\u003C/p\u003E\u003Cp\u003EThis happens regardless of the get_activeVessel call being the first on the connection or following a successful getservices.\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-06-10T11:47:02Z","Content":"\n\u003Cp\u003ECould you send me the code? Bit hard to figure out what\u0027s going on without it!\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-06-10T17:05:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EIt will work most of the time, but might behave strangely if the threads try to send data over the connection at the same instant. I\u0027ll update the client to be thread safe so that it always works in the next release.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI mean I\u0027m using two threads with one connection each. \u0022Sending data over the (same) connection\u0022 will not happen in that setup.\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-06-10T17:10:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EI\u0027ve named them according to the standard aviation terms from here: \u003Ca href=\u0022https://en.wikipedia.org/wiki/Altitud...in_spaceflight\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://en.wikipedia.org/wiki/Altitud...in_spaceflight\u003C/a\u003E I think that\u0027s the clearest way of doing it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI disagree. I am a pilot and I\u0027ve never used the terms absolute and true altitude while flying. Altitudes are given in MSL and \u0022above ground\u0022 or SFC/AGL. That\u0027s how it is referred to in aviation charts. Surface is not defined in the wiki page. I think it is confusing how surface_altitude and absolute_altitude is defined in kRPC.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-10T17:12:57Z\u0022 title=\u002206/10/2014 05:12  PM\u0022 data-short=\u002210 yr\u0022\u003EJune 10, 2014\u003C/time\u003E by baloan\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-06-10T21:40:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EAnother option would be to add an RPC that provides all of the required telemetry in one RPC call (so you don\u0027t repeat the RPC invocation overhead). \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat sounds like a good start.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EI\u0027d like to keep this sort of service-specific behaviour separate from any client-side code. Otherwise, in the future when we have multiple client libraries for multiple languages, if the service code changes we\u0027d have to modify every client library. Which would be a pain to maintain.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESooner or later there will be breaking changes in the protocol. It is a wise move to add some kind of versioning when the connection is negotiated. That way client library migration can be done independently. It\u0027s not a cure but it lessens the pain.\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-06-11T13:09:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022baloan\u0022 data-cite=\u0022baloan\u0022\u003E\u003Cdiv\u003EI disagree. I am a pilot and I\u0027ve never used the terms absolute and true altitude while flying. Altitudes are given in MSL and \u0022above ground\u0022 or SFC/AGL. That\u0027s how it is referred to in aviation charts. Surface is not defined in the wiki page. I think it is confusing how surface_altitude and absolute_altitude is defined in kRPC.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOh OK, I guess wikipedia is misleading then. I\u0027ll defer to your better judgement and rename them as you suggest. I find the current names a bit confusing too, but assumed they were the standard terms.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/djungelorm/krpc/issues/62\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/djungelorm/krpc/issues/62\u003C/a\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-11T13:12:51Z\u0022 title=\u002206/11/2014 01:12  PM\u0022 data-short=\u002210 yr\u0022\u003EJune 11, 2014\u003C/time\u003E by djungelorm\u003C/strong\u003E\n\u003Cbr\u003EAdd link to github issue\n\u003C/span\u003E\n"},{"CreatedByName":"Loran","CreatedById":113306,"CreatedDateTime":"2014-06-20T06:21:29Z","Content":"\n\u003Cp\u003EVery impressed with this mod. I\u0027ve always been interested in the possibility of some self built automation and I am glad to see such a thing is possible. \u003C/p\u003E\u003Cp\u003EThanks for all your hard work djungelorm.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-21T05:02:26Z\u0022 title=\u002209/21/2014 05:02  AM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 21, 2014\u003C/time\u003E by Loran\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Mango","CreatedById":108398,"CreatedDateTime":"2014-07-06T17:50:58Z","Content":"\n\u003Cp\u003EThis mod looks incredible, and I\u0027m really looking forward to making my own library of autopiloting scripts, but I\u0027m having problems installing the Python client.\u003C/p\u003E\u003Cp\u003EI downloaded the server plugin, but when I entered \u0022C:\\Python34\\Scripts\\pip.exe install krpc\u0022 in the windows Command Prompt it started downloading/unpacking it but then returned an error: \u003C/p\u003E\u003Cp\u003Epip.exceptions.InstallationError: Command python setup.py egg_info failed with error code 1 in C:\\Users\\Tom\\AppData\\Local\\Temp\\pip_build_Tom\\protobuf\u003C/p\u003E\u003Cp\u003EI would love to be able to start using this mod so any suggestions of what I\u0027ve done wrong would be greatly appreciated!\u003C/p\u003E\n"},{"CreatedByName":"djungelorm","CreatedById":76528,"CreatedDateTime":"2014-07-07T08:59:47Z","Content":"\n\u003Cp\u003EHi Mango, glad you like the mod \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EThe problem is that you need to use python version 2.\u003C/p\u003E\u003Cp\u003EThe protobuf python package (that the krpc client depends on) doesn\u0027t support python 3. I\u0027ll look into improving the installer to make the error message a bit more meaningful.\u003C/p\u003E\n"},{"CreatedByName":"kafuka","CreatedById":116911,"CreatedDateTime":"2014-07-31T13:12:13Z","Content":"\n\u003Cp\u003EOh wow! I would definately like to see a Lua client library for this. \u003C/p\u003E\u003Cp\u003ENot sure if I could write it myself, maybe I\u0027ll give it a shot now it\u0027s summer and I haven\u0027t got .... to do anyway. Any idea on how hard it would be?\u003C/p\u003E\n"},{"CreatedByName":"JeffersonFlight","CreatedById":111703,"CreatedDateTime":"2014-07-31T13:19:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022kafuka\u0022 data-cite=\u0022kafuka\u0022\u003E\u003Cdiv\u003EOh wow! I would definately like to see a Lua client library for this. \u003Cp\u003ENot sure if I could write it myself, maybe I\u0027ll give it a shot now it\u0027s summer and I haven\u0027t got .... to do anyway. Any idea on how hard it would be?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWould most definitely be cool to see a Lua library, I think it would bring allot of people into modding.\u003C/p\u003E\n"},{"CreatedByName":"Kerbart","CreatedById":78303,"CreatedDateTime":"2014-07-31T18:20:13Z","Content":"\n\u003Cp\u003EAmazingly I was just thinking about this plugin this morning; now I don\u0027t have to search for it! Installed it and tested; seems to work fine! Yay!\u003C/p\u003E\n"},{"CreatedByName":"kafuka","CreatedById":116911,"CreatedDateTime":"2014-08-04T14:41:38Z","Content":"\n\u003Cp\u003EI found a way to integrate lua into python with \u003Ca href=\u0022https://github.com/bastibe/lunatic-python\u0022 rel=\u0022external nofollow\u0022\u003Elunatic-python\u003C/a\u003E (and vice versa). This might be a quick way to support lua utilizing the python client library instead of writing a new one in(/for) lua. Howerver, I can now run lua statements from python, but I have no idea how to procede from here.\u003C/p\u003E\n"}]}