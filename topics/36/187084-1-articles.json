{"TopicId":187084,"ForumId":36,"TopicTitle":"[WIP][1.7.3] Kift - Thrift plugin for KSP (v0.1.0-alpha.2, 2019-08-10)","CreatedByName":"Xavier513","CreatedById":103114,"CreatedDateTime":"2019-08-10T10:23:58Z","PageNum":1,"Articles":[{"CreatedByName":"Xavier513","CreatedById":103114,"CreatedDateTime":"2019-08-10T10:23:58Z","Content":"\n\u003Cp\u003E\n\u003Cimg alt=\u0022JvLtUjC.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u0022130.95\u0022 height=\u0022512\u0022 style=\u0022width:200px;height:auto;\u0022 width=\u0022391\u0022 src=\u0022https://i.imgur.com/JvLtUjC.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:22px;\u0022\u003E\u003Cstrong\u003EWhat is Kift?\u003C/strong\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Cspan style=\u0022font-size:22px;\u0022\u003EKift\u003C/span\u003E\u003C/strong\u003E is an add-on based on \u003Ca href=\u0022https://thrift.apache.org/\u0022 rel=\u0022external nofollow\u0022\u003EThrift\u003C/a\u003E(v0.12.0)\u00A0.\n\u003C/p\u003E\n\u003Cp\u003E\nKift is a bridge between your code and the game, it\u00A0lets you control the game with your program running outside of the game.\n\u003C/p\u003E\n\u003Cp\u003E\nKift is inpired by\u00A0kRPC\u00A0-- a great Mod from \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/76528-djungelorm/\u0026amp;do=hovercard\u0022 data-mentionid=\u002276528\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/76528-djungelorm/\u0022 rel=\u0022\u0022\u003E@djungelorm\u003C/a\u003E\u00A0-- but implemented in a different way.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nRelease Thread:\u00A0\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/187109-173-kift-thrift-plugin-for-ksp-v010-alpha2/\u0022 rel=\u0022\u0022\u003Ehttps://forum.kerbalspaceprogram.com/index.php?/topic/187109-173-kift-thrift-plugin-for-ksp-v010-alpha2/\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nGitHub:\u00A0\u003Ca href=\u0022https://github.com/vaporz/Kift\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/vaporz/Kift\u003C/a\u003E\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nReleases:\u00A0\u003Ca href=\u0022https://github.com/vaporz/Kift/releases\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/vaporz/Kift/releases\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nDoc portal:\u00A0\u003Ca href=\u0022https://vaporz.github.io/Kift/index.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://vaporz.github.io/Kift/index.html\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nLicensed by LGPL-3.0 .\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:22px;\u0022\u003E\u003Cstrong\u003EArchitecture\u00A0\u003C/strong\u003E\u003C/span\u003E\u003Cbr\u003E\u003Cimg alt=\u0022Py71Z3b.png\u0022 class=\u0022ipsImage\u0022 data-ratio=\u002256.13\u0022 height=\u0022574\u0022 style=\u0022width:700px;height:auto;\u0022 width=\u00221024\u0022 src=\u0022https://i.imgur.com/Py71Z3b.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nKift starts a Thrift server inside of KSP process. The server receives requests, then send them to a Message Queue. A KSP addon will dequeue requests from the queue, and run the corresponding Executor. The server will wait until the response to a request is returned.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:22px;\u0022\u003E\u003Cstrong\u003ESupported languages\u003C/strong\u003E\u003C/span\u003E\u003Cbr\u003E\nTheoritically, any programming language supported by Thrift v0.12.0 is supported by Kift.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/apache/thrift/blob/v0.12.0/LANGUAGES.md\u0022 rel=\u0022external nofollow\u0022\u003ELanguages supported by Thrift v0.12.0\u003C/a\u003E:\n\u003C/p\u003E\n\u003Cp\u003E\nC, C\u002B\u002B, Go, Java, Python, PHP, Ruby, Erlang, Perl, Haskell, C#, Cocoa, JavaScript, Node.js, Smalltalk, OCaml and Delphi, etc.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Cspan style=\u0022font-size:22px;\u0022\u003EGetting Started\u003C/span\u003E\u003C/strong\u003E\u003Cbr\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003E1, Install Kift\u003C/span\u003E\u003C/strong\u003E\u003Cbr\u003E\nDownload \u003Ca href=\u0022https://github.com/vaporz/Kift/releases\u0022 rel=\u0022external nofollow\u0022\u003EKift.zip\u003C/a\u003E, copy the \u0022Kift\u0022 folder in zip file into \u0022Kerbal Space Programe/GameData\u0022 directory.\n\u003C/p\u003E\n\u003Cp\u003E\nNow the server side is ready. When your game is loaded and the main menu shows up, the Thift server is started and listening for requests.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:18px;\u0022\u003E2, Connect to Thrift server, and call Kift APIs\u003C/span\u003E\u003C/strong\u003E\u003Cbr\u003E\nTo interact with the Thrift server within KSP process, you have to write your own client side codes.\n\u003C/p\u003E\n\u003Cp\u003E\nFollowing lines of code show how to call a Kift API to get current vessel\u0027s info, in C#:\u003Cbr\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E// The game is started, and MUST be in Flight scene.\n\u00A0\n\u00A0// Import \u0022Kift.ThriftGen.dll\u0022(built from \u0022Kift/thrift-gen/gen-csharp\u0022),\n\u00A0// or generate stub codes by yourself, then build and import your DLL file.\n\u00A0using Kift;\n\n\u00A0// Import \u0022Thrift.dll\u0022: https://cwiki.apache.org/confluence/display/thrift/ThriftUsageCSharp\n\u00A0using Thrift.Protocol;\n\u00A0using Thrift.Transport;\n\n\u00A0...\n\n\u00A0// The port is configable in \u0022Kerbal Space Program/GameData/Kift/server.cfg\u0022\n\u00A0TTransport transport = new TFramedTransport(new TSocket(\u0022localhost\u0022, 9090));\n\u00A0TProtocol protocol = new TCompactProtocol(transport);\n\u00A0KiftService.Client client = new KiftService.Client(protocol);\n\u00A0transport.Open(); // Connect to server\n\n\u00A0Vessel v = client.currentVessel(); // Call API \u0022currentVessel\u0022\n\u00A0Console.WriteLine(v.Name);\n\n\u00A0...\n\n\u00A0transport.Close(); // finally close the connection\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cstrong\u003E\u003Cspan style=\u0022font-size:22px;\u0022\u003EKift APIs\u003C/span\u003E\u003C/strong\u003E\u003Cbr\u003E\nKift provides two sets of APIs: \u0022InfoSync APIs\u0022 and \u0022Command APIs\u0022.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u0022InfoSync APIs\u0022 pull infos from the game. \u0022Command APIs\u0022 send commands to control vessels/parts/game.\n\u003C/p\u003E\n\u003Cp\u003E\nCommand APIs are devided into three categories according to the target.\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\n\u003Ca href=\u0022https://vaporz.github.io/Kift/api/index.html#infosync-apis\u0022 rel=\u0022external nofollow\u0022\u003EInfoSync APIs\u003C/a\u003E\n\u003Cul\u003E\u003Cli\u003E\n\u003Ca href=\u0022https://vaporz.github.io/Kift/api/index.html#snapshot\u0022 rel=\u0022external nofollow\u0022\u003EReal time snapshot \u003C/a\u003E\u00A0\u003Cbr\u003E\nRead data at real time(approximately), useful when you want to monitor any data, such as height, speed, etc.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Ca href=\u0022https://vaporz.github.io/Kift/api/index.html#getinfo-apis\u0022 rel=\u0022external nofollow\u0022\u003EGetInfo APIs\u003C/a\u003E\u003Cbr\u003E\nGet data from current game, such as current vessel, the part list of a vessel, etc.\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003Cli\u003E\n\u003Ca href=\u0022https://vaporz.github.io/Kift/api/index.html#command-apis\u0022 rel=\u0022external nofollow\u0022\u003ECommand APIs\u003C/a\u003E\n\u003Cul\u003E\u003Cli\u003E\n\u003Ca href=\u0022https://vaporz.github.io/Kift/api/index.html#vessel-control-apis\u0022 rel=\u0022external nofollow\u0022\u003EVessel Control APIs\u003C/a\u003E\u003Cbr\u003E\nAPIs to control a vessel, such as pitch/yaw/roll, enable/disable \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E, deploy/restract landing legs, etc.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Ca href=\u0022https://vaporz.github.io/Kift/api/index.html#part-control-apis\u0022 rel=\u0022external nofollow\u0022\u003EPart Control APIs\u003C/a\u003E\u003Cbr\u003E\nAPIs to control a part, such as deploy/restract a solar panel, open/close a cargo bay, etc.\n\u003C/li\u003E\n\u003Cli\u003E\n\u003Ca href=\u0022https://vaporz.github.io/Kift/api/index.html#game-control-apis\u0022 rel=\u0022external nofollow\u0022\u003EGame Control APIs\u003C/a\u003E\u003Cbr\u003E\nAPIs to control the game, such as time warp, change camera mode, set/remove maneuver nodes etc.\n\u003C/li\u003E\n\u003C/ul\u003E\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nSee more about Kift APIs at the doc portal: \u003Ca href=\u0022https://vaporz.github.io/Kift/api/index.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://vaporz.github.io/Kift/api/index.html\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022font-size:22px;\u0022\u003E\u003Cstrong\u003EKift needs your help\u003C/strong\u003E\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n1. Please pay more attention to APIs about position/direction/rotation and reference frames, I spent a lot of time investigaing and learning about them, but I still can not be sure about the correctness.\u003Cbr\u003E\n2. Please report an issue if you find a bug:\u00A0\u003Ca href=\u0022https://github.com/vaporz/Kift/issues\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/vaporz/Kift/issues\u003C/a\u003E\u003Cbr\u003E\n3. Kift\u0027s codes are relatively simple, you\u0027re very appreciated to submit a PR and contribute to Kift.\u003Cbr\u003E\n4. English is not my native language, please help me to improve the wording of documentation, or add new articles to \u0022Kift/server/articles\u0022. Docs are generated from the \u0022md\u0022 files under \u0022Kift/server\u0022 using Docfx.\u003Cbr\u003E\n5. I\u0027m quite new to C# programming, in fact, this is my first C# program, so please create an issue if you have any suggestion against the code, for example, coding style, best practices, etc.\u003Cbr\u003E\n6. Star \u0022Kift\u0022 on GitHub if you like it \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222019-08-11T13:18:02Z\u0022 title=\u002208/11/2019 01:18  PM\u0022 data-short=\u00224 yr\u0022\u003EAugust 11, 2019\u003C/time\u003E by Xavier513\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"drtedastro","CreatedById":70911,"CreatedDateTime":"2019-08-10T22:53:55Z","Content":"\n\u003Cp\u003E\nwelcome.\n\u003C/p\u003E\n\u003Cp\u003E\nwill be nice to check this out.\n\u003C/p\u003E\n\u003Cp\u003E\ngood luck .. and keep going.\n\u003C/p\u003E\n\u003Cp\u003E\ncheers.\n\u003C/p\u003E\n"}]}