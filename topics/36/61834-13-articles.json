{"TopicId":61834,"ForumId":36,"TopicTitle":"kOS Autopilot","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T17:34:35Z","PageNum":13,"Articles":[{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-06-25T03:53:43Z","Content":"\n\u003Cp\u003EIn general, a reference manual and a tutorial are two utterly different types of documentation. They should not be done using the same document. A reference manual gives a complete list of everything thats true about thing A then a complete list of everything thats true about thing B and so on. It finishes telling you everything about one thing before telling you anything about tenet thing. This is so you can look stuff up.\u003C/p\u003E\u003Cp\u003EA tutorial on the other hand explains things the other way around... you get a little about thing A then a little about thing B and after getting a little about each you go back and get a little more about A and a little more about B. .\u003C/p\u003E\u003Cp\u003EThey are opposed approaches because one is a depth first walk while the other is a breadth first walk.\u003C/p\u003E\u003Cp\u003EIf the only documentation was a tutorial then it would be even worse. Thats what we had before when only the trivial stuff was documented in 0.9.\u003C/p\u003E\u003Cp\u003EThere should be a tutorial. It should not be the only form of documentation. And if there can only be one so far because its still being written it\u0027s better to have it be the reference docs. it is possible to derive information that would be in the tutorial from the reference documentation. it is generally not possible to go the other way around because tutorials typically do not have complete information.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-06-25T04:25:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EIn general, a reference manual and a tutorial are two utterly different types of documentation. They should not be done using the same document. A reference manual gives a complete list of everything thats true about thing A then a complete list of everything thats true about thing B and so on. It finishes telling you everything about one thing before telling you anything about tenet thing. This is so you can look stuff up.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMind you, I am not asking for tutorial documentation. I am just saying that the current reference manual is way too sparse to make sense without prior knowledge or experience. Sometimes things are listed in similar ways, while actually doing quite different things. Only by looking in other places can be figured out what is intended and I feel that documentation is not doing its job when that is the case.\u003C/p\u003E\u003Cp\u003EOf course, a more comprehensive description of how to use and apply the syntax helps too when people are just getting started, but you should be able to get the information from the documentation. In quite a few places you can, but in some you can not.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-25T04:28:33Z\u0022 title=\u002206/25/2014 04:28  AM\u0022 data-short=\u002210 yr\u0022\u003EJune 25, 2014\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-06-25T04:54:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003ESometimes things are listed in similar ways, while actually doing quite different things.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf you\u0027d like to see the situation rectified you need to be more precise and show where you see this happening.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-06-25T05:21:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EIf you\u0027d like to see the situation rectified you need to be more precise and show where you see this happening.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIn entries like \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/atmosphere/index.html\u0022 rel=\u0022external nofollow\u0022\u003EAtmosphere\u003C/a\u003E and \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/engine/index.html\u0022 rel=\u0022external nofollow\u0022\u003EEngines\u003C/a\u003E the actual way to use them is rather unclear. They certainly do not seem to work in the same way as \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/body/index.html\u0022 rel=\u0022external nofollow\u0022\u003EBody\u003C/a\u003E entry, while the method of describing things is pretty much the same. The difference is to be guessed by the user, as well as how to actually employ the terms.\u003C/p\u003E\u003Cp\u003EIn contrast, \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/list/index.html\u0022 rel=\u0022external nofollow\u0022\u003ELists\u003C/a\u003E and \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/command/terminal/index.html\u0022 rel=\u0022external nofollow\u0022\u003ETerminal\u003C/a\u003E are rather well described in a concise manner, although I would argue that for instance the \u003Cem\u003Eiterator\u003C/em\u003E and \u003Cem\u003EResources return list type\u003C/em\u003E are unclear too. There are other examples to be found, but I think the problem is clear.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-25T05:27:32Z\u0022 title=\u002206/25/2014 05:27  AM\u0022 data-short=\u002210 yr\u0022\u003EJune 25, 2014\u003C/time\u003E by Camacha\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MrOnak","CreatedById":104432,"CreatedDateTime":"2014-06-25T09:03:20Z","Content":"\n\u003Cp\u003EOn the discussion of where kOS is or should be heading:\u003C/p\u003E\u003Cp\u003EAs it is there are a lot of low level features missing in kOS (see my github feature requests for what I mean). Simple tools to get stuff done. Before that area hasn\u0027t been tidied up (and I applaud the progress the team is making) I think the discussion whether or not high level functionality or info x, y or z should be provided is premature. I\u0027m not saying it shouldn\u0027t be done, I\u0027m saying for me personally its not as important as getting the low level issues ironed out.\u003C/p\u003E\u003Cp\u003EThat said, I love the way that kOS enables (or forces) me to \u003Cem\u003Eactually\u003C/em\u003E understand the math behind orbital mechanics and solving the engineering problems with automatic ascend, descend, executing Hohmann transfers precisely etc. For me personally, that joy I\u0027m having with kOS would probably be a lot diminished if I could write a two-liner to execute a maneuver node perfectly (just an example).\u003C/p\u003E\u003Cp\u003EWriting scripts for maneuver node execution, Hohmann transfers etc is relatively trivial once I figured out the math required to do so. kOS isn\u0027t lacking much in that regard for me. But that\u0027s me. I\u0027m missing a way for other mods to hook into kOS, information where the ascending-/descending nodes of an orbit are, parameter passing between scripts and cores and stuff like that much more, and bugs with vectors and directions hurt me much more than high-ish level functions.\u003C/p\u003E\u003Cp\u003EOnce those things are rectified, yeah! Why not, add high level stuff to make things easier for people who want it. Nothing wrong with that. But I don\u0027t think the time has come yet.\u003C/p\u003E\u003Cp\u003EA quick example why I think solving engineering problems are fun here, a script that executes a maneuver node that\u0027s given thru parameters:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E// calculates the burn time for a given maneuver node\u003Cbr\u003E// save as executenode.txt\u003Cbr\u003E//\u003Cbr\u003E// call as run executenode(ETA, m/s prograde, m/s radial out, m/s normal).\u003Cbr\u003E// i.e. run executenode(30, 200, 0, 0).\u003Cbr\u003E\u003Cbr\u003Edeclare parameter Neta, Nprograde, Nradialout, Nnormal.\u003Cbr\u003E\u003Cbr\u003Esas off. rcs off.\u003Cbr\u003E\u003Cbr\u003E// calibrate throttle\u003Cbr\u003Elock throttle to 1. wait 0.1. lock throttle to 0.\u003Cbr\u003E\u003Cbr\u003E// calculate TWR\u003Cbr\u003Elock F to (body:mu*(ship:mass*1000)) / (body:radius\u002Bbody:distance)^2.\u003Cbr\u003Elock grav to F / (ship:mass * 1000).\u003Cbr\u003Elock TWRmax to ship:maxthrust / (ship:mass * grav).\u003Cbr\u003E\u003Cbr\u003E// calculate maximum acceleration of the craft in m/s\u003Cbr\u003Elock maxAcc to ship:maxthrust/ship:mass.\u003Cbr\u003Eset burnAcc to maxAcc. // save this, since maxAcc will increase as TWR gets better during the burn\u003Cbr\u003E\u003Cbr\u003E// set up the maneuver\u003Cbr\u003Eset N to node(time:seconds\u002BNeta, Nprograde, Nradialout, Nnormal).\u003Cbr\u003Eadd N.\u003Cbr\u003E\u003Cbr\u003E// calculate burn start and end\u003Cbr\u003Eset burnTime to N:deltav:mag / burnAcc. // this assumes a constant acceleration as in burnAcc\u003Cbr\u003Elock burnStart to time:seconds\u002B(N:eta-(burnTime/2)).\u003Cbr\u003Elock burnEnd to burnStart\u002BburnTime.\u003Cbr\u003E\u003Cbr\u003Elock steering to N:burnvector.\u003Cbr\u003E\u003Cbr\u003Ewait until time:seconds \u0026gt; burnStart.\u003Cbr\u003E\u003Cbr\u003Euntil time:seconds \u0026gt; burnend {\u003Cbr\u003E\t// manipulate the throttle to maintain constant acceleration\u003Cbr\u003E\tlock throttle to burnAcc/maxAcc.\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003Elock throttle to 0.\u003Cbr\u003Eunlock throttle.\u003Cbr\u003Eunlock steering.\u003Cbr\u003Eremove N.\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EWhile the script really isn\u0027t rocket science I\u0027m very happy how it turned out, I learned quite a bit while writing it and it is really quite precise. That\u0027s the joy of kOS for me.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-25T09:16:52Z\u0022 title=\u002206/25/2014 09:16  AM\u0022 data-short=\u002210 yr\u0022\u003EJune 25, 2014\u003C/time\u003E by MrOnak\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-06-25T17:32:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EIn entries like \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/atmosphere/index.html\u0022 rel=\u0022external nofollow\u0022\u003EAtmosphere\u003C/a\u003E and \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/engine/index.html\u0022 rel=\u0022external nofollow\u0022\u003EEngines\u003C/a\u003E the actual way to use them is rather unclear. They certainly do not seem to work in the same way as \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/body/index.html\u0022 rel=\u0022external nofollow\u0022\u003EBody\u003C/a\u003E entry, while the method of describing things is pretty much the same. The difference is to be guessed by the user, as well as how to actually employ the terms.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThey work the same once you have such an object. The difference is whether or not there\u0027s a way to get the object directly. With Body, you get the Body object directly, so it makes sense to document how under the page for body. With Atmosphere and Engines, there\u0027s no way to just get an Engine or an Atmosphere as a first-tier object - they are types that \u0022hang\u0022 off of other types, which is why their pages don\u0027t describe how you get one. (i.e. You get an atmosphere by getting a body, and then getting the body\u0027s :ATM suffix. You get an engine by getting a LIST ENGINES IN FOO and then looking at FOO[0] and FOO[1] and so on for each engine.) The problem is that if I describe how you get one, then I\u0027m not describing that object. I\u0027m describing a different object. \u0022how do you get an Atmosphere\u0022 is a property of Body, not a property of Atmosphere. The atmosphere page feels like the wrong place to document it. Similarly \u0022how do you get an Engine\u0022 is really a property of the LIST command.\u003C/p\u003E\u003Cp\u003EIt may feel weird and pedantic but the reason it\u0027s like that is because there could be other multiple ways to get to objects later on that I can\u0027t predict for. There is *currently* one answer to the question \u0022how do I get to an engine\u0022 and that\u0027s \u0022you call LIST ENGINES\u0022, but if there then were other ways invented later should I keep adding them to the Engine page? It\u0027s not *technically* where they belong. There\u0027s a programming principle that one should never try to do the same exact thing in two different places if at all possible because it opens up the chance for later edits of the code to cause inconsistency if they only edit one of those places. That same principle applies to making reference documentation. If, say, BODY describes how to get to an ATMOSPHERE, and ATMOSPHERE also describes how you get to itself from a BODY, then the same thing is described in two places.\u003C/p\u003E\u003Cp\u003EPerhaps the thing to do is to REMOVE Atmosphere from the flat list on the first index page, so you can\u0027t even look at the Atmosphere page unless you got there by first clicking on the Body page and then clicking on the ATM suffix term on that page. Then people wouldn\u0027t even see it at all unless they\u0027ve walked the path that shows them how they get to it.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EIn contrast, \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/structure/list/index.html\u0022 rel=\u0022external nofollow\u0022\u003ELists\u003C/a\u003E and \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/command/terminal/index.html\u0022 rel=\u0022external nofollow\u0022\u003ETerminal\u003C/a\u003E are rather well described in a concise manner, although I would argue that for instance the \u003Cem\u003Eiterator\u003C/em\u003E and \u003Cem\u003EResources return list type\u003C/em\u003E are unclear too. There are other examples to be found, but I think the problem is clear.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s because those are inherently top-level topics being described. The question \u0022what object do I use to get to the print command?\u0022 isn\u0027t even a thing because print is global.\u003C/p\u003E\u003Cp\u003EAs for Resources.. the page was missing. I discovered this when I was trying to publish out the changes for 0.12.2 and added it.\u003C/p\u003E\u003Cp\u003EAs for iterator.. I have no clue. It doesn\u0027t seem to actually work like a real iterator so I have no clue why the decision was made to expose it to the kOS user. The user can\u0027t call \u0022next\u0022 or \u0022atEnd\u0022 on the iterator, so it\u0027s useless in kosscript as an iterator.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-06-25T18:28:36Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EAs for iterator.. I have no clue. It doesn\u0027t seem to actually work like a real iterator so I have no clue why the decision was made to expose it to the kOS user. The user can\u0027t call \u0022next\u0022 or \u0022atEnd\u0022 on the iterator, so it\u0027s useless in kosscript as an iterator.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe reason iterator is exposed is there was no FOR command when i added lists, it only came later in development. As for it being useful as an iterator you use it like so.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ELIST ENGINES IN FOO.\u003Cbr\u003ESET BAR TO FOO:ITERATOR.\u003Cbr\u003EUNTIL(BAR:END) {\u003Cbr\u003E    PRINT BAR:VALUE:NAME \u002B \u0022 \u0022 \u002B BAR:VALUE:MAXTHRUST \u002B \u0022 \u0022 \u002B BAR:INDEX.\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis was a little clunky so i added the FOR loop, the iterator does let you access the index however so i left it in and neglected to document it fully.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-25T18:33:19Z\u0022 title=\u002206/25/2014 06:33  PM\u0022 data-short=\u002210 yr\u0022\u003EJune 25, 2014\u003C/time\u003E by erendrake\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MrOnak","CreatedById":104432,"CreatedDateTime":"2014-06-25T18:49:17Z","Content":"\n\u003Cp\u003EWait what? There is a for loop in kOS?\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-06-25T19:08:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MrOnak\u0022 data-cite=\u0022MrOnak\u0022\u003E\u003Cdiv\u003EWait what? There is a for loop in kOS?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWe do, its an iterator based loop that lets you traverse the LIST structure. I just looked at the user docs and i am shocked (not really) to see that I forgot to add it or it has been removed?\u003C/p\u003E\u003Cp\u003Eill just show the example above using FOR\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ELIST ENGINES IN FOO.\u003Cbr\u003EFOR engine in FOO {\u003Cbr\u003E    PRINT engine:NAME \u002B \u0022 \u0022 \u002B engine:MAXTHRUST.\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ethe engine variable will only be in scope while you are in the FOR block, then it will be unset.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-25T19:22:05Z\u0022 title=\u002206/25/2014 07:22  PM\u0022 data-short=\u002210 yr\u0022\u003EJune 25, 2014\u003C/time\u003E by erendrake\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MrOnak","CreatedById":104432,"CreatedDateTime":"2014-06-25T19:30:23Z","Content":"\n\u003Cp\u003Eah that one... damnit \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EI knew about that for-in. I was thinking more in terms of for i=0. i \u0026lt; ....... i\u002B\u002B {...}\u003C/p\u003E\u003Cp\u003Eoh well \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-06-25T20:00:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EWe do, its an iterator based loop that lets you traverse the LIST structure. I just looked at the user docs and i am shocked (not really) to see that I forgot to add it or it has been removed?\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENeither. It\u0027s documented but not under \u0022flow control\u0022 because of the fact that it\u0027s not implemented like a real FOR loop in a generic way. It\u0027s not a generic flow control operartor and only works on LIST, so it\u0027s documented under LIST. There\u0027d be no point in knowing it exists if you didn\u0027t know about LISTs, given its current limited implementation.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-06-25T20:03:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ELIST ENGINES IN FOO.\u003Cbr\u003ESET BAR TO FOO:ITERATOR.\u003Cbr\u003EUNTIL(BAR:END) {\u003Cbr\u003E    PRINT BAR:VALUE:NAME \u002B \u0022 \u0022 \u002B BAR:VALUE:MAXTHRUST \u002B \u0022 \u0022 \u002B BAR:INDEX.\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWait, so where\u0027s the increment in that example? You check for if it\u0027s at the end, and you obtain the value and the current index, but where does it increment to the next element? That\u0027s why I didn\u0027t document it - because I don\u0027t get how it works without a \u0027next\u0027 operator.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-06-25T20:07:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003ENeither. It\u0027s documented but not under \u0022flow control\u0022 because of the fact that it\u0027s not implemented like a real FOR loop in a generic way. It\u0027s not a generic flow control operartor and only works on LIST, so it\u0027s documented under LIST. There\u0027d be no point in knowing it exists if you didn\u0027t know about LISTs, given its current limited implementation.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI disagree, it operates on all of the collections that the language has and it does affect the script control flow. just because it is a collection controlled loop doesnt make it not a loop.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-25T20:13:02Z\u0022 title=\u002206/25/2014 08:13  PM\u0022 data-short=\u002210 yr\u0022\u003EJune 25, 2014\u003C/time\u003E by erendrake\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-06-25T20:09:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EWait, so where\u0027s the increment in that example? You check for if it\u0027s at the end, and you obtain the value and the current index, but where does it increment to the next element? That\u0027s why I didn\u0027t document it - because I don\u0027t get how it works without a \u0027next\u0027 operator.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eend is the next. i was going to make it \u0027next\u0027 and have it return true at the end but i didnt like the way it worked with our UNTIL statement. \u003C/p\u003E\u003Cp\u003ECollections were the very first thing change I made after kevin left so I was trying to work within his system as closely as possible.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-25T20:12:38Z\u0022 title=\u002206/25/2014 08:12  PM\u0022 data-short=\u002210 yr\u0022\u003EJune 25, 2014\u003C/time\u003E by erendrake\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-06-25T20:21:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003Eall of the collections that the language has.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAll one of them.\u003C/p\u003E\u003Cp\u003EWhen there\u0027s only one example to go from, and you didn\u0027t document your intent, then I can\u0027t assume it was your intent to make it work with all collections or work with ONE collection. Given that there only is one collection the two look identical in intent at the moment.\u003C/p\u003E\n"},{"CreatedByName":"IronGremlin","CreatedById":77166,"CreatedDateTime":"2014-06-25T20:25:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EThey work the same once you have such an object. The difference is whether or not there\u0027s a way to get the object directly. With Body, you get the Body object directly, so it makes sense to document how under the page for body. With Atmosphere and Engines, there\u0027s no way to just get an Engine or an Atmosphere as a first-tier object - they are types that \u0022hang\u0022 off of other types, which is why their pages don\u0027t describe how you get one. (i.e. You get an atmosphere by getting a body, and then getting the body\u0027s :ATM suffix. You get an engine by getting a LIST ENGINES IN FOO and then looking at FOO[0] and FOO[1] and so on for each engine.) The problem is that if I describe how you get one, then I\u0027m not describing that object. I\u0027m describing a different object. \u0022how do you get an Atmosphere\u0022 is a property of Body, not a property of Atmosphere. The atmosphere page feels like the wrong place to document it. Similarly \u0022how do you get an Engine\u0022 is really a property of the LIST command.\u003Cp\u003EIt may feel weird and pedantic but the reason it\u0027s like that is because there could be other multiple ways to get to objects later on that I can\u0027t predict for. There is *currently* one answer to the question \u0022how do I get to an engine\u0022 and that\u0027s \u0022you call LIST ENGINES\u0022, but if there then were other ways invented later should I keep adding them to the Engine page? It\u0027s not *technically* where they belong. There\u0027s a programming principle that one should never try to do the same exact thing in two different places if at all possible because it opens up the chance for later edits of the code to cause inconsistency if they only edit one of those places. That same principle applies to making reference documentation. If, say, BODY describes how to get to an ATMOSPHERE, and ATMOSPHERE also describes how you get to itself from a BODY, then the same thing is described in two places.\u003C/p\u003E\u003Cp\u003EPerhaps the thing to do is to REMOVE Atmosphere from the flat list on the first index page, so you can\u0027t even look at the Atmosphere page unless you got there by first clicking on the Body page and then clicking on the ATM suffix term on that page. Then people wouldn\u0027t even see it at all unless they\u0027ve walked the path that shows them how they get to it.\u003C/p\u003E\u003Cp\u003EThat\u0027s because those are inherently top-level topics being described. The question \u0022what object do I use to get to the print command?\u0022 isn\u0027t even a thing because print is global.\u003C/p\u003E\u003Cp\u003EAs for Resources.. the page was missing. I discovered this when I was trying to publish out the changes for 0.12.2 and added it.\u003C/p\u003E\u003Cp\u003EAs for iterator.. I have no clue. It doesn\u0027t seem to actually work like a real iterator so I have no clue why the decision was made to expose it to the kOS user. The user can\u0027t call \u0022next\u0022 or \u0022atEnd\u0022 on the iterator, so it\u0027s useless in kosscript as an iterator.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf your dead set on not including any executable code for reference, maybe you could at least link to a description of what \u0022objects\u0022 are, and the syntax surrounding them? Calling out the syntax examples as syntax examples may also help people who are new to programming - it\u0027s easy to forget once you\u0027ve spent enough time learning different languages, but typical code documentation practices are super unintuitive.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-06-25T20:31:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022IronGremlin\u0022 data-cite=\u0022IronGremlin\u0022\u003E\u003Cdiv\u003EIf your dead set on not including any executable code for reference, maybe you could at least link to a description of what \u0022objects\u0022 are, and the syntax surrounding them? Calling out the syntax examples as syntax examples may also help people who are new to programming - it\u0027s easy to forget once you\u0027ve spent enough time learning different languages, but typical code documentation practices are super unintuitive.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI am not deadset on this, I would love to have tutorials on how to use each structure and function. Right now we just dont have the bandwidth, Steven made a great video about the new VecDraw features and i hope in the future we have more of these. \u003C/p\u003E\u003Cp\u003EI think that Steven is right that if you are only going to have one kind of documentation, the reference doc would be it. That being said we should soon have a much more complete reference doc and might be able to branch out, esp if more people get involved \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-06-25T20:33:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003Eend is the next. i was going to make it \u0027next\u0027 and have it return true at the end but i didnt like the way it worked with our UNTIL statement. \u003Cp\u003ECollections were the very first thing change I made after kevin left so I was trying to work within his system as closely as possible.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat is extremely counter-intuitive. Having an operator called \u0022end\u0022 that actually does \u0022next\u0022 with the side effect of also checking for \u0022end\u0022 seems backward. What would make more sense and be less confusing for people would be to have the operator called \u0022next\u0022, since that\u0027s what it actually *does* and have the fact that it can check for end be the side effect. (Rather than have the check be the \u0027named\u0027 effect and the increment be the unnamed side effect).\u003C/p\u003E\u003Cp\u003EAlthough I don\u0027t see why we can\u0027t have both. Most iterators do have both. You can perform \u0027next\u0027 and check its return code to see if it worked, or you can check for \u0027end\u0027 and see if it\u0027s at end without actually incrementing it if all you wanted to do was perform the check.\u003C/p\u003E\u003Cp\u003EIt also seems backward to have the incrementing operator return false when it WORKS and true when it doesn\u0027t, although I can see why you did that given that kOS has UNTIL loops instead of WHILE loops.\u003C/p\u003E\u003Cp\u003EFor iterators to actually be good to use, I think they\u0027d need separate next and end operators. The side effect that Next also returns a boolean for whether it worked or not *could* be used as the check for at-end, or you could call END explicitly to check. I think that would have a lot less hidden behaviors that way.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-25T20:35:03Z\u0022 title=\u002206/25/2014 08:35  PM\u0022 data-short=\u002210 yr\u0022\u003EJune 25, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003Cbr\u003Eprev post didn\u0026#039;t look like it worked so I repeated it here. After looking I saw that it did so I cut the repeated content.\n\u003C/span\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-06-25T20:34:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EAll one of them.\u003Cp\u003EWhen there\u0027s only one example to go from, and you didn\u0027t document your intent, then I can\u0027t assume it was your intent to make it work with all collections or work with ONE collection. Given that there only is one collection the two look identical in intent at the moment.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ethats fair, and to be honest i dont know if we will have another collection type anytime soon? I also wouldnt mind a python like range loop \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EFOR foo IN RANGE(0,100) {\u003Cbr\u003E    print foo.\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-06-25T20:41:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI think that Steven is right that if you are only going to have one kind of documentation, the reference doc would be it. That being said we should soon have a much more complete reference doc and might be able to branch out, esp if more people get involved \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOne thing I *am* dead set against is writing the same information in more than one place. The proper state of mind to have if you catch yourself doing that is not \u0022the information in these two places *might* become contradictory some day if I\u0027m not careful.\u0022 The proper state of mind to have is \u0022the information in these two places *will* become contradictory some day. It\u0027s just a matter of time.\u0022 It\u0027s the sort of defensive pessimism that keeps you from shooting yourself in the foot.\u003C/p\u003E\u003Cp\u003EIf it makes sense that someone in another location in the docs might want the same information, then it should be linked to from there, not cut-n-pasted to there.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-06-25T20:41:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EThat is extremely counter-intuitive.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENothing is set in stone, and we can surely add to the iterator type, and i was at the time very closely coupling it to the UNTIL statement to have the line read \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E    UNTIL (var:END) {\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eso \u0022until the end of the list run this block\u0022 made sense to me. It also had the side affect of getting me a list to play with while i worked on FOR \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-06-25T20:44:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EOne thing I *am* dead set against is writing the same information in more than one place.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI agree, I would say that a nice video on how to loop over the engine list is different \u0022information\u0022 or at least different context than a ref doc of the engine structure. I abhor duplication of effort and data \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-06-25T20:55:57Z","Content":"\n\u003Cp\u003EI would like there to exist some sort of \u0022lesson plan\u0022 set of documents to get people started on kOS. The hard part is deciding how far into it to go before it becomes just handing people the answer on a platter, which is not what kOS is supposed to be. If you wanted an autopilot that does everything for you without much player agency you\u0027d probably be using Mechjeb. kOS is for the purpose of writing YOUR autopilot YOUR way, which makes the question of what do you put in tutorial examples a bit of a fine line to walk. There should be SOME helpful examples, but none of them that work so well that you can just cut and paste them and have them work perfectly.\u003C/p\u003E\u003Cp\u003EI was contemplating what would go into a set of quick example scripts and where that fine line should actually be. There\u0027s also the issue of public image and advertising. Tutorial examples would be the very first thing a person new to kOS will see. Therefore the examples need to be sufficiently nifty that a person looking at them will go \u0022wow that\u0027s cool\u0022 rather than \u0022what a useless piece of junk this is\u0022, and yet at the same time they shouldn\u0027t be doing things like just handing the answer working out of the box for complex operations like \u0022this is how you dock\u0022, or \u0022this script will land an airplane on the KSC runway\u0022.\u003C/p\u003E\u003Cp\u003EThere is a place for more complex examples like that, but I think it\u0027s not in the documentation but rather in repository projects like SolarLiner\u0027s kOS repository.\u003C/p\u003E\u003Cp\u003EFor one thing, a really good piece of kOS code that actually works universally and does the job smartly is a thing to brag about and show off. The documentation shouldn\u0027t be doing that sort of bragging and showing off. The examples will need to be crude and simplistic and full of caveats.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-06-25T20:58:06Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EI agree, I would say that a nice video on how to loop over the engine list is different \u0022information\u0022 or at least different context than a ref doc of the engine structure. I abhor duplication of effort and data \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s not the sort of duplication I meant. I was referring to things like having the fact that BODY:ATM is how you obtain an Atmosphere object being described both in the reference documentation for Body and the reference documentation for Atmosphere.\u003C/p\u003E\n"},{"CreatedByName":"MrOnak","CreatedById":104432,"CreatedDateTime":"2014-06-25T21:15:03Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003E@devs\u003C/strong\u003E I\u0027ll be more than happy to contribute to kOS by providing documentation. If you\u0027re interested we should probably set up some sort of more direct communication over the weekend.\u003C/p\u003E\n"}]}