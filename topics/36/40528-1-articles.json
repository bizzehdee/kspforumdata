{"TopicId":40528,"ForumId":36,"TopicTitle":"Better engine exhaust particle effects","CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-08-01T19:47:22Z","PageNum":1,"Articles":[{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-08-01T19:47:22Z","Content":"\n\u003Cp\u003EHave you ever been irritated by the way exhaust particles unrealistically \u0022expire\u0022 all at the same time so that engine exhaust trails have a fixed length behind your rocket/aeroplane for any given speed? I propose to take a hint from the way that Orbiter 2010 manages exhaust particles, so that older parts of the exhaust are represented by fewer, larger particles, by slowly expanding particles and randomly deleting them over time. This makes for a much more realistic experience. Now I have looked into this and it seems that this simple behaviour cannot be achieved using the standard Unity particle system. So I will have to use a custom particle manager. \u003Ca href=\u0022http://wiki.unity3d.com/index.php?title=SpriteManager\u0022 rel=\u0022external nofollow\u0022\u003EThis sprite manager\u003C/a\u003E looks ideal. Being freed from the Unity particle system should also allow better exhaust glow effects, and potentially much better particle shading.\u003C/p\u003E\u003Cp\u003ENow, I am not going to work on this immediately since I am currently working on the next release of KerbCom Avionics, but this is on my to-do list. This thread has been started to see how much interest there would be in improved particles in KSP.\u003C/p\u003E\n"},{"CreatedByName":"BigFatStupidHead","CreatedById":44217,"CreatedDateTime":"2013-08-01T20:06:48Z","Content":"\n\u003Cp\u003ESounds like a good idea. It would look better, but would it have any associated drawbacks, such as reduced framerate?\u003C/p\u003E\n"},{"CreatedByName":"Majiir","CreatedById":7550,"CreatedDateTime":"2013-08-01T20:08:57Z","Content":"\n\u003Cp\u003EI\u0027ve played with Unity particles, and I think it\u0027s very much possible. As long as MinEnergy and MaxEnergy are different, you\u0027ll have some particles dying before others, and you can use SizeGrow to make particles grow (regardless of remaining energy). To make sure they fade out nicely instead of instantly popping, set the last color animation frame to black (or transparent, depending on the particle shader you\u0027re using). If the energy and sizegrow stats aren\u0027t enough to get the desired effect, you can manually manipulate particles.\u003C/p\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-08-01T20:58:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Majiir\u0022 data-cite=\u0022Majiir\u0022\u003E\u003Cdiv\u003EI\u0027ve played with Unity particles, and I think it\u0027s very much possible. As long as MinEnergy and MaxEnergy are different, you\u0027ll have some particles dying before others, and you can use SizeGrow to make particles grow (regardless of remaining energy). To make sure they fade out nicely instead of instantly popping, set the last color animation frame to black (or transparent, depending on the particle shader you\u0027re using). If the energy and sizegrow stats aren\u0027t enough to get the desired effect, you can manually manipulate particles.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe growth rate being dependent on the lifetime is the problem I was running into. It seems that the settings you mention are specific to \u0022legacy\u0022 particle systems. Can such effects be created with the new system? Or should I avoid the new system?\u003C/p\u003E\u003Cp\u003EEdit: Hmmm... Using the legacy system it does not look like I can specify curves for each parameter. This means that the rate at which particle size grows does not fit the rate at which particles decay and disperse, since I can only have a linear growth rate.\u003C/p\u003E\u003Cp\u003EAlso I may see if I can use a \u0022Trail Renderer\u0022 for long distance rendering of contrails.\u003C/p\u003E\u003Cp\u003EAlso, the possibility of manually manipulating particles looks like a very good idea to get a more \u0022physically accurate\u0022 (in the loosest sense of the phrase) result. Thanks for that Majiir. I guess I should have just asked on IRC.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-08-01T21:19:59Z\u0022 title=\u002208/01/2013 09:19  PM\u0022 data-short=\u002210 yr\u0022\u003EAugust 1, 2013\u003C/time\u003E by ZRM\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-08-01T21:17:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022BigFatStupidHead\u0022 data-cite=\u0022BigFatStupidHead\u0022\u003E\u003Cdiv\u003ESounds like a good idea. It would look better, but would it have any associated drawbacks, such as reduced framerate?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDepends, really. However one thing I can say is that it should be possible to get much better quality than the current effects with the same performance.\u003C/p\u003E\n"},{"CreatedByName":"Nazari1382","CreatedById":62013,"CreatedDateTime":"2013-08-01T22:08:09Z","Content":"\n\u003Cp\u003EFrom the PartTools 0.20 readme:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EKSPParticleEmitter\u003Cp\u003E PartTools now also supports a particle emitter, KSPParticleEmitter which is included in the PartTools package. Unity native particle emitters will not work as they are not fully serializable. KSPParticleEmitter is based upon the legacy particle emitter, see the unity docs for information, however it also supports a variety of emitter shapes. \u003C/p\u003E\u003Cp\u003E The KSPParticleEmitter is fully animatable via the standard unity animation system like other PartTools assets.\u003C/p\u003E\u003Cp\u003E To create a material for a KSPParticleEmitter use the two included KSP/Particle shaders. There is an alpha blended and additive shader.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHave you tried working with this? I wasn\u0027t able to get it to work outside of the editor.\u003C/p\u003E\n"},{"CreatedByName":"stubbles","CreatedById":36867,"CreatedDateTime":"2013-08-02T05:10:45Z","Content":"\n\u003Cp\u003EThere are far cheaper ways to do smoke/fire effects other than paticles (which are extremely spendy with overdraw). In Bioshock, we did a lot of smoke effects with a modeled plane, which was extruded out and curved some. Then a small smoke texture was animated on the U channel and was distorted with a normal map (also how we did fire). The look is very convincing and is way cheaper to render. But it would take some decent code to get that working in KSP. Something to consider, however.\u003C/p\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-08-02T09:05:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022stubbles\u0022 data-cite=\u0022stubbles\u0022\u003E\u003Cdiv\u003EThere are far cheaper ways to do smoke/fire effects other than paticles (which are extremely spendy with overdraw). In Bioshock, we did a lot of smoke effects with a modeled plane, which was extruded out and curved some. Then a small smoke texture was animated on the U channel and was distorted with a normal map (also how we did fire). The look is very convincing and is way cheaper to render. But it would take some decent code to get that working in KSP. Something to consider, however.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDo you mean the geometry is like a ribbon in space behind the engine? I think there is support in Unity for that - there is something called \u0022Trail Renderer\u0022. I am planning to see if I can use that for contrails that are far away from the camera or a long way from the vessel, and particles for up-close effects.\u003C/p\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-08-02T09:10:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Nazari1382\u0022 data-cite=\u0022Nazari1382\u0022\u003E\u003Cdiv\u003EFrom the PartTools 0.20 readme:\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EKSPParticleEmitter\u003Cp\u003EPartTools now also supports a particle emitter, KSPParticleEmitter which is included in the PartTools package. Unity native particle emitters will not work as they are not fully serializable. KSPParticleEmitter is based upon the legacy particle emitter, see the unity docs for information, however it also supports a variety of emitter shapes. \u003C/p\u003E\u003Cp\u003EThe KSPParticleEmitter is fully animatable via the standard unity animation system like other PartTools assets.\u003C/p\u003E\u003Cp\u003ETo create a material for a KSPParticleEmitter use the two included KSP/Particle shaders. There is an alpha blended and additive shader.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHave you tried working with this? I wasn\u0027t able to get it to work outside of the editor.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot yet. I will have a look at this after I finish up my next KCA release. I will probably be using a plugin to generate the effects, so serialisation is not so much of an issue, I think. We will see.\u003C/p\u003E\n"}]}