{"TopicId":59040,"ForumId":36,"TopicTitle":"[WIP] Jebnix - A kOS Alternative","CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-01-06T04:35:42Z","PageNum":5,"Articles":[{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2014-02-17T12:00:02Z","Content":"\n\u003Cp\u003ESo multiple units running on unfocused craft is either really really hard or impossible. Either option means I\u0060d not like to see an attempt at it although it would be fun to use. Glad that is sorted out. Now, what\u0060s happening with Jebnix?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EWoodywood, how do you see the changes being made to the language by Erendrake combining with your work? Are you planning to follow his changes and additions, or are you taking Kevin\u0027s kOS as canonical and running with it from the point he left off?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI would suggest picking a point, 0.94 for example, and making Jebnix backwards compatible with that. After release check up on all the many KOS variants out there and see which features are good. Rinse and repeat.\u003C/p\u003E\u003Cp\u003EUntil Jebnix is released it\u0060s a moot point. I would imagine Jebnix will have features not in other Mods and vice verse so any program which will run on either platform will have to use a reduced feature set.\u003C/p\u003E\u003Cp\u003EAs woody says in his Sig, \u0022All right, there\u0027s a thousand things that have to happen in order. We are on number eight. You\u0027re talking about number six hundred and ninety-two.\u0022\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022woodywood245\u0022 data-cite=\u0022woodywood245\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003EJebnix Language\u003C/strong\u003E\u003Cp\u003EThe original goal of Jebnix was to be a kOS replacement, using an improved version of the Kerboscript language. That goal still exists, and is not changing. I started working on this project three months before I announced it. \u003C/p\u003E\u003Cp\u003EThe Jebnix codebase is now nearly 4000 lines of code and comments. Just the scripting engine has reached more than 2100 lines. It\u0027s not that long, but that\u0027s weeks of work dedicated to a single project that I\u0027m working on in the little spare time I have.\u003C/p\u003E\u003Cp\u003EThe language I\u0027m implementing is Kerboscript\u002B\u002B. End of story.\u003C/p\u003E\u003Cp\u003EI may, in the future, as part of the idea of allowing the code to be compiled, add additional languages by merging a separate, ongoing project into this one, which will have a variety of language options, including a C-like language, and a BASIC-like language. This is not a guarantee, and you probably shouldn\u0027t bet on it.\u003C/p\u003E\u003Cp\u003EIf you\u0027d prefer an immediate alternative to Kerboscript, there\u0027s another user named secretformula who\u0027s working on a scriptable guidance system called JsKsp, which is going to be implemented for JavaScript. I don\u0027t know the state of that project. There\u0027s also this: \u003Ca href=\u0022http://kerbalspaceprogram.com/agc/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kerbalspaceprogram.com/agc/\u003C/a\u003E, the Automated Guidance Computer, which has some interesting features, and the language is LISP. And of course, there\u0027s the classic, ProgCom \u003Ca href=\u0022http://kerbalspaceprogram.com/0-18-4-progcom-cpu-emulator/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kerbalspaceprogram.com/0-18-4-progcom-cpu-emulator/\u003C/a\u003E, which lets you write everything in an assembly language.\u003C/p\u003E\u003Cp\u003EI\u0027m not saying these are good alternatives, and I\u0027m not saying that my decision to write this thing for KerboScript is a great idea. I chose KerboScript because it was something that all kOS users are familiar with, and because it\u0027s simple and inflexible syntax makes it so easy to parse.\u003Cstrong\u003E The goal of the language was to be something easy for non-programmers to pick up. I don\u0027t know if that\u0027s actually what happened,\u003C/strong\u003E and I know the language drives real programmers crazy, but this is what I\u0027m doing, plain and simple.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMyself I managed to pick up using KOS very quickly except for finding workarounds for bugs and coping with the unintuitive direction system. If KOS did not have either of those then Kerboscript, even if it drives real programmers mad, would be very easy to pick up and use.\u003C/p\u003E\u003Cp\u003EYou can use all your energy chasing new features in other mods and get nowhere fast. I\u0060d suggest finishing the plan you already have (which does seem to be your plan), then have a look and see what you want to incorporate as new features for Jebnix.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-02-17T19:39:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022John FX\u0022 data-cite=\u0022John FX\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EMyself I managed to pick up using KOS very quickly except for finding workarounds for bugs and coping with the unintuitive direction system. If KOS did not have either of those then Kerboscript, even if it drives real programmers mad, would be very easy to pick up and use.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAgreed. Most of what made kOS hard to pick up in the early days was not the weirdness of the language, but the buggy implementation of it and the many places where the documentation differed from the reality. If it had worked exactly as advertised it would have been easier to deal with. Keeping an active list in your head of all the stuff that doesn\u0027t work and all the workarounds for it was what made it hard. The fact that the language looked weird wasn\u0027t hard except insomuch as it made it difficult to tell the difference between \u0022this is a bug\u0022 and \u0022this is me not understanding the language\u0022. When there were lots and lots of bugs, the inability to tell that difference was a problem.\u003C/p\u003E\u003Cp\u003EFor example, the fact that all variables are global in scope and work across all subprograms was originally a bug and NOT what Nivekk intended. But by the time it was noticed too many people had depended on it (because there was no way for them to tell that it wasn\u0027t intentional. kOSscript was a weird language so if it\u0027s doing something buggy you might interpret that as what it was meant to do, which is what happened in this case). So what had been a bug became an accepted language feature and was kept.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-17T19:44:22Z\u0022 title=\u002202/17/2014 07:44  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 17, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-02-17T23:15:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EAgreed. Most of what made kOS hard to pick up in the early days was not the weirdness of the language, but the buggy implementation of it and the many places where the documentation differed from the reality. If it had worked exactly as advertised it would have been easier to deal with. Keeping an active list in your head of all the stuff that doesn\u0027t work and all the workarounds for it was what made it hard. The fact that the language looked weird wasn\u0027t hard except insomuch as it made it difficult to tell the difference between \u0022this is a bug\u0022 and \u0022this is me not understanding the language\u0022. When there were lots and lots of bugs, the inability to tell that difference was a problem.\u003Cp\u003EFor example, the fact that all variables are global in scope and work across all subprograms was originally a bug and NOT what Nivekk intended. But by the time it was noticed too many people had depended on it (because there was no way for them to tell that it wasn\u0027t intentional. kOSscript was a weird language so if it\u0027s doing something buggy you might interpret that as what it was meant to do, which is what happened in this case). So what had been a bug became an accepted language feature and was kept.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs I\u0027m working on Jebnix, I\u0027m working on writing a detailed language specification for Kerboscript\u002B\u002B, that defines the expected behavior of each of the language elements, and how they should work on concert. This is for my own sanity as well as everyone else\u0027s. If something isn\u0027t working as I designed it, it will become obvious when reading the language definition. In the case of Kerboscript\u002B\u002B, certain behaviors that exist in the original language (such as normal variables existing in global scope) will still be there, with fixes for other behaviors. There will also be no hidden keywords that can only be found by looking in the source code. Everything will be defined as obviously as possible. I\u0027m going to try my best to make decent documentation as well as a decent implementation, because it drives me nuts when good software comes with bad documentation.\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-02-23T21:31:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EWoodywood, how do you see the changes being made to the language by Erendrake combining with your work? Are you planning to follow his changes and additions, or are you taking Kevin\u0027s kOS as canonical and running with it from the point he left off?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs far as language design is concerned, I\u0027m starting where Kevin left off. I\u0027m planning on adding core language improvements first (if-else/if-elseif statements, useful error messages, exception handling, return values, function blocks, enumerators, != operator, unary \u002B and - operators, NOT operator, bitwise AND and OR operators, arrays, boolean type, ordered pair type, string operations, variable scopes, etc) before adding new surface-level features (dynamic arrays, VOLUME:NAME, etc). Features that Erendrake is adding may be included in my version, but it\u0027s not guaranteed.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-23T21:38:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022woodywood245\u0022 data-cite=\u0022woodywood245\u0022\u003E\u003Cdiv\u003EAs far as language design is concerned, I\u0027m starting where Kevin left off. I\u0027m planning on adding core language improvements first (if-else/if-elseif statements, useful error messages, exception handling, return values, function blocks, enumerators, != operator, unary \u002B and - operators, NOT operator, bitwise AND and OR operators, arrays, boolean type, ordered pair type, string operations, variable scopes, etc) before adding new surface-level features (dynamic arrays, VOLUME:NAME, etc). Features that Erendrake is adding may be included in my version, but it\u0027s not guaranteed.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EO dear, it is going to be a real pain to choose the best alternative pretty soon. While on the subject: have you guys seen the RISC kOS variant? Do you think it could bring performance gains to Jebnix, or is that too much of a change?\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-02-23T21:50:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EO dear, it is going to be a real pain to choose the best alternative pretty soon. While on the subject: have you guys seen the RISC kOS variant? Do you think it could bring performance gains to Jebnix, or is that too much of a change?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s a little too late to incorporate that kind of thing into what I already have. I\u0027ve already reached the point where the DLLs compile and actually work. I haven\u0027t started looking at performance yet. I expect initial performance of Jebnix to either be abysmal or excellent, but I won\u0027t release it until I get it where I want it (the faster the better). I\u0027m hoping the simplified codebase, which uses a lot of the optimization techniques I know, will help increase the speed. Most of the speed is based on the core clockspeed, which can be determined by implementation and potentially be configured.\u003C/p\u003E\u003Cp\u003EI have been working on a separate project for quite some time now that is a virtual machine/scripting engine for .Net, which compiles everything to bytecode and runs it directly on a virtual machine. If that project is ever completed, I\u0027m planning on releasing a version of Jebnix incorporating that scripting engine. The project is large and ambitious (and I can describe it in far more detail, PM me if you\u0027d like more info), but is a backburner project so I\u0027m not sure when it will be finished.\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-02-24T00:41:26Z","Content":"\n\u003Cp\u003EA preview of the improved error messages:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i1269.photobucket.com/albums/jj600/woodywood245/Jebnix/Screenshot2014-02-23162958.png\u0022 alt=\u0022Screenshot2014-02-23162958.png\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-02-24T00:44:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022woodywood245\u0022 data-cite=\u0022woodywood245\u0022\u003E\u003Cdiv\u003EA preview of the improved error messages:\u003Cp\u003E\u003Ca href=\u0022http://i1269.photobucket.com/albums/jj600/woodywood245/Jebnix/Screenshot2014-02-23162958.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://i1269.photobucket.com/albums/jj600/woodywood245/Jebnix/Screenshot2014-02-23162958.png\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI like that it is very desciptive (and actually making sense). I think I saw another implementation that actually pointed the error out with an arrow, that is pretty neat too.\u003C/p\u003E\u003Cp\u003EThis is the stuff that makes languages easy for beginners.\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-02-24T00:48:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EI like that it is very desciptive (and actually making sense). I think I saw another implementation that actually pointed the error out with an arrow, that is pretty neat too.\u003Cp\u003EThis is the stuff that makes languages easy for beginners.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe part in parentheses is the name of the file/process running (or, in this case, the interactive console process), and the line number the error occurs on, similar to how it would appear as a compiler error.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-02-24T10:33:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022woodywood245\u0022 data-cite=\u0022woodywood245\u0022\u003E\u003Cdiv\u003EA preview of the improved error messages:\u003Cp\u003E\u003Ca href=\u0022http://i1269.photobucket.com/albums/jj600/woodywood245/Jebnix/Screenshot2014-02-23162958.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://i1269.photobucket.com/albums/jj600/woodywood245/Jebnix/Screenshot2014-02-23162958.png\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat is the advantage of using a real parser. Nice work.\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-02-25T00:35:38Z","Content":"\n\u003Cp\u003EAnd next, a preview of expression evaluation. There are still a few bugs that need to be worked out and some other work, but it\u0027s mostly working.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i1269.photobucket.com/albums/jj600/woodywood245/Jebnix/print2p2.png\u0022 alt=\u0022print2p2.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EThis demonstrates the importance of parentheses for equal-precedence operations.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i1269.photobucket.com/albums/jj600/woodywood245/Jebnix/Screenshot2014-02-24190749.png\u0022 alt=\u0022Screenshot2014-02-24190749.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i1269.photobucket.com/albums/jj600/woodywood245/Jebnix/print4.png\u0022 alt=\u0022print4.png\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-25T03:18:57Z\u0022 title=\u002202/25/2014 03:18  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 25, 2014\u003C/time\u003E by woodywood245\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-03-06T10:33:21Z","Content":"\n\u003Cp\u003EA test of library functions:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i1269.photobucket.com/albums/jj600/woodywood245/Jebnix/jebnix2.png\u0022 alt=\u0022jebnix2.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E\u003Cstrong\u003ELibrary functions will include:\u003C/strong\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EBasic math functions:\u003C/span\u003E\u003C/p\u003E\u003Cp\u003Eabs - Absolute value\u003C/p\u003E\u003Cp\u003Emod - Modulus (though this can be achieved with the % operator)\u003C/p\u003E\u003Cp\u003Efloor - Rounds a number up to an integer.\u003C/p\u003E\u003Cp\u003Eceiling - Rounds a number down to an integer.\u003C/p\u003E\u003Cp\u003Eround - Rounds a number.\u003C/p\u003E\u003Cp\u003Eroundto - Rounds a number to a given decimal place.\u003C/p\u003E\u003Cp\u003Esqrt - Square root\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003ETrig functions\u003C/span\u003E\u003C/p\u003E\u003Cp\u003Eradtodeg - Converts radians to degrees\u003C/p\u003E\u003Cp\u003Edegtorad - Converts degrees to radians\u003C/p\u003E\u003Cp\u003Esin - Sine function for degrees\u003C/p\u003E\u003Cp\u003Ecos - Cosine function for degrees\u003C/p\u003E\u003Cp\u003Etan - Tangent function for degrees\u003C/p\u003E\u003Cp\u003Esinr - Sine function for radians\u003C/p\u003E\u003Cp\u003Ecosr - Cosine function for radians\u003C/p\u003E\u003Cp\u003Etanr - Tangent function for radians\u003C/p\u003E\u003Cp\u003Easin - Arcsine function for degress\u003C/p\u003E\u003Cp\u003Eacos - Arccosine function for degrees\u003C/p\u003E\u003Cp\u003Eatan - Arctangent function for degrees\u003C/p\u003E\u003Cp\u003Eatan2 - Two-argument arctangent function for degrees\u003C/p\u003E\u003Cp\u003Easinr - Arcsine function for radians\u003C/p\u003E\u003Cp\u003Eacosr - Arccosine function for radians\u003C/p\u003E\u003Cp\u003Eatanr - Arctangent function for radians\u003C/p\u003E\u003Cp\u003Eatan2r - Two-argument arctangent function for radians\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003ELogarithmic Functions\u003C/span\u003E\u003C/p\u003E\u003Cp\u003Elog - Logarithm base 10\u003C/p\u003E\u003Cp\u003Elogx - Logarithm base x.\u003C/p\u003E\u003Cp\u003Eln - Logarithm base e.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003EAlso provided are constant values:\u003C/span\u003E\u003C/p\u003E\u003Cp\u003Epi - The value pi.\u003C/p\u003E\u003Cp\u003Ee - The value e.\u003C/p\u003E\u003Cp\u003EGravitationalConstant - the gravitational constant (6.67384\u00C3\u0192\u00E2\u20AC\u201D10^-11 m^3 kg^-1 s^-2)\u003C/p\u003E\n"},{"CreatedByName":"Mujun Kross","CreatedById":101837,"CreatedDateTime":"2014-03-06T20:20:31Z","Content":"\n\u003Cp\u003EGreat work with this one. I hope it goes to release and we can have a go at breaking it for you.\u003C/p\u003E\u003Cp\u003EI loved the idea of the original kos...I just wish the original author was able to take it to where it needed to go (whatever happened to the guy). I wish you the best of luck in this....however it sounds like you have it in hand with a solid design concept.\u003C/p\u003E\u003Cp\u003EThanks\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-03-06T20:42:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Mujun Kross\u0022 data-cite=\u0022Mujun Kross\u0022\u003E\u003Cdiv\u003EGreat work with this one. I hope it goes to release and we can have a go at breaking it for you.\u003Cp\u003EI loved the idea of the original kos...I just wish the original author was able to take it to where it needed to go (whatever happened to the guy). I wish you the best of luck in this....however it sounds like you have it in hand with a solid design concept.\u003C/p\u003E\u003Cp\u003EThanks\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is going to release, I\u0027m just not exactly sure when. Because I started completely from scratch, it is definitely an uphill battle, and I\u0027m not able to put in as many hours as I\u0027d like to. However, I never abandon projects (sometimes I just let them get dusty), so you can be assured that this project will be released within a reasonable time. I\u0027m planning on distributing a pre-release alpha sometime in the coming weeks that uses RPM as an interface (with no keyboard support). This would simply be designed to test/run scripts and use the underlying systems. And I\u0027m sure there will be plenty of stuff for the breaking. I\u0027m writing the thing, and I\u0027m finding new bugs every day. You can track day-to-day progress on Github (see first post).\u003C/p\u003E\u003Cp\u003EThanks for your support!\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-03-06T22:38:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Agathorn\u0022 data-cite=\u0022Agathorn\u0022\u003E\u003Cdiv\u003EJust out of curiosity will this use the same mod plugin system, so that mods written to work with kOS will work with this without being changed?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe plugin system is being designed today. It will feature two systems: a legacy system that lets you use the old (and weird) method, and a newer system that lets you register your functions directly through the Jebnix library. The newer system will allow programmers to simply call the ExternalFunctions.RegisterFunction(string name, int paramCount, Delegate ptr) or ExternalFunction.RegisterFunction(string namespc, string name, int paramCount, Delegate ptr) method, and pass it a delegate (function pointer, for the C/C\u002B\u002B programmers). A unique internal name is generated for the function, and the function is registered with its delegate in a Dictionary (hash table). When its time for the function to be invoked, the ExternalFunctions.InvokeFunction() method is called, and the registered function is invoked, if it exists.\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-03-09T08:00:00Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003EStoring script names as strings, creating them dynamically, and calling scripts through the stored variable.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EAlso demonstrates WHILE loops.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i1269.photobucket.com/albums/jj600/woodywood245/Jebnix/jebnix3.png\u0022 alt=\u0022jebnix3.png\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"drtedastro","CreatedById":70911,"CreatedDateTime":"2014-03-09T08:14:22Z","Content":"\n\u003Cp\u003EHello Woodywood245,\u003C/p\u003E\u003Cp\u003EGreat to see how this is coming along.\u003C/p\u003E\u003Cp\u003Equick question, in the above example, where is the space coming from between test and the variable \u0022x\u0022??\u003C/p\u003E\u003Cp\u003Eis is automatic or is it somehow implied???\u003C/p\u003E\u003Cp\u003Ejust curious... trying to keep up with this so that i can get started soon...\u003C/p\u003E\u003Cp\u003Echeers.\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-03-09T08:23:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022drtedastro\u0022 data-cite=\u0022drtedastro\u0022\u003E\u003Cdiv\u003EHello Woodywood245,\u003Cp\u003EGreat to see how this is coming along.\u003C/p\u003E\u003Cp\u003Equick question, in the above example, where is the space coming from between test and the variable \u0022x\u0022??\u003C/p\u003E\u003Cp\u003Eis is automatic or is it somehow implied???\u003C/p\u003E\u003Cp\u003Ejust curious... trying to keep up with this so that i can get started soon...\u003C/p\u003E\u003Cp\u003Echeers.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m not sure I understand your question. Are you taking about in the console, where it says \u0022this is test 1.\u0022, \u0022this is test 2.\u0022, etc?\u003C/p\u003E\n"},{"CreatedByName":"drtedastro","CreatedById":70911,"CreatedDateTime":"2014-03-09T08:31:15Z","Content":"\n\u003Cp\u003EI see now... I was looking at it the wrong way. Too late/early not enough coffee yet or too much....\u003C/p\u003E\u003Cp\u003EIt will be great to work with this...\u003C/p\u003E\n"},{"CreatedByName":"diomedea","CreatedById":93700,"CreatedDateTime":"2014-03-09T08:44:30Z","Content":"\n\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E [joke mode on] Woody, you set at least 6 test# scripts, but only allowed the program to run the first 5 of them! [/joke mode] \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-03-10T03:08:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022woodywood245\u0022 data-cite=\u0022woodywood245\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003EStoring script names as strings, creating them dynamically, and calling scripts through the stored variable.\u003C/strong\u003E\u003Cp\u003EAlso demonstrates WHILE loops.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOoh, nifty. Those are things I have been wanting.\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-03-10T17:52:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EOoh, nifty. Those are things I have been wanting.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESo have I. I\u0027m also thinking about including do...while loops and for-loops, but I\u0027m not exactly sure on the appropriate syntax to make it easy. For-loops are confusing already for newbies in other languages. I\u0027m thinking something like this for do... while.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EDO\u003Cbr\u003E{\u003Cbr\u003E// do something\u003Cbr\u003E} WHILE condition.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI want to add for-loops if possible because they are closely related to while-loops (virtually identical, actually) so they are easy to implement, and I\u0027m going to have arrays (which will support a foreach iterator loop), but sometimes you don\u0027t want to iterate over the entire array.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-03-10T18:28:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022woodywood245\u0022 data-cite=\u0022woodywood245\u0022\u003E\u003Cdiv\u003ESo have I. I\u0027m also thinking about including do...while loops and for-loops, but I\u0027m not exactly sure on the appropriate syntax to make it easy.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWould it not be best to use the already familiar syntax of the \u003Cem\u003Euntil\u003C/em\u003E loop?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Ewhile x \u0026lt; 5 {\u003Cbr\u003E   set x to (x \u002B 5).\u003Cbr\u003E}.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOr am I missing something critical that causes that not to work? I am not sure about \u003Cem\u003Efor\u003C/em\u003E loops - the concept is not complicated, but I understand that people need to get it before it becomes easy.\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-03-10T18:39:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Camacha\u0022 data-cite=\u0022Camacha\u0022\u003E\u003Cdiv\u003EWould it not be best to use the already familiar syntax of the \u003Cem\u003Euntil\u003C/em\u003E loop?\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Ewhile x \u0026lt; 5 {\u003Cbr\u003E   set x to (x \u002B 5).\u003Cbr\u003E}.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOr am I missing something critical that causes that not to work? I am not sure about \u003Cem\u003Efor\u003C/em\u003E loops - the concept is not complicated, but I understand that people need to get it before it becomes easy.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWHILE loops are already built into Jebnix.\u003C/p\u003E\u003Cp\u003EWHILE loops and DO... WHILE loops are similar, but different. In a WHILE loop, the condition is checked before it is executed for the first time, whereas in a DO... WHILE loop, the block is executed at least once, with the condition checked at the end to see if it should be executed again.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eset x to 0.\u003Cbr\u003E// this will run repeatedly until x is 5\u003Cbr\u003Ewhile x \u0026lt; 5\u003Cbr\u003E{\u003Cbr\u003Eset x to x \u002B 5.\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E// this loop is functionally identical to the one above\u003Cbr\u003Eset x to 0.\u003Cbr\u003Edo\u003Cbr\u003E{\u003Cbr\u003Eset x to x \u002B 1.\u003Cbr\u003E} while x \u0026lt; 5.\u003Cbr\u003E\u003Cbr\u003Eset x to 5.\u003Cbr\u003E// this loop executes only once, and x becomes 6.\u003Cbr\u003Edo\u003Cbr\u003E{\u003Cbr\u003Eset x to x \u002B 1.\u003Cbr\u003E} while x \u0026lt; 5.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-03-10T20:31:29Z","Content":"\n\u003Cp\u003EI am not sure what direction you want to take kOS, but looking at it from the point of wanting to develop a compact and easy language I might not bother with \u003Cem\u003Edo... loops\u003C/em\u003E at all. People can substitute it with barely any code themselves.\u003C/p\u003E\n"}]}