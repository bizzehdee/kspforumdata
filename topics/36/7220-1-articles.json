{"TopicId":7220,"ForumId":36,"TopicTitle":"Landing Legs","CreatedByName":"Cepheus","CreatedById":10683,"CreatedDateTime":"2012-02-29T19:05:51Z","PageNum":1,"Articles":[{"CreatedByName":"Cepheus","CreatedById":10683,"CreatedDateTime":"2012-02-29T19:05:51Z","Content":"\n\u003Cp\u003EHi all. First time making an modification, and I would like to modify GoDamit\\\u0027s LEM legs to extend and retract, similar to the stock landing legs, and NovaSilisko\\\u0027s solar panels. I, however, do not have the slightest idea how these legs work, and I haven\\\u0027t found any guide explaining how they do.\u003C/p\u003E\u003Cp\u003EAlso, for all purposes, I do not intend to release this when I\\\u0027m done, to prevent me breaking any rules.\u003C/p\u003E\u003Cp\u003EThanks in advance,\u003C/p\u003E\u003Cp\u003ECepheus,\u003C/p\u003E\n"},{"CreatedByName":"Tiberion","CreatedById":8356,"CreatedDateTime":"2012-03-01T00:12:01Z","Content":"\n\u003Cp\u003EI\\\u0027ve been looking at the DAE file, here is what I know thus far.\u003C/p\u003E\u003Cp\u003EIt works almost like the winglet rotation, except instead of the rotation amount being tied to the deflection angle in the config (which also determines how much force is applied to \u0027turn\u0027 the ship) there is a new set ofparameters:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E// --- landing leg parameters --------\u003C/p\u003E\u003Cp\u003EpivotAxis = 0, 0, -1\u003C/p\u003E\u003Cp\u003EpivotingAngle = 135\u003C/p\u003E\u003Cp\u003EextensionTime = 1.8\u003C/p\u003E\u003Cp\u003EretractTime = 1.8\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EpivotAxis is a vector around which the leg mesh will rotate, and will function like the thrust and attachment vector assignments for the most part. I don\\\u0027t think the direction of the vector matters, so in the example (0,0,1) should work just as good. To visualize this axis on the default leg, imagine an axle or bolt through the hinge of the leg. That will be your pivotAxis.\u003C/p\u003E\u003Cp\u003EThe angle is how far it rotates, from the raised position to deployed. And the 2 time values are how long the animation \u0027runs\u0027\u003C/p\u003E\u003Cp\u003EThe other major difference is the internal structure of the object. This is the 1st part with 2 separate collider meshes. The hinge has the main node_collider, which serves as the part attachment point as well, and the rotating leg has a separate collider named \u0027node_legCollider\u0027\u003C/p\u003E\u003Cp\u003EThe hinge and leg objects also require specific names:\u003C/p\u003E\u003Cp\u003Ehinge: obj_anchor\u003C/p\u003E\u003Cp\u003Eleg: obj_leg\u003C/p\u003E\u003Cp\u003Eleg collider: node_legCollider\u003C/p\u003E\u003Cp\u003Ehinge/normal collider: node_collider\u003C/p\u003E\n"},{"CreatedByName":"Emilio","CreatedById":12359,"CreatedDateTime":"2012-03-01T01:11:51Z","Content":"\n\u003Cp\u003E \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tiberion\u0022 data-cite=\u0022Tiberion\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EpivotAxis is a vector around which the leg mesh will rotate, and will function like the thrust and attachment vector assignments for the most part. I don\\\u0027t think the direction of the vector matters, so in the example (0,0,1) should work just as good. To visualize this axis on the default leg, imagine an axle or bolt through the hinge of the leg. That will be your pivotAxis.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBut wich way is positive or negative ( i mean, yaw left is -1 or 1, etc) ?\u003C/p\u003E\u003Cp\u003Ei\\\u0027m trying to do the parasail Gemini \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Tiberion","CreatedById":8356,"CreatedDateTime":"2012-03-01T02:08:12Z","Content":"\n\u003Cp\u003Ethe negative side of an axis is to the left (or down) yes, because each axis is defined by a \u0027coordinate plane\u0027\u003C/p\u003E\u003Cp\u003ELook over this article: \u003Ca href=\u0022https://en.wikipedia.org/wiki/Cartesian_coordinate_system\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://en.wikipedia.org/wiki/Cartesian_coordinate_system\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ESay you had a spaceplane launched and its now flying level over Kerbin. If you view it from behind and above it as it flys away:\u003C/p\u003E\u003Cp\u003EThe Left wingtip is on the negative side of the X axis, and the right wingtip is positive.\u003C/p\u003E\u003Cp\u003EBecause the plane launched vertically, the nose is \u002BY and the tail is -Y, while the belly of plane is -Z and the topside of the fuselage is \u002BZ\u003C/p\u003E\u003Cp\u003E(one thing to remember, KSP treats the Y axis as the \u0027height\u0027 or vertical coordinate, whereas it shows Z in the examples on Wiki. There is a reason for this involving engineering in real life, but that is not important, just remember to swap them when working in your 3d software (since Z is usually the vertical coordinate in those, as well)\u003C/p\u003E\u003Cp\u003EAlso important to remember that each piece has separate internal coordinates (again, tied to that origin point of the model) A lot of parts that radially attach like boosters, lander legs, wings, and such usually have the attaching surface pointing at the \u002BX axis, as you can see in this picture of the lander leg in Blender:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/99Miv.png\u0022 alt=\u002299Miv.png\u0022\u003E\u003C/p\u003E\u003Cp\u003ERed is X, green is Y, Blue is Z, with the colored arrows pointing towards the positive on their axis. (of course, the blue axis will translate to Y once in KSP, and green will be Z..)\u003C/p\u003E\u003Cp\u003ENote that the side that attaches is at \u002BX and the green axis runs directly through the place where the leg rotates.\u003C/p\u003E\u003Cp\u003EThe axis the part attaches on is 1,0,0 (the red, X axis) while the leg rotates on 0,0,1 (the green Z axis in KSP) and you\\\u0027ll see those coorindates in the leg\\\u0027s config file:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003Enode_attach = 6.88426, 0.0, 0.0, \u003Cstrong\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E1.0, 0.0, 0.0\u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EpivotAxis = \u003Cstrong\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003E0, 0, -1\u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E(the first part of node_attach tells the game how far from 0,0,0 the part should attach, in this case 68 centimeters on the X axis, and no distance on the Y and Z axis)\u003C/p\u003E\u003Cp\u003EThere is another thread around here where we went into the trigonometry in how these \u0027vector\u0027 coordinates work (search for vector math) if you desire more in depth information.\u003C/p\u003E\n"},{"CreatedByName":"Emilio","CreatedById":12359,"CreatedDateTime":"2012-03-01T10:41:28Z","Content":"\n\u003Cp\u003EOh, so if i understand correctly this means that, for the gemini skids :\u003C/p\u003E\u003Cp\u003EMain left skid is PivotAxis -1,0,0\u003C/p\u003E\u003Cp\u003EMain right skid is PivotAxis 1,0,0\u003C/p\u003E\u003Cp\u003EFront skid is just modified in DeployAngle\u003C/p\u003E\u003Cp\u003EAm i right ?\u003C/p\u003E\n"},{"CreatedByName":"Tiberion","CreatedById":8356,"CreatedDateTime":"2012-03-01T16:32:54Z","Content":"\n\u003Cp\u003EI\\\u0027m not sure what you mean by Gemini skids? Is that a mod someone made?\u003C/p\u003E\u003Cp\u003EBut, if a part is attaching radially like the default leg, then you don\\\u0027t usually make more than one leg or whatever. The pivotaxis is only relative to the part\\\u0027s own origin center, and not related to which side of a ship the part connects to. So if you place the example leg in 4x symmetry, each time it attaches with its own internal X axis facing the ship, which means internally the Z axis (green) is the one passing through the hinge.\u003C/p\u003E\u003Cp\u003EThat\\\u0027s the reason its set up this way, so that we don\\\u0027t worry about the parts location; the game rotates the whole part as needed to connect, and we only worry about how it behaves in its \u0027internal\u0027 orientation\u003C/p\u003E\n"},{"CreatedByName":"Emilio","CreatedById":12359,"CreatedDateTime":"2012-03-01T16:50:21Z","Content":"\n\u003Cp\u003EThis is gemini paraglider :\u003C/p\u003E\u003Cp\u003EOriginally Gemini wasn\\\u0027t intended to splashdown, but to deploy a parasail and glide to the ground. It would have used skids to land, like in the picture below. That\\\u0027s why gemini hadn\\\u0027t an LES tower but ejection seat, that could be used while gliding. However, project has been abandoned.\u003C/p\u003E\n"},{"CreatedByName":"Tiberion","CreatedById":8356,"CreatedDateTime":"2012-03-01T17:18:52Z","Content":"\n\u003Cp\u003EWell, it looks like you could use the same leg part for the left and right one, since it will attach facing \\\u0027inward\u0027 on both sides of the capsule.\u003C/p\u003E\u003Cp\u003ELooks like you\\\u0027d need a different leg for the nose, since it attaches at a different angle\u003C/p\u003E\n"},{"CreatedByName":"Emilio","CreatedById":12359,"CreatedDateTime":"2012-03-01T17:28:43Z","Content":"\n\u003Cp\u003EHey, but i don\\\u0027t even need to modify the pivotAxis, just the DeployAngle !\u003C/p\u003E\u003Cp\u003EBut still thinking for the front one...\u003C/p\u003E\n"},{"CreatedByName":"Leicontis","CreatedById":9874,"CreatedDateTime":"2012-03-01T18:23:53Z","Content":"\n\u003Cp\u003EI had been kinda wondering about how the landing legs handled collision meshes. I\\\u0027m quite happy to hear that they\\\u0027re done as a hinge and a leg, since that means that legs that fold in underneath like those on the Apollo LEM are well within the realm of possibility.\u003C/p\u003E\n"},{"CreatedByName":"Rockon","CreatedById":1802,"CreatedDateTime":"2012-03-09T18:45:13Z","Content":"\n\u003Cp\u003EMinor necro/threadjack, but:\u003C/p\u003E\u003Cp\u003EI\\\u0027ve noticed that changing the .cfg in the vanilla leg such that\u003C/p\u003E\u003Cp\u003EpivotingAngle = 90\u003C/p\u003E\u003Cp\u003Eyields a leg that still deploys to the same 45 degree angle below the horizontal, but with a different starting position (\u002B45). Is there a quick-and-dirty method for setting the final position of the leg, rather than the initial? Or do I need to change the model itself such that the final position is at the horizontal (or whatever desired angle) rather than -45?\u003C/p\u003E\n"},{"CreatedByName":"Tiberion","CreatedById":8356,"CreatedDateTime":"2012-03-09T18:54:02Z","Content":"\n\u003Cp\u003EThe final, deployed position is indeed only managed by its orientation in the 3d software. the pivotangle only sets the other \\\u0027endpoint\\\u0027 of its rotational arc\u003C/p\u003E\n"},{"CreatedByName":"p0stal b0b","CreatedById":10114,"CreatedDateTime":"2012-03-10T00:28:13Z","Content":"\n\u003Cp\u003EJust a quick question regarding orientation - I\\\u0027ve never edited cfgs before, \u0026amp; I\\\u0027m trying to get my head around the orientation of a piece.\u003C/p\u003E\u003Cp\u003EI\\\u0027d like to make basically a reversed lander leg - one that is pointing downwards when closed, \u0026amp; opens upward 135 degrees, basically the default leg rotated around 180 degrees planar to the surface it attaches to. I can\\\u0027t edit the angY in the file enough to get it 180 degrees around, the most it will go is 90, no matter what number I put in there. Any ideas as to whether it\\\u0027s possible without editing the 3d model?\u003C/p\u003E\u003Cp\u003ECheers. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"AaronLee","CreatedById":18743,"CreatedDateTime":"2012-03-11T17:54:06Z","Content":"\n\u003Cp\u003EI\\\u0027ve been playing around with landing legs recently on a personal project. I found out a few things about landing leg params:\u003C/p\u003E\u003Cp\u003Enegative angle ranges don\\\u0027t crash the game or anything but it does bug out. The landing legs start out open, then you hit G once and they stay the same, the next time they flash closed, then open etc.\u003C/p\u003E\u003Cp\u003ESign of the rotation axis does make a difference it seems. When set to 0,0,1 fromt he standard 0,0,-1 the angle was negated, right now I\\\u0027m trying to figure out how to make a leg deploy up/rotate in the opposite direction but my testing so far doesn\\\u0027t seem to indicate negating the vector will do it.\u003C/p\u003E\n"}]}