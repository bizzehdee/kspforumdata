{"TopicId":204726,"ForumId":36,"TopicTitle":"How to get pitch \u0026amp; roll?","CreatedByName":"zero_z77","CreatedById":214165,"CreatedDateTime":"2021-09-07T12:54:31Z","PageNum":1,"Articles":[{"CreatedByName":"zero_z77","CreatedById":214165,"CreatedDateTime":"2021-09-07T12:54:31Z","Content":"\n\u003Cp\u003E\nSo i\u0027m working on a gauge mod and one of the gauges i\u0027m having trouble with is the artificial horizon. I can\u0027t seem to figure out how to extract the craft\u0027s pitch and roll angles(relative to the planet) from KSP. And to make matters more complicated, i also would like to account for the ship having an unconventional control point, so that if the player changes their control point it will be reflected on the gauge. The main problem i\u0027m having is figuring out which variables to use, i can\u0027t seem to find any good documentation on the subject.\n\u003C/p\u003E\n\u003Cp\u003E\nSo the problem comes in 3 parts:\n\u003C/p\u003E\n\u003Cp\u003E\n1. Establishing a surface frame of reference - i\u0027m assuming i can get a good surface reference by using FlightGlobals.ActiveVessel.east and FlightGlobals.ActiveVessel.north and using the cross product or FlightGlobals.ActiveVessel.upAxis for the up vector. That should give me a coordinates system i can use to compute the angles i need. Assuming that those vectors are in a global frame of reference.\n\u003C/p\u003E\n\u003Cp\u003E\n2. Getting a transform for the ship. I have several transforms available on FlightGlobals.ActiveVessel and i simply need to know which one is in the same frame of reference as the vectors from part 1. is it Vessel.transform, vessel.GetTransform(), vessel.ReferenceTransform, or vessel.vesselTransform?\n\u003C/p\u003E\n\u003Cp\u003E\n3. Accounting for the control point. I\u0027m guessing that FlightGlobals.ActiveVessel.ReferenceTransform gives me a transform for the ship\u0027s current control point(relative to the ship\u0027s transform?), so i should just be able to apply this to the transform in part 2 in order to get the forward, right, and up vectors needed to compute the pitch \u0026amp; roll against the frame of reference from part 1.\n\u003C/p\u003E\n\u003Cp\u003E\nIf worst comes to worse, i can just hack the actual navball and use that to get what i need, but i\u0027d like a better solution.\n\u003C/p\u003E\n"}]}