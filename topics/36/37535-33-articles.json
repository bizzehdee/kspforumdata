{"TopicId":37535,"ForumId":36,"TopicTitle":"Kerbin Mini Shuttle","CreatedByName":"helldiver","CreatedById":74755,"CreatedDateTime":"2013-07-18T04:15:54Z","PageNum":33,"Articles":[{"CreatedByName":"B787_300","CreatedById":31055,"CreatedDateTime":"2013-09-15T19:58:58Z","Content":"\n\u003Cp\u003Eso you still dont know what you can lift in the shuttle correct?\u003C/p\u003E\n"},{"CreatedByName":"popeter45","CreatedById":56678,"CreatedDateTime":"2013-09-15T20:05:05Z","Content":"\n\u003Cp\u003Ethe shuttle looks very b9 i think\u003C/p\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-09-16T23:29:04Z","Content":"\n\u003Cp\u003E\u003Cem\u003EForeword: There\u0027s been a lot of screenshots and pretty pictures in the development updates in this thread, but as well as the artwork there\u0027s a lot of coding that goes on behind the scenes to make it all work. Now that I have turned the prototype \u0022hardcoded-everything\u0022 MFD plugin into something more suitable for release, I figured I would start doing some development update posts to give some insight into some of the new territory this mod is venturing into.\u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Chr\u003E\u003Cp\u003EThis update is about the graphical Multi-Function Displays (MFDs) used by the shuttle, specifically how I manage and abstract the differing layers of responsibility of rendering display components (such as a compass or altimeter) on each display. The key maintainability goal is to keep decisions about data that is specific to a display out of the plugin and strictly within the config file.\u003C/p\u003E\u003Cp\u003EI have now got a usable scripting interface working for the MFD configuration files, after a long day of head-butting against Unity, Mono and Boo in (eventually successful) attempts to coerce everything into running correctly. This may at first glance not seem very relevant to the short term goals, but it is in fact desperately needed for this project to stay manageable, especially as the number of total different display components increases rapidly, as it will do soon. It saves a lot of time in the long run and cuts down on code bloat and the need to patch the plugin for any UI tweaks. The scripting interface means that I do not have to code an instrument renderer class for each possible flight statistic you would want to display (e.g. KIAS, EAS, TAS, and that\u0027s just for airspeed). For all of the prototype screenshots that have been posted so far the specific variables being sent to each instrument (e.g. airspeed, altitude etc.) were hardcoded into the application. If I let the project continue in this way it would result in a lot of redundant code that is specific to a particular use case, which is a headache to maintain and generally Bad software engineering. The introduction of a scripting interface means that the specification of the data to display is defined via code snippets in the configuration file, abstracting display-specific data manipulation away from the plugin itself\u003Csup\u003E1\u003C/sup\u003E. \u003C/p\u003E\u003Cp\u003EAn example best illustrates the problem and the solution. I previously required classes in my code dedicated to each type of vertical tape instrument (e.g. altimeter, airspeed indicator, vertical speed indicator etc.), each specifying the slight difference that determines the value that is shown on the tape. You would then specify the individual class by name in the list of instruments in the config file (which, by the way, is written in YAML):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E  # An instance of the altitude tape class. This only shows the current altitude, in metres only.\u003Cbr\u003E  - altitude_tape:\u003Cbr\u003E      # these properties determine the location and appearance of the tape instrument\u003Cbr\u003E      top_left: [363, 114]\u003Cbr\u003E      background_tex: Altitude_tape_border\u003Cbr\u003E      tape_tex: Altitude_tape\u003Cbr\u003E      mask_tex: Altitude_tape_border_mask\u003Cbr\u003E      char_atlas_tex: djvsm16\u003Cbr\u003E      number_colour: [1, 1, 1]\u003Cbr\u003E      tape_number_top_right: [59, -7]\u003Cbr\u003E      needle_tip: [74, 141]\u003Cbr\u003E      interval: 50\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E  # An instance of the speed tape class. This only shows the current speed, in metres per second only.\u003Cbr\u003E  - speed_tape:\u003Cbr\u003E      top_left: [0, 114]\u003Cbr\u003E      background_tex: Speed_tape_border\u003Cbr\u003E      tape_tex: Speed_tape\u003Cbr\u003E      mask_tex: Speed_tape_mask\u003Cbr\u003E      char_atlas_tex: djvsm16\u003Cbr\u003E      number_colour: [1, 1, 1]\u003Cbr\u003E      tape_number_top_right: [59, -7]\u003Cbr\u003E      needle_tip: [74, 141]\u003Cbr\u003E      interval: 10\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESimilarly, I would have had to come up with code for every possible dynamic readout label (e.g. altitude, airspeed, G-force, main throttle, periapsis, apoapsis, ETA to periapsis, etc.), which would be inefficient and difficult to maintain and limit what can be shown on a display to what I can think of in advance.\u003C/p\u003E\u003Cp\u003EThe new system solves all of these problems. For example, vertical scrolling tapes are all covered by one class, which uses dynamically compiled script snippets to control the values it displays. Here\u0027s the config for the same two tapes from above rewritten using the new system:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E  # An instance of a generic vertical tape, with its behaviour set by script snippets to display the current altitude in feet.\u003Cbr\u003E  - vertical_tape:\u003Cbr\u003E      top_left: [363, 114]\u003Cbr\u003E      background_tex: Altitude_tape_border\u003Cbr\u003E      tape_tex: Altitude_tape\u003Cbr\u003E      mask_tex: Altitude_tape_border_mask\u003Cbr\u003E      char_atlas_tex: djvsm16\u003Cbr\u003E      number_colour: [1, 1, 1]\u003Cbr\u003E      tape_number_top_right: [59, -7]\u003Cbr\u003E      needle_tip: [74, 141]\u003Cbr\u003E      # local_defs - persistent variables/definitions used by update or value\u003Cbr\u003E      # | is YAML code indicating a multi-line text block. It is not part of the script.\u003Cbr\u003E      local_defs: |\u003Cbr\u003E        static final FEET = 3.2808399f\u003Cbr\u003E        unit = FEET\u003Cbr\u003E      # value - a simple way to specify the expression value displayed by the tape - in this case\u003Cbr\u003E      # the vessel altitude in feet, pulled straight from the KSP API via FlightGlobals.\u003Cbr\u003E      value: FlightGlobals.ship_altitude * unit\u003Cbr\u003E      interval: 50\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E  # Another tape, controlled by the same class as above, but configured with different script\u003Cbr\u003E  # snippets so that it displays the current speed in nautical miles per second in the current\u003Cbr\u003E  # UI speed mode (Orbital, Surface, or Target).\u003Cbr\u003E  - vertical_tape:\u003Cbr\u003E      top_left: [0, 114]\u003Cbr\u003E      background_tex: Speed_tape_border\u003Cbr\u003E      tape_tex: Speed_tape\u003Cbr\u003E      mask_tex: Speed_tape_mask\u003Cbr\u003E      char_atlas_tex: djvsm16\u003Cbr\u003E      number_colour: [1, 1, 1]\u003Cbr\u003E      tape_number_top_right: [59, -7]\u003Cbr\u003E      needle_tip: [74, 141]\u003Cbr\u003E      local_defs: |\u003Cbr\u003E        static final knots = 1.94384449f\u003Cbr\u003E        unit = knots\u003Cbr\u003E      # update - for more complex computation requiring more than just a single expression\u003Cbr\u003E      # you can use this callback to change rendering properties every frame. These so far\u003Cbr\u003E      # include the position on the tape (value) as well as the increment between tick marks (interval).\u003Cbr\u003E      update: |\u003Cbr\u003E        match FlightUIController.speedDisplayMode:\u003Cbr\u003E          case FlightUIController.SpeedDisplayModes.Orbit:\u003Cbr\u003E            value = FlightGlobals.ship_obtSpeed * unit\u003Cbr\u003E          case FlightUIController.SpeedDisplayModes.Surface:\u003Cbr\u003E            value = FlightGlobals.ship_srfSpeed * unit\u003Cbr\u003E          case FlightUIController.SpeedDisplayModes.Target:\u003Cbr\u003E            value = FlightGlobals.ship_tgtSpeed * unit\u003Cbr\u003E      interval: 10\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThese config entries now include code snippets (in the optional properties local_defs, update and value_expr) that the plugin compiles to machine code\u003Csup\u003E2\u003C/sup\u003E when the game loads and runs in flight to determine the behaviour of each instrument. As you can see, this decouples the possible values that are shown on display components from the component renderering code itself, which cuts down on code I need to write, and allows other modders (once this is released) to come up with their own ways of displaying any data they like using the existing components. You could for example use this, in the case of the new vertical_tape components, to dynamically change the tape increment based on the current rate of change of the value so that the tape never moves too fast to read. Similarly other component properties can be customised by scripting, such as changing the ADI ground colours to shades of purple when you fly to Eve.\u003C/p\u003E\u003Cp\u003EOf course, this scripting interface is just scratching the tip of the iceberg. All code snippets are written in \u003Ca href=\u0022boo.codehaus.org\u0022 rel=\u0022external nofollow\u0022\u003EBoo\u003C/a\u003E, a fully-fledged .NET language, and are given full access to just the KSP API. The natural extension of this project would be to create a generic programmable flight computer that runs Boo scripts. As an idea of how powerful this would be, most features from existing mods would be automatically made accessible to scripts, such as the thrust balancing features of my mod KerbCom Avionics (many of which are not controllable via the KCA GUI for usability reasons), the fuel balancing features of TAC, and control over the servos of Infernal Robotics. Then anyone could use the combined features of KSP and the mods they have installed to write a personalised control script for their crafts, such as a flight guidance computer for a shuttle.\u003C/p\u003E\u003Cp\u003EDepending on how much interest there is, once the project is released I might do more posts explaining the other aspects of the project, such as the shader compilation and material management plugin and the upcoming acyclic attachment node plugin to be used on the shuttle EFT attachment points.\u003C/p\u003E\u003Cp\u003ESidenote: Boo has extensive support for metaprogramming that allows you to create new language variants within Boo (known as Domain Specific Languages). As an example, it is very likely that nearly all of the \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/showthread.php/47399-kOS-Scriptable-Autopilot-System-0-5\u0022 rel=\u0022external nofollow\u0022\u003EKOS\u003C/a\u003E scripting language could be reimplemented as macros in Boo, with the additional bonus of giving access to the entire KSP API.\u003C/p\u003E\u003Cp\u003EP.P.S. Please note that all scripts using the system run just as fast as a plugin would - each script is compiled in memory when the script is first used (known as Just In Time compilation).\u003C/p\u003E\u003Cp\u003EP.S. Security is not a concern, as .NET provides \u0022sandboxes\u0022 for untrusted code (such as user-made scripts) to run in, restricting access to things like the filesystem or the internet.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E[1] As the influential computer scientist Dr. David Wheeler (inventor of the infamous goto statement, amongst other things) succinctly observed - \u003C/span\u003E\u003Cem\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u0022All problems in computer science can be solved by another level of indirection.\u0022\u003C/span\u003E\u003C/em\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E[2] Well, not actually machine code, but Common Intermediate Language - .NET bytecode, the same thing C# compiles to.\u003C/span\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-09-17T11:53:29Z\u0022 title=\u002209/17/2013 11:53  AM\u0022 data-short=\u002210 yr\u0022\u003ESeptember 17, 2013\u003C/time\u003E by ZRM\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"AceofPengwins","CreatedById":78287,"CreatedDateTime":"2013-09-16T23:44:48Z","Content":"\n\u003Cp\u003EWhoah... as you point out, the possibilities with this are sweet. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"DisarmingBaton5","CreatedById":68576,"CreatedDateTime":"2013-09-16T23:45:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ZRM\u0022 data-cite=\u0022ZRM\u0022\u003E\u003Cdiv\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E  # An instance of a generic vertical tape, with its behaviour set by script snippets to display the current altitude in feet.\u003Cbr\u003E  - vertical_tape:\u003Cbr\u003E      top_left: [363, 114]\u003Cbr\u003E      background_tex: Altitude_tape_border\u003Cbr\u003E      tape_tex: Altitude_tape\u003Cbr\u003E      mask_tex: Altitude_tape_border_mask\u003Cbr\u003E      char_atlas_tex: djvsm16\u003Cbr\u003E      number_colour: [1, 1, 1]\u003Cbr\u003E      tape_number_top_right: [59, -7]\u003Cbr\u003E      needle_tip: [74, 141]\u003Cbr\u003E      # local_defs - persistent variables/definitions used by update or value\u003Cbr\u003E      # | is YAML code indicating a multi-line text block. It is not part of the script.\u003Cbr\u003E      local_defs: |\u003Cbr\u003E        static final FEET = 3.2808399f\u003Cbr\u003E        unit = FEET\u003Cbr\u003E      # value - a simple way to specify the expression value displayed by the tape - in this case\u003Cbr\u003E      # the vessel altitude in feet, pulled straight from the KSP API via FlightGlobals.\u003Cbr\u003E      value: FlightGlobals.ship_altitude / unit\u003Cbr\u003E      interval: 50\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E  # Another tape, controlled by the same class as above, but configured with different script\u003Cbr\u003E  # snippets so that it displays the current speed in nautical miles per second in the current\u003Cbr\u003E  # UI speed mode (Orbital, Surface, or Target).\u003Cbr\u003E  - vertical_tape:\u003Cbr\u003E      top_left: [0, 114]\u003Cbr\u003E      background_tex: Speed_tape_border\u003Cbr\u003E      tape_tex: Speed_tape\u003Cbr\u003E      mask_tex: Speed_tape_mask\u003Cbr\u003E      char_atlas_tex: djvsm16\u003Cbr\u003E      number_colour: [1, 1, 1]\u003Cbr\u003E      tape_number_top_right: [59, -7]\u003Cbr\u003E      needle_tip: [74, 141]\u003Cbr\u003E      local_defs: |\u003Cbr\u003E        static final knots = 1.94384449\u003Cbr\u003E        unit = knots\u003Cbr\u003E      # update - for more complex computation requiring more than just a single expression\u003Cbr\u003E      # you can use this callback to change rendering properties every frame. These so far\u003Cbr\u003E      # include the position on the tape (value) as well as the increment between tick marks (interval).\u003Cbr\u003E      update: |\u003Cbr\u003E        match FlightUIController.speedDisplayMode:\u003Cbr\u003E          case FlightUIController.SpeedDisplayModes.Orbit:\u003Cbr\u003E            value = FlightGlobals.ship_obtSpeed * knots\u003Cbr\u003E          case FlightUIController.SpeedDisplayModes.Surface:\u003Cbr\u003E            value = FlightGlobals.ship_srfSpeed * knots\u003Cbr\u003E          case FlightUIController.SpeedDisplayModes.Target:\u003Cbr\u003E            value = FlightGlobals.ship_tgtSpeed * knots\u003Cbr\u003E      interval: 10\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWow. I really need to learn to code. Java, here I come!\u003C/p\u003E\n"},{"CreatedByName":"qnistNAMEERF","CreatedById":80995,"CreatedDateTime":"2013-09-17T00:40:05Z","Content":"\n\u003Cp\u003EA very interesting update, ZRM. It is nice to get an insight into the code running behind the MFD\u0027s. Does this mean that the MFD\u0027S will also be released as a standalone plugin?\u003C/p\u003E\n"},{"CreatedByName":"helldiver","CreatedById":74755,"CreatedDateTime":"2013-09-17T05:41:29Z","Content":"\n\u003Cp\u003EDamn, this is amazing ZRM\u003C/p\u003E\u003Cp\u003EOutstanding!\u003C/p\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-09-17T09:32:01Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AceofPengwins\u0022 data-cite=\u0022AceofPengwins\u0022\u003E\u003Cdiv\u003EWhoah... as you point out, the possibilities with this are sweet. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIndeed. I can\u0027t wait to make the programmable computer plugin just to see what people would come up with. Imagine the auto-optimised launch trajectories, synchronised close proximity launches (with KerbTown for the extra launch pads), formation flying and aerial displays, autonomous space station/base construction, computer-controlled convoys of rovers following your rover, AI-controlled \u0022opponents\u0022, etc.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Chr\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DisarmingBaton5\u0022 data-cite=\u0022DisarmingBaton5\u0022\u003E\u003Cdiv\u003EWow. I really need to learn to code. Java, here I come!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EJava is a good starting point for beginners, but bearing in mind how similar it is to C#, and that KSP plugins are written in C#, you may want to start with C#. Both languages have thorough documentation and good tutorials available on the internet. Also note that the code you quoted is a combination of YAML, a markup language, and Boo, a Python-inspired .NET language (it runs using the same system as C#, just with different syntax). Python is also supposedly good for beginners, though I am concerned that due to its nature as a dynamic language once you learn Python you may find it difficult to migrate to other, more restrictive (but faster), static languages such as Java, C#, Boo, C, C\u002B\u002B etc. So overall I would recommend Java or C#.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Chr\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022FREEMANtsinq\u0022 data-cite=\u0022FREEMANtsinq\u0022\u003E\u003Cdiv\u003EA very interesting update, ZRM. It is nice to get an insight into the code running behind the MFD\u0027s. Does this mean that the MFD\u0027S will also be released as a standalone plugin?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat is my intention. The plugin that powers the MFDs would be released separately (perhaps under the moniker \u0022KerbCom Glass\u0022), with helldiver hopefully giving permission (we have not discussed this yet) to release the shuttle MFD graphics as an example MFD set for the plugin release, as well as bundled with the shuttle.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Chr\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022helldiver\u0022 data-cite=\u0022helldiver\u0022\u003E\u003Cdiv\u003EDamn, this is amazing ZRM\u003Cp\u003EOutstanding!\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks!\u003C/p\u003E\n"},{"CreatedByName":"helldiver","CreatedById":74755,"CreatedDateTime":"2013-09-17T10:20:23Z","Content":"\n\u003Cp\u003EThe MFD can be removed easily\u003C/p\u003E\u003Cp\u003ELet me know and I will send you the components.\u003C/p\u003E\u003Cp\u003EAgain, this is awesome.\u003C/p\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-09-17T11:43:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022helldiver\u0022 data-cite=\u0022helldiver\u0022\u003E\u003Cdiv\u003EThe MFD can be removed easily\u003Cp\u003ELet me know and I will send you the components.\u003C/p\u003E\u003Cp\u003EAgain, this is awesome.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI did not think of actually using the actual MFD model, but I guess that would be a handy addition for the plugin - otherwise people would not be able to use the plugin separately without making their own parts for it. Your MFD could be used as a prop in existing cockpits. Thanks for the offer. You don\u0027t need to send me the assets at the moment, but when you do, please could you make the MFD shallower than the MFD you previously sent me, so that it is better suited as a prop for placement in stock cockpits? It would then also look more like an LCD display.\u003C/p\u003E\u003Cp\u003ESlowly but surely, everything is coming together.\u003C/p\u003E\n"},{"CreatedByName":"helldiver","CreatedById":74755,"CreatedDateTime":"2013-09-17T16:42:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ZRM\u0022 data-cite=\u0022ZRM\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ESlowly but surely, everything is coming together.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat sounds fantastic!\u003C/p\u003E\n"},{"CreatedByName":"Gojira","CreatedById":10884,"CreatedDateTime":"2013-09-23T23:54:42Z","Content":"\n\u003Cp\u003EAny more progress since the forum went down? I\u0027m really excited to hear about anything you guys have.\u003C/p\u003E\n"},{"CreatedByName":"DisarmingBaton5","CreatedById":68576,"CreatedDateTime":"2013-09-24T01:32:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gojira\u0022 data-cite=\u0022Gojira\u0022\u003E\u003Cdiv\u003EAny more progress since the forum went down? I\u0027m really excited to hear about anything you guys have.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAw, you beat me to it!\u003C/p\u003E\n"},{"CreatedByName":"ZRM","CreatedById":64626,"CreatedDateTime":"2013-09-24T09:11:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gojira\u0022 data-cite=\u0022Gojira\u0022\u003E\u003Cdiv\u003EAny more progress since the forum went down? I\u0027m really excited to hear about anything you guys have.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, I\u0027ve been waiting for the forums to come back online so that I can post a progress update and resume contact with helldiver.\u003C/p\u003E\u003Cp\u003EHere is a screenshot of the PFD that is likely very close to what will be used for the first release:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/nlUiJZ7.jpg\u0022 alt=\u0022nlUiJZ7.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EAll of that display is functional, including the indicator labels (\u0022RCS ON\u0022, \u0022ENGINES 67%\u0022, etc.) and the directional markers on the heading tape and ADI (which include the normal complement of markers as you would find on the navball). A lot of the \u0022display-specific\u0022 parts, like the values displayed on the labels and the indicator tapes, are script-powered, as explained in my previous post. None of their functionality is hard-coded into the plugin. Of all the dynamic elements in the display, only the ADI gimbal and heading indicator are unscripted, for the time being. There may be ways to extend their capabilities in the future with scripting.\u003C/p\u003E\u003Cp\u003ESo now I am waiting upon helldiver for more MFD mode designs. This first mode took a long time due to several corrections that had to be made to the way helldiver creates each asset so that it displays correctly without artefacts, as well as changes to the overall design due to usability concerns. I still had to recreate several parts from scratch using his designs as a reference so that they could actually be used in the display. His problems are mostly due to the limitations of Photoshop. Luckily I have Illustrator so that I can easily make the pixel-perfect versions of each asset. The idea for future display modes is that helldiver sends me his draft design, and then I create the final assets to the specifications I require in Illustrator. This should make the process a lot quicker, instead of slow back-and-forth PMs as each asset is corrected.\u003C/p\u003E\u003Cp\u003EP.S. For the future of the MFD plugin I am thinking of recreating actual displays from real aircraft/spacecraft. First on my list is the newest Space Shuttle electronic PFD:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://www.wired.com/images_blogs/autopia/2010/03/img_8013.jpg\u0022 alt=\u0022img_8013.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EThis will be a bit of a challenge due the embedded 3D navball that will need to be rendered, however I have ideas for drawing this efficiently with high quality.\u003C/p\u003E\u003Cp\u003EP.P.S. Yes, I know the heading indicator on the in-game PFD is missing the indicator notch. That will be added in due course.\u003C/p\u003E\n"},{"CreatedByName":"Nibb31","CreatedById":7272,"CreatedDateTime":"2013-09-24T09:23:43Z","Content":"\n\u003Cp\u003EPersonally, I\u0027d rather see you spending time on developing a nice shuttle model with decent flight dynamics than bells and whistles in the cockpit. I have the feeling that not many people spend a lot of time IVA. I certainly hardly ever use it.\u003C/p\u003E\u003Cp\u003ETo each his own though...\u003C/p\u003E\n"},{"CreatedByName":"Starwaster","CreatedById":71262,"CreatedDateTime":"2013-09-24T09:30:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Nibb31\u0022 data-cite=\u0022Nibb31\u0022\u003E\u003Cdiv\u003EPersonally, I\u0027d rather see you spending time on developing a nice shuttle model with decent flight dynamics than bells and whistles in the cockpit. I have the feeling that not many people spend a lot of time IVA. I certainly hardly ever use it.\u003Cp\u003ETo each his own though...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eregardless of how little time I might spend in IVA, the one time I do, I dont want to see a crappy IVA or worse, no IVA at all.\u003C/p\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2013-09-24T09:31:54Z","Content":"\n\u003Cp\u003EWell, but maybe making all those fancy MFDs could be done after the first release. The shuttle is flyable without them, afterall.\u003C/p\u003E\n"},{"CreatedByName":"satcharna","CreatedById":61549,"CreatedDateTime":"2013-09-24T11:03:33Z","Content":"\n\u003Cp\u003EFrankly, the advanced IVA is the thing I like the most about this shuttle. It is my hope that more mod cockpits, or perhaps even the stock ones, will adopt something similar, because this is just beautiful.\u003C/p\u003E\n"},{"CreatedByName":"sirkut","CreatedById":57229,"CreatedDateTime":"2013-09-24T11:46:13Z","Content":"\n\u003Cp\u003EGive it a rest guys. They aren\u0027t going to just release the shuttle then release the IVAs later. They\u0027ve already said they want it to be a full package and a testament of what can be done. Just be patient.\u003C/p\u003E\n"},{"CreatedByName":"Anariaq","CreatedById":19400,"CreatedDateTime":"2013-09-24T14:15:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Nibb31\u0022 data-cite=\u0022Nibb31\u0022\u003E\u003Cdiv\u003EPersonally, I\u0027d rather see you spending time on developing a nice shuttle model with decent flight dynamics than bells and whistles in the cockpit. I have the feeling that not many people spend a lot of time IVA. I certainly hardly ever use it.\u003Cp\u003ETo each his own though...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI actually looking forward to this IVA. Think the reason we do not use IVA that much, is that the uselessness of the Instrument. To have access to some of the information that is needed to do some of the navigation, you have to get outside where they are located. With this IVA instrument, we have a possibility to do all work in IVA.\u003C/p\u003E\u003Cp\u003EAnariaq\u003C/p\u003E\n"},{"CreatedByName":"Bobhendly","CreatedById":70841,"CreatedDateTime":"2013-09-24T14:18:51Z","Content":"\n\u003Cp\u003EI Am loving this entire thing! \u003C/p\u003E\u003Cp\u003E...Where is Jebediah\u0027s snacks? KERBALS NEED SNACKS!\u003C/p\u003E\n"},{"CreatedByName":"Fonso","CreatedById":63762,"CreatedDateTime":"2013-09-24T14:37:15Z","Content":"\n\u003Cp\u003EThe scientific world uses the International Sistem, no m/s speed lectures love for us?\u003C/p\u003E\n"},{"CreatedByName":"satcharna","CreatedById":61549,"CreatedDateTime":"2013-09-24T14:41:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Fonso\u0022 data-cite=\u0022Fonso\u0022\u003E\u003Cdiv\u003EThe scientific world uses the International Sistem, no m/s speed lectures love for us?\u003C/div\u003E\u003C/blockquote\u003EI\u0027m sure he intends to fix that. If not, it\u0027s easy enough to do yourself. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\n"},{"CreatedByName":"Guest","CreatedById":-1,"CreatedDateTime":"2013-09-24T14:50:31Z","Content":"\n\u003Cp\u003EMy apologies if this had already been addressed; will this shuttle have special fuel requirements, or will standard tanks work fine? I want to test out George Von Pragenau\u0027s proposed launch configuration when this bird becomes available. Thanks!\u003C/p\u003E\n"},{"CreatedByName":"MaverickSawyer","CreatedById":11952,"CreatedDateTime":"2013-09-24T19:12:29Z","Content":"\n\u003Cp\u003EJust finished reading all the back posts on this project. Looks outstanding!\u003C/p\u003E\u003Cp\u003EFew personal notes:\u003C/p\u003E\u003Cp\u003E-Outstanding choice of the Liquid boosters. That alone makes a successful ascent far more likely, as you can throttle down to make sure you don\u0027t exceed terminal velocity.\u003C/p\u003E\u003Cp\u003E-The pairing of the absolutely beautiful interior and the sleek exterior with the new MFD system is one of the best features of this mod. I would still probably download the shuttle without the MFDs, but those are the final straw: this is number one on my \u0022to download\u0022 list.\u003C/p\u003E\u003Cp\u003E-Will this be compatible with MechJeb\u0027s ascent guidance mode?\u003C/p\u003E\u003Cp\u003E-Once you have the flight dynamics balanced, can you include a small manual for flight ops? I don\u0027t think that MechJeb\u0027s landing guidance will play well with the winged design... You\u0027d need to provide a couple of suggestions for timing the deorbit burn.\u003C/p\u003E\u003Cp\u003EAll in all, this is going to become one of the top addons (in terms of pushing the envelope) ever made for KSP.\u003C/p\u003E\n"}]}