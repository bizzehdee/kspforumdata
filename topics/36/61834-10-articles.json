{"TopicId":61834,"ForumId":36,"TopicTitle":"kOS Autopilot","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T17:34:35Z","PageNum":10,"Articles":[{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-04-19T22:38:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022whirlwind\u0022 data-cite=\u0022whirlwind\u0022\u003E\u003Cdiv\u003E\u003Cp\u003Elooks like the engine attributes no longer available\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAre you trying to do this using a vessel that contains any of the new engines that were added with the KSP 0.23.5 release?\u003C/p\u003E\u003Cp\u003EThe engine attributes of the new engines doesn\u0027t work yet. Do you get the same problem on a vessel only containing parts from pre-0.23.5 KSP?\u003C/p\u003E\u003Cp\u003EThe new engines don\u0027t use the same part type ID as old engines, which means the kOS code doesn\u0027t handle them right yet, I think.\u003C/p\u003E\n"},{"CreatedByName":"Hyperlynx","CreatedById":90829,"CreatedDateTime":"2014-04-19T22:56:07Z","Content":"\n\u003Cp\u003ECould someone please add normal and antinormal system variables, please? I send out ion-powered SCANSat probes that need to be in polar orbit to map properly, and manually changing their inclination to 90 degrees takes several hours of work. I\u0027d really like to be able to script that.\u003C/p\u003E\u003Cp\u003EFailing that, could someone please tell me how to derive the normal or antinormal from up, prograde and retrograde? I know how to do that if those were vectors, but they\u0027re rotations.\u003C/p\u003E\n"},{"CreatedByName":"whirlwind","CreatedById":109022,"CreatedDateTime":"2014-04-20T07:10:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EAre you trying to do this using a vessel that contains any of the new engines that were added with the KSP 0.23.5 release?\u003Cp\u003EThe engine attributes of the new engines doesn\u0027t work yet. Do you get the same problem on a vessel only containing parts from pre-0.23.5 KSP?\u003C/p\u003E\u003Cp\u003EThe new engines don\u0027t use the same part type ID as old engines, which means the kOS code doesn\u0027t handle them right yet, I think.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYep, I\u0027ve tested it on vehicle with only LV909 and 48-7S. It\u0027s not so greater problem here to write specific impulse explicitly for each challenge. I use it to calculate burn duration. But if something is broken, then may be in other cases it will be a problem.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-04-20T11:40:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Hyperlynx\u0022 data-cite=\u0022Hyperlynx\u0022\u003E\u003Cdiv\u003ECould someone please add normal and antinormal system variables, please? I send out ion-powered SCANSat probes that need to be in polar orbit to map properly, and manually changing their inclination to 90 degrees takes several hours of work. I\u0027d really like to be able to script that.\u003Cp\u003EFailing that, could someone please tell me how to derive the normal or antinormal from up, prograde and retrograde? I know how to do that if those were vectors, but they\u0027re rotations.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI dislike the mod doing things for you that are quickly derivable. Normal and anti normal are derivable using vector cross product.\u003C/p\u003E\u003Cp\u003EIf you take the cross product of any two vectors you get a new vector that is perpendicular to the plane containing both of the two input vectors. The ordering matters, such that given two vectors A and B, A cross B gives you the opposite direction from B cross A. Which one is which depends on if your world consists of a right-handed or left-handed coordinate system in its XYZ axes. I can\u0027t remember which way around KSP\u0027s world is off the top of my head.\u003C/p\u003E\u003Cp\u003EBut anyway, to get the normal vector (and anti-normal) just cross-product two vectors that are in your orbit plane together. One such vector is your orbital velocity. Another such vector is your position relative to the SOI body (or it\u0027s position relative to you).\u003C/p\u003E\u003Cp\u003ESo find the cross-product (using recent built-in function VCRS(A,\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E - it used to have to be done by hand which was slow to execute) of the orbit velocity vector and the body position vector. That cross product will be in either the normal or anti normal direction depending on what order you did it in, and multiplying it by (-1) (scalar) will give you the opposite vector. \u003C/p\u003E\u003Cp\u003EI don\u0027t remember off the top of my head which way around is which, but you should be able to get it from experimentation.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-04-20T11:52:01Z","Content":"\n\u003Cp\u003EIs development stalled? I\u0027ve got pull requests rooted from versions on April 7 and I\u0027m a bit reluctant to add anything more while they\u0027re still pending.\u003C/p\u003E\n"},{"CreatedByName":"Hyperlynx","CreatedById":90829,"CreatedDateTime":"2014-04-20T12:46:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EI dislike the mod doing things for you that are quickly derivable. Normal and anti normal are derivable using vector cross product.\u003Cp\u003EIf you take the cross product of any two vectors you get a new vector that is perpendicular to the plane containing both of the two input vectors. The ordering matters, such that given two vectors A and B, A cross B gives you the opposite direction from B cross A. Which one is which depends on if your world consists of a right-handed or left-handed coordinate system in its XYZ axes. I can\u0027t remember which way around KSP\u0027s world is off the top of my head.\u003C/p\u003E\u003Cp\u003EBut anyway, to get the normal vector (and anti-normal) just cross-product two vectors that are in your orbit plane together. One such vector is your orbital velocity. Another such vector is your position relative to the SOI body (or it\u0027s position relative to you).\u003C/p\u003E\u003Cp\u003ESo find the cross-product (using recent built-in function VCRS(A,\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E - it used to have to be done by hand which was slow to execute) of the orbit velocity vector and the body position vector. That cross product will be in either the normal or anti normal direction depending on what order you did it in, and multiplying it by (-1) (scalar) will give you the opposite vector. \u003C/p\u003E\u003Cp\u003EI don\u0027t remember off the top of my head which way around is which, but you should be able to get it from experimentation.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI know I could get the cross product and use that. I\u0027d like to get the cross product of prograde and up, but, as I said in my post, they\u0027re NOT vectors. They\u0027re Euler angles, and I don\u0027t know how to work with those. You can\u0027t cross product them.\u003C/p\u003E\u003Cp\u003EPut another way: how can I get my velocity and/or the position vector of what I\u0027m orbiting \u003Cem\u003Eas vectors\u003C/em\u003E?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-04-20T14:45:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Hyperlynx\u0022 data-cite=\u0022Hyperlynx\u0022\u003E\u003Cdiv\u003EI know I could get the cross product and use that. I\u0027d like to get the cross product of prograde and up, but, as I said in my post, they\u0027re NOT vectors. They\u0027re Euler angles, and I don\u0027t know how to work with those. You can\u0027t cross product them.\u003Cp\u003EPut another way: how can I get my velocity and/or the position vector of what I\u0027m orbiting \u003Cem\u003Eas vectors\u003C/em\u003E?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Evelocity:orbit is a vector.\u003C/p\u003E\u003Cp\u003Eship:body:position is a vector, and when you think about it, ship:body:position is effectively a vector in the \u0022down\u0022 direction.\u003C/p\u003E\u003Cp\u003EAnd if you need to transform a rotation into a unit vector, there\u0027s a way I worked out ages ago but it\u0027s ugly. Also, directions like Up now have a \u0022:vector\u0022 suffix to get their unit vector. marianoapp claims it only works on some of them, but I haven\u0027t found one yet where it doesn\u0027t.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-04-20T14:57:26Z\u0022 title=\u002204/20/2014 02:57  PM\u0022 data-short=\u002210 yr\u0022\u003EApril 20, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"marianoapp","CreatedById":104009,"CreatedDateTime":"2014-04-20T18:53:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EIs development stalled? I\u0027ve got pull requests rooted from versions on April 7 and I\u0027m a bit reluctant to add anything more while they\u0027re still pending.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s not, I just haven\u0027t had much free time lately. I\u0027ll review your pull requests today or in a few days max.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EAlso, directions like Up now have a \u0022:vector\u0022 suffix to get their unit vector. marianoapp claims it only works on some of them, but I haven\u0027t found one yet where it doesn\u0027t.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ETry with SHIP:FACING \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-04-20T20:45:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022marianoapp\u0022 data-cite=\u0022marianoapp\u0022\u003E\u003Cdiv\u003EIt\u0027s not, I just haven\u0027t had much free time lately. I\u0027ll review your pull requests today or in a few days max.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOkay thanks. No rush, I just was reluctant to do anything more until I have a better idea of how those parts will be merged in.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ETry with SHIP:FACING \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECan\u0027t we just take the logic of the transformation matrix operation used on this page:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://kos.wikia.com/wiki/Tutorial_with_example_-_Conversion_from_Directions_to_XYZs\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kos.wikia.com/wiki/Tutorial_with_example_-_Conversion_from_Directions_to_XYZs\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EAnd make that a built-in function?\u003C/p\u003E\u003Cp\u003EIt should be possible to make any rotation direction into a unit vector even if it didn\u0027t start out that way in the code. In order for rotations to make any sense at all they have to start from some presumed default. iIn order to know what it means to yaw or pitch 45 degrees you have to know what direction it started from before applying the 45 degree change. You have to know what direction R(0,0,0) is first before you can tell what R(45,0,0) is.\u003C/p\u003E\u003Cp\u003EExperimentally, it seems that locking steering to R(0,0,0) and locking steering to V(0,0,1) always point the same way, making me suspect that the Euler rotations are starting from the unit vector (0,0,1) and rotating it, which is what the code on that wiki page presumes is happening.\u003C/p\u003E\u003Cp\u003EBuried somewhere in the Unity docs I saw reference to something saying that the Euler rotation type in Unity presumes a default starting point for the \u0027zero\u0027 rotation if you don\u0027t provide one for it, and the presumed starting point is the camera looking \u0022down the Z axis\u0022 with the camera\u0027s \u0022up\u0022 pointing up the Y axis. It looks like this frame of reference is what\u0027s used by KSP as far as I can tell experimentally. \u003C/p\u003E\u003Cp\u003EOn second thought, instead of doing the matrix math in kos\u0027s mod code, I think Unity even has a built-in function to retrieve the unit vector of a Euler Rotation, provided you give it the original starting point (the 0,0,0) that the rotation was a rotation from. (if you don\u0027t provide it, it presumes it rotated from a starting vector described as stated above).\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-04-20T21:01:30Z\u0022 title=\u002204/20/2014 09:01  PM\u0022 data-short=\u002210 yr\u0022\u003EApril 20, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Hyperlynx","CreatedById":90829,"CreatedDateTime":"2014-04-20T21:54:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003Evelocity:orbit is a vector.\u003Cp\u003Eship:body:position is a vector, and when you think about it, ship:body:position is effectively a vector in the \u0022down\u0022 direction.\u003C/p\u003E\u003Cp\u003EAnd if you need to transform a rotation into a unit vector, there\u0027s a way I worked out ages ago but it\u0027s ugly. Also, directions like Up now have a \u0022:vector\u0022 suffix to get their unit vector. marianoapp claims it only works on some of them, but I haven\u0027t found one yet where it doesn\u0027t.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EExcellent! Thank you.\u003C/p\u003E\n"},{"CreatedByName":"Hyperlynx","CreatedById":90829,"CreatedDateTime":"2014-04-21T02:23:34Z","Content":"\n\u003Cp\u003EProgress so far:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E///////////////////////////////////////////////////////////\u003Cbr\u003E// polar\u003Cbr\u003E//\u003Cbr\u003E// establish polar orbit.\u003Cbr\u003E///////////////////////////////////////////////////////////\u003Cbr\u003E\u003Cbr\u003E//NOTE: circularise in a separate file.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Beginning polar orbit sequence.\u0022.\u003Cbr\u003E\u003Cbr\u003Eset startTime to time.\u003Cbr\u003E\u003Cbr\u003Eset burnTime to 30.\u003Cbr\u003E\u003Cbr\u003E//http://space.stackexchange.com/questions/3543/why-is-it-best-to-perform-an-orbital-inclination-change-at-apoapsis says it\u0027s most efficient to change inclination at apoapsis\u003Cbr\u003E\u003Cbr\u003E//TODO: figure out how to tell whether it\u0027s better to go normal or antinormal?\u003Cbr\u003E\u003Cbr\u003Elock steering to VCRS(ship:body:position, velocity:orbit). //normal\u003Cbr\u003E\u003Cbr\u003E//TODO: work out warpCooldown using orbital speed and time warp, rather than hardcode.\u003Cbr\u003E\u003Cbr\u003Eif altitude \u0026gt; 70000\u003Cbr\u003E{\u003Cbr\u003E  set warpFactor to 3.\u003Cbr\u003E  set warpCooldown to 20.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003Eif altitude \u0026gt; 120000\u003Cbr\u003E{\u003Cbr\u003E  set warpFactor to 4.\u003Cbr\u003E  set warpCooldown to 57.\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003Eset burns to 0.\u003Cbr\u003E\u003Cbr\u003E//TODO: need to work out how to stop it from burning if it does reach polar orbit mid burn\u003Cbr\u003Euntil ship:obt:inclination \u0026gt; 89\u003Cbr\u003E{\u003Cbr\u003E  set warp to warpFactor.\u003Cbr\u003E  wait until eta:apoapsis \u0026lt; burnTime/2 \u002B warpCooldown.\u003Cbr\u003E  set warp to 0.\u003Cbr\u003E\u003Cbr\u003E  wait until eta:apoapsis \u0026lt; burnTime/2.\u003Cbr\u003E  lock throttle to 1.\u003Cbr\u003E  wait burnTime.\u003Cbr\u003E  lock throttle to 0.\u003Cbr\u003E  wait 1. //for ship to throttle down, so we can warp.\u003Cbr\u003E\u003Cbr\u003E  set burns to burns \u002B 1.\u003Cbr\u003E}.\u003Cbr\u003E\u003Cbr\u003Eprint \u0022Polar orbit achieved in \u0022 \u002B (time - startTime) \u002B \u0022 seconds, \u0022 \u002B burns \u002B \u0022 total burns.\u0022. //time doesn\u0027t mean much, because of time warp...\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"whirlwind","CreatedById":109022,"CreatedDateTime":"2014-04-27T03:00:48Z","Content":"\n\u003Cp\u003EHow to get the periapsis argument and AN longitude? Right now I just scan and write when ship moved over PE/AN/DN but this method inapplicable for work with non celestial bodies or for very long orbits.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-04-27T12:43:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022whirlwind\u0022 data-cite=\u0022whirlwind\u0022\u003E\u003Cdiv\u003EHow to get the periapsis argument and AN longitude? Right now I just scan and write when ship moved over PE/AN/DN but this method inapplicable for work with non celestial bodies or for very long orbits.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIn general this is a variant of the math problem \u0022find the line of intersection between two planes.\u0022 That line of intersection is where the ascending and descending nodes are. In this case the two intersecting planes are your oribtal plane (which can be found by the normal vector obtained by a cross product of orbital velocity and ship\u0027s position relative to the planet), and the plane defined by the planet (or moon)\u0027s equator, which always happens to be the XZ plane.\u003C/p\u003E\u003Cp\u003EThat\u0027s just a hint to help. I don\u0027t remember the answer myself right now but it should be findable with some google searching.\u003C/p\u003E\u003Cp\u003EBut what you actually want is MUCH harder to calculate. You don\u0027t just want to know the position of the AN and DN, but how long it will take you to get there. And there\u0027s a reason those math answers are not readily available to come by with a bit of searching. It\u0027s because that\u0027s actually a hairy *ugly* math problem. If your orbit is perfectly circular then it\u0027s easy. But if it\u0027s any arbitrary eccentric ellipse then forget it. Calculating how long it will take you to get to a location on your orbit path typically involves running a numerical approximation algorithm rather than having a nice perfect analytical answer. This is a thing that KSP itself does under the hood, and it\u0027s why predictions of ETA times are a bit fluttery. There\u0027s a tradeoff between accuraccy and speed where to give a properly static precise answer would require running the algorithm too long for speedy updates in the user interface.\u003C/p\u003E\u003Cp\u003EBut if you *really* want to do it, and *really* want to jump into the hairy math, here\u0027s a link to look at: \u003Ca href=\u0022http://mathworld.wolfram.com/KeplersEquation.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://mathworld.wolfram.com/KeplersEquation.html\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EA solution that might be easier to implement is instead of trying to calculate the ETA, is to realize that you really only want to know when the ETA is getting close to zero so you can do your burn then. To a certain extent, you don\u0027t care if the program can figure out whether the intersection is 5 minutes versus 15 minutes away. What matters for making the algorithm work is that the program needs to know the difference between and ETA of 0 and and ETA of 20 seconds or so. So perhaps you can work it out by monitoring a math expression that will tell you if you are or are not at the AN right now, and saying something like \u0022wait until this vector is pointing in nearly the right direction\u0022 instead of \u0022wait until such and such a time.\u0022\u003C/p\u003E\u003Cp\u003EFor example, if you can find the line of intersection of the two planes, as described above, then you\u0027ll be on that line when your position vector relative to the planet\u0027 center is perfectly parallel to that line, which you can work out from the dot product of the two vectors.\u003C/p\u003E\n"},{"CreatedByName":"whirlwind","CreatedById":109022,"CreatedDateTime":"2014-04-27T14:14:24Z","Content":"\n\u003Cp\u003EThanks for the detailed answer. I\u0027ve imagined that this is not an easy task. But since the KOS works not so fast, it would be great if these values were taken from the KSP or such complex calculations were implemented in C#. These parameters are an integral part of the orbital parameters. It would be great to get these things in future releases.\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-05-01T10:34:46Z","Content":"\n\u003Cp\u003EHi, I\u0027ve installed \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/releases/download/v12.0/kOS.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-KOS/KOS/releases/download/v12.0/kOS.zip\u003C/a\u003E on KSP 0.23.5 (a.k.a. ARM) to check for regressions on my original scripts.\u003C/p\u003E\u003Cp\u003EOnly when I want to bring up the terminal to run programs I see a grey area instead. The terminal window is not working.\u003C/p\u003E\u003Cp\u003EBug, feature or am I missing something?\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-05-01T13:50:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022baloan\u0022 data-cite=\u0022baloan\u0022\u003E\u003Cdiv\u003EHi, I\u0027ve installed \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/releases/download/v12.0/kOS.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-KOS/KOS/releases/download/v12.0/kOS.zip\u003C/a\u003E on KSP 0.23.5 (a.k.a. ARM) to check for regressions on my original scripts.\u003Cp\u003EOnly when I want to bring up the terminal to run programs I see a grey area instead. The terminal window is not working.\u003C/p\u003E\u003Cp\u003EBug, feature or am I missing something?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDo you have remotetech installed? I was fighting a bug right in the end with RemoteTech and i thought i had it licked.\u003C/p\u003E\u003Cp\u003EUpdate: Updated the release with some code i forgot to include. This is exactly why i put it up on Github first \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-01T14:50:59Z\u0022 title=\u002205/01/2014 02:50  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 1, 2014\u003C/time\u003E by erendrake\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"erbmur","CreatedById":57112,"CreatedDateTime":"2014-05-01T15:35:48Z","Content":"\n\u003Cp\u003EDoes anybody know what the situation is with Kos in terms of its integration with remotetech?\u003C/p\u003E\u003Cp\u003EI guess what I am really interested in is it\u0027s interaction with the signal delay side of things. Does it take into account the signal delay when running code, or being a computer on the probe, will it run in real time regardless of how far away it is from Kerbin? And I guess on the side, does this also mean that it will continue to run if it looses connection and just carry on running the onboard code?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-05-01T16:27:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erbmur\u0022 data-cite=\u0022erbmur\u0022\u003E\u003Cdiv\u003EDoes anybody know what the situation is with Kos in terms of its integration with remotetech?\u003Cp\u003EI guess what I am really interested in is it\u0027s interaction with the signal delay side of things. Does it take into account the signal delay when running code, or being a computer on the probe, will it run in real time regardless of how far away it is from Kerbin? And I guess on the side, does this also mean that it will continue to run if it looses connection and just carry on running the onboard code?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EA related question to consider: if kOS ever gets around to implementing keyboard input, should it operate on a lightspeed delay - If ship has no crew, then assume the operator is typing from far away and cannot interact in real-time to prompts on the screen?\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-05-01T17:09:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erbmur\u0022 data-cite=\u0022erbmur\u0022\u003E\u003Cdiv\u003EDoes anybody know what the situation is with Kos in terms of its integration with remotetech?\u003Cp\u003EI guess what I am really interested in is it\u0027s interaction with the signal delay side of things. Does it take into account the signal delay when running code, or being a computer on the probe, will it run in real time regardless of how far away it is from Kerbin? And I guess on the side, does this also mean that it will continue to run if it looses connection and just carry on running the onboard code?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWe are just now releasing a version that will allow you to run code if you are connected and it will continue to run if you lose connection. All of the features you are asking for are on the list of things to do.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EA related question to consider: if kOS ever gets around to implementing keyboard input, should it operate on a lightspeed delay - If ship has no crew, then assume the operator is typing from far away and cannot interact in real-time to prompts on the screen?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think that key input should operate with the delay. Delay stuff gets complicated because I believe we should allow you to send commands even if you done have a connection because you might very well have a connection after the delay is finished. I also believe we should have antenna requirements in stock just like science does. I would love to have power drain when you are using the antenna, just like science does. \u003C/p\u003E\u003Cp\u003EWe have an endless amount of work to do. Job Security i guess.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-05-02T00:46:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EWe are just now releasing a version that will allow you to run code if you are connected and it will continue to run if you lose connection. All of the features you are asking for are on the list of things to do.\u003Cp\u003EI think that key input should operate with the delay. Delay stuff gets complicated because I believe we should allow you to send commands even if you done have a connection because you might very well have a connection after the delay is finished. I also believe we should have antenna requirements in stock just like science does. I would love to have power drain when you are using the antenna, just like science does. \u003C/p\u003E\u003Cp\u003EWe have an endless amount of work to do. Job Security i guess.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s sounding like user input is going to probably be a dedicated release target unto itself at some point. There\u0027s enough bits and pieces that go along with it to make it worth dedicating a release entirely to it alone.\u003C/p\u003E\u003Cp\u003EThe light speed delay issue gets back to a thing I was thinking about before about user input: There\u0027s really two types - blocking line-at-a-time and immediate key-at-a-time. And there\u0027s useful places for both. There\u0027s times when blocking line-at-a-time input is more logical (\u0022Please type the name of your landing site, captain:\u0022), and places where key-at-a-time input is more logical (\u0022Press A to abort program and return to manual control at any time.\u0022). I am picturing that a remote mission in which there\u0027s no crew on the craft would be effectively restricted to the line-at-a-time type of input, because key-at-a-time would mean waiting several minutes between key presses, while line-at-a-time would allow you to type it all and hit enter and only wait after that.\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-05-02T16:37:19Z","Content":"\n\u003Cp\u003EI reinstalled and it works now. Some feedback:\u003C/p\u003E\u003Cp\u003E1. When a script stops with an error message I miss a \u0022script stopped\u0022 message. If I remember correctly the previous version would say something like: \u0022script aborted in line \u0026lt;n\u0026gt;\u0022. Works for syntax errors but not for errors like the below \u0022suffix not found\u0022.\u003C/p\u003E\u003Cp\u003E2. body has to be changed to body:name (not a big deal)\u003C/p\u003E\u003Cp\u003E3. Node semantics have been changed\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset nd to nextnode.\u003Cbr\u003Eprint nd:apoapsis.\u003Cbr\u003ESuffix APOAPSIS not found on object.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHow to migrate apoapsis for nodes?\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-05-02T17:30:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022baloan\u0022 data-cite=\u0022baloan\u0022\u003E\u003Cdiv\u003EI reinstalled and it works now. Some feedback:\u003Cp\u003E1. When a script stops with an error message I miss a \u0022script stopped\u0022 message. If I remember correctly the previous version would say something like: \u0022script aborted in line \u0026lt;n\u0026gt;\u0022. Works for syntax errors but not for errors like the below \u0022suffix not found\u0022.\u003C/p\u003E\u003Cp\u003E2. body has to be changed to body:name (not a big deal)\u003C/p\u003E\u003Cp\u003E3. Node semantics have been changed\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset nd to nextnode.\u003Cbr\u003Eprint nd:apoapsis.\u003Cbr\u003ESuffix APOAPSIS not found on object.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHow to migrate apoapsis for nodes?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ein your case it would be \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003Eset nd to nextnode.\u003C/p\u003E\u003Cp\u003Eprint nd:orbit:apoapsis.\u003C/p\u003E\u003Cp\u003E[/COPY]\u003C/p\u003E\u003Cp\u003EThe reason for the change is now you have access to all of the rest of the orbit info and if we add more to orbit ( we will ) it will be there for every orbit access method. I think i had listed it in breaking changes but it looks like maybe i missed it, my bad.\u003C/p\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-05-02T19:03:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003Ein your case it would be \u003Cp\u003E\u003C/p\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003Eset nd to nextnode.\u003C/p\u003E\u003Cp\u003Eprint nd:orbit:apoapsis.\u003C/p\u003E\u003Cp\u003E[/COPY]\u003C/p\u003E\u003Cp\u003EThanks.\u003C/p\u003E\u003Cp\u003EThe reason for the change is now you have access to all of the rest of the orbit info and if we add more to orbit ( we will ) it will be there for every orbit access method. I think i had listed it in breaking changes but it looks like maybe i missed it, my bad.\u003C/p\u003E\u003Cp\u003EI found it here \u003Ca href=\u0022https://github.com/erendrake/KOS/releases\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/erendrake/KOS/releases\u003C/a\u003E which seems to be the deprecated project. It seems to me the doc here \u003Ca href=\u0022http://ksp-kos.github.io/KOS_DOC/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp-kos.github.io/KOS_DOC\u003C/a\u003E needs a makeover adding all the new features. Or is there another place for the authoritative docs?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"baloan","CreatedById":91670,"CreatedDateTime":"2014-05-02T19:32:08Z","Content":"\n\u003Cp\u003EThe behaviour for stage:liquidfuel has changed. Formerly stage fuel was 0 when empty. \u003C/p\u003E\u003Cp\u003ENow it has some residual value:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://ksp.baldev.de/kos/screenshots/stage-empty.png\u0022 alt=\u0022stage-empty.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EEasy to fix but not consistent. Breaks my ascent script. Not mentioned in any of the release notes.\u003C/p\u003E\u003Cp\u003EBtw: I lost throttle control after aborting the script. Shift and Control didn\u0027t work.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-05-02T19:40:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022baloan\u0022 data-cite=\u0022baloan\u0022\u003E\u003Cdiv\u003EThe behaviour for stage:liquidfuel has changed. Formerly stage fuel was 0 when empty. \u003Cp\u003ENow it has some residual value:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://ksp.baldev.de/kos/screenshots/stage-empty.png\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://ksp.baldev.de/kos/screenshots/stage-empty.png\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EEasy to fix but not consistent. Breaks my ascent script. Not mentioned in any of the release notes.\u003C/p\u003E\u003Cp\u003EBtw: I lost throttle control after aborting the script. Shift and Control didn\u0027t work.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat does sound like a pretty lame remainder problem, Would you mind adding a bug in the github tracker?\u003C/p\u003E\u003Cp\u003EThrottle control locking has a bug that i am actually working on as i post this. You can watch its progress Here: \u003Ca href=\u0022https://github.com/KSP-KOS/KOS/issues/69\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KSP-KOS/KOS/issues/69\u003C/a\u003E\u003C/p\u003E\n"}]}