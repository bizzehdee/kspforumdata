{"TopicId":75938,"ForumId":36,"TopicTitle":"[1.0.x] [V1.9f] Kerbal Foundries wheels, anti-grav repulsors and tracks","CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-06-25T17:24:04Z","PageNum":87,"Articles":[{"CreatedByName":"Haifi","CreatedById":108817,"CreatedDateTime":"2015-01-29T15:49:20Z","Content":"\n\u003Cp\u003EThat hitch looks very impressive already mate!\u003C/p\u003E\u003Cp\u003E Ive tried to create things like that with Infernal Robotic parts, but the uncontrolled hinges are exactly that... uncontrolled, so you cant really set them up to work only in a certain angle. Looking forward to test them!\u003C/p\u003E\u003Cp\u003EPlease no complaining about bend or broken hitches \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cool.gif\u0022 alt=\u0022:cool:\u0022\u003E\u003C/p\u003E\u003Cp\u003ECheers\u003C/p\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2015-01-30T01:55:02Z","Content":"\n\u003Cp\u003EI never did try to make a free-moving hitch with those parts. I always theorized that it would be possible to get all angles of movement available by using multiple IR hinges in different orientations, but I worried that my hitch would be way too long to be practical. At least now I won\u0027t make the mistake of trying it on my own.\u003C/p\u003E\n"},{"CreatedByName":"riocrokite","CreatedById":129319,"CreatedDateTime":"2015-01-30T08:47:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003E... The limits are relative to how things are when the joints are created, so some measuring and calculation is required to make it behave properly. But it is freakin cool!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis might be totally wrong direction of research but maybe some kind of flat surface docking ports with docking port functionality could have helped in aligning and docking precisely with correct angle? (if there isn\u0027t a solution for aligning vectors)\u003C/p\u003E\u003Cp\u003EHowever in its current state this hitch of yours looks awesome and will bring much good to KSP lego game since you cannot do similar thing using IR elements.\u003C/p\u003E\n"},{"CreatedByName":"ratchet freak","CreatedById":119895,"CreatedDateTime":"2015-01-30T10:08:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003EIndeed! Though this kind of vector maths is really, really hard \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003Cp\u003EFind the angle between two vectors in one plane: Sounds easy, doesn\u0027t it.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ein the plane of the vectors or a arbitrary plane?\u003C/p\u003E\u003Cp\u003Ethe first is acos(dot(vec1, vec2) / sqrt(vec1.lengthSq()*vec2.lengthSq())) \u003C/p\u003E\u003Cp\u003Ethe second is the same after projecting the vectors on the plane, that you can do by doing vec - planeNormal.normalized() * dot(vec, planeNormal.normalized())\u003C/p\u003E\n"},{"CreatedByName":"sharpspoonful","CreatedById":83734,"CreatedDateTime":"2015-01-30T10:53:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaalidas\u0022 data-cite=\u0022Gaalidas\u0022\u003E\u003Cdiv\u003EI never did try to make a free-moving hitch with those parts. I always theorized that it would be possible to get all angles of movement available by using multiple IR hinges in different orientations, but I worried that my hitch would be way too long to be practical. At least now I won\u0027t make the mistake of trying it on my own.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EPretty much exactly what you said. It\u0027s not practical, and makes for some long and difficult to use hitches.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-01-30T11:56:01Z","Content":"\n\u003Cp\u003EThank you Ratchet Freak, that\u0027s most helpful!\u003C/p\u003E\u003Cp\u003EI\u0027m looking to get the orientation of the trailer coupling, at the point you hitch up, relative to the hitch - so I think that means an arbitrary plane which we pick to be what we want to measure against. There are conveniently oriented game objects on either part that are used to grab the vectors from (_hitchObject and _couplingObject).\u003C/p\u003E\u003Cp\u003ESo, for the plane between vectors:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Efloat angleX = Mathf.Acos(Vector3.Dot(_hitchObject.transform.right, _couplingObject.transform.right) / Mathf.Sqrt(Mathf.Pow( _hitchObject.transform.right.magnitude, 2) * Mathf.Pow(_couplingObject.transform.right.magnitude, 2))) * Rad2Deg; // translated to Unity C# and reading out as degrees.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI think this is functionally the same as Vector3.Angle(Vec1, Vec2);\u003C/p\u003E\u003Cp\u003EAnd in the arbitrary plane. Could generate the plane normal using cross product, but as we know that right is the normal of forward and up (etc) (and a unity vector) we can use that? If so (and I\u0027m making some giant leaps this is correct!!!):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E            Vector3 hitchVecX =  (_hitchObject.transform.right - _hitchObject.transform.forward) * Vector3.Dot(_hitchObject.transform.right, _hitchObject.transform.forward);\u003Cbr\u003E            Vector3 attachVecX = (_couplingObject.transform.right - _hitchObject.transform.forward) * Vector3.Dot(_couplingObject.transform.right, _hitchObject.transform.forward);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            float angleVecX = Mathf.Acos(Vector3.Dot(hitchVecX, attachVecX) / Mathf.Sqrt(Mathf.Pow(hitchVecX.magnitude, 2) * Mathf.Pow(attachVecX.magnitude, 2))) * Mathf.Rad2Deg;\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EBoth of which seem to work!! I\u0027ll do some more extensive testing and report back. Pretty much the same as Zodius was explaining earlier in the thread, but another explanation made it sort of click into place.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EEDIT: Yes, that seems to do the trick. Thanks guys! now I can use that data to set the joint limits up correctly, as well as prevent hitching beyond the limits. Awesome!!\u003C/span\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-30T12:01:10Z\u0022 title=\u002201/30/2015 12:01  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 30, 2015\u003C/time\u003E by lo-fi\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ZodiusInfuser","CreatedById":76163,"CreatedDateTime":"2015-01-30T12:12:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003ESo, for the plane between vectors:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Efloat angleX = Mathf.Acos(Vector3.Dot(_hitchObject.transform.right, _couplingObject.transform.right) / Mathf.Sqrt(Mathf.Pow( _hitchObject.transform.right.magnitude, 2) * Mathf.Pow(_couplingObject.transform.right.magnitude, 2))) * Rad2Deg; // translated to Unity C# and reading out as degrees.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI presume you\u0027re converting to degrees for your internal representation of angle?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cspan style=\u0022color:#333333;\u0022\u003EBoth of which seem to work!! I\u0027ll do some more extensive testing and report back. Pretty much the same as Zodius was explaining earlier in the thread, but another explanation made it sort of click into place.\u003C/span\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWoot! I realise that my explanations sometimes aren\u0027t the best, but at least it was of some value \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"ratchet freak","CreatedById":119895,"CreatedDateTime":"2015-01-30T12:14:17Z","Content":"\n\u003Cp\u003EFYI\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EMathf.Sqrt(Mathf.Pow( _hitchObject.transform.right.magnitude, 2) * Mathf.Pow(_couplingObject.transform.right.magnitude, 2)))== _hitchObject.transform.right.magnitude * _couplingObject.transform.right.magnitude\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI just put it in as an optimization if for if you grab the squared magnitude directly (only 1 square root needed then instead of 2 if they were grabbed separately)\u003C/p\u003E\u003Cp\u003Eand yes that is indeed just the angle between them.\u003C/p\u003E\u003Cp\u003Eand projection should actually be vec - (planeNormal.normalized() * dot(vec, planeNormal.normalized())) I assumed you would have applied normal operator priority...\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-01-30T12:48:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ratchet freak\u0022 data-cite=\u0022ratchet freak\u0022\u003E\u003Cdiv\u003EFYI\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EMathf.Sqrt(Mathf.Pow( _hitchObject.transform.right.magnitude, 2) * Mathf.Pow(_couplingObject.transform.right.magnitude, 2)))== _hitchObject.transform.right.magnitude * _couplingObject.transform.right.magnitude\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI just put it in as an optimization if for if you grab the squared magnitude directly (only 1 square root needed then instead of 2 if they were grabbed separately)\u003C/p\u003E\u003Cp\u003Eand yes that is indeed just the angle between them.\u003C/p\u003E\u003Cp\u003Eand projection should actually be vec - (planeNormal.normalized() * dot(vec, planeNormal.normalized())) I assumed you would have applied normal operator priority...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh ha, that needs updating, then - completely passed me by. Thanks \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EEDIT: Yep, that nailed it, works perfectly. Though as it returns the acute angle, I\u0027ll need to do a few extra checks to see which way the rotation is.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ZodiusInfuser\u0022 data-cite=\u0022ZodiusInfuser\u0022\u003E\u003Cdiv\u003EI presume you\u0027re converting to degrees for your internal representation of angle?\u003Cp\u003EWoot! I realise that my explanations sometimes aren\u0027t the best, but at least it was of some value \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, no forward calculation needed, and that\u0027s what the joints use, so I converted to degrees.\u003C/p\u003E\u003Cp\u003EIndeed! Between you two, I finally got it straight in my head and converted into Unity-speak.\u003C/p\u003E\u003Cp\u003EEDIT 2: I see no reason why the joint can\u0027t be powered like IR. I\u0027ve got the data and the axis all configured, so why not. Yes, I\u0027m talking about a BV202 style steering linkage. Watch this space, I think we\u0027re on the verge of something completely new...\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-30T14:01:54Z\u0022 title=\u002201/30/2015 02:01  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 30, 2015\u003C/time\u003E by lo-fi\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ZodiusInfuser","CreatedById":76163,"CreatedDateTime":"2015-01-30T14:10:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003EEDIT: Yep, that nailed it, works perfectly. Though as it returns the acute angle, I\u0027ll need to do a few extra checks to see which way the rotation is.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIIRC you also need to do the cross product to be able to get the full 360 degree range, since it can be used to get the sin of the angle (in a similar same way how you get the cosine from the dot product). Then you can use Atan2 to get your full 0 to 360 degree angle. Have a look at this link as it seems what\u0027s being asked is exactly what you\u0027re wanting too: \u003Ca href=\u0022http://www.gamedev.net/topic/88968-finding-angle-between-two-vectors-over-360-degrees/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://www.gamedev.net/topic/88968-finding-angle-between-two-vectors-over-360-degrees/\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"ratchet freak","CreatedById":119895,"CreatedDateTime":"2015-01-30T14:25:33Z","Content":"\n\u003Cp\u003Ethough if you want the oriented angle it\u0027s possible to transform both vectors so that 1 is the X-axis, the normal for the positive rotation is the Z axis. and then plugging the x and y of the other values in atan2\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-01-30T18:49:46Z","Content":"\n\u003Cp\u003EThanks gentlemen! I\u0027ll do a little reading, then I think we\u0027ve got this nailed.\u003C/p\u003E\u003Cp\u003ENext potential showstopper to deal with after that is persistence. Anything beyond that is incremental feature development. Man, I love creating something new!\u003C/p\u003E\u003Cp\u003EEDIT: The cheeky little cheat with the cross product sign against a normal works rather well. Yes, it needs refactoring and optimisation \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E            //this projects vectors onto chosen 2D planes. planes are defined by their normals, in this case _hitchObject.transform.forward.\u003Cbr\u003E            Vector3 hitchProjectX =  _hitchObject.transform.right - (_hitchObject.transform.forward) * Vector3.Dot(_hitchObject.transform.right, _hitchObject.transform.forward);\u003Cbr\u003E            Vector3 attachProjectX = _couplingObject.transform.right - (_hitchObject.transform.forward) * Vector3.Dot(_couplingObject.transform.right, _hitchObject.transform.forward);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            Vector3 hitchProjectY = _hitchObject.transform.up - (_hitchObject.transform.right) * Vector3.Dot(_hitchObject.transform.up, _hitchObject.transform.right);\u003Cbr\u003E            Vector3 attachProjectY = _couplingObject.transform.up - (_hitchObject.transform.right) * Vector3.Dot(_couplingObject.transform.up, _hitchObject.transform.right);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            Vector3 hitchProjectZ = _hitchObject.transform.forward - (_hitchObject.transform.up) * Vector3.Dot(_hitchObject.transform.forward, _hitchObject.transform.up);\u003Cbr\u003E            Vector3 attachProjectZ = _couplingObject.transform.forward - (_hitchObject.transform.up) * Vector3.Dot(_couplingObject.transform.forward, _hitchObject.transform.up);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            float angleX = Mathf.Acos(Vector3.Dot(hitchProjectX, attachProjectX) / Mathf.Sqrt(Mathf.Pow(hitchProjectX.magnitude, 2) * Mathf.Pow(attachProjectX.magnitude, 2))) * Mathf.Rad2Deg;\u003Cbr\u003E            float angleY = Mathf.Acos(Vector3.Dot(hitchProjectY, attachProjectY) / Mathf.Sqrt(Mathf.Pow(hitchProjectY.magnitude, 2) * Mathf.Pow(attachProjectY.magnitude, 2))) * Mathf.Rad2Deg;\u003Cbr\u003E            float angleZ = Mathf.Acos(Vector3.Dot(hitchProjectZ, attachProjectZ) / Mathf.Sqrt(Mathf.Pow(hitchProjectZ.magnitude, 2) * Mathf.Pow(attachProjectZ.magnitude, 2))) * Mathf.Rad2Deg;\u003Cbr\u003E\u003Cbr\u003E            Vector3 normalvectorX = Vector3.Cross(hitchProjectX, attachProjectX);\u003Cbr\u003E            if (normalvectorX[2] \u0026gt; 0.0f)\u003Cbr\u003E                angleX *= 1; //a bit redundant \u003Cbr\u003E            else\u003Cbr\u003E                angleX *= -1;\u003Cbr\u003E            Vector3 normalvectorY = Vector3.Cross(hitchProjectY, attachProjectY);\u003Cbr\u003E            if (normalvectorY[1] \u0026gt; 0.0f)\u003Cbr\u003E                angleY *= 1;\u003Cbr\u003E            else\u003Cbr\u003E                angleY *= -1;\u003Cbr\u003E            Vector3 normalvectorZ = Vector3.Cross(hitchProjectZ, attachProjectZ);\u003Cbr\u003E            if (normalvectorZ[0] \u0026gt; 0.0f)\u003Cbr\u003E                angleZ *= 1;\u003Cbr\u003E            else\u003Cbr\u003E                angleZ *= -1;\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EEDIT2: had a facepalm moment when I realised I\u0027d forgotten that only the X axis of a configurable joint can have asymmetric limits :/ This causes major problem in hitching because it means the limits are set relative to rotation between the tractor and trailer, not the hitch itself. Couple up with the tractor 20 relative to the trailer and the joint will over rotate to the right and under to the left.\u003C/p\u003E\u003Cp\u003ECurrently looking at solutions, but there\u0027s nothing in the joint that allows me to set what the limits are relative to. It\u0027s all centred when you first create the joint, so it\u0027s going to take quite a creative solution to figure this one out! Luckily I don\u0027t believe in a no-win scenario...\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-31T01:53:29Z\u0022 title=\u002201/31/2015 01:53  AM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 31, 2015\u003C/time\u003E by lo-fi\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2015-01-31T18:52:55Z","Content":"\n\u003Cp\u003EI just saw the updated video on YouTube while browsing crazy kerbal videos. Looks like the hitch is coming along nicely.\u003C/p\u003E\n"},{"CreatedByName":"ZodiusInfuser","CreatedById":76163,"CreatedDateTime":"2015-01-31T18:55:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Gaalidas\u0022 data-cite=\u0022Gaalidas\u0022\u003E\u003Cdiv\u003EI just saw the updated video on YouTube while browsing crazy kerbal videos. Looks like the hitch is coming along nicely.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI concur, it appeared right in my sub box \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-01-31T19:18:06Z","Content":"\n\u003Cp\u003E*grin* Yes, I\u0027ve almost got it nailed. Persistence is a little shaky at the moment, but might be best to hand it over to you guys for breaking and take it from there. I have one major thing to do before I do so, though: checking orientation being within limits before coupling. Otherwise the Kraken strikes! Thankfully I\u0027ve got the tools to do that already in place \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EDetails aside, fundamentally this will work as a viable mechanic in KSP. Strut gun tie downs come next, they\u0027ll be easy in comparison.\u003C/p\u003E\n"},{"CreatedByName":"chrisl","CreatedById":114320,"CreatedDateTime":"2015-01-31T19:45:28Z","Content":"\n\u003Cp\u003EWhen you\u0027re in the VAB/SPH and setting up tracks, you\u0027ve got some sliders for Spring Strength \u0026amp; Spring Damp. Is there a way to make those sliders active for vehicles that are already deployed? I\u0027ve got some tracked units on Duna that I want to try adjusting those settings to see if that will help reduce the frequency of them falling over every time I start and stop.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-01-31T19:59:26Z","Content":"\n\u003Cp\u003EThe spring and damper are annoying, they don\u0027t like being updated while the wheel colliders are active, so I disable th sliders in flight. What you can do is look through persistence for springRate and damperRate and change the values there so they get set at start of flight.\u003C/p\u003E\u003Cp\u003EIt\u0027s something I want to revisit, but that\u0027s the best I can do for the moment I\u0027m afraid.\u003C/p\u003E\n"},{"CreatedByName":"chrisl","CreatedById":114320,"CreatedDateTime":"2015-01-31T20:19:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003EThe spring and damper are annoying, they don\u0027t like being updated while the wheel colliders are active, so I disable th sliders in flight. What you can do is look through persistence for springRate and damperRate and change the values there so they get set at start of flight.\u003Cp\u003EIt\u0027s something I want to revisit, but that\u0027s the best I can do for the moment I\u0027m afraid.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOk. I\u0027ll give that a try.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-01-31T20:22:03Z","Content":"\n\u003Cp\u003EBTW, is anyone any good making RPM props and fancy a little project? I\u0027m thinking the hitch needs an external camera and alignment indicator for use in IVA. I\u0027ve got so much to do, I can\u0027t spare the time just now.\u003C/p\u003E\u003Cp\u003EI have to get the proper models done first, but worth asking about in case someone is available.\u003C/p\u003E\n"},{"CreatedByName":"J.Random","CreatedById":63332,"CreatedDateTime":"2015-01-31T23:56:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003EI\u0027m thinking the hitch needs an external camera and alignment indicator for use in IVA.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhy not simply use the Romfarer\u0027s LazorCam/DockingCam? If your hitch is a docking port, it will work as is (and I\u0027m not sure, but it may work with RPM).\u003C/p\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2015-02-01T08:03:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022J.Random\u0022 data-cite=\u0022J.Random\u0022\u003E\u003Cdiv\u003EWhy not simply use the Romfarer\u0027s LazorCam/DockingCam? If your hitch is a docking port, it will work as is (and I\u0027m not sure, but it may work with RPM).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUgh, that mod is way over-engineered and rather heavy of a load on the system. It really doesn\u0027t integrate very well. However, RPM has its own camera helpers and selectors for use in a standard RPM monitor. I believe there\u0027s a special transform you can define in the model for use with the camera module. As for an alignment indicator, I am unsure of how that would be accomplished. The ASET connector has a togglable set of arrows that I believe is simply an animation that consists of a single frame of movement which makes the arrows appear, and the matching part has a similar set of arrows. If it\u0027s a true docking alignment guide you\u0027re after, you may have to somehow define a docking post and make use of the alignment indicator plugin. As for RPM page coding, that\u0027s a real mystery to me. For inspiration into the model of the hitch, you could take a look at the KSOS pack. I believe they have a little docking port that resembles a hitch of some sort. I never was able to make it work right though, and I think it was just a dock with a really weak connection which allowed for a certain degree of sway.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003E*grin* Yes, I\u0027ve almost got it nailed. Persistence is a little shaky at the moment, but might be best to hand it over to you guys for breaking and take it from there. I have one major thing to do before I do so, though: checking orientation being within limits before coupling. Otherwise the Kraken strikes! Thankfully I\u0027ve got the tools to do that already in place \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003Cp\u003EDetails aside, fundamentally this will work as a viable mechanic in KSP. Strut gun tie downs come next, they\u0027ll be easy in comparison.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ey\u0027know what would be nice, speaking of strut guns and such, would be if you could place two parts on separate crafts that would share an ID of some sort so that, upon docking, the two parts would fire a strut of some sort between the parts of the same ID. This would allow for predefining which docking-strut connects to whichever opposing part before docking is even commenced... okay, so I\u0027m already having doubts to the stability and usability of such a thing... I so hate it when my amazing ideas fall apart as I type them out. I need to think on this one.\u003C/p\u003E\u003Cp\u003EBy the way, I finally got around to testing my experimental modification of the CollisionFX plugin. It compiled fine, even loaded fine. Heck, my new parameters worked amazingly well... it\u0027s the effects themselves that totally failed. Instead of sparks, lights, and/or dust, I was greeted with white, gray, and red spheres of varying sizes that either persisted in one spot, or followed the craft around (such as when a pod ejected a fairing during reentry which promptly collided with the pod) and, oddly enough, were physical enough to have their own reentry effects. It was rather hilarious, but also a failure overall. Guess I\u0027m not quite as awesome as I thought I was. I\u0027m still awesome, don\u0027t get me wrong... just not in this area. Can\u0027t imagine \u003Cem\u003Ewhat\u003C/em\u003E went wrong though... I only took about half of the code, rewrote half of \u003Cem\u003Ethat\u003C/em\u003E and refactored the other half. All it took was some duct tape and a prayer and a little shove to make it fit in the drawer. What could go wrong?\u003C/p\u003E\n"},{"CreatedByName":"AntiMatter001","CreatedById":100129,"CreatedDateTime":"2015-02-01T15:16:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eygc\u0022 data-cite=\u0022eygc\u0022\u003E\u003Cdiv\u003EHi, I\u0027m running ActiveTextureManagement basic and it hangs at RepulsorSurface\\RepulsorSurfaceDiffuse. As in, no log, the program freezes. Any ideas?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eyep same problem. taking forever and using up most of my CPU :/ ... ok i love your mod but really are your new textures THAT bad/good? XD\u003C/p\u003E\u003Cp\u003Ethis is the first time loading it up so if it takes this long (an hour... ya... an hour...) again... i\u0027m considering uninstalling kerbal foundries :/\u003C/p\u003E\u003Cp\u003EEDIT: nope it loaded quicker the second time around ok ATM is ^^^^ so meh sorry KF your an awesome mod again lol\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-01T16:04:09Z\u0022 title=\u002202/01/2015 04:04  PM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 1, 2015\u003C/time\u003E by AntiMatter001\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2015-02-01T17:44:33Z","Content":"\n\u003Cp\u003EIt\u0027s not the repulsor texture, that\u0027s just the last texture that was successfully loaded. The one it\u0027s most likely getting stuck on, and thus not outputting to the log for until processed, is the one on the rover body which is a staggering 4096x4096 texture, plus a same-sized normal map. Heck, the only other mod with that huge of a texture overload is KSOS, and that mod tends to share it\u0027s texture space with multiple parts.\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-02-01T18:20:31Z","Content":"\n\u003Cp\u003EAye, my bad with that one! I\u0027ll cut it down and re-issue, I completely forgot I\u0027d made it silly res while I was testing stuff with normal map detail and it\u0027s stayed like that ever since.\u003C/p\u003E\u003Cp\u003ESounds like the collisionFX recompile can\u0027t find some particle shaders or something like that?\u003C/p\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2015-02-01T20:47:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lo-fi\u0022 data-cite=\u0022lo-fi\u0022\u003E\u003Cdiv\u003ESounds like the collisionFX recompile can\u0027t find some particle shaders or something like that?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat sounds reasonable. The rules call for sharing the source, but they don\u0027t specify that you need to provide all the dependencies required to recompile it. Most likely there\u0027s a packaged shader in the DLL that wasn\u0027t provided with the source. Either that, or it\u0027s having issues with my rendering hardware. I never did test to see if the standard stuff worked properly. Either way, that shader must be amazingly simple consider my recompile made the DLL file a whole kilobyte larger than the release DLL. I am not really sure that a shader is the real culprit, but that seems the most plausible. It\u0027s also possible that separating the functions for the two differing effects broke something in another function that might rely on data provided by the standard spark effect setup.\u003C/p\u003E\u003Cp\u003EThe real issue is that I can\u0027t just recompile and start passing a new DLL around. pizza-whats-his-name has been MIA for a little bit here... along with just about everyone else working on the major part mods since .90 was released.\u003C/p\u003E\u003Cp\u003EWhat puzzles me though is that the spheres were spawning for the collisions in place of actual effects, but the dust was no where to be seen. No spherical placeholders, no actual dust, just... nothing. The other various colors could be evidence that the color-altering effects on the mod were functioning as intended for things like the light effects that accompany the sparks, but I got no trail of floating balls following my tracks around unless they were spawning under the surface of the planet.\u003C/p\u003E\u003Cp\u003EEDIT: I had another look at the original DLL in ILSpy (a little DLL decompiler thingie) and noticed that the effects are referencing a texture of some sort. Now, I know that there isn\u0027t a path in the gamedata directory or locally for either squad OR CollisionFX which contains the path/object of \u0022Effects/fx_smokeTrail_light\u0022 to be referenced. If it\u0027s a file in the stock assets, then I suppose that\u0027s where it\u0027s looking for its source imagery, but if Squad made a change to that path recently then that could be the culprit. I might be able to get things working again if I found those textures and redirected the reference to a local directory instead.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-01T21:08:47Z\u0022 title=\u002202/01/2015 09:08  PM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 1, 2015\u003C/time\u003E by Gaalidas\u003C/strong\u003E\n\u003C/span\u003E\n"}]}