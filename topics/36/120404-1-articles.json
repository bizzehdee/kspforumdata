{"TopicId":120404,"ForumId":36,"TopicTitle":"[WIP][1.3] PersistentThrust v1.0.9","CreatedByName":"mrsolarsail","CreatedById":121532,"CreatedDateTime":"2015-09-08T02:39:09Z","PageNum":1,"Articles":[{"CreatedByName":"mrsolarsail","CreatedById":121532,"CreatedDateTime":"2015-09-08T02:39:09Z","Content":"\n\u003Cp\u003E\nPersistentThrust is a plugin that allows propulsion systems to operate during timewarp. The plugin includes a new solar sail part and module that allows a spacecraft to be propelled only by sunlight. It also adds a module with a patch to the stock ion engine that allows engines to thrust during timewarp. This plugin was previously a part of \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/119579-WIP-1-0-4-SolarSailNavigator-v1-0-4-alpha\u0022 rel=\u0022\u0022\u003ESolarSailNavigator\u003C/a\u003E, which allows you to plan maneuvers with solar sails or long duration engine burns. Development discussions specific to this module will take place here instead of in the SolarSailNavigator thread.\n\u003C/p\u003E\n\u003Cp\u003E\nThe source code is available on Github: \u003Ca href=\u0022https://github.com/bld/PersistentThrust\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/bld/PersistentThrust\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThe plugin can be downloaded from Github: \u003Ca href=\u0022https://github.com/bld/PersistentThrust/releases\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/bld/PersistentThrust/releases\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nFeatures:\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nAnimated solar sail part from \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/111159-BETA-1-0-4-KSP-Interstellar-Extended-1-4-11-%28last-updated-5-9-2015%29-Improved-Warpdrives\u0022 rel=\u0022\u0022\u003EKSP Interstellar\u003C/a\u003E by SasquatchMarmalade\n\u003C/li\u003E\n\u003Cli\u003E\nSolar sail module modified from the original in \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/111159-BETA-1-0-4-KSP-Interstellar-Extended-1-4-11-%28last-updated-5-9-2015%29-Improved-Warpdrives\u0022 rel=\u0022\u0022\u003EKSP Interstellar\u003C/a\u003E\n\u003C/li\u003E\n\u003Cli\u003E\nPersistent Engine module for operating engines during timewarp\n\u003C/li\u003E\n\u003Cli\u003E\nPatch to the stock ion engine using \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/55219-1-0-x-Module-Manager-2-6-8-%28August-29th%29-With-more-SHA-and-less-bug-%28Upgrade-%21%21%29\u0022 rel=\u0022\u0022\u003EModuleManager\u003C/a\u003E with realistic thrust (0.25 N) at the same power level. Use as an example to patch your own engines.\n\u003C/li\u003E\n\u003Cli\u003E\nOperate any combination of engines and solar sails\n\u003C/li\u003E\n\u003Cli\u003E\nConsumes any number of engine propellants with mass from the vehicle during timewarp\n\u003C/li\u003E\n\u003Cli\u003E\nVirtual methods for calculating deltaV, resource consumption, and applying resource consumption\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nKnown issues:\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nDisabled during timewarp on a suborbital trajectory due to a bug in perturbing the suborbital orbit\n\u003C/li\u003E\n\u003Cli\u003E\nConsumption of massless resources during timewarp disabled (e.g. ElectricCharge) due to a bug in how KSP requests resources at high timewarp\n\u003C/li\u003E\n\u003Cli\u003E\nWhen the thrust of a persistent engine is too high (above\u00A0~5 kN),\u00A0KSP won\u0027t allow switching to timewarp (need to check if this is still an issue in v1.0.8)\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nChangelog: see \u003Ca href=\u0022https://github.com/bld/PersistentThrust/releases\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/bld/PersistentThrust/releases\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nThank you to \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/members/120581-FreeThinker\u0022 rel=\u0022\u0022\u003EFreeThinker\u003C/a\u003E and \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/members/78849-Felger\u0022 rel=\u0022\u0022\u003EFelger\u003C/a\u003E for reviewing the code. Thanks to\u00A0\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/108671-octarinenoise/\u0022 rel=\u0022\u0022\u003EOctarineNoise\u003C/a\u003E\u00A0for the fix to address physics lag.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u002203C1CBC559D46A9A1DB1C6D4159A83E3E74BE29D\u0022 src=\u0022http://images.akamai.steamusercontent.com/ugc/429321328051376540/03C1CBC559D46A9A1DB1C6D4159A83E3E74BE29D/\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-08-09T13:28:15Z\u0022 title=\u002208/09/2017 01:28  PM\u0022 data-short=\u00226 yr\u0022\u003EAugust 9, 2017\u003C/time\u003E by mrsolarsail\u003C/strong\u003E\n\u003Cbr\u003EUpdated to work with KSP 1.3\n\u003C/span\u003E\n"},{"CreatedByName":"Pkmniako","CreatedById":138569,"CreatedDateTime":"2015-09-08T10:52:36Z","Content":"\n\u003Cp\u003ESolar Sails!?\u003C/p\u003E\u003Cp\u003EAnd thrust while time-warp!?\u003C/p\u003E\u003Cp\u003EInsta-Download\u003C/p\u003E\n"},{"CreatedByName":"FreeThinker","CreatedById":117389,"CreatedDateTime":"2015-09-08T10:59:42Z","Content":"\n\u003Cp\u003E\nGood to see you created a seperate Mod for this, I will integrate additional fixes into the Persistent thrust engines code\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-12-19T11:27:43Z\u0022 title=\u002212/19/2016 11:27  AM\u0022 data-short=\u00227 yr\u0022\u003EDecember 19, 2016\u003C/time\u003E by FreeThinker\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"RoverDude","CreatedById":105198,"CreatedDateTime":"2015-09-08T11:31:43Z","Content":"\n\u003Cp\u003EVery nice! Have rep!\u003C/p\u003E\n"},{"CreatedByName":"zeropositivo","CreatedById":133563,"CreatedDateTime":"2015-09-08T14:45:54Z","Content":"\n\u003Cp\u003Ethis... this is simply awesome\u003C/p\u003E\n"},{"CreatedByName":"Nhawks17","CreatedById":32999,"CreatedDateTime":"2015-09-08T15:21:43Z","Content":"\n\u003Cp\u003EThis is exciting, I look forward to seeing this develop! Congrats!\u003C/p\u003E\n"},{"CreatedByName":"mrsolarsail","CreatedById":121532,"CreatedDateTime":"2015-09-10T00:37:06Z","Content":"\n\u003Cp\u003EThanks all. Make sure to check out \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/119579-WIP-1-0-4-SolarSailNavigator-v1-0-4-alpha\u0022 rel=\u0022external nofollow\u0022\u003ESolarSailNavigator\u003C/a\u003E to see where your ion engines and sails are going.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022FreeThinker\u0022 data-cite=\u0022FreeThinker\u0022\u003E\u003Cdiv\u003EGood to see you created a sperate Mod for this, I will integrate additional fixes into the Persistant thrust engines code\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks for all the feedback. See the v1.0.2 branch for the latest changes: \u003Ca href=\u0022https://github.com/bld/PersistentThrust/tree/v1.0.2\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/bld/PersistentThrust/tree/v1.0.2\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EI\u0027m making OnFixedUpdate more modular with methods to calculate \u0026amp; apply deltaV and resource consumption.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-10T00:45:04Z\u0022 title=\u002209/10/2015 12:45  AM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 10, 2015\u003C/time\u003E by mrsolarsail\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"mrsolarsail","CreatedById":121532,"CreatedDateTime":"2015-09-12T23:50:45Z","Content":"\n\u003Cp\u003EI have a new version, v1.0.2-alpha, available on Github. I\u0027m waiting for it to be added to CKAN.\u003C/p\u003E\n"},{"CreatedByName":"MatterBeam","CreatedById":133334,"CreatedDateTime":"2015-09-13T00:06:36Z","Content":"\n\u003Cp\u003EWill this work with any engine, or just the solar sail and stock ion engine?\u003C/p\u003E\n"},{"CreatedByName":"mrsolarsail","CreatedById":121532,"CreatedDateTime":"2015-09-13T01:43:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Krakenfour\u0022 data-cite=\u0022Krakenfour\u0022\u003E\u003Cdiv\u003EWill this work with any engine, or just the solar sail and stock ion engine?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve included a ModuleManager patch to the ion engine with the plugin, but it should work with any engine.\u003C/p\u003E\n"},{"CreatedByName":"thetechgeek4","CreatedById":49083,"CreatedDateTime":"2015-09-13T23:21:56Z","Content":"\n\u003Cp\u003Edoes this work in realism overhaul? even if it doesn\u0027t this is awesome!\u003C/p\u003E\n"},{"CreatedByName":"DuoDex","CreatedById":107061,"CreatedDateTime":"2015-09-14T11:12:47Z","Content":"\n\u003Cp\u003ESuch modding. Very science. Wow.\u003C/p\u003E\n"},{"CreatedByName":"mrsolarsail","CreatedById":121532,"CreatedDateTime":"2015-09-14T21:24:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022thetechgeek4\u0022 data-cite=\u0022thetechgeek4\u0022\u003E\u003Cdiv\u003Edoes this work in realism overhaul? even if it doesn\u0027t this is awesome!\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThank you. I haven\u0027t tried RO, though my ModuleManager patch to the ion engine reduces the thrust to 0.25 N (while keeping the ElectricCharge usage the same), which is how much thrust a state-of-the-art NASA ion engine produces. That low thrust level is effectively useless with KSP\u0027s stock maneuver planning tool, which assumes short duration high thrust burns. So, that\u0027s why I wrote SolarSailNavigator.\u003C/p\u003E\n"},{"CreatedByName":"mrsolarsail","CreatedById":121532,"CreatedDateTime":"2015-09-17T05:35:06Z","Content":"\n\u003Cp\u003EI posted a new version, v1.0.3, with a very minor change: the \u0022averageDensity\u0022 field is now public, for use by SolarSailNavigator\u0027s mass prediction calculations.\u003C/p\u003E\n"},{"CreatedByName":"R0d1n","CreatedById":95649,"CreatedDateTime":"2015-09-18T03:02:57Z","Content":"\n\u003Cp\u003EThis looks really cool! Does it work with engines that use ModuleEnginesFX?\u003C/p\u003E\n"},{"CreatedByName":"mrsolarsail","CreatedById":121532,"CreatedDateTime":"2015-09-19T01:42:54Z","Content":"\n\u003Cp\u003EFrom a comment on the SolarSailNavigator thread:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Felger\u0022 data-cite=\u0022Felger\u0022\u003E\u003Cdiv\u003EExcellent, looking forward to it! \u003Cp\u003EIn the more near term, did some tinkering last night, and have a couple of questions. For some context, I\u0027m hoping to deploy this as one of our recommended mods for Realism Overhaul.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGreat! I hope I can make it work for you.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EOne thing that\u0027s going to present some difficulty is the custom engine module you use, especially since we\u0027re already juggling a few other types. I believe near future propulsion uses one, and real fuels uses one as well, though that\u0027s less important overall, since this use case trumps the real fuels use case IMO. However, I\u0027ll have to talk to NathanKell about adding support for Persistent Engines to RealFuels engine configs, so we can have multiple fuel configs for our ion engines.\u003C/p\u003E\u003Cp\u003ESo far, no feature requests! We\u0027re doing well! \u003C/p\u003E\u003Cp\u003EThe next thing on my list is compatibility with near future\u0027s custom engine modules. To replicate some realistic engine behaviors, he coded up some adjustable-on-the-fly engine modules, which is very cool, but breaks compatibility with persistent thrust. In the near term, we can just force those to use persistent engine, but long term I\u0027d love to either see that supported, or somehow change the engine modules around.\u003C/p\u003E\u003Cp\u003E \u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWould it help if PersistentEngine was added to an engine part as a separate module instead of inheriting and replacing the engine module?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EFinally, I\u0027m having a terrible time getting consistent power draw from my engines. Probably me doing something dumb, but in the VAB it claims a draw of 2.3 (modelling NSTAR) , in orbit it claims 3.9, and in time warp it was claiming something like 0.6. Is there an easy way to quantify power draw that you\u0027re aware of? \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, resource consumption isn\u0027t entirely working right now. Propellant mass is working. But, when I tried to fly a solar electric spacecraft, at high timewarp the batteries were depleted, even though the solar arrays should have generated more than enough power for the ion engines and recharging the batteries. So, at the moment, massless propellants (0 density like ElectricCharge) are not being consumed.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EFinally finally, if you like I can polish off your CKAN install files, I built most of the install files for realism overhaul and it\u0027s associated mods, so I can say I have a little experience. \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks, I could use some help there. PersistentThrust needs ModuleManager, and SolarSailNavigator will need PersistentThrust (once it\u0027s added to CKAN). I was also considering pulling the files from my Github releases.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThanks for the awesome mod, this is going to be great, can\u0027t wait to fly some proper low thrust trajectories!\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ELet me know how it goes!\u003C/p\u003E\n"},{"CreatedByName":"Felger","CreatedById":76828,"CreatedDateTime":"2015-09-19T04:28:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mrsolarsail\u0022 data-cite=\u0022mrsolarsail\u0022\u003E\u003Cdiv\u003E...\u003Cp\u003EWould it help if PersistentEngine was added to an engine part as a separate module instead of inheriting and replacing the engine module?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027d certainly be the cleanest option. I\u0027d be happy to help figure out how to do that, I\u0027ve done a bit of c# myself, so I can pitch in on that if you want. Chatted with NathanKell, as long as PersistentEngines is derived from the ModuleEngines class, it should be compatible with RealFuels, however if it\u0027s custom and doesn\u0027t fork the class at all, then it\u0027d be a bit more complicated. In the end, for compatibility, it\u0027s probably easiest to just use the stats from whatever ModuleEngines* is used on the part.\u003C/p\u003E\u003Cp\u003EThat does leave the question of how to change particle spawning during time warp. I believe ModuleEnginesFX nixes that, but it\u0027d be nifty to have engine effects still active while the engines are active. Guess it\u0027s a \u0022cross-that-bridge-when-we-come-to-it\u0022 sort of thing, although I think the old OrbitManipulator mod that used something similar, but utilized ModuleEngineFX (\u003Ca href=\u0022https://github.com/HoneyFox/NBody/blob/master/WarpableEngine.cs\u0022 rel=\u0022external nofollow\u0022\u003Esource here\u003C/a\u003E) and could spawn particles at a reasonable rate during time warp.\u003C/p\u003E\u003Cp\u003ETook a look through Nertea\u0027s source (\u003Ca href=\u0022https://github.com/ChrisAdderley/NearFuturePropulsion/blob/master/Source/VariableIspEngine.cs\u0022 rel=\u0022external nofollow\u0022\u003Esource here\u003C/a\u003E) for Near Future Propulsion, and it appears he modifies ModuleEngineFX on the fly for both of his modules. That lends further credence to the idea using the stock engine modules, and who knows, maybe it\u0027ll fix the electricity consumption bug! \u003C/p\u003E\u003Cp\u003EI tested the NearFuture Engines in game, and you can access and adjust the parameters during time warp, so it\u0027ll likely be necessary to re-access the engine parameters frequently, though probably not on every time-step to minimize the performance hit.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mrsolarsail\u0022 data-cite=\u0022mrsolarsail\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EWell, resource consumption isn\u0027t entirely working right now. Propellant mass is working. But, when I tried to fly a solar electric spacecraft, at high timewarp the batteries were depleted, even though the solar arrays should have generated more than enough power for the ion engines and recharging the batteries. So, at the moment, massless propellants (0 density like ElectricCharge) are not being consumed.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s exactly what I just spent half an hour diagnosing, haha, I\u0027m a genius! I suspect making use of the stock engine modules, or grabbing whatever ModuleEngines* is currently on the part would be sufficient.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mrsolarsail\u0022 data-cite=\u0022mrsolarsail\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThanks, I could use some help there. PersistentThrust needs ModuleManager, and SolarSailNavigator will need PersistentThrust (once it\u0027s added to CKAN). I was also considering pulling the files from my Github releases.\u003C/p\u003E\u003Cp\u003ELet me know how it goes!\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWill do! Would you prefer to have CKAN reference KerbalStuff or Github? Both are equally easy.\u003C/p\u003E\n"},{"CreatedByName":"Felger","CreatedById":76828,"CreatedDateTime":"2015-09-19T16:57:04Z","Content":"\n\u003Cp\u003EPut together the updates to the NETKANs to redirect CKAN to look at Github, unfortunately CKAN doesn\u0027t recognize pre-releases, so it won\u0027t be able to download from Git unless you mark the latest two as regular releases.\u003C/p\u003E\u003Cp\u003EAs a workaround I marked the netkans as \u0022development\u0022 rather than \u0022stable\u0022, so users are still informed about the potential for bugs and instability.\u003C/p\u003E\n"},{"CreatedByName":"mrsolarsail","CreatedById":121532,"CreatedDateTime":"2015-09-19T18:17:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Felger\u0022 data-cite=\u0022Felger\u0022\u003E\u003Cdiv\u003EPut together the updates to the NETKANs to redirect CKAN to look at Github, unfortunately CKAN doesn\u0027t recognize pre-releases, so it won\u0027t be able to download from Git unless you mark the latest two as regular releases.\u003Cp\u003EAs a workaround I marked the netkans as \u0022development\u0022 rather than \u0022stable\u0022, so users are still informed about the potential for bugs and instability.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOk. I unchecked \u0022pre-release\u0022 in the Github releases.\u003C/p\u003E\n"},{"CreatedByName":"mrsolarsail","CreatedById":121532,"CreatedDateTime":"2015-09-19T21:06:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Felger\u0022 data-cite=\u0022Felger\u0022\u003E\u003Cdiv\u003EIt\u0027d certainly be the cleanest option. I\u0027d be happy to help figure out how to do that, I\u0027ve done a bit of c# myself, so I can pitch in on that if you want. Chatted with NathanKell, as long as PersistentEngines is derived from the ModuleEngines class, it should be compatible with RealFuels, however if it\u0027s custom and doesn\u0027t fork the class at all, then it\u0027d be a bit more complicated. In the end, for compatibility, it\u0027s probably easiest to just use the stats from whatever ModuleEngines* is used on the part.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI can take a stab at it. I\u0027m learning C# with this project. PersistentEngine currently inherits ModuleEnginesFX, so it is a derivative. But, I can change it to an additional part module that uses whatever ModuleEngines* is on the part. Would that let the other custom engine modules do their thing?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThat does leave the question of how to change particle spawning during time warp. I believe ModuleEnginesFX nixes that, but it\u0027d be nifty to have engine effects still active while the engines are active. Guess it\u0027s a \u0022cross-that-bridge-when-we-come-to-it\u0022 sort of thing, although I think the old OrbitManipulator mod that used something similar, but utilized ModuleEngineFX (\u003Ca href=\u0022https://github.com/HoneyFox/NBody/blob/master/WarpableEngine.cs\u0022 rel=\u0022external nofollow\u0022\u003Esource here\u003C/a\u003E) and could spawn particles at a reasonable rate during time warp.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, that would be pretty cool. At least the ion engines glow blue during timewarp. I haven\u0027t tried it with a rocket yet. We could work on it.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ETook a look through Nertea\u0027s source (\u003Ca href=\u0022https://github.com/ChrisAdderley/NearFuturePropulsion/blob/master/Source/VariableIspEngine.cs\u0022 rel=\u0022external nofollow\u0022\u003Esource here\u003C/a\u003E) for Near Future Propulsion, and it appears he modifies ModuleEngineFX on the fly for both of his modules. That lends further credence to the idea using the stock engine modules, and who knows, maybe it\u0027ll fix the electricity consumption bug! \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ll test if making the change fixes things. I\u0027m using \u0022Part.RequestResource\u0022 on the propellants during timewarp. It works for the massive ones. \u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI tested the NearFuture Engines in game, and you can access and adjust the parameters during time warp, so it\u0027ll likely be necessary to re-access the engine parameters frequently, though probably not on every time-step to minimize the performance hit.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m currently saving throttle, thrust, and Isp during realtime and using the saved values during timewarp. SolarSailNavigator updates those saved thrust/throttle/isp values itself from the maneuver commands, so I think it\u0027s pretty efficient. When it switches back to realtime mode, the throttle is updated from the saved one.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EThat\u0027s exactly what I just spent half an hour diagnosing, haha, I\u0027m a genius! I suspect making use of the stock engine modules, or grabbing whatever ModuleEngines* is currently on the part would be sufficient.\u003C/p\u003E\u003Cp\u003EWill do! Would you prefer to have CKAN reference KerbalStuff or Github? Both are equally easy.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"Felger","CreatedById":76828,"CreatedDateTime":"2015-09-20T01:09:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mrsolarsail\u0022 data-cite=\u0022mrsolarsail\u0022\u003E\u003Cdiv\u003EI can take a stab at it. I\u0027m learning C# with this project. PersistentEngine currently inherits ModuleEnginesFX, so it is a derivative. But, I can change it to an additional part module that uses whatever ModuleEngines* is on the part. Would that let the other custom engine modules do their thing?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, did some testing with everything as-is, and while (as expected) if I patch the near future engines to use PersistentEngine they function normally (drawing double expected power aside), changing the ISP/Thrust mode doesn\u0027t function. Could be one of two things, either PersistentEngine doesn\u0027t reload the changes, or NFP is looking explicitly for ModuleEnginesFX and attempting to modify it.\u003C/p\u003E\u003Cp\u003EIn the long run though, swapping to using the existing ModuleEnginesFX or ModuleEngines nodes and just reading their state should be a much more compatibility-friendly method. Looking through how HoneyFox implemented that, it doesn\u0027t look too hard to replicate. The pertinent code is here:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/HoneyFox/NBody/blob/master/WarpableEngine.cs#L186-L273\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/HoneyFox/NBody/blob/master/WarpableEngine.cs#L186-L273\u003C/a\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mrsolarsail\u0022 data-cite=\u0022mrsolarsail\u0022\u003E\u003Cdiv\u003EYeah, that would be pretty cool. At least the ion engines glow blue during timewarp. I haven\u0027t tried it with a rocket yet. We could work on it.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAgreed, and it might even be pretty easy. Looking through HoneyFox\u0027s code from the now-defunct Orbit Manipulator, it only took a few lines to handle the FX generation during time warp (I believe the stock game terminates FX generation during time warp by default).\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mrsolarsail\u0022 data-cite=\u0022mrsolarsail\u0022\u003E\u003Cdiv\u003EI\u0027ll test if making the change fixes things. I\u0027m using \u0022Part.RequestResource\u0022 on the propellants during timewarp. It works for the massive ones. \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI suspect the stock modules do the same thing. I wonder if your request for the time step is higher than the total charge on the part, that\u0027s the source of the behavior. Even if the EC production is high enough. Maybe if you check to see if the EC available is less than what you need, then split it into smaller requests that all are less than the total available?\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mrsolarsail\u0022 data-cite=\u0022mrsolarsail\u0022\u003E\u003Cdiv\u003EI\u0027m currently saving throttle, thrust, and Isp during realtime and using the saved values during timewarp. SolarSailNavigator updates those saved thrust/throttle/isp values itself from the maneuver commands, so I think it\u0027s pretty efficient. When it switches back to realtime mode, the throttle is updated from the saved one.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, the NearFutureProp modules adjust thrust and ISP on the fly, so whatever the plugin does, it needs to catch those changes, or we could ask Nertea to lock that down during time warp. In all likelihood, you\u0027re not going to want to change it in the middle of a burn, you\u0027ll really only want to use the high-thrust low-isp mode for insertions and whatnot.\u003C/p\u003E\u003Cp\u003EHowever, it looks like it updates the engine object when it does (and it identifies the engine object by its partmodule name, it does look for ModuleEnginesFX directly). So we catch engine updates by simply using the engine object in every frame to grab Isp and Thrust.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EOh, and I got the update to the Netkans done, PersistentThrust and SolarSailNavigator are on CKAN, and install from Github. Will need to update KSP version compatibility when KSP updates, or set it up to draw from a .VERSION file in the download.\u003C/p\u003E\n"},{"CreatedByName":"mrsolarsail","CreatedById":121532,"CreatedDateTime":"2015-09-21T17:14:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Felger\u0022 data-cite=\u0022Felger\u0022\u003E\u003Cdiv\u003EYeah, did some testing with everything as-is, and while (as expected) if I patch the near future engines to use PersistentEngine they function normally (drawing double expected power aside), changing the ISP/Thrust mode doesn\u0027t function. Could be one of two things, either PersistentEngine doesn\u0027t reload the changes, or NFP is looking explicitly for ModuleEnginesFX and attempting to modify it.\u003Cp\u003EIn the long run though, swapping to using the existing ModuleEnginesFX or ModuleEngines nodes and just reading their state should be a much more compatibility-friendly method. Looking through how HoneyFox implemented that, it doesn\u0027t look too hard to replicate. The pertinent code is here:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/HoneyFox/NBody/blob/master/WarpableEngine.cs#L186-L273\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/HoneyFox/NBody/blob/master/WarpableEngine.cs#L186-L273\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOk, I modified PersistentThrust to add PersistentEngine to a part with ModuleEngines. I put it in a pre-release to try out. This breaks a couple things in SolarSailNavigator, but I\u0027ll make those updates in the next release of both. See: \u003Ca href=\u0022https://github.com/bld/PersistentThrust/releases/tag/v1.0.4dev0\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/bld/PersistentThrust/releases/tag/v1.0.4dev0\u003C/a\u003E \u003C/p\u003E\u003Cp\u003EThe code for this branch is at: \u003Ca href=\u0022https://github.com/bld/PersistentThrust/tree/v1.0.4\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/bld/PersistentThrust/tree/v1.0.4\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"TotallyNotSatan","CreatedById":151092,"CreatedDateTime":"2015-10-04T04:04:19Z","Content":"\n\u003Cp\u003EFor some reason, this mod isn\u0027t working at all for me(I\u0027m trying to use ion engines.) Any idea why?\u003C/p\u003E\u003Cp\u003EUsing KSP v1.0.4 and PersistentThrust v1.0.3. Using MechJeb, Nuclear Pulse Mod(Orion), HyperEdit(warning: made for v1.0.2), and RLA Stockalike. Ship I\u0027m trying to use it on has stock, MechJeb, and RLA Stockalike parts.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-10-04T04:31:27Z\u0022 title=\u002210/04/2015 04:31  AM\u0022 data-short=\u00228 yr\u0022\u003EOctober 4, 2015\u003C/time\u003E by TotallyNotSatan\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Felger","CreatedById":76828,"CreatedDateTime":"2015-10-04T04:53:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mrsolarsail\u0022 data-cite=\u0022mrsolarsail\u0022\u003E\u003Cdiv\u003EOk, I modified PersistentThrust to add PersistentEngine to a part with ModuleEngines. I put it in a pre-release to try out. This breaks a couple things in SolarSailNavigator, but I\u0027ll make those updates in the next release of both. See: \u003Ca href=\u0022https://github.com/bld/PersistentThrust/releases/tag/v1.0.4dev0\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/bld/PersistentThrust/releases/tag/v1.0.4dev0\u003C/a\u003E \u003Cp\u003EThe code for this branch is at: \u003Ca href=\u0022https://github.com/bld/PersistentThrust/tree/v1.0.4\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/bld/PersistentThrust/tree/v1.0.4\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHuh, I didn\u0027t get an email notification for this post. Weird.\u003C/p\u003E\u003Cp\u003EAnyway, did some testing, it seems to work great, catches the mode switches and everything! The only hangup is that throttling up seems to kill timewarp for ModuleEnginesFX-using engines. You might have to use a separate throttle from the game throttle, since I\u0027ll bet that\u0027s a feature of the stock engine modules.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TotallyNotSatan\u0022 data-cite=\u0022TotallyNotSatan\u0022\u003E\u003Cdiv\u003EFor some reason, this mod isn\u0027t working at all for me(I\u0027m trying to use ion engines.) Any idea why?\u003Cp\u003EUsing KSP v1.0.4 and PersistentThrust v1.0.3. Using MechJeb, Nuclear Pulse Mod(Orion), HyperEdit(warning: made for v1.0.2), and RLA Stockalike. Ship I\u0027m trying to use it on has stock, MechJeb, and RLA Stockalike parts.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI suspect you\u0027re not using the stock ion engine? I believe mrsolarsail only has a patch for the stock ion, everything else is unsupported at this point.\u003C/p\u003E\n"},{"CreatedByName":"TotallyNotSatan","CreatedById":151092,"CreatedDateTime":"2015-10-04T04:57:23Z","Content":"\n\u003Cp\u003EI\u0027m using the \u0022Dawn\u0022 ion engine. The stock one. I do, however, have non-stock parts on my ship(and non-stock ion engines available in the VAB); could that have anything to do with it?\u003C/p\u003E\n"}]}