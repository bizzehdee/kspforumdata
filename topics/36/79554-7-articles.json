{"TopicId":79554,"ForumId":36,"TopicTitle":"[0.90] TestFlight [0.4.6.1][04FEB15] -Configurable, extensible, parts research \u0026amp; reliability system","CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-07-26T00:33:29Z","PageNum":7,"Articles":[{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-19T20:24:10Z","Content":"\n\u003Cp\u003EThere is an annoying bug in KSP where sometimes the flight data isn\u0027t saved. In addition due to polling rates and what not its possible to lost a few bits and bytes of flight data after a flight. Which is why I wanted to know if the actual amount of data is reported the same in the VAB and Flight even when the reliability is being shown different.\u003C/p\u003E\u003Cp\u003EIn other words is it a matter of the \u0022known data\u0022 changing between end of flight and the VAB, or is it a matter of the reliability calculations being bugged.\u003C/p\u003E\u003Cp\u003EOn my test branch where i\u0027m incorporating the new MTBF system, so far stuff seems to be updating properly in my tests.\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-20T04:14:02Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003EExperimental Release\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/jwvanderbeck/TestFlight/releases/tag/v0.4.0e4\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jwvanderbeck/TestFlight/releases/tag/v0.4.0e4\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EThis is an experimental release of a development branch. This version is released to allow people to test upcoming changes and should be considered unstable and buggy. Do not use an experimental release in any save you care about.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EHighlights\u003C/span\u003E\u003C/p\u003E\u003Cp\u003EInitial implementation of new Mean Time Between Failure (MTBF) system. \u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EDue to major underlying data changes you must start a new saved game for this release, and do not use any previously saved craft files\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003ESome things to understand about the new MTBF system.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003EMTBF does \u003Cstrong\u003Enot\u003C/strong\u003E mean time until failure. A MTBF of 60 seconds does not mean your part will fail in 60 seconds. It could fail well before 60s or well after 60s. But on average it will fail sometime around 60s. Maybe.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EProbability is a ...... Just because something is highly unlikely does not mean it is impossible.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EAs a part\u0027s operating time approaches the MTBF its change to fail increases. Things are currently tuned so that at Operating Time = MTBF, the part has a 50% chance to fail.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EImportant testing in this update is \u0022How does it feel?\u0022. I know this is subjective and everyone will have a different opinion, but please let me know how it feels to you. Both on early flights, and later flights once your parts have gained reliability. I have some knobs I can tune.\u003C/p\u003E\u003Cp\u003EAlso please note that I haven\u0027t done up any real configs yet, so right now every part has the same starting MTBF and the Flight Data -\u0026gt; Failure Rate conversion.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EChange Log\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E Initial implementation of new MTBF system\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E MSD now shows MTBF\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E MSD now shows Failure Rate\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Make font in MSD smaller, and adjusted window to accommodate new data\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Updated settings pane in MSD to remove no longer used settings, and rename/tweak ones that are left.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-23T16:53:40Z\u0022 title=\u002201/23/2015 04:53  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 23, 2015\u003C/time\u003E by Agathorn\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-21T20:47:19Z","Content":"\n\u003Cp\u003EI\u0027m wrapping up on initial implementation of a public interface that can be used by other mods to integrate with TestFlight. The next experimental release will have that initial implementation.\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-22T23:22:09Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003EExperimental Release\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/jwvanderbeck/TestFlight/releases/tag/v0.4.0e5\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jwvanderbeck/TestFlight/releases/tag/v0.4.0e5\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EThis is an experimental release of a development branch. This version is released to allow people to test upcoming changes and should be considered unstable and buggy. Do not use an experimental release in any save you care about.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EChange Log\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E New Reflection Interface for other mods to integrate with TestFlight. This is still a WIP and feedback is more than welcome.\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Fix issue #11 - Settings Dropdown List hard to read\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Fix issues #14 - Data rate multiplier being incorrectly applied and giving zillions of data units (or none!)\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E New API methods to allow repairs to take time to complete\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-23T16:54:43Z\u0022 title=\u002201/23/2015 04:54  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 23, 2015\u003C/time\u003E by Agathorn\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-23T16:51:39Z","Content":"\n\u003Cp\u003EHas anyone had a chance to try out the new versions? I\u0027d like to get some feedback on how they are working so I can move towards rolling the changes back into the master branch. Thanks!\u003C/p\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2015-01-23T23:48:32Z","Content":"\n\u003Cp\u003ESorry, I haven\u0027t had a chance to play lately. In fact, I\u0027d barely had a chance to use 0.4.0e4. Hopefully I\u0027ll get some time tonight or tomorrow to test this out.\u003C/p\u003E\n"},{"CreatedByName":"seronis","CreatedById":135449,"CreatedDateTime":"2015-01-24T03:17:40Z","Content":"\n\u003Cp\u003EFirst time seeing this mod. Not installing it just yet but its one I really want to start using eventually. Right now im polishing up my general craft design skills since Im a newb who just finally learned how dV works and the diff between Ap and Pe.\u003C/p\u003E\n"},{"CreatedByName":"razark","CreatedById":32993,"CreatedDateTime":"2015-01-24T03:36:58Z","Content":"\n\u003Cp\u003EBad news. It looks like any testing is going to face further delay. The wife just surprised me with a brand new computer to replace the 2007 beast I\u0027ve been using.\u003C/p\u003E\u003Cp\u003EI\u0027m going to have to spend time transferring my life from one machine to the other.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022seronis\u0022 data-cite=\u0022seronis\u0022\u003E\u003Cdiv\u003ENot installing it just yet but its one I really want to start using eventually.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECome on... install it! From the last few pages, it looks like I\u0027m the only one using it, and the more testers, the better.\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-24T04:24:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022seronis\u0022 data-cite=\u0022seronis\u0022\u003E\u003Cdiv\u003EFirst time seeing this mod. Not installing it just yet but its one I really want to start using eventually. Right now im polishing up my general craft design skills since Im a newb who just finally learned how dV works and the diff between Ap and Pe.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFair enough. No sense making things even harder while you are still learning.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022razark\u0022 data-cite=\u0022razark\u0022\u003E\u003Cdiv\u003EBad news. It looks like any testing is going to face further delay. The wife just surprised me with a brand new computer to replace the 2007 beast I\u0027ve been using.\u003Cp\u003EI\u0027m going to have to spend time transferring my life from one machine to the other.\u003C/p\u003E\u003Cp\u003ECome on... install it! From the last few pages, it looks like I\u0027m the only one using it, and the more testers, the better.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHaha that sounds like a good thing for you not a bad one \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-26T05:43:53Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003EExperimental Release\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/jwvanderbeck/TestFlight/releases/tag/v0.4.0e6\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jwvanderbeck/TestFlight/releases/tag/v0.4.0e6\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EThis is an experimental release of a development branch. This version is released to allow people to test upcoming changes and should be considered unstable and buggy. Do not use an experimental release in any save you care about.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EChange Log\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E Expanded Reflection Interface and API\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E MSD can now show failure rate in addtion to MTBF\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E failure rate in MSD now properly shows the \u0027worst\u0027 momentary failure rate\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E DataRecorder modules can now control when a part is considered \u0022operating\u0022\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E Mission time is now calculated from activation of first stage, \u003Cstrong\u003Enot\u003C/strong\u003E from MET which KSP does not start until you leave the pad. This means two main things. \u003Cbr\u003E\u003Cul\u003E\u003Cli\u003E Engine test stands are a thing\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E The practice of igniting your first stage \u003Cstrong\u003Ebefore\u003C/strong\u003E releasing the launch clamps is a good one, to ensure you engine(s) are ignited and running properly.\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*] Added new Reliability module that increase the failure rate of an engine for the first 5 seconds after ignition. This is also a sample of the power of the new system to do things like this! Currently enabled on liquid engines.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-26T16:43:01Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022font-size:14px;\u0022\u003EExperimental Release\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/jwvanderbeck/TestFlight/releases/tag/v0.4.0e7\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jwvanderbeck/TestFlight/releases/tag/v0.4.0e7\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EThis is an experimental release of a development branch. This version is released to allow people to test upcoming changes and should be considered unstable and buggy. Do not use an experimental release in any save you care about.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EChange Log\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E Added new API methods to control flow of Flight Data\u003Cbr\u003E\u003Cul\u003E\u003Cli\u003E SetDataRateLimit()\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E SetDataCap()\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis will *most* likely be the final experimental for v0.4. I might try to get the contracts stuff in there as well, but I think i\u0027m pushing this branch already, and its about time to roll it back into the master.\u003C/p\u003E\n"},{"CreatedByName":"NonWonderDog","CreatedById":10479,"CreatedDateTime":"2015-01-26T23:20:43Z","Content":"\n\u003Cp\u003EI haven\u0027t had a chance to play the game really at all, but your failure check seems pretty harsh. It\u0027s got an exponentially increasing *chance* (not rate) of failure, and after the \u0022MTBF\u0022 time parts have a 50% chance of failing \u003Cem\u003Eevery five seconds.\u003C/em\u003E That\u0027s probably fun for testing the mod, but seems like it would be impossibly aggravating if you were to play with this mod on all the time.\u003C/p\u003E\u003Cp\u003EFor a \u0022correct\u0022 MTBF implementation this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EsurvivalChance = Mathf.Pow(Mathf.Exp(1), currentFailureRate * operatingTime * -0.693f);\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eshould probably be:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EsurvivalChance = Mathf.Exp(-currentFailureRate * (operatingTime-lastcheck));\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eor equivalently:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eprotected double lastReliability = 1;\u003Cbr\u003Eprotected double currentFailureRate = 1/MTBF;\u003Cbr\u003E\u003Cbr\u003Epublic double reliability(operatingTime) {\u003Cbr\u003E    // assuming MTBF and operatingTime are in the same units\u003Cbr\u003E    return Mathf.Exp(-currentFailureRate * operatingTime);\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E...\u003Cbr\u003E\u003Cbr\u003E    r = reliability(operatingTime);\u003Cbr\u003E    survivalChance = r / lastReliability ;\u003Cbr\u003E    lastReliability = r;\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThat would give a perfectly constant chance of failure over time, no matter how often you check (with max reliability in the last case set by the resolution of \u0022Random.value\u0022, unless you can use \u0022Random.NextDouble()\u0022?). If you wanted a different failure distribution you could just extend the class and change the reliability function.\u003C/p\u003E\u003Cp\u003EIf I went that route I\u0027d probably also make it ignore all failures past the first when resuming from time acceleration, as a difficulty option. Just so things don\u0027t get out of hand. \u003C/p\u003E\u003Cp\u003E(I don\u0027t have any experience with C# or Unity; is there some reason you\u0027re using \u0022Mathf.Pow(Mathf.Exp(1),...)\u0022 instead of \u0022Mathf.Exp(...)\u0022?)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-01-26T23:44:34Z\u0022 title=\u002201/26/2015 11:44  PM\u0022 data-short=\u00229 yr\u0022\u003EJanuary 26, 2015\u003C/time\u003E by NonWonderDog\u003C/strong\u003E\n\u003Cbr\u003Efixed a silly mistake in the third snippet\n\u003C/span\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-27T00:23:42Z","Content":"\n\u003Cp\u003EWell I didn\u0027t implement it \u0022correct\u0022 because I made alterations for gameplay. I don\u0027t really want a constant chance of failure, I do want the chance of failure to increase the closer you get to MTBF.\u003C/p\u003E\u003Cp\u003EAm I misunderstanding you?\u003C/p\u003E\n"},{"CreatedByName":"tater","CreatedById":119411,"CreatedDateTime":"2015-01-27T00:35:14Z","Content":"\n\u003Cp\u003EThis looks pretty darn cool. I\u0027m gonna grab this and mess around.\u003C/p\u003E\u003Cp\u003EWhat parts are affected? Looks like tanks and engines, correct? \u003C/p\u003E\u003Cp\u003EI\u0027d like to see RCS lock up, or lock ON in one vernier? (like Gemini 8) Chutes\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6 gear. Or lose/mitigate SAS.\u003C/p\u003E\u003Cp\u003EIt might be neat if any of the otherwise dumb \u0022run test\u0022 contracts could supply extra units of data, then they\u0027d not be entirely pointless grinds (some would clearly remain bizarre, lol).\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-27T00:40:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tater\u0022 data-cite=\u0022tater\u0022\u003E\u003Cdiv\u003EThis looks pretty darn cool. I\u0027m gonna grab this and mess around.\u003Cp\u003EWhat parts are affected? Looks like tanks and engines, correct? \u003C/p\u003E\u003Cp\u003EI\u0027d like to see RCS lock up, or lock ON in one vernier? (like Gemini 8) Chutes\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6 gear. Or lose/mitigate SAS.\u003C/p\u003E\u003Cp\u003EIt might be neat if any of the otherwise dumb \u0022run test\u0022 contracts could supply extra units of data, then they\u0027d not be entirely pointless grinds (some would clearly remain bizarre, lol).\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ERight now the configs for parts are more testing than anything else. Attaches to engines, and tanks. That includes RCS.\u003C/p\u003E\u003Cp\u003EAs for contracts I have on my wish list to integrate into contracts.\u003C/p\u003E\n"},{"CreatedByName":"tater","CreatedById":119411,"CreatedDateTime":"2015-01-27T00:54:33Z","Content":"\n\u003Cp\u003EVery cool. I\u0027ll install and maybe play tonight.\u003C/p\u003E\n"},{"CreatedByName":"tater","CreatedById":119411,"CreatedDateTime":"2015-01-27T06:55:22Z","Content":"\n\u003Cp\u003EPlayed a little (version 3?). Failure happens rather a lot.\u003C/p\u003E\u003Cp\u003EI did maybe 6 flights in a new career, and I had multiple failures per flight. Leaks, lower thrust, mostly.\u003C/p\u003E\u003Cp\u003EDo part classes start off as very unreliable, then get very reliable after time? The individual parts that are flying a long time then get less reliable again as they approach the MTBF?\u003C/p\u003E\u003Cp\u003EI was thinking that for me, what I\u0027d like to see is this (and it might be impossible, I\u0027m just saying what I\u0027d like):\u003C/p\u003E\u003Cp\u003EA class of part would have some % chance of a design failure. Once that failure happens, then you reduce the chances of that failure ever happening in future parts of the same type. The overall chance of a new (different) failure with that part would then be set very low. If a 2d failure occurs, that gets a design change. All this is separate from MTBF events near the end of life of a given part. This is for classes of parts.\u003C/p\u003E\u003Cp\u003EFailures should be rare, in other words, and your space program should be able to learn from them, and correct them.\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-28T04:08:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tater\u0022 data-cite=\u0022tater\u0022\u003E\u003Cdiv\u003EPlayed a little (version 3?). Failure happens rather a lot.\u003Cp\u003EI did maybe 6 flights in a new career, and I had multiple failures per flight. Leaks, lower thrust, mostly.\u003C/p\u003E\u003Cp\u003EDo part classes start off as very unreliable, then get very reliable after time? The individual parts that are flying a long time then get less reliable again as they approach the MTBF?\u003C/p\u003E\u003Cp\u003EI was thinking that for me, what I\u0027d like to see is this (and it might be impossible, I\u0027m just saying what I\u0027d like):\u003C/p\u003E\u003Cp\u003EA class of part would have some % chance of a design failure. Once that failure happens, then you reduce the chances of that failure ever happening in future parts of the same type. The overall chance of a new (different) failure with that part would then be set very low. If a 2d failure occurs, that gets a design change. All this is separate from MTBF events near the end of life of a given part. This is for classes of parts.\u003C/p\u003E\u003Cp\u003EFailures should be rare, in other words, and your space program should be able to learn from them, and correct them.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHi Tater,\u003C/p\u003E\u003Cp\u003EThey definitely get more reliable the more you fly, but also bear in mind its all being tuned so nothing is final yet \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"tater","CreatedById":119411,"CreatedDateTime":"2015-01-28T04:21:27Z","Content":"\n\u003Cp\u003EYeah, I get it.\u003C/p\u003E\u003Cp\u003EI want failures, but I want them to be not terribly frequent, and then future parts are even less likely to fail assuming you diagnose the problem (perhaps a job for an engineer? Dunno if that is accessible to mods, but that might be interesting).\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2015-01-28T05:46:14Z","Content":"\n\u003Cp\u003ESaid it in IRC, I\u0027ll say it here. Cool beans, man. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-28T17:19:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tater\u0022 data-cite=\u0022tater\u0022\u003E\u003Cdiv\u003EYeah, I get it.\u003Cp\u003EI want failures, but I want them to be not terribly frequent, and then future parts are even less likely to fail assuming you diagnose the problem (perhaps a job for an engineer? Dunno if that is accessible to mods, but that might be interesting).\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ELike I said that is pretty much what it models. Not on the case of a specific failure like you mention, its more abstract than that, but it builds up and gets better and better over time. Having engineers on board does make them get more reliable faster yes \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"tater","CreatedById":119411,"CreatedDateTime":"2015-01-28T18:03:47Z","Content":"\n\u003Cp\u003EAwesome. Will keep messing around \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2015-01-28T18:15:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022tater\u0022 data-cite=\u0022tater\u0022\u003E\u003Cdiv\u003EAwesome. Will keep messing around \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ERight now i\u0027m kind of bogged down in migrating everything over to CI and automated builds, but once i\u0027ve finished that I will be making some more tweaks to the failure rates.\u003C/p\u003E\n"},{"CreatedByName":"Headhunter09","CreatedById":67393,"CreatedDateTime":"2015-01-28T18:42:51Z","Content":"\n\u003Cp\u003EDon\u0027t know any of these have been mentioned before, but here some possible failure modes for the future:\u003C/p\u003E\u003Cp\u003E- control surfaces get stuck\u003C/p\u003E\u003Cp\u003E- batteries lose their ability to recharge/discharge\u003C/p\u003E\u003Cp\u003E- solar panels don\u0027t open\u003C/p\u003E\u003Cp\u003E- solar panels don\u0027t close\u003C/p\u003E\u003Cp\u003E- solar panel doesn\u0027t charge\u003C/p\u003E\u003Cp\u003E- wheel failures: steering lock, motor stuck on, draws way more power than it should \u003C/p\u003E\u003Cp\u003E- antennas draw more power/get stuck closed or open\u003C/p\u003E\u003Cp\u003EBasically any toggleable animated state should be able to get stuck. Manually setting it with an EVA should be possible though (or maybe only sometimes).\u003C/p\u003E\n"},{"CreatedByName":"tater","CreatedById":119411,"CreatedDateTime":"2015-01-28T19:35:37Z","Content":"\n\u003Cp\u003ENice list. I also like the fact that many of these might be repaired by engineers, giving them something useful to do.\u003C/p\u003E\n"}]}