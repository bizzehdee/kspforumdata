{"TopicId":80629,"ForumId":36,"TopicTitle":"First mod - attachment node problems and questions","CreatedByName":"mech_engr","CreatedById":117187,"CreatedDateTime":"2014-08-03T21:35:07Z","PageNum":1,"Articles":[{"CreatedByName":"mech_engr","CreatedById":117187,"CreatedDateTime":"2014-08-03T21:35:07Z","Content":"\n\u003Cp\u003EYesterday I started making my first mod. I come from a visual effects / engineering background so modeling and texturing was a breeze - especially since I had to minimize polys and texture map resolution (opposite from what I\u0027m used to). I made two parts, a stackable hexagon core piece, and a radially attached arm piece that can be attacked to each of the six sides of the core.\u003C/p\u003E\u003Cp\u003EBriefly, I\u0027m working on a system of parts that, because of their geometry, should only be attached at very precise locations. Naturally, I decided to make attachment nodes at each of the six sides of the core, and a corresponding node for the arm pieces. Here\u0027s a diagram of what I want:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://s29.postimg.org/reo3nyujb/Node_help_file.png\u0022 alt=\u0022Node_help_file.png\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ECurrently, it works\u003C/strong\u003E... but it\u0027s not ideal: the user has to manually rotate each piece around Y before it can be attached (this will be more and more cumbersome as I develop larger, higher-sided core pieces). And that\u0027s because of the last three numbers in the node attachment definition being \u00220,1,0\u0022 for up, correct? So I tried changing those vectors so that they point outward from the core piece, but that doesn\u0027t work at all because then it renders the entire core piece un-attachable to anything (even the stack top and bottom nodes). In fact, no matter what I change the attachment vector numbers to, the core piece becomes unusable. ALL of the nodes have to point up or down for anything to work.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ESo, the big question is, how can I make radially-attached parts automatically snap to their parent, \u0022core\u0022, part at desired angles?\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EAlso, what is the difference between a \u0022\u003C/strong\u003E\u003Cspan style=\u0022color:#ff0000;\u0022\u003E\u003Cstrong\u003Enode_attach\u003C/strong\u003E\u003C/span\u003E\u003Cstrong\u003E\u0022 and a \u0022\u003C/strong\u003E\u003Cspan style=\u0022color:#ff0000;\u0022\u003E\u003Cstrong\u003Enode_stack_connect\u003C/strong\u003E\u003C/span\u003E\u003Cstrong\u003E\u0022 definition? I haven\u0027t found ANY materials online that answer this, and both seem to work fine.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EAny guidance will be appreciated! Thank you!\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-08-03T21:42:43Z","Content":"\n\u003Cp\u003E\u0022node_attach\u0022 is surface attach, the object you drag will slide along the surface of another part and attach where you click.\u003C/p\u003E\u003Cp\u003E\u0022node_stack_\u0022 are the green balls you see in Editor mode. parts will snap together when their two green spheres get close together. they can be named anything from what I can tell. as long as you feed the correct name to the modules that requests a node for reference. e.g. the docking port module.\u003C/p\u003E\n"},{"CreatedByName":"SpannerMonkey(smce)","CreatedById":50907,"CreatedDateTime":"2014-08-03T21:54:55Z","Content":"\n\u003Cp\u003Ehi looking at your part I\u0027d say the node_attach is what you need for the radial attached parts, the node attach does not show as a ball as does node stack.\u003C/p\u003E\u003Cp\u003ENode attach is mainly used for surface attached parts like the radial pats of your pic, by using node attach you can also make use of the symmetry tool in the vab/sph and the editor extension mod which allows up to 32 times symmetry I believe.\u003C/p\u003E\u003Cp\u003ETo use the node attach ideally you would set the part to be attached to have it\u0027s base at 0.0.0 not essential but easier to start, then specify the node in the cfg something like\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Enode_attach = 0.0, 0.0, 0.0, 0.0, 0.0, 1.0\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E which basically means surface attach at 0.0.0 and have a node that is z up( this usually takes some experimentation before perfection is achieved)\u003C/p\u003E\u003Cp\u003EWhich would work if your attachable part is at 0,0,0 and in the part you wish them to be attached to you would in the attach rules have something like\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E//Attachment rules (Stack, srfAttach, allowStack, allowSrfAttach, allowCollision)\u003Cbr\u003EattachRules = 1,0,1,1,0\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ewhich allows things to be surfaced attached to it\u003C/p\u003E\u003Cp\u003EUsing the attach nodes means you dont have to specify nodes on the core part\u003C/p\u003E\n"},{"CreatedByName":"Justin Kerbice","CreatedById":101695,"CreatedDateTime":"2014-08-04T07:05:01Z","Content":"\n\u003Cp\u003ETo answer your big question straight, put 6 nodes on the hexagon (you can name them stack_node1 to stack_node6), you set the vector to \u0022outside\u0022 according to each normal vector. \u003C/p\u003E\u003Cp\u003EYou can get the correct coordinates using 3dsmax script \u0022get vector tool\u0022 (see \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/2471-3ds-Max-Kerbal-Parts-Guide-Updated-1-2-2012\u0022 rel=\u0022external nofollow\u0022\u003Ethis\u003C/a\u003E for more info) and don\u0027t forget to add \u003Cstrong\u003EstackSymmetry\u003C/strong\u003E setting on the hexagon config (it will make possible to connect 6 arms at once in editor).\u003C/p\u003E\u003Cp\u003EThe script is not mandatory as the hexagon make things easier for you as angle can be calculated without too much trouble (each angle is 60\u00C3\u201A\u00C2\u00B0 so coordinates are, kind of cos(60) and sin(60) depending on each face I guess).\u003C/p\u003E\u003Cp\u003EOn arm part, just put a single stack node at the bottom (or the left/top/... depending its own orientation, matching the wider area). Another node on the opposite side (top) if you wish to stack other parts (tank, girder, ...).\u003C/p\u003E\u003Cp\u003Ehope this help.\u003C/p\u003E\n"}]}