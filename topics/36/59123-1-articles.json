{"TopicId":59123,"ForumId":36,"TopicTitle":"More help needed developing space station mod","CreatedByName":"CiberX15","CreatedById":68461,"CreatedDateTime":"2014-01-06T23:39:28Z","PageNum":1,"Articles":[{"CreatedByName":"CiberX15","CreatedById":68461,"CreatedDateTime":"2014-01-06T23:39:28Z","Content":"\n\u003Cp\u003EOk I am developing this mod here: \u003Ca href=\u0022http://kerbalspaceprogram.com/ciber-x-labs-5/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://kerbalspaceprogram.com/ciber-x-labs-5/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThe system works fine as long as there is only one Lab in use at any given time. But because an active lab changes the Experiment.BaseValue all other labs besides the first lab act very strangely. For example if I put Lab A into space and generate 57 research papers it will give me 57 data and 57 science when I hit the deploy experiment button. However, if I put a second lab, Lab B, on the launch pad, Lab B will read 57 data and only \u002B15 science, where it should not be reading anything at all since it has not done any research yet but is reading Lab A\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2s experiment definition.\u003C/p\u003E\u003Cp\u003ENow what I am trying now is only setting the science value of the experiment when the player clicks the deploy button and immediately setting it back once the player has Kept/transmitted/recycled the data. Setting it was easy, I just intercepted the deploy experiment command and set the experiment.basevalue before letting it run the original function. However, I don\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u201E\u00A2t know where to set it back to default. Is there a function that is always called after you close the experiment window (the one with the keep/transmit/recycle buttons on it)? After that window closes is when I need to reset the value. Or perhaps when the player changes focus, to another ship or goes back to the space port, that would actually work better.\u003C/p\u003E\u003Cp\u003EThanks In advance...\u003C/p\u003E\u003Cp\u003E...Again 8 P\u003C/p\u003E\u003Cp\u003ECode Below\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003Eusing System.Linq;\u003Cbr\u003Eusing System.Text;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E/// \u0026lt;summary\u0026gt;\u003Cbr\u003E/// ScienceTrickle\u003Cbr\u003E/// By: CiberX15\u003Cbr\u003E/// Special Thanks to Fractal_UK whose KSPInterstellar ScienceModule I reverse engineered \u003Cbr\u003E/// to figure out how to work the code\u003Cbr\u003E/// \u0026lt;/summary\u0026gt;\u003Cbr\u003E\u003Cbr\u003Epublic class ScienceTrickle : ModuleScienceExperiment\u003Cbr\u003E{\u003Cbr\u003E\t[KSPField(isPersistant = true, guiActive = false)]\u003Cbr\u003E\tprotected double ActiveTime;\u003Cbr\u003E\u003Cbr\u003E\t[KSPField(isPersistant = true, guiActive = true)]\u003Cbr\u003E\tprotected bool IsEnabled;\u003Cbr\u003E\u003Cbr\u003E\t[KSPField(isPersistant = true, guiActive = false)]\u003Cbr\u003E\tprotected double ResearchTime;\u003Cbr\u003E\u003Cbr\u003E\t[KSPField(isPersistant = true, guiActive = true)]\u003Cbr\u003E\tprotected string CurrentPaper;\u003Cbr\u003E\u003Cbr\u003E\tprotected float crew_capacity_ratio;\u003Cbr\u003E\u003Cbr\u003E\t[KSPField(isPersistant = true, guiActive = false)]\u003Cbr\u003E\tprotected double StoredScience;\u003Cbr\u003E\u003Cbr\u003E\t[KSPField(isPersistant = true, guiActive = true)]\u003Cbr\u003E\tprotected double RecordedData;\u003Cbr\u003E\u003Cbr\u003E    /// \u0026lt;summary\u0026gt;\u003Cbr\u003E    /// Called when the part is started by Unity.\u003Cbr\u003E    /// \u0026lt;/summary\u0026gt;\u003Cbr\u003E    public override void OnStart(StartState state)\u003Cbr\u003E    {\u003Cbr\u003E\t\tbase.OnStart(state);\u003Cbr\u003E\u003Cbr\u003E        // Check our crew\u003Cbr\u003E\t\tcrew_capacity_ratio = ((float)part.protoModuleCrew.Count) / ((float)part.CrewCapacity);\t\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E\t//Begin Research Button\u003Cbr\u003E\t[KSPEvent(guiActive = true, guiName = \u0022Begin Research\u0022, active = true)]\u003Cbr\u003E\tpublic void BeginResearch() \u003Cbr\u003E\t{\u003Cbr\u003E\t\tif (crew_capacity_ratio == 0) { return; }\u003Cbr\u003E\u003Cbr\u003E\t\tActiveTime = Planetarium.GetUniversalTime();\u003Cbr\u003E\t\tResearchTime = 0;\u003Cbr\u003E\t\tStoredScience = 0;\u003Cbr\u003E\t\tRecordedData = 0;\u003Cbr\u003E\t\tCurrentPaper = \u0022\u0022;\u003Cbr\u003E\t\tIsEnabled = true;\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\t//Stop Research Button\u003Cbr\u003E\t[KSPEvent(guiActive = true, guiName = \u0022Stop Research\u0022, active = true)]\u003Cbr\u003E\tpublic void StopActivity() \u003Cbr\u003E\t{\u003Cbr\u003E\t\tIsEnabled = false;     \u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\t//Clear Research Button\u003Cbr\u003E\t[KSPEvent(guiActive = true, guiName = \u0022Clear Research\u0022, active = true)]\u003Cbr\u003E\tpublic void ClearResearch() \u003Cbr\u003E\t{\u003Cbr\u003E\t\tIsEnabled = false;\u003Cbr\u003E\t\tResearchTime = 0;\u003Cbr\u003E\t\tStoredScience = 0;\u003Cbr\u003E\t\tRecordedData = 0;\u003Cbr\u003E\t\tCurrentPaper = \u0022\u0022;\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\tnew public void DeployExperiment()\u003Cbr\u003E\t{\u003Cbr\u003E\t\tprint(\u0022Begining Deployment Calculations ==================================================\u0022);\u003Cbr\u003E\t\texperiment.baseValue = (float)RecordedData;\u003Cbr\u003E\t\tbase.DeployExperiment();\u003Cbr\u003E\t}\u003Cbr\u003E\t/*\u003Cbr\u003E\tnew public void ReviewDataEvent()\u003Cbr\u003E\t{\u003Cbr\u003E\t\tbase.ReviewDataEvent();\u003Cbr\u003E\t\tprint(\u0022ORANGE JUICE==============================================================\u0022);\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\tnew public void ResetExperiment()\u003Cbr\u003E\t{\u003Cbr\u003E\t\tbase.ResetExperiment();\u003Cbr\u003E\t\texperiment.baseValue = 1;\u003Cbr\u003E\t\tClearResearch();\u003Cbr\u003E\t\tprint(\u0022Finished Experiment Reset =================================================\u0022);\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\tnew public void ResetExperimentExternal()\u003Cbr\u003E\t{\u003Cbr\u003E\t\tbase.ResetExperimentExternal();\u003Cbr\u003E\t\texperiment.baseValue = 1;\u003Cbr\u003E\t\tClearResearch();\u003Cbr\u003E\t\tprint(\u0022Finished Experiment Reset =================================================\u0022);\u003Cbr\u003E\t}*/\u003Cbr\u003E\u003Cbr\u003E\t//Stop Research Button\u003Cbr\u003E\t[KSPEvent(guiActive = true, guiName = \u0022Debug\u0022, active = true)]\u003Cbr\u003E\tpublic void DebugThing() \u003Cbr\u003E\t{\u003Cbr\u003E\t\tprint (\u0022ResearchTime \u0022 \u002B ResearchTime);\u003Cbr\u003E\t\tprint (\u0022CurrentPaper \u0022 \u002B CurrentPaper);\u003Cbr\u003E\t\tprint (\u0022StoredScience \u0022 \u002B StoredScience);\u003Cbr\u003E\t\tprint (\u0022RecordedData \u0022 \u002B RecordedData);\u003Cbr\u003E\t\tprint (\u0022Experemrnt BaseValue\u0022 \u002B base.experiment.baseValue);\u003Cbr\u003E\t\tprint (\u0022Experemrnt ScienceCap\u0022 \u002B base.experiment.scienceCap);\u003Cbr\u003E\t\tprint (\u0022Experemrnt dataScale\u0022 \u002B base.experiment.dataScale);\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\tpublic void CheckFindings()\u003Cbr\u003E\t{\u003Cbr\u003E\t\t//crew mod\u003Cbr\u003E\t\tfloat CrewMod = 0;\u003Cbr\u003E\u003Cbr\u003E\t\t//calculate crew contributions\u003Cbr\u003E\t\tforeach (ProtoCrewMember proto_crew_member in part.protoModuleCrew)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tCrewMod \u002B= 1 - proto_crew_member.stupidity;\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\t//add collected science\u003Cbr\u003E\t\tStoredScience \u002B= CrewMod * 4;\u003Cbr\u003E\u003Cbr\u003E\t\tRecordedData = Mathf.Round((float)StoredScience);\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\t//Always Update\u003Cbr\u003E\tpublic override void OnUpdate() \u003Cbr\u003E\t{\u003Cbr\u003E\t\t//if the modual is suposed to be making science!\u003Cbr\u003E\t\tif(IsEnabled)\u003Cbr\u003E\t\t{\u003Cbr\u003E\t\t\tfloat ResourceDraw = part.protoModuleCrew.Count;\u003Cbr\u003E\t\t\tif(ResourceDraw \u0026gt; 0 \u0026amp;\u0026amp; part.RequestResource(\u0022ElectricCharge\u0022, ResourceDraw * 0.25f) \u0026gt;= ResourceDraw * 0.25f)\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\tResearchTime = Planetarium.GetUniversalTime() - ActiveTime;\u003Cbr\u003E\t\t\t\tfloat Percent = (float)(ResearchTime / 86400) * 100;\u003Cbr\u003E\t\t\t\tCurrentPaper = 0.01 * Math.Round(Percent * 100) \u002B \u0022%\u0022;\u003Cbr\u003E\u003Cbr\u003E\t\t\t\tif(ResearchTime \u0026gt;= 86400)\u003Cbr\u003E\t\t\t\t{\u003Cbr\u003E\t\t\t\t\tint PapersCompleated = (int)(ResearchTime / 86400);\u003Cbr\u003E\t\t\t\t\tprint (\u0022Papers Compleated = \u0022 \u002B PapersCompleated);\u003Cbr\u003E\t\t\t\t\tfor(int i = 0; i \u0026lt; PapersCompleated;)\u003Cbr\u003E\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\tprint (i);\u003Cbr\u003E\t\t\t\t\t\tif(part.RequestResource(\u0022Snacks\u0022, ResourceDraw) \u0026gt;= ResourceDraw)\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t\tCheckFindings();\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t\telse\u003Cbr\u003E\t\t\t\t\t\t{\u003Cbr\u003E\t\t\t\t\t\t\t//shutdown if out of snacks\u003Cbr\u003E\t\t\t\t\t\t\tIsEnabled = false;\u003Cbr\u003E\t\t\t\t\t\t\tResearchTime = 0;\u003Cbr\u003E\t\t\t\t\t\t\tCurrentPaper = \u0022\u0022;\u003Cbr\u003E\t\t\t\t\t\t\tprint (\u0022Not enough snacks, shutting down\u0022);\u003Cbr\u003E\t\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\t\ti\u002B\u002B;\u003Cbr\u003E\t\t\t\t\t}\u003Cbr\u003E\t\t\t\t\tResearchTime = 0;\u003Cbr\u003E\t\t\t\t\tActiveTime = (float)Planetarium.GetUniversalTime();\u003Cbr\u003E\t\t\t\t}\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t\telse\u003Cbr\u003E\t\t\t{\u003Cbr\u003E\t\t\t\t//shutdown if out of power\u003Cbr\u003E\t\t\t\tIsEnabled = false;\u003Cbr\u003E\t\t\t\tprint (\u0022Not enough power, shutting down\u0022);\u003Cbr\u003E\t\t\t}\u003Cbr\u003E\t\t}\u003Cbr\u003E\u003Cbr\u003E\t\tbase.OnUpdate();\u003Cbr\u003E\t}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\t//In Game Update\u003Cbr\u003E\tpublic override void OnFixedUpdate()\u003Cbr\u003E\t{\u003Cbr\u003E\t\tbase.OnUpdate();\u003Cbr\u003E\t}\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"CiberX15","CreatedById":68461,"CreatedDateTime":"2014-01-07T03:30:21Z","Content":"\n\u003Cp\u003EWelp, I figured out that I could reset the Experiment.BaseValue on start. Since research papers count is separate from that players still would get the science because the BaseValue is set when the player hits the deploy button. However, this revealed another problem that I though was part of this one. When the experiment is run a second time it has a diminishing return. so even though the experiments can now be calculated independently, they will still yield unpredictable results when used a second time, or on other ships.\u003C/p\u003E\u003Cp\u003ESo, any idea how I could make the labs generate unique experiment ID\u0027s each time they run?\u003C/p\u003E\n"},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2014-01-19T03:24:48Z","Content":"\n\u003Cp\u003EI tried this yesterday. Works very well. I dunno why the thread dont have more replies. I see a lot of ppl using the components(see the kerbal reinforcement thread there is one craft there that has it) there is defidently interest in this mod and the idea in general. One tip for ciber. Rename your thread to [0.23]ciber x labs[plugin version][latest update] it will be much easier to find as its here most ppl look for mods. The models are a little silly but they are a work in progress so no issues there they look better than a lot of others. Keep up the good work\u003C/p\u003E\n"},{"CreatedByName":"landeTLS","CreatedById":97925,"CreatedDateTime":"2014-01-19T04:05:09Z","Content":"\n\u003Cp\u003EIn regards to the unique experiment id\u0027s youll probably want to seperate your experiments functionality from the stock system and just output science in the end. Dunno if there is any other way of doing it\u003C/p\u003E\n"},{"CreatedByName":"ss8913","CreatedById":94747,"CreatedDateTime":"2014-01-19T12:54:40Z","Content":"\n\u003Cp\u003ENot sure what I\u0027m doing wrong with this plugin; I launched a station into orbit with one of the science modules, an extra snack module, a cupola on the top (base part for C\u0026amp;C), a mechjeb module, a ton of solar panels.. etc. I right click the science module and click \u0027begin research\u0027 and nothing happens. The IsEnabled stays false, and.. none of the buttons do *anything*. Did I miss something obvious? All of the other mods/etc that I have work fine. Using 0.23 with FAR, MechJeb2, and KAS.\u003C/p\u003E\n"},{"CreatedByName":"TimMartland","CreatedById":68334,"CreatedDateTime":"2014-01-19T13:04:56Z","Content":"\n\u003Cp\u003EMaybe you should replace the \u0027snacks\u0027 resource with \u0027Research Materials\u0027. It would make the mod much more believable.\u003C/p\u003E\n"},{"CreatedByName":"PrivateFlip","CreatedById":68273,"CreatedDateTime":"2014-01-19T20:42:14Z","Content":"\n\u003Cp\u003EIt\u0027s interesting the whole operation somehow not being specific to a single instance of a part. \u003C/p\u003E\u003Cp\u003EHave you tried specifically designating the class as a part module:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Enamespace DavonSupplyMod\u003Cbr\u003E{\u003Cbr\u003E\tpublic class DavonRestrictedResourceSupplyModule : PartModule\u003Cbr\u003E\t{\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"}]}