{"TopicId":78154,"ForumId":36,"TopicTitle":"Contract Modding Information for Mod Authors","CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2014-07-18T09:00:31Z","PageNum":3,"Articles":[{"CreatedByName":"malkuth","CreatedById":57414,"CreatedDateTime":"2014-07-25T19:47:31Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DMagic\u0022 data-cite=\u0022DMagic\u0022\u003E\u003Cdiv\u003EIt looks like contractsInExistance just gives you the total of all types of contracts.\u003Cp\u003EUse ContractSystem.Instance.GetCurrentContracts\u0026lt;*YourContractType*\u0026gt;().Count() to find out the number of contracts of a given type. This presumably counts both active and offered contracts. \u003C/p\u003E\u003Cp\u003EGetCurrentActiveContracts probably returns the number of accepted contracts of a given type.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah I figured something else out, but will try this method also.\u003C/p\u003E\u003Cp\u003EEdit yeah that works much better less code. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-25T20:00:14Z\u0022 title=\u002207/25/2014 08:00  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 25, 2014\u003C/time\u003E by malkuth\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"malkuth","CreatedById":57414,"CreatedDateTime":"2014-07-25T20:01:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Raven.\u0022 data-cite=\u0022Raven.\u0022\u003E\u003Cdiv\u003EOk, if you do not mind, I have a stupid question. Is the function \u0022OnDock()\u0022 a function that we are overriding or is a function we are completely defining from scratch?\u003Cp\u003EThank you.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat is made from scratch and is part of DockingParameter Code. Thats the part that decides if you are docked or not and uses the OnPartCouble Event to trigger the check.\u003C/p\u003E\u003Cp\u003ETo write a contract you need the contract and the Parameter. Contract is the actual contract that you see in game. The Parameter is where your code is to see if the contract is complete or not. So in this case we want to check for a docking event. and that is what dockingParameter does.\u003C/p\u003E\n"},{"CreatedByName":"Arsonide","CreatedById":32604,"CreatedDateTime":"2014-07-26T05:31:08Z","Content":"\n\u003Cp\u003EOkay how the heck can a ContractParameter tell if it\u0027s in a contract that has been accepted? I have contract parameters now that create objects, and the contracts that are *sitting in the mission board, that haven\u0027t been accepted yet* are creating them too. The creation code is happening in the ContractParameter, so how can a parameter see if it\u0027s parent has been accepted or not?\u003C/p\u003E\u003Cp\u003EI\u0027ve tried various methods, it\u0027s not a trivial thing, as far as I can tell.\u003C/p\u003E\u003Cp\u003EEdit: this.Root.ContractState == Contract.State.Active ... guess it was that trivial. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-26T06:17:45Z\u0022 title=\u002207/26/2014 06:17  AM\u0022 data-short=\u00229 yr\u0022\u003EJuly 26, 2014\u003C/time\u003E by Arsonide\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Zyrac","CreatedById":50037,"CreatedDateTime":"2014-07-27T21:28:24Z","Content":"\n\u003Cp\u003EWhat references do you need for contract codes?\u003C/p\u003E\n"},{"CreatedByName":"Raven.","CreatedById":99340,"CreatedDateTime":"2014-07-28T16:33:02Z","Content":"\n\u003Cp\u003EAnother question that I have. How would you go about setting the prestige of the contract? Or is this something that is automatically done?\u003C/p\u003E\n"},{"CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2014-07-28T21:10:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Raven.\u0022 data-cite=\u0022Raven.\u0022\u003E\u003Cdiv\u003EAnother question that I have. How would you go about setting the prestige of the contract? Or is this something that is automatically done?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ethis.prestige = blahblah, but don\u0027t use the one with the capital letter\u003C/p\u003E\n"},{"CreatedByName":"malkuth","CreatedById":57414,"CreatedDateTime":"2014-07-28T23:33:41Z","Content":"\n\u003Cp\u003ESomething noticed wonder if anyone else noticed. While testing contracts I have noticed that if you have a contract and working in it. All older versions that are stored in missioncontrol completed contracts get wiped if you change the contracts or add to them.\u003C/p\u003E\n"},{"CreatedByName":"malkuth","CreatedById":57414,"CreatedDateTime":"2014-07-29T15:55:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DMagic\u0022 data-cite=\u0022DMagic\u0022\u003E\u003Cdiv\u003EIt looks like contractsInExistance just gives you the total of all types of contracts.\u003Cp\u003EUse ContractSystem.Instance.GetCurrentContracts\u0026lt;*YourContractType*\u0026gt;().Count() to find out the number of contracts of a given type. This presumably counts both active and offered contracts. \u003C/p\u003E\u003Cp\u003EGetCurrentActiveContracts probably returns the number of accepted contracts of a given type.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAfter working some more with these. And developing more contracts I have come to conclusion that GetCurrentContracts is actaully all contracts including Archived or finished ones. This means this contract can only ever be done once while the Archives contain the finished contract not what I want. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E Which brings us back to the original problem that too much contract spam and allows the player to spam contracts of same type with same vessel. Not a good situation.\u003C/p\u003E\u003Cp\u003EI tried this.Root.ContractState == Contract.State.Active which is the same as GetCurrentActiveContracts. \u003C/p\u003E\u003Cp\u003E But if your doing a simple check like in Generate()\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003Eif (this.Root.ContractState == Contract.State.Active)\u003Cbr\u003E            {\u003Cbr\u003E                Debug.Log(\u0022contract is generated right now terminating Deliver Satellite\u0022);\u003Cbr\u003E                return false;\u003Cbr\u003E            }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ethis won\u0027t stop contract spam because its looking only for active contracts (or accepted)\u003C/p\u003E\u003Cp\u003Ethere is a contract.State.Offered but does not seem to work.\u003C/p\u003E\u003Cp\u003EMust be a way to do it, because the default contracts don\u0027t get spammed.\u003C/p\u003E\u003Cp\u003EI will keep trying to figure it out, and might just have to accept that contract spam is going to happen and player is going to be able to cheat it.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EEdit Update :\u003C/strong\u003E Found a way around this. But I just realized something. Seems anything that is in Archives as finished doesn\u0027t show up again. Is there a cool down on contracts when they are finished? Or after finished are they never able to be done again.\u003C/p\u003E\u003Cp\u003EI never noticed this before lol.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-29T17:42:20Z\u0022 title=\u002207/29/2014 05:42  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 29, 2014\u003C/time\u003E by malkuth\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"malkuth","CreatedById":57414,"CreatedDateTime":"2014-07-29T18:38:45Z","Content":"\n\u003Cp\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003E\u003Cstrong\u003EEdit Mistake\u003C/strong\u003E\u003C/span\u003E I made a error in stating that public int totalContracts = ContractSystem.Instance.GetCurrentContracts\u0026lt;OrbitalScanContract\u0026gt;().Count(); counts Completed missions. this is not the case and I have updated the post with the correct info. The problem was the combined issues making it seem that was the case.\u003C/p\u003E\u003Cp\u003E-------------------------------------------------\u003C/p\u003E\u003Cp\u003EOk, the info above I pretty much figured out whats going on. Still have a little work on finding some things out but here goes.\u003C/p\u003E\u003Cp\u003EWhen you finish a mission KSp saves it to your persistent file. And then adds your completed mission as part of the Archives. All well and good.\u003C/p\u003E\u003Cp\u003EThe problem is that if you want a repeating mission KSP looks at the archives and the GetHashString(). If the GetHashString() match it will skip generation of that Contract again.\u003C/p\u003E\u003Cp\u003ESo this part of code is what is recorded into the persistent file.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eprotected override string GetHashString()\u003Cbr\u003E        {\u003Cbr\u003E            return \u0022Conduct Orbital Research around kerbin\u0022 ;\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Ethis is title of the contract which is fine. The problem is that once finished this title will be recorded and since the title never really changes you can never get this Contract again. You could go like this.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eprotected override string GetHashString()\u003Cbr\u003E        {\u003Cbr\u003E            return return \u0022Conduct Orbital Research around kerbin\u0022 \u002B \u0022 - Total Done: \u0022 \u002B TotalFinished;\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eagain this is more dynamic. If the bodytype is kerbin for first contract and is finished. Then Duna for 2nd time contract. The 2nd contract will show up. But the kerbin one will never show again (its already done in case its generated again as kerbin).\u003C/p\u003E\u003Cp\u003ESo in a nutshell if you want repeating missions on kerbin this is still a problem. Be back to this in a little bit.\u003C/p\u003E\u003Cp\u003E2nd problem that annoys me about contracts, is the amount of Same Contract spam you get that are offered. To many of same contracts is bad because the player can select all of them and do them at same time with same vessel (unless you code around it)\u003C/p\u003E\u003Cp\u003EUsing this to control how many contracts you have at 1 time works.. \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Epublic int totalContracts = ContractSystem.Instance.GetCurrentContracts\u0026lt;OrbitalScanContract\u0026gt;().Count();\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eif you get the count, then you can do a check against that count and cancel generation of contract if it fails. Like below.\u003C/p\u003E\u003Cp\u003ESnippet of code\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public int totalContracts;\u003Cbr\u003E        public int TotalFinished;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        protected override bool Generate()\u003Cbr\u003E        {\u003Cbr\u003E            totalContracts = ContractSystem.Instance.GetCurrentContracts\u0026lt;DeliverSatellite\u0026gt;().Count();\u003Cbr\u003E            TotalFinished = ContractSystem.Instance.GetCompletedContracts\u0026lt;DeliverSatellite\u0026gt;().Count();\u003Cbr\u003E\u003Cbr\u003E            Debug.Log(\u0022Satellite Delivery Totalcontracts \u0022 \u002B totalContracts \u002B \u0022 - \u0022 \u002B \u0022 Total Finsihed \u0022 \u002B TotalFinished);\u003Cbr\u003E            if (totalContracts \u0026gt;= 1)\u003Cbr\u003E            {\u003Cbr\u003E                Debug.Log(\u0022contract is generated right now terminating Normal Satellite Mission\u0022);\u003Cbr\u003E                Debug.Log(\u0022count is \u0022 \u002B totalContracts);\u003Cbr\u003E                return false;                 \u003Cbr\u003E            }\u003Cbr\u003E            //Place Rest of code.\u003Cbr\u003E         }           \u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI use totalcontracts for the actual check.\u003C/p\u003E\u003Cp\u003EAnd I use TotalFinished for this next part. You don\u0027t need totalFinished, unless you want an easy way to change titles.\u003C/p\u003E\u003Cp\u003ENow to the title. Again you can come up with your own little thing if you wish but simply adding this to a title will change it everytime if you want Repeated Missions.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eprotected override string GetHashString()\u003Cbr\u003E        {\u003Cbr\u003E            return \u0022Conduct Orbital Research around. \u0022 \u002B targetBody.theName \u002B \u0022: \u0022 \u002B TotalFinished ;\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eso HashString will look like this in case of targeBody is kerbin.\u003C/p\u003E\u003Cp\u003EConduct Orbital Research Around Kerbin: 1\u003C/p\u003E\u003Cp\u003EI\u0027m using the TotalFinsished float to change the title by how many of the same titles are completed.\u003C/p\u003E\u003Cp\u003EMore testing is needed but seems to be working now.\u003C/p\u003E\u003Cp\u003EHope this helps.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-14T13:25:07Z\u0022 title=\u002208/14/2014 01:25  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 14, 2014\u003C/time\u003E by malkuth\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-07-29T22:45:18Z","Content":"\n\u003Cp\u003EI was curious about the multipliers used for setting rewards and penalties for contracts so I just printed out results from each body with all values set at 1.\u003C/p\u003E\u003Cp\u003EIf you set a Celestial Body in the methods for this (setFunds, setScience, etc...) it multiplies whatever number you put in a by a certain value. I don\u0027t know if these numbers are stored somewhere like the science multipliers, that would be nice for people who want to reduce rewards.\u003C/p\u003E\u003Cp\u003EEdit: Actually, they are affected by contract prestige too.\u003C/p\u003E\u003Cp\u003EThose values are:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EPrestige: Trivial\t Significant\t  Exceptional\u003Cbr\u003ESun: \t    4\t\t\t5\t\t6\u003Cbr\u003EKerbin:     1\t\t\t1\t\t2\u003Cbr\u003EMun: \t    2\t\t\t2\t\t3\u003Cbr\u003EMinmus:     2\t\t\t3\t\t4\u003Cbr\u003EMoho: \t    7\t\t\t9\t\t10\u003Cbr\u003EEve: \t    5\t\t\t6\t\t8\u003Cbr\u003EDuna:       5\t\t\t6\t\t8\u003Cbr\u003EIke:\t    5\t\t\t6\t\t8\u003Cbr\u003EJool: \t    6\t\t\t8\t\t9\u003Cbr\u003ELaythe:     8\t\t\t10\t\t12\u003Cbr\u003EVall: \t    8\t\t\t10\t\t12\u003Cbr\u003EBop: \t    8\t\t\t10\t\t12\u003Cbr\u003ETylo:  \t    8\t\t\t10\t\t12\u003Cbr\u003EGilly: \t    6\t\t\t8\t\t9\u003Cbr\u003EPol: \t    8\t\t\t10\t\t12\u003Cbr\u003EDres: \t    6\t\t\t8\t\t9\u003Cbr\u003EEeloo: \t    10\t\t\t12\t\t15\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-29T23:00:36Z\u0022 title=\u002207/29/2014 11:00  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 29, 2014\u003C/time\u003E by DMagic\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"malkuth","CreatedById":57414,"CreatedDateTime":"2014-07-30T02:15:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DMagic\u0022 data-cite=\u0022DMagic\u0022\u003E\u003Cdiv\u003EI was curious about the multipliers used for setting rewards and penalties for contracts so I just printed out results from each body with all values set at 1.\u003Cp\u003EIf you set a Celestial Body in the methods for this (setFunds, setScience, etc...) it multiplies whatever number you put in a by a certain value. I don\u0027t know if these numbers are stored somewhere like the science multipliers, that would be nice for people who want to reduce rewards.\u003C/p\u003E\u003Cp\u003EEdit: Actually, they are affected by contract prestige too.\u003C/p\u003E\u003Cp\u003EThose values are:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EPrestige: Trivial\t Significant\t  Exceptional\u003Cbr\u003ESun: \t    4\t\t\t5\t\t6\u003Cbr\u003EKerbin:     1\t\t\t1\t\t2\u003Cbr\u003EMun: \t    2\t\t\t2\t\t3\u003Cbr\u003EMinmus:     2\t\t\t3\t\t4\u003Cbr\u003EMoho: \t    7\t\t\t9\t\t10\u003Cbr\u003EEve: \t    5\t\t\t6\t\t8\u003Cbr\u003EDuna:       5\t\t\t6\t\t8\u003Cbr\u003EIke:\t    5\t\t\t6\t\t8\u003Cbr\u003EJool: \t    6\t\t\t8\t\t9\u003Cbr\u003ELaythe:     8\t\t\t10\t\t12\u003Cbr\u003EVall: \t    8\t\t\t10\t\t12\u003Cbr\u003EBop: \t    8\t\t\t10\t\t12\u003Cbr\u003ETylo:  \t    8\t\t\t10\t\t12\u003Cbr\u003EGilly: \t    6\t\t\t8\t\t9\u003Cbr\u003EPol: \t    8\t\t\t10\t\t12\u003Cbr\u003EDres: \t    6\t\t\t8\t\t9\u003Cbr\u003EEeloo: \t    10\t\t\t12\t\t15\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDam, wish I would of know this before I made my own multipliers for the planets. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"FlowerChild","CreatedById":74289,"CreatedDateTime":"2014-07-30T18:24:31Z","Content":"\n\u003Cp\u003EJust wanted to share a useful tidbit I discovered for removing stock contract types that you may not want active.\u003C/p\u003E\u003Cp\u003EThe following seems to work well:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E            if ( ContractSystem.ContractTypes.Contains( typeof( Contracts.Templates.RescueKerbal ) ) )\u003Cbr\u003E            {\u003Cbr\u003E                ContractSystem.ContractTypes.Remove( typeof( Contracts.Templates.RescueKerbal ) );\u003Cbr\u003E            }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI\u0027m triggering it within the onContractsLoaded GameEvent, and so far so good. Previously, I was deleting the individual contract instances I didn\u0027t want with the onContractsListChanged GameEvent, but unfortunately discovered that this would result in the Mission Control GUI sometimes winding up with lingering remnants of those contracts in the GUI if the contracts were generated while that screen was active (like if the player declines one, causing others to be generated on the spot).\u003C/p\u003E\u003Cp\u003EThis on the other hand removes the mission types themselves, so they aren\u0027t generated in the first place.\u003C/p\u003E\u003Cp\u003EThe above may also come in very handy for modifying stock contracts as I\u0027m planning to use it to remove the stock ones entirely and replace them by child classes of my own that insert additional requirements such as not having tests for jet engines on the Mun and such \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003EEDIT: And as a follow up to what I was planning above, it seems to also work very well.\u003C/p\u003E\u003Cp\u003EFor example, I just removed all part testing contracts on the surface of Kerbin, first by deleting the stock PartTest contracts with the onContractsLoaded GameEvent as follows:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E            if ( ContractSystem.ContractTypes.Contains( typeof( Contracts.Templates.PartTest ) ) )\u003Cbr\u003E            {\u003Cbr\u003E                ContractSystem.ContractTypes.Remove( typeof( Contracts.Templates.PartTest ) );\u003Cbr\u003E            }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd then created my own child class of PartTest that inserts additional conditions into Generate():\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003Eusing System.Linq;\u003Cbr\u003Eusing System.Text;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003Eusing Contracts;\u003Cbr\u003Eusing Contracts.Parameters;\u003Cbr\u003E\u003Cbr\u003Enamespace BTSM\u003Cbr\u003E{\u003Cbr\u003E    class BTSMContractPartTest : Contracts.Templates.PartTest\u003Cbr\u003E    {\u003Cbr\u003E        protected override bool Generate()\u003Cbr\u003E        {\u003Cbr\u003E            if ( base.Generate() )\u003Cbr\u003E            {\u003Cbr\u003E                if ( BTSMUtils.IsSurfaceOrSplashedKerbinContract( this ) )\u003Cbr\u003E                {\u003Cbr\u003E                    Debug.Log( \u0022BTSMContractPartTest: Deleting Kerbin Surface Part Test Contract: \u0022 \u002B Title );\u003Cbr\u003E\u003Cbr\u003E                    return false;\u003Cbr\u003E                }\u003Cbr\u003E\u003Cbr\u003E                return true;\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E            return false;             \u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESeems to work perfectly. Because the contracts fail within Generate() instead of being removed afterwards, the Mission Control GUI updates properly, and doesn\u0027t display the discarded contracts.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-30T21:09:27Z\u0022 title=\u002207/30/2014 09:09  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 30, 2014\u003C/time\u003E by FlowerChild\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Memnomena","CreatedById":116525,"CreatedDateTime":"2014-07-30T21:15:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022malkuth\u0022 data-cite=\u0022malkuth\u0022\u003E\u003Cdiv\u003EDam, wish I would of know this before I made my own multipliers for the planets. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt would be SO nice if they would release documentation...\u003C/p\u003E\n"},{"CreatedByName":"FlowerChild","CreatedById":74289,"CreatedDateTime":"2014-07-31T06:05:57Z","Content":"\n\u003Cp\u003EAs a small addendum to what I posted above about removing stock contracts:\u003C/p\u003E\u003Cp\u003EThe one circumstance I\u0027ve found where it doesn\u0027t work out right is when the player starts a new career save immediately after starting up KSP. If they load an old career first, then quit to main, then start a new one, it works fine which is why this caught me.\u003C/p\u003E\u003Cp\u003EThe problem is that the onContractsLoaded game event is only called when existing contracts are loaded, not when the contract system itself is loaded (as in, when the ContractSystem.ContractTypes list is initialized).\u003C/p\u003E\u003Cp\u003EThe workaround I used for this is unfortunately not very clean, as in the above scenario the instances of the initial stock contracts are created immediately right after the ContractSystem is initialized with no game event taking place between the two. What I wound up doing is also deleting the stock contract types with onContractsListChanged IF a static flag I have set indicates that those contracts haven\u0027t already been deleted (as far as I can tell ContractTypes is only ever initialized once, no matter how many saved games are loaded or created), and if they haven\u0027t, following that by clearing the list of existing contracts on offer through a call to ContractSystem.Instance.ClearContractsCurrent(), which seems to force the system to reinitialize. In practice, the flag acts as a cludgy indication of whether this is the first time contracts have been generated within a save game (since OnContractsLoaded() will be called first if not).\u003C/p\u003E\u003Cp\u003ELike I said, not particularly clean, and doesn\u0027t make for a good code snippet as a result, but it does work. Such code will be in the next version of BTSM I\u0027m releasing shortly if further reference is desired.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-31T06:08:42Z\u0022 title=\u002207/31/2014 06:08  AM\u0022 data-short=\u00229 yr\u0022\u003EJuly 31, 2014\u003C/time\u003E by FlowerChild\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Mr Shifty","CreatedById":68146,"CreatedDateTime":"2014-07-31T15:14:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022FlowerChild\u0022 data-cite=\u0022FlowerChild\u0022\u003E\u003Cdiv\u003EJust wanted to share a useful tidbit I discovered for removing stock contract types that you may not want active.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks for this. It was a help for a couple of the simple things I\u0027m fiddling around with.\u003C/p\u003E\u003Cp\u003EIt\u0027s nice that the devs give us these hooks, but it would be nicer if they told us exactly when and in what situations they fire. (Is it before or after the dialog or widget is generated?) And it would have been nice to have an onContractGenerated event, or better yet, give us some degree of control over the ContractSystem static methods, particularly the one used to generate new contracts.\u003C/p\u003E\u003Cp\u003EIt\u0027s also typical of KSP code that they don\u0027t trigger modifier events upon initialization. For instance, OnFundsChanged is not called when the initial funding amount is set. onContractListChanged is not called when the initial contracts are added to the list. Argh.\u003C/p\u003E\n"},{"CreatedByName":"malkuth","CreatedById":57414,"CreatedDateTime":"2014-07-31T23:56:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Mr Shifty\u0022 data-cite=\u0022Mr Shifty\u0022\u003E\u003Cdiv\u003EThanks for this. It was a help for a couple of the simple things I\u0027m fiddling around with.\u003Cp\u003EIt\u0027s nice that the devs give us these hooks, but it would be nicer if they told us exactly when and in what situations they fire. (Is it before or after the dialog or widget is generated?) And it would have been nice to have an onContractGenerated event, or better yet, give us some degree of control over the ContractSystem static methods, particularly the one used to generate new contracts.\u003C/p\u003E\u003Cp\u003EIt\u0027s also typical of KSP code that they don\u0027t trigger modifier events upon initialization. For instance, OnFundsChanged is not called when the initial funding amount is set. onContractListChanged is not called when the initial contracts are added to the list. Argh.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI had a huge issue with this. Use to use OnSceneChange for MCE code to do certain things like Charge for certain items. This does not work for .24 with funds, because you can\u0027t change anything like funds during a scenechange. The scene has to be established for things to stick. Was very annoying.\u003C/p\u003E\n"},{"CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2014-08-01T04:43:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022FlowerChild\u0022 data-cite=\u0022FlowerChild\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003Eusing System.Linq;\u003Cbr\u003Eusing System.Text;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003Eusing Contracts;\u003Cbr\u003Eusing Contracts.Parameters;\u003Cbr\u003E\u003Cbr\u003Enamespace BTSM\u003Cbr\u003E{\u003Cbr\u003E    class BTSMContractPartTest : Contracts.Templates.PartTest\u003Cbr\u003E    {\u003Cbr\u003E        protected override bool Generate()\u003Cbr\u003E        {\u003Cbr\u003E            if ( base.Generate() )\u003Cbr\u003E            {\u003Cbr\u003E                if ( BTSMUtils.IsSurfaceOrSplashedKerbinContract( this ) )\u003Cbr\u003E                {\u003Cbr\u003E                    Debug.Log( \u0022BTSMContractPartTest: Deleting Kerbin Surface Part Test Contract: \u0022 \u002B Title );\u003Cbr\u003E\u003Cbr\u003E                    return false;\u003Cbr\u003E                }\u003Cbr\u003E\u003Cbr\u003E                return true;\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E            return false;             \u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESeems to work perfectly. Because the contracts fail within Generate() instead of being removed afterwards, the Mission Control GUI updates properly, and doesn\u0027t display the discarded contracts.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think Generate has to return true for it to even add it to the list at all, and, as far as I know, base.Generate() returns false, so try removing the\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eif(base.Generate())...\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EEdit:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022FlowerChild\u0022 data-cite=\u0022FlowerChild\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAs a small addendum to what I posted above about removing stock contracts...\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf you remove the stock contracts from that list, then what happens to existing worlds with those contracts? Why not just prevent them from generating, or add something to listen for new contracts and obliterate the ones you don\u0027t want. This way, the existing contracts can still be completed, but no more will generate.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-01T04:58:18Z\u0022 title=\u002208/01/2014 04:58  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 1, 2014\u003C/time\u003E by MrHappyFace\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"malkuth","CreatedById":57414,"CreatedDateTime":"2014-08-02T04:31:13Z","Content":"\n\u003Cp\u003EAnyone figure out yet how to make parameter goals in a contract follow a certain path. \u003C/p\u003E\u003Cp\u003ELike goal 2 can\u0027t be done without goal 1 being done. Or goal 2 can\u0027t be done by same vessel that did goal 1.\u003C/p\u003E\u003Cp\u003EMust be a way to stop all goals from firing at same time when same goal.\u003C/p\u003E\u003Cp\u003EI thought of having. Values saved outside the contract system. Like bool that turns true when goal 1 is done. The problem is of course that ship that did goal 1 will instantly fire off goal 2.\u003C/p\u003E\u003Cp\u003EGuess having bool and ship Id get attached would work, but it seems the contract system only sets up the initial values at gen. \u003C/p\u003E\u003Cp\u003EI don\u0027t know just trying to figure it out, without making too much of hack.\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-08-02T05:16:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022malkuth\u0022 data-cite=\u0022malkuth\u0022\u003E\u003Cdiv\u003EI thought of having. Values saved outside the contract system. Like bool that turns true when goal 1 is done. The problem is of course that ship that did goal 1 will instantly fire off goal 2.\u003Cp\u003EGuess having bool and ship Id get attached would work, but it seems the contract system only sets up the initial values at gen.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI guess you\u0027d have to pass variables up and down from contract parameter, to the contract, then back down to the next parameter. \u003C/p\u003E\u003Cp\u003EIf you want to block someone from using the same vessel for parameters one and two you could have a null vessel in the parent contract. Then set that vessel whenever the firsts parameter finishes. Then have the the second parameter check the parent contract\u0027s vessel property. If the contract\u0027s vessel is null then the second parameter can\u0027t complete, if the current vessel is the same as the contract\u0027s vessel then the second parameter can\u0027t complete, only when the vessel is not null, and different from the first could the contract complete.\u003C/p\u003E\u003Cp\u003EYou would just have to make sure to save and load all of this information so it doesn\u0027t get lost.\u003C/p\u003E\n"},{"CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2014-08-02T19:06:07Z","Content":"\n\u003Cp\u003EIn case you didn\u0027t know, you can use ResearchAndDevelopment.(Instance.?)AddExpirementalPart(), or something like that to add parts to the editor as experimental with the blue background.\u003C/p\u003E\n"},{"CreatedByName":"FlowerChild","CreatedById":74289,"CreatedDateTime":"2014-08-02T19:47:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MrHappyFace\u0022 data-cite=\u0022MrHappyFace\u0022\u003E\u003Cdiv\u003EI think Generate has to return true for it to even add it to the list at all, and, as far as I know, base.Generate() returns false, so try removing the\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat doesn\u0027t really make sense. I would then wind up testing additional conditions on non-existent experiments that failed during stock generation and thus may have variables in invalid states given I have no idea at what point in the initialization process the stock generation failed. I also *want* stock generation for the part test contracts there, as I certainly don\u0027t want to go through the trouble of coding the whole generation process for them myself when all I want is an additional condition on them. And yes, base.Generate() returns true there every time stock would normally generate a partTest contract.\u003C/p\u003E\u003Cp\u003EI should also note that the code I posted works great, and I\u0027ve released it to the public already within BTSM so others have been hammering on it as well. Thus, it doesn\u0027t need to be \u0022fixed\u0022 \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022MrHappyFace\u0022 data-cite=\u0022MrHappyFace\u0022\u003E\u003Cdiv\u003EIf you remove the stock contracts from that list, then what happens to existing worlds with those contracts? \u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs far as I know they should be fine. My code doesn\u0027t wipe out the class itself, just the instance of the class in the list that is used to generate the contracts, so any existing references to the class shouldn\u0027t run into trouble.\u003C/p\u003E\u003Cp\u003EIt\u0027s not something I\u0027ve tested mind you given the mod I\u0027m doing this for is the kinda thing you don\u0027t install on an existing save.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EWhy not just prevent them from generating\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf you know a way to \u0022just\u0022 do that, I\u0027m all ears \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EAnd really, that\u0027s exactly what my code above does.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003Eor add something to listen for new contracts and obliterate the ones you don\u0027t want.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf you read through my posts above, that was the method I was using previous to figuring out the above. Problem with that is if the contracts are generated while you\u0027re in the mission control screen, the UI elements are also generated for them, and even if you then remove the contract, the UI elements remain potentially causing all kinds of problems when the player interacts with them. So, I started digging for a way to get around that, and the above is what resulted.\u003C/p\u003E\u003Cp\u003EEDIT: I think I may know where the confusion is originating here. Note that my custom part test contract above isn\u0027t just a contract: it\u0027s a child class of the stock PartTest contract template. Thus when I\u0027m calling base.Generate(), I\u0027m not calling Contract.Generate() (which I suspect is what you thought), but rather PartTest.Generate().\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-02T20:55:35Z\u0022 title=\u002208/02/2014 08:55  PM\u0022 data-short=\u00229 yr\u0022\u003EAugust 2, 2014\u003C/time\u003E by FlowerChild\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2014-08-02T21:09:36Z","Content":"\n\u003Cp\u003EOK, that clears things up, I didn\u0027t realize it extended PartTest\u003C/p\u003E\n"},{"CreatedByName":"FlowerChild","CreatedById":74289,"CreatedDateTime":"2014-08-03T20:35:08Z","Content":"\n\u003Cp\u003EAnother small useful tidbit I just discovered:\u003C/p\u003E\u003Cp\u003EIf you do not wish to have a deadline or expiry date for a mission, you can omit SetExpiry() and SetDeadlineYears() in your generate function and instead put in the follow:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E                deadlineType = DeadlineType.None;\u003Cbr\u003E                expiryType = DeadlineType.None;\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis allows generation on one-time \u0022story\u0022 missions like the early-game stock ones for setting an altitude record, first getting into space, or what have you.\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-08-03T23:44:22Z","Content":"\n\u003Cp\u003EI finally got around to figuring out exactly what all of the \u0022value\u0022 fields are in the persistent file.\u003C/p\u003E\u003Cp\u003EEach contract\u0027s final entry (before anything custom added in the save method) is the \u0022value =\u0022 string, with a 12 comma delineated entries.\u003C/p\u003E\u003Cp\u003EFrom left to right these are: (I think the time fields are doubles and the rewards are floats)\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E1: Time in seconds until an offered contract expires\u003Cbr\u003E2: Time in seconds of a contract\u0027s duration after it is accepted\u003Cbr\u003E3: Funds: Advance payment\u003Cbr\u003E4: Funds: Completion payment\u003Cbr\u003E5: Funds: Penalty amount\u003Cbr\u003E6: Science: Completion reward\u003Cbr\u003E7: Reputation: Completion reward\u003Cbr\u003E8: Reputation: Penalty amount\u003Cbr\u003E9: Universal Time: Time in seconds when an offered contract will expire\u003Cbr\u003E10: Universal Time: Time in seconds when the contract was accepted\u003Cbr\u003E11: Universal Time: Time in seconds when an accepted contract will end\u003Cbr\u003E12: Universal Time: Time in seconds when a contract was failed/expired (I don\u0027t think this triggers for successful completion)\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd the contract parameters:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E1: Funds: Completion payment\u003Cbr\u003E2: Funds: Penalty amount\u003Cbr\u003E3: Science: Completion reward\u003Cbr\u003E4: Reputation: Completion reward\u003Cbr\u003E5: Reputation: Penalty amount\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe last few entries on the contract\u0027s value line are particularly useful if you are testing something and don\u0027t want to reset or start a new contract. You can just edit the time values and continue on with the same contract.\u003C/p\u003E\n"},{"CreatedByName":"FlowerChild","CreatedById":74289,"CreatedDateTime":"2014-08-05T19:32:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DMagic\u0022 data-cite=\u0022DMagic\u0022\u003E\u003Cdiv\u003EThose values are:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EPrestige: Trivial\t Significant\t  Exceptional\u003Cbr\u003ESun: \t    4\t\t\t5\t\t6\u003Cbr\u003EKerbin:     1\t\t\t1\t\t2\u003Cbr\u003EMun: \t    2\t\t\t2\t\t3\u003Cbr\u003EMinmus:     2\t\t\t3\t\t4\u003Cbr\u003EMoho: \t    7\t\t\t9\t\t10\u003Cbr\u003EEve: \t    5\t\t\t6\t\t8\u003Cbr\u003EDuna:       5\t\t\t6\t\t8\u003Cbr\u003EIke:\t    5\t\t\t6\t\t8\u003Cbr\u003EJool: \t    6\t\t\t8\t\t9\u003Cbr\u003ELaythe:     8\t\t\t10\t\t12\u003Cbr\u003EVall: \t    8\t\t\t10\t\t12\u003Cbr\u003EBop: \t    8\t\t\t10\t\t12\u003Cbr\u003ETylo:  \t    8\t\t\t10\t\t12\u003Cbr\u003EGilly: \t    6\t\t\t8\t\t9\u003Cbr\u003EPol: \t    8\t\t\t10\t\t12\u003Cbr\u003EDres: \t    6\t\t\t8\t\t9\u003Cbr\u003EEeloo: \t    10\t\t\t12\t\t15\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAfter playing around with this some, I think it may be a little more complicated than the above, in that the multipliers seem to not be nice round numbers.\u003C/p\u003E\u003Cp\u003ELike, I seem to be getting a 1.09 multiplier for Trivial Kerbin missions, and that\u0027s a multiplier to the prestige value, while it seems to act as a divisor to the funds values \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003EAlso, the numbers seem to be rounded off in the mission control screen, whereas when you actually complete the contract, you get different fractional values.\u003C/p\u003E\u003Cp\u003EI am also beginning to suspect that the player\u0027s current prestige level may act as an additional modifier on the payouts. Seems to be rather messy overall, which I began to discover when I wanted certain contracts to payout nice round values like say 25,000 funds and 40 prestige \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"}]}