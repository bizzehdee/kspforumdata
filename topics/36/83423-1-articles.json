{"TopicId":83423,"ForumId":36,"TopicTitle":"Making a part module, having trouble with persistance. Please help!","CreatedByName":"Whyren","CreatedById":119798,"CreatedDateTime":"2014-08-31T01:53:52Z","PageNum":1,"Articles":[{"CreatedByName":"Whyren","CreatedById":119798,"CreatedDateTime":"2014-08-31T01:53:52Z","Content":"\n\u003Cp\u003EHi all! I\u0027m working on making my first part module. The intent is to make a very simple module that will record the last time the vehicle was active and then, the next time the vehicle is loaded after you pilot other vessels, the amount of time you were away is calculated and a resource you should have been generating will be calculated and added to the ship. The code all seems to work, except that the \u0022lastUpdated\u0022 time is still 0 when the vessel is reloaded. It seems like it isn\u0027t being saved or isn\u0027t being loaded. Does anyone have any advice for me?\u003C/p\u003E\u003Cp\u003EPart Config\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E\u003Cbr\u003E    name = AFKResources\u003Cbr\u003E    Resource = Snacks\u003Cbr\u003E    RatePerSecond = 1\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EPart Module\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eusing System;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003Eusing System.Linq;\u003Cbr\u003Eusing System.Text;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    public class AFKResources : PartModule\u003Cbr\u003E    {\u003Cbr\u003E        [KSPField(guiActive = true)]\u003Cbr\u003E        public string Resource = \u0022\u0022;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        [KSPField(guiActive = true)]\u003Cbr\u003E        public float RatePerSecond = 0.0f;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        [KSPField(isPersistant = true, guiActive = true)]\u003Cbr\u003E        public double lastUpdate = 0;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public override void OnStart(PartModule.StartState x)\u003Cbr\u003E        {\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E                Debug.LogWarning(\u0022////////////////////////////////////////////////////////////////\u0022);\u003Cbr\u003E                Debug.Log(\u0022AFKResources OnStart.  lastUpdate: \u0022 \u002B lastUpdate.ToString() \u002B \u0022  Resource: \u0022 \u002B Resource \u002B \u0022  Start State: \u0022 \u002B x.ToString());\u003Cbr\u003E                Debug.LogWarning(\u0022////////////////////////////////////////////////////////////////\u0022);\u003Cbr\u003E                if (lastUpdate \u0026gt; 0)\u003Cbr\u003E                {\u003Cbr\u003E                    if (lastUpdate \u0026lt; Planetarium.GetUniversalTime())\u003Cbr\u003E                    {\u003Cbr\u003E                        double passedTime = Planetarium.GetUniversalTime() - lastUpdate;\u003Cbr\u003E                        double resourceAmount = passedTime * RatePerSecond;\u003Cbr\u003E                        double waste = part.RequestResource(Resource, resourceAmount * -1);\u003Cbr\u003E                        lastUpdate = 0;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E                        ScreenMessages.PostScreenMessage(part.vessel.name \u002B \u0022: \u0022 \u002B resourceAmount.ToString() \u002B \u0022 Snacks Harvested\u0022, 5f, ScreenMessageStyle.UPPER_CENTER);\u003Cbr\u003E                        Debug.LogWarning(\u0022////////////////////////////////////////////////////////////////\u0022);\u003Cbr\u003E                        Debug.Log(\u0022AFKResources WORKING.  Harvset: \u0022 \u002B resourceAmount.ToString() \u002B \u0022  Waste: \u0022 \u002B waste.ToString());\u003Cbr\u003E                        Debug.LogWarning(\u0022////////////////////////////////////////////////////////////////\u0022);\u003Cbr\u003E                    }\u003Cbr\u003E                }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        }\u003Cbr\u003E        public override void OnUpdate()\u003Cbr\u003E        {\u003Cbr\u003E            lastUpdate = Planetarium.GetUniversalTime();\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public override void OnSave(ConfigNode node)\u003Cbr\u003E        {\u003Cbr\u003E            node.SetValue(\u0022lastUpdate\u0022, lastUpdate.ToString());\u003Cbr\u003E            Debug.LogWarning(\u0022////////////////////////////////////////////////////////////////\u0022);\u003Cbr\u003E            Debug.Log(\u0022AFKResources SAVED.  lastUpdate: \u0022 \u002B lastUpdate.ToString());\u003Cbr\u003E            Debug.LogWarning(\u0022////////////////////////////////////////////////////////////////\u0022);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public override void OnLoad(ConfigNode node)\u003Cbr\u003E        {\u003Cbr\u003E            if(node.HasNode(\u0022lastUpdate\u0022)){lastUpdate = Double.Parse(node.GetValue(\u0022lastUpdate\u0022));}\u003Cbr\u003E            Debug.LogWarning(\u0022////////////////////////////////////////////////////////////////\u0022);\u003Cbr\u003E            Debug.Log(\u0022AFKResources LOADED.  lastUpdate: \u0022 \u002B lastUpdate.ToString());\u003Cbr\u003E            Debug.LogWarning(\u0022////////////////////////////////////////////////////////////////\u0022);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-08-31T02:16:51Z","Content":"\n\u003Cp\u003EI\u0027m not sure that you can use doubles in a KSPField, try it with a float.\u003C/p\u003E\n"},{"CreatedByName":"Whyren","CreatedById":119798,"CreatedDateTime":"2014-08-31T02:58:10Z","Content":"\n\u003Cp\u003EI\u0027ll give that a try, but double is one of the types that taraniselsu uses in his examples. \u003Ca href=\u0022https://github.com/taraniselsu/TacExamples/blob/master/05-KspFields/Source/KspFieldsModule.cs\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/taraniselsu/TacExamples/blob/master/05-KspFields/Source/KspFieldsModule.cs\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIn normal situations do I need to do the save and load or is that handled automatically by flagging the field as persistent?\u003C/p\u003E\n"},{"CreatedByName":"Whyren","CreatedById":119798,"CreatedDateTime":"2014-08-31T03:12:10Z","Content":"\n\u003Cp\u003EAnd, as it turns out, that does the trick! I really appreciate you taking the time to help. It has been very difficult to find solid resource on the API.\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-08-31T03:15:08Z","Content":"\n\u003Cp\u003EAny persistent KSPFields handle saving and loading on their own, and they run before OnSave and OnLoad.\u003C/p\u003E\n"},{"CreatedByName":"Whyren","CreatedById":119798,"CreatedDateTime":"2014-08-31T03:30:38Z","Content":"\n\u003Cp\u003EOkay. I thought they weren\u0027t behaving that way because I was using the double and it wasn\u0027t working. I\u0027ll have to go back and remove my OnSave and OnLoad sections. Thanks again.\u003C/p\u003E\n"}]}