{"TopicId":61834,"ForumId":36,"TopicTitle":"kOS Autopilot","CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-01T17:34:35Z","PageNum":2,"Articles":[{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-04T18:07:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Agathorn\u0022 data-cite=\u0022Agathorn\u0022\u003E\u003Cdiv\u003EInteresting. Well since it is happening when returning to a vessel it could be like that. The code errors outs, I think in RT itself, and then KSP just bails.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDoes kos throw any exceptions in the log? I can look at the confignode code. its pretty strange \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-02-04T19:25:37Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003E@erendrake\u003C/strong\u003E: IF you want to look at the offending code, you can see it in this commit: \u003Ca href=\u0022https://github.com/jwvanderbeck/KOS/commit/0bfd67e9ac286d58bb4a4213d0892616b626d729\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/jwvanderbeck/KOS/commit/0bfd67e9ac286d58bb4a4213d0892616b626d729\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EEssentially I just disabled the ability for RT to take over the autopilot and it fixes the problem. As soon as I let it take over, the problem comes back.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-04T19:34:04Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Agathorn\u0022 data-cite=\u0022Agathorn\u0022\u003E\u003Cdiv\u003EEssentially I just disabled the ability for RT to take over the autopilot and it fixes the problem.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAre you comfortable merging this into the main trunk then? if so lets get it into v0.11 \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E I still have so much documentation work to do that there doesnt seem to be much sense in waiting.\u003C/p\u003E\n"},{"CreatedByName":"masTerTorch","CreatedById":65681,"CreatedDateTime":"2014-02-04T20:29:38Z","Content":"\n\u003Cp\u003EI can confirm the bug is gone with the new test release. I ran the same script on the same vessel like yesterday and found out that with the new release \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Elock steering to nextnode.\u003C/pre\u003E\u003Cp\u003E is broken. After sending the command the vessel will spin in circles. Any ideas?\u003C/p\u003E\u003Cp\u003EEDIT: Ok, got the same problem with \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset direction to retrograde.\u003Cbr\u003Elock steering to direction.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESeems to be a steering problem. kOS is trying to face the vessel in the right direction, then overshoots, turns around and is overshooting again...\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-04T20:36:52Z\u0022 title=\u002202/04/2014 08:36  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 4, 2014\u003C/time\u003E by masTerTorch\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-02-04T20:33:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022masTerTorch\u0022 data-cite=\u0022masTerTorch\u0022\u003E\u003Cdiv\u003EI can confirm the bug is gone with the new test release. I ran the same script on the same vessel like yesterday and found out that with the new release \u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Elock steering to nextnode.\u003C/pre\u003E\u003Cp\u003E is broken. After sending the command the vessel will spin in circles. Any ideas?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECan you give me a .craft file and let me know what addons if any it uses?\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-02-04T23:14:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022masTerTorch\u0022 data-cite=\u0022masTerTorch\u0022\u003E\u003Cdiv\u003EI can confirm the bug is gone with the new test release. I ran the same script on the same vessel like yesterday and found out that with the new release \u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Elock steering to nextnode.\u003C/pre\u003E\u003Cp\u003E is broken. After sending the command the vessel will spin in circles. Any ideas?\u003C/p\u003E\u003Cp\u003EEDIT: Ok, got the same problem with \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eset direction to retrograde.\u003Cbr\u003Elock steering to direction.\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ESeems to be a steering problem. kOS is trying to face the vessel in the right direction, then overshoots, turns around and is overshooting again...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah I suspect this is because of some steering changes I made, because on my rockets I was seeing severe UNDERsteer. If you can give me a craft to test with that would be great. Otherwise, I will revert that change when I get home and see if I can find another way to deal with the understeer.\u003C/p\u003E\u003Cp\u003EDoes your craft use reaction wheels?\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-04T23:23:20Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Agathorn\u0022 data-cite=\u0022Agathorn\u0022\u003E\u003Cdiv\u003EYeah I suspect this is because of some steering changes I made, because on my rockets I was seeing severe UNDERsteer. If you can give me a craft to test with that would be great. Otherwise, I will revert that change when I get home and see if I can find another way to deal with the understeer.\u003Cp\u003EDoes your craft use reaction wheels?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eyou might want to pull my latest change, a lot of direction based math was not working because i forgot to include an interface on the Direction class.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/erendrake/KOS/issues/15\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/erendrake/KOS/issues/15\u003C/a\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-04T23:25:32Z\u0022 title=\u002202/04/2014 11:25  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 4, 2014\u003C/time\u003E by erendrake\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-02-05T00:30:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003Eyou might want to pull my latest change, a lot of direction based math was not working because i forgot to include an interface on the Direction class.\u003Cp\u003E\u003Ca href=\u0022https://github.com/erendrake/KOS/issues/15\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/erendrake/KOS/issues/15\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EInteresting. I\u0027ll merge up to your latest when I get home tonight, as well as revert my steering changes.\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-02-05T02:46:56Z","Content":"\n\u003Cp\u003EI still get horrible steering with that build, if I remove my steering changes.\u003C/p\u003E\u003Cp\u003EThe problem as I found it, is that since my rocket has NO reaction wheels, the kOS code that determines how much available toque I have returns a very small number. This number is in turn used by the steering system to determine maximum control deflection, so it barely moves the controls, which results in basically no steering at all for my rocket.\u003C/p\u003E\u003Cp\u003EI\u0027m betting that \u003Cstrong\u003E@masTerTorch\u003C/strong\u003E is using reaction wheels, which seems to be the case the code was designed for. So my steering changes were causing oversteer for them, yet the changes I had made caused perfect steering for my craft with no reaction wheels.\u003C/p\u003E\u003Cp\u003ENeed to figure out how to make it work for both ways.\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-02-05T03:05:33Z","Content":"\n\u003Cp\u003EActually it is worse than I thought. I put some debug code into the steering helper to see what values it was determining.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E[LOG 19:04:22.758] kOS: DEBUG Steering torque = [0, 0, 0]\u003Cbr\u003E[LOG 19:04:22.759] kOS: DEBUG Steering inertia = [Infinity, -Infinity, -Infinity]\u003Cbr\u003E[LOG 19:04:22.759] kOS: DEBUG Steering precision = 0.5\u003Cbr\u003E[LOG 19:04:22.760] kOS: DEBUG Steering driveLimit = 1\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EEDIT: Think I found my specific problem. The function that detects thrust vectoring isn\u0027t detecting my engines. So it returns 0, and I have no other control surfaces.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-05T03:48:59Z\u0022 title=\u002202/05/2014 03:48  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 5, 2014\u003C/time\u003E by Agathorn\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-02-05T16:09:37Z","Content":"\n\u003Cp\u003ESo i\u0027m still testing things, but this seems to be a better method of determing steering torque from engines:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        public static double GetThrustTorque(Part p, Vessel vessel)\u003Cbr\u003E        {\u003Cbr\u003E            var centerOfMass = vessel.CoM;\u003Cbr\u003E            if (p.State == PartStates.ACTIVE)\u003Cbr\u003E            {\u003Cbr\u003E                UnityEngine.Debug.Log(\u0022kOS: Checking thrust on ACTIVE part:\u0022 \u002B p.name \u002B \u0022 - \u0022 \u002B p.stagingIcon);\u003Cbr\u003E                ModuleEngines engine = p.Modules.OfType\u0026lt;ModuleEngines\u0026gt;().FirstOrDefault();\u003Cbr\u003E                if (engine != null \u0026amp;\u0026amp; engine.isOperational)\u003Cbr\u003E                {\u003Cbr\u003E                    float thrust = engine.CalculateThrust();\u003Cbr\u003E                    ModuleGimbal gimbal = p.Modules.OfType\u0026lt;ModuleGimbal\u0026gt;().FirstOrDefault();\u003Cbr\u003E                    if (gimbal != null \u0026amp;\u0026amp; !gimbal.gimbalLock)\u003Cbr\u003E                    {\u003Cbr\u003E                        UnityEngine.Debug.Log(\u0022kOS: DEBUG return gimbal data on engine with THRUST: \u0022 \u002B thrust \u002B \u0022 and GIMBAL: \u0022 \u002B gimbal.gimbalRange);\u003Cbr\u003E                        return Math.Sin(Math.Abs(gimbal.gimbalRange) * Math.PI / 180) *\u003Cbr\u003E                               thrust * (p.Rigidbody.worldCenterOfMass - centerOfMass).magnitude;\u003Cbr\u003E                    }\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E            return 0;\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E1) It actually detects the engines. That\u0027s a bonus.\u003C/p\u003E\u003Cp\u003E2) It uses the engine\u0027s \u003Cstrong\u003Ecurrent\u003C/strong\u003E thrust rather than its max thrust. Since steering and throttle are separate in kOS, calculating steering from max thrust seems pointless since only the current thrust matters/\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-05T17:29:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Agathorn\u0022 data-cite=\u0022Agathorn\u0022\u003E\u003Cdiv\u003ESo i\u0027m still testing things, but this seems to be a better method of determing steering torque from engines:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        public static double GetThrustTorque(Part p, Vessel vessel)\u003Cbr\u003E        {\u003Cbr\u003E            var centerOfMass = vessel.CoM;\u003Cbr\u003E            if (p.State == PartStates.ACTIVE)\u003Cbr\u003E            {\u003Cbr\u003E                UnityEngine.Debug.Log(\u0022kOS: Checking thrust on ACTIVE part:\u0022 \u002B p.name \u002B \u0022 - \u0022 \u002B p.stagingIcon);\u003Cbr\u003E                ModuleEngines engine = p.Modules.OfType\u0026lt;ModuleEngines\u0026gt;().FirstOrDefault();\u003Cbr\u003E                if (engine != null \u0026amp;\u0026amp; engine.isOperational)\u003Cbr\u003E                {\u003Cbr\u003E                    float thrust = engine.CalculateThrust();\u003Cbr\u003E                    ModuleGimbal gimbal = p.Modules.OfType\u0026lt;ModuleGimbal\u0026gt;().FirstOrDefault();\u003Cbr\u003E                    if (gimbal != null \u0026amp;\u0026amp; !gimbal.gimbalLock)\u003Cbr\u003E                    {\u003Cbr\u003E                        UnityEngine.Debug.Log(\u0022kOS: DEBUG return gimbal data on engine with THRUST: \u0022 \u002B thrust \u002B \u0022 and GIMBAL: \u0022 \u002B gimbal.gimbalRange);\u003Cbr\u003E                        return Math.Sin(Math.Abs(gimbal.gimbalRange) * Math.PI / 180) *\u003Cbr\u003E                               thrust * (p.Rigidbody.worldCenterOfMass - centerOfMass).magnitude;\u003Cbr\u003E                    }\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E            return 0;\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E1) It actually detects the engines. That\u0027s a bonus.\u003C/p\u003E\u003Cp\u003E2) It uses the engine\u0027s \u003Cstrong\u003Ecurrent\u003C/strong\u003E thrust rather than its max thrust. Since steering and throttle are separate in kOS, calculating steering from max thrust seems pointless since only the current thrust matters/\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E    public static double GetThrustTorque(Part p, Vessel vessel)\u003Cbr\u003E        {\u003Cbr\u003E            if (p.State == PartStates.ACTIVE)\u003Cbr\u003E            {\u003Cbr\u003E                ModuleEngines moduleEngine = null;\u003Cbr\u003E                ModuleGimbal moduleGimbal = null;\u003Cbr\u003E                foreach (PartModule partModule in p.Modules)\u003Cbr\u003E                {\u003Cbr\u003E                    var foundModuleEngine = partModule as ModuleEngines;\u003Cbr\u003E                    var foundModuleGimbal = partModule as ModuleGimbal;\u003Cbr\u003E                    if (foundModuleEngine != null)\u003Cbr\u003E                    {\u003Cbr\u003E                        moduleEngine = foundModuleEngine;\u003Cbr\u003E                    }\u003Cbr\u003E                    else if (foundModuleGimbal != null)\u003Cbr\u003E                    {\u003Cbr\u003E                        moduleGimbal = foundModuleGimbal;\u003Cbr\u003E                    }\u003Cbr\u003E                }\u003Cbr\u003E                if (moduleGimbal == null || moduleEngine == null)\u003Cbr\u003E                {\u003Cbr\u003E                    return 0;\u003Cbr\u003E                }\u003Cbr\u003E\u003Cbr\u003E                var gimbalRange = Math.Sin(Math.Abs(moduleGimbal.gimbalRange));\u003Cbr\u003E                var maxTrust = moduleEngine.maxThrust;\u003Cbr\u003E                var magnitude = (p.Rigidbody.worldCenterOfMass - vessel.CoM).magnitude;\u003Cbr\u003E\u003Cbr\u003E                var output = gimbalRange*maxTrust*magnitude;\u003Cbr\u003E                UnityEngine.Debug.Log(\u0022EngineTorque Found: \u0022 \u002B output);\u003Cbr\u003E                return output;\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E            return 0;\u003Cbr\u003E        }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis was my effort before work this morning \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E i think we might have come to a very similar place. I know it might seem silly but i really like having each term of these equations broken out and labeled.\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-02-05T18:01:55Z","Content":"\n\u003Cp\u003EI always prefer readable code over super efficient code. In my defense C# isn\u0027t my language, nor am I that familiar with the KSP API yet, so I was trying to change as little of the original code as possible \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EEDIT: I do think it should use current thrust instead of max thrust though. Since the steering doesn\u0027t adjust thrust at all, what does max thrust have to do with anything? Seems that the actual current thrust is all that really matters.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-05T18:50:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Agathorn\u0022 data-cite=\u0022Agathorn\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EEDIT: I do think it should use current thrust instead of max thrust though. Since the steering doesn\u0027t adjust thrust at all, what does max thrust have to do with anything? Seems that the actual current thrust is all that really matters.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI Concur with your current thrust argument. max is not the correct value to use.\u003C/p\u003E\u003Cp\u003EI actually like your OfType syntax better than my foreach loop.\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-02-05T20:38:40Z","Content":"\n\u003Cp\u003EI\u0027m still trying to figure out how to make it work for engines using vector thrust for ROLL which some plugins do.\u003C/p\u003E\u003Cp\u003EEDIT: To clarify i\u0027m trying to find a way to do it cleanly. I can get it to work by brute force by detecting if one of the known mods that provide roll vectoring is installed, but that seems like a crap way to do ti.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-05T21:03:20Z\u0022 title=\u002202/05/2014 09:03  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 5, 2014\u003C/time\u003E by Agathorn\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-05T23:37:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Agathorn\u0022 data-cite=\u0022Agathorn\u0022\u003E\u003Cdiv\u003EI\u0027m still trying to figure out how to make it work for engines using vector thrust for ROLL which some plugins do.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf what we have will make steering work, im happy with not getting roll and getting v0.11 out. v0.12 will have all kinds of goodies like gimbaled roll steering if we want it \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-02-05T23:59:36Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022erendrake\u0022 data-cite=\u0022erendrake\u0022\u003E\u003Cdiv\u003EIf what we have will make steering work, im happy with not getting roll and getting v0.11 out. v0.12 will have all kinds of goodies like gimbaled roll steering if we want it \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EEasy for you to say. You don\u0027t have craft with nothing but vectored thrust for maneuvering \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EIn all seriousness if you are happy with the steering changes go for it. Unfortunately without roll working I still can\u0027t verify proper steering on my rockets \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-02-06T00:13:48Z","Content":"\n\u003Cp\u003EBTW if you go with the current thrust method, make sure you also modify the calls so it doesn\u0027t multiply by current throttle.\u003C/p\u003E\n"},{"CreatedByName":"Zander","CreatedById":76100,"CreatedDateTime":"2014-02-06T08:45:00Z","Content":"\n\u003Cp\u003EHey guys.\u003C/p\u003E\u003Cp\u003EI have some realism specific needs for KOS that I want to request for my mod that I am making (which is super super realistic)..\u003C/p\u003E\u003Cp\u003E1. The whole idea of 10KB limit to simulate 60s technology is actually unrealistic. When code is compiled variable names are removed because they mean nothing to the computer anyways. Code becomes a lot smaller after being compiled. Can you please remove the 10KB limit or increase it to something more reasonable. the apollo computer programs were thousands of lines long. Now 2 or 3 hundred is the limit. \u003C/p\u003E\u003Cp\u003E2. I need multiple KOS modules to be able to run different programs independently but use the same window. This is extremely important for example.\u003C/p\u003E\u003Cp\u003E(In the terminal)\u003C/p\u003E\u003Cp\u003Erename volume 1 to guidance.\u003C/p\u003E\u003Cp\u003Erename volume 2 to staging.\u003C/p\u003E\u003Cp\u003Eswitch to guidance.\u003C/p\u003E\u003Cp\u003Erun guidanceprogram.txt.\u003C/p\u003E\u003Cp\u003Eswitch to staging.\u003C/p\u003E\u003Cp\u003Erun staging program.txt.\u003C/p\u003E\u003Cp\u003EAnd both programs will \u0022print\u0022 to the same terminal window. So no matter how many Computer parts you add. there is only one terminal window.\u003C/p\u003E\u003Cp\u003E3.Multiple KOS units running without causing insane lag. Right now I am running 3 programs on 3 kos units which is very little but the lag is unbelievable. \u003C/p\u003E\u003Cp\u003E4. THE ABILITY TO TERMINATE A PROGRAM EARLY FOR GODS SAKE \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003E5. Compatibility with NathanKells Real fuels. \u003C/p\u003E\u003Cp\u003E6. steering and RCS utillization on ships with no reaction wheels. ( saw aragorn working on that already very nice)\u003C/p\u003E\u003Cp\u003E7. A goto IS DESPERATELY NEEDED\u003C/p\u003E\u003Cp\u003Eexample:\u003C/p\u003E\u003Cp\u003E#part 1.\u003C/p\u003E\u003Cp\u003Edo stuff.\u003C/p\u003E\u003Cp\u003E#part 2.\u003C/p\u003E\u003Cp\u003Edo stuff.\u003C/p\u003E\u003Cp\u003Eif some condition {goto #part 1.}.\u003C/p\u003E\u003Cp\u003Ethen the script starts over from part 1. \u003C/p\u003E\u003Cp\u003E8. A not.. like \u003C/p\u003E\u003Cp\u003Eif not brakes {brakes on}.\u003C/p\u003E\u003Cp\u003Eif not x=1 {do this stuff}.\u003C/p\u003E\u003Cp\u003E9. ability to detect parts being destroyed. (not critical)\u003C/p\u003E\u003Cp\u003E10. the ability to set global variables for all running kos units. (important).\u003C/p\u003E\u003Cp\u003EIF you guys could please get these implemented I would be forever gratefully. \u003C/p\u003E\u003Cp\u003Ethank you very much.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-06T10:41:48Z\u0022 title=\u002202/06/2014 10:41  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 6, 2014\u003C/time\u003E by Zander\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-02-06T15:08:43Z","Content":"\n\u003Cp\u003E#5 and #6 are already on my realism list. The rest, well I just woke up so i\u0027ll need to read it again when i\u0027m awake \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-06T15:25:29Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Zander\u0022 data-cite=\u0022Zander\u0022\u003E\u003Cdiv\u003EHey guys.\u003Cp\u003EI have some realism specific needs for KOS that I want to request for my mod that I am making (which is super super realistic)..\u003C/p\u003E\u003Cp\u003E1. No\u003C/p\u003E\u003Cp\u003E2. Great Idea, Something like that should not be insane to accomplish. \u003C/p\u003E\u003Cp\u003E3. We have a ton of work ahead of us to make KOS faster, pull requests are always welcome. \u003C/p\u003E\u003Cp\u003E4. Are you talking about from within the script? or with a user keypress? Or an API for you to call from your mod?\u003C/p\u003E\u003Cp\u003E7. No\u003C/p\u003E\u003Cp\u003E8. Kevin had a good start on adding this and it is clearly needed\u003C/p\u003E\u003Cp\u003E9. Do you just want to know when the part count has changed? that would be simple. or do you want a list of parts that has been destroyed? or maybe an event API for registering an action or external function to happen whenever a part is destroyed?\u003C/p\u003E\u003Cp\u003E10. would you like them to be instantly available to all running KOS units in the universe? or just on one ship? To have information travel instantly across the solar system is not very realistic \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Zander\u0022 data-cite=\u0022Zander\u0022\u003E\u003Cdiv\u003EIF you guys could please get these implemented I would be forever gratefully. \u003Cp\u003Ethank you very much.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI wish you well on your mod and we will do what we can to help you out. if you want all of these soon, please consider issuing some pull requests for us to review.\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-02-06T15:47:11Z","Content":"\n\u003Cp\u003E#4 I think kOS definitely should have more flow control. Something akin to sys.exit(); to terminate a program at that point. As well as continue; and break; equivalent statements.\u003C/p\u003E\u003Cp\u003EThat said while I think it shoudl have them, I don\u0027 tknow how easy or insane it would be to try and implement them. They seem so obvious that I have to wonder if there is a good reason they were not included originally.\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-06T16:01:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Agathorn\u0022 data-cite=\u0022Agathorn\u0022\u003E\u003Cdiv\u003E#4 I think kOS definitely should have more flow control.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI agree, they should not be hard.\u003C/p\u003E\n"},{"CreatedByName":"Vladthemad","CreatedById":100533,"CreatedDateTime":"2014-02-07T23:15:54Z","Content":"\n\u003Cp\u003EWhat ever happened to the little Kerbal kicking a computer loading screen as seen in some of the videos on youtube? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"erendrake","CreatedById":57164,"CreatedDateTime":"2014-02-07T23:49:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Vladthemad\u0022 data-cite=\u0022Vladthemad\u0022\u003E\u003Cdiv\u003EWhat ever happened to the little Kerbal kicking a computer loading screen as seen in some of the videos on youtube? \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIts still there if you toggle power off and on again. We should restore it on launch \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"}]}