{"TopicId":94967,"ForumId":36,"TopicTitle":"Idea","CreatedByName":"Recognize-Me-","CreatedById":108232,"CreatedDateTime":"2014-12-30T06:04:53Z","PageNum":1,"Articles":[{"CreatedByName":"Recognize-Me-","CreatedById":108232,"CreatedDateTime":"2014-12-30T06:04:53Z","Content":"\n\u003Cp\u003EWould there be a way to add something like dust or scratches to things that have been on different planets for extended periods of time? Like if you put a rover on Duna and leave it there for like 3 months (kerbal time) then it would start to develop a thin layer of red dust and maybe a few scratches. I would think you would be able to do it pretty easily. Just a thought\u003C/p\u003E\n"},{"CreatedByName":"Chezburgar7300","CreatedById":114873,"CreatedDateTime":"2014-12-30T06:22:59Z","Content":"\n\u003Cp\u003EThat\u0027s a pretty sweet idea. If I knew how to I would \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E. Shouldn\u0027t this be in general add-on affairs though?\u003C/p\u003E\n"},{"CreatedByName":"Boomerang","CreatedById":92198,"CreatedDateTime":"2014-12-30T06:27:09Z","Content":"\n\u003Cp\u003E\u003Ca href=\u0022http://xkcd.com/1425/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://xkcd.com/1425/\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThe idea is fine, but unless you\u0027ve got a decent notion of how such a thing might be implemented, you\u0027re better off not implying that it would be simple to do. It\u0027s a good way to rub people the wrong way, including the people who might take a look at ideas like this and try their hand at it.\u003C/p\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2014-12-30T06:30:44Z","Content":"\n\u003Cp\u003EHmmmm. Cool idea, but since it doesn\u0027t really add to gameplay, I\u0027m not sure if it would be worth what it would take....\u003C/p\u003E\u003Cp\u003EMy idea for how to pull it off, and this is shooting from the hip, but you could look at how Kerbpaint replaces the KSP-Unity shaders to add an additional color layer. Now, they\u0027re probably taking advantage of the fact that the default Unity shaders have a color modifier on the diffuse channel, but KSP hides that, so Kerbpaint just has to add it back in. But it IS an example that proves you can replace the shader. \u003C/p\u003E\u003Cp\u003EUnity seems to have provisions for combining textures, so you could make a 2048X512 texture with 4 squares, each with a different level of damage, and overlay the correct one over the diffuse and specular channels of the part after a certain amount of time landed on a body. \u003C/p\u003E\u003Cp\u003EThe other trick is that part -your plugin would have to record how much time each part has spent on a planet... that\u0027s not info that is available in stock... and parts that you\u0027ve left on a planet are sort of forgotten by the engine when they\u0027re outside 2.4km. So you have to find a way to file away the time a part lands so you can check it the next time it gets loaded to see what level of damage it should show.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://docs.unity3d.com/Manual/SL-SetTexture.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://docs.unity3d.com/Manual/SL-SetTexture.html\u003C/a\u003E might get you started. It\u0027s seems like a fairly involved bit of coding plus a decent bit of memory overhead, between the textures, the combining operations, the additional draw calls (as this would look best if it used spec and normal layers, which would add draw calls to parts that didn\u0027t already have them), and tracking information for parts outside physics range, for no change in gameplay to me... but someone who\u0027s actually played with Unity Shaders Labs might not find it easy enough to be worth it.\u003C/p\u003E\u003Cp\u003EArt\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-12-30T06:38:41Z\u0022 title=\u002212/30/2014 06:38  AM\u0022 data-short=\u00229 yr\u0022\u003EDecember 30, 2014\u003C/time\u003E by artwhaley\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Recognize-Me-","CreatedById":108232,"CreatedDateTime":"2014-12-30T06:42:43Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Boomerang\u0022 data-cite=\u0022Boomerang\u0022\u003E\u003Cdiv\u003E\u003Ca href=\u0022http://xkcd.com/1425/\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://xkcd.com/1425/\u003C/a\u003E\u003Cp\u003EThe idea is fine, but unless you\u0027ve got a decent notion of how such a thing might be implemented, you\u0027re better off not implying that it would be simple to do. It\u0027s a good way to rub people the wrong way, including the people who might take a look at ideas like this and try their hand at it.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E \u003Cp\u003ESo the fact that I personally don\u0027t know how to do it but think it would be easy to implement would rub someone the wrong way? If anyone takes offense to me stating my opinion on how easy/hard it would be to do something that I suggested then they can move on to the next post. I wouldn\u0027t know the first place to start to implement this but the idea is very simple so I personally think it would be easy to do.\u003C/p\u003E\n"},{"CreatedByName":"Camacha","CreatedById":59088,"CreatedDateTime":"2014-12-30T07:19:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Recognize-Me-\u0022 data-cite=\u0022Recognize-Me-\u0022\u003E\u003Cdiv\u003EI wouldn\u0027t know the first place to start to implement this but the idea is very simple so I personally think it would be easy to do.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI know a little bit about making things for games and it is not as easy as you purport it to be. The simplest ideas can be unbearably hard to do. I think this one should be doable with some work, but it is not a matter of slapping something together in a few hours for sure. And yes, it somewhat irks if someone suggests so readily something is easy without knowing the first bit about it \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Thesonicgalaxy","CreatedById":71406,"CreatedDateTime":"2014-12-30T07:23:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Recognize-Me-\u0022 data-cite=\u0022Recognize-Me-\u0022\u003E\u003Cdiv\u003ESo the fact that I personally don\u0027t know how to do it but think it would be easy to implement would rub someone the wrong way? If anyone takes offense to me stating my opinion on how easy/hard it would be to do something that I suggested then they can move on to the next post. I wouldn\u0027t know the first place to start to implement this but the idea is very simple so I personally think it would be easy to do.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s rubs people wrong because they put a lot of effort into their hard mods, and people who haven\u0027t done it just saying it would be very easy to implement gets them angry. It\u0027s not as easy as you think it sounds.\u003C/p\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2014-12-30T07:27:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Recognize-Me-\u0022 data-cite=\u0022Recognize-Me-\u0022\u003E\u003Cdiv\u003ESo the fact that I personally don\u0027t know how to do it but think it would be easy to implement would rub someone the wrong way? If anyone takes offense to me stating my opinion on how easy/hard it would be to do something that I suggested then they can move on to the next post. I wouldn\u0027t know the first place to start to implement this but the idea is very simple so I personally think it would be easy to do.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s not thinking that it would be easy that can be offensive, but that you\u0027re trying to look like you\u0027re suggesting something, btw suggestions don\u0027t go in this board; when really what you mean is \u0022Someone make this for me\u0022. The general rule in communities like this is that if you want something done you\u0027re going to have to do most of the job yourself, and if you\u0027re not willing or interested in doing it, it\u0027s best you keep your ideas to yourself.\u003C/p\u003E\u003Cp\u003EMaking a catchall procedural system would be as close to impossible as you need to get before abandoning ship; but it\u0027d be relatively simple to implement a system that reveals a dust or damage mask based on conditions; that\u0027s essentially what emissive animations do. The problem is that every part that exists would need to be enhanced to contain a custom damage/dust mask, and less significantly the KSP shaders would need to be expanded to match. This is not something that a single mod could do completely on it\u0027s own, part packs like B9 and KW would need to update to support it. This runs into the issue that you need to convince artists that it\u0027s worth their time to do more work before your mod is popular yet, when there\u0027s little benefit from them doing so, and significant side effects; and conversely if the mod does take off, any mod that isn\u0027t updated suddenly doesn\u0027t fit in.\u003C/p\u003E\u003Cp\u003EThis is the kind of feature that only Squad has the clout to implement because anybody else has to deal with the politics of getting the community to adopt, and Squad would undoubtedly go for the procedural system, and would do a bad job of it, permanently downgrading the visual fidelity of the game. (until somebody makes a mod to disable it)\u003C/p\u003E\n"},{"CreatedByName":"Agathorn","CreatedById":99662,"CreatedDateTime":"2014-12-30T07:30:28Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Recognize-Me-\u0022 data-cite=\u0022Recognize-Me-\u0022\u003E\u003Cdiv\u003E I wouldn\u0027t know the first place to start to implement this but the idea is very simple so I personally think it would be easy to do.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBy definition if something is easy then you should be able to figure out how to do it. \u003C/p\u003E\u003Cp\u003EWhat \u0022rubs\u0022 people the wrong way is people saying so and so is easy which belittles the amount of time, effort, and learning, they have spent to figure out how to do things. It seems I most often hear the \u0022It should be easy\u0022 statement the most from the people with the least bit of clue as to how easy or hard something truly is.\u003C/p\u003E\u003Cp\u003EIt took you how many posts? 4? 5? to get a part pointing the right way in Unity. I assure you that building a robust realistic paint weathering system is infinitely more difficult in comparison.\u003C/p\u003E\n"},{"CreatedByName":"Gaalidas","CreatedById":111158,"CreatedDateTime":"2014-12-30T07:49:28Z","Content":"\n\u003Cp\u003EYou could perhaps make use of some of those plugins that attempt to track time passage for the use of using up or generating resources for vessels that are currently unloaded by the engine. In fact, I remember that in the past there have been parts which would expand/retract and others that simply had a visual indicator to show their current filled status. If a system like that could be implemented where the resource represents the time it takes for the specific part to get fully scratched up according to this mod, and the visual indicator is the overlay applied in similar fashion to the shader modifying process of KerbPaint, then you might be able to get the desired effect. So, basically, the part would have a resource (call it \u0022space-time sandpaper\u0022) and a module that slowly drains this resource based on the current conditions defined in a config node that corresponds to either a planetary body or empty space, and even different regions on planets with biomes could be defined. For certain percentages of this resource drain, the shader would apply a different mask which would produce these scratches/dust layers that again could be defined by the configuration, in an image likely. Upon re-loading that craft and using it another module, which only runs when the vessel is active, will slowly (more slowly that the drain, likely) regenerate this resource which would cause the resource-tracking module to reverse the state of the mask, stopping just short of a full recovery until either the craft is manually cleaned/repaired (maybe an EVA kerbal could perform these actions) or the biome/configured body was changed which would cause rapid recovery of this resource, followed by a subtle switch to the new mask.\u003C/p\u003E\u003Cp\u003ESo, in the end, not exactly \u003Cem\u003Esimple\u003C/em\u003E, but also not exactly \u003Cem\u003Eimpossible\u003C/em\u003E. Again, however, making a mask work for all the supported parts without having to re-mask every textured part individually for each configured environment could be the near-impossible part. You\u0027d need to be extremely subtle with the scratches/dust so that you could apply the mask to the entire craft without making it appear awkward. Also, you\u0027d need to make sure you aren\u0027t blocking transparency, emissive maps, or any other effects that the base game makes use of. One of the issues with KerbPaint is that you have to use different shaders depending on what shaders the part already makes use of or you\u0027ll get some odd results. For parts with multiple objects that are skinned individually, you needed to tell the plugin to do a forced override which, if the mask was not perfectly aligned and colored, could make certain areas on the part look completely off.\u003C/p\u003E\u003Cp\u003EThe downside of such an openly-expandable environment such as we have with KSP is that we lack any standards that can be enforced when making new parts which would allow us to create add-ons such as this without having to worry about incompatibilities. This would be simple in many other platforms, but with Unity and KSP it could easily drive you utterly insane.\u003C/p\u003E\n"},{"CreatedByName":"Spacepetscompany","CreatedById":119734,"CreatedDateTime":"2015-01-01T06:38:07Z","Content":"\n\u003Cp\u003ECouldn\u0027t one just record the Date/Time of launch and time of landing (from the flight log) and then apply textures over time based on that? It\u0027d require a plugin most certainly!\u003C/p\u003E\n"}]}