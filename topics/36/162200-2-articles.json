{"TopicId":162200,"ForumId":36,"TopicTitle":"[WIP][1.8.1, 1.9.1, 1.10.1, 1.11.0\u20132, 1.12.2\u20135] Principia\u2014version \u200E\u200EKleene, released 2024-07-05\u2014n-Body and Extended Body Gravitation","CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-02-05T00:19:35Z","PageNum":2,"Articles":[{"CreatedByName":"Garek","CreatedById":73214,"CreatedDateTime":"2014-02-05T15:43:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022asmi\u0022 data-cite=\u0022asmi\u0022\u003E\u003Cdiv\u003E1. mixed-mode C\u002B\u002B/CLI does not conform to CLR specification and as such it is not given that it would work under Unity - I haven\u0027t actually tried that and was focusing on optimizing algorithm performance.\u003Cp\u003E2. Unity is cross-platform and runs on MacOS and Linux. Again I\u0027m not sure that mixed-mode would actually work on these platforms.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s been a while since I last looked at mixed mode C\u002B\u002B/CLI, but at the time it was only implemented by Visual Studio/Microsoft .NET. I don\u0027t now if any other CLR implementation supports it yet. Also, mixed mode C\u002B\u002B/CLI has all the pitfalls of native C\u002B\u002B concerning cross-platform. You would have to provide separate binaries for each platform, also separate for 32 and 64-Bit, and make sure they all work properly. Actually, since everything is x86-based now, you could maybe get away with one binary for 32 and 64Bit each, IF Unity uses the same CLR implementation on every platform and you don\u0027t call any native library function.\u003C/p\u003E\u003Cp\u003EEDIT: timmers, you\u0027re right, he doesn\u0027t have to support every platform. But it would be nice, and if he implements it now for a specific platform, and later decides to support more (mod popularity?), that would get really messy.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-05T15:46:40Z\u0022 title=\u002202/05/2014 03:46  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 5, 2014\u003C/time\u003E by Garek\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Z-Man","CreatedById":96549,"CreatedDateTime":"2014-02-05T15:45:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003EYes. For fine timesteps, this actually is easier than propagating them on their Keplerian rails, because solving the Kepler equation (which involves a few iterations of Newton\u0027s method; the derivative of Kepler\u0027s function has a trigonometric function, which is a few hundred clock cycles compared with 10 or so for a division/square root) is pretty slow.\u003C/div\u003E\u003C/blockquote\u003EI see. Cool! I use Keplerian orbits with perturbations, so large timesteps are less of a problem (and possible).\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003EIt should be noted that even if you want to keep things in 2-body orbits, it is a good idea to really use the solution of the 2-body problem (2 bodies orbiting a barycenter) rather than the pretty poor Keplerian approximation (one body orbiting another).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOf course. My ideal goal would be, however, to keep as many parameters as possible equal to stock: Distance of Kerbin to the Mun, orbit period of the Mun (so launch windows stay; not really an issue with the Mun, but for interplanetary transfers), masses in sizes of bodies (so the difficulty stays the same and existing orbits in savegames still work). Which... is not possible. Thinking about it now, well, the distances shall be adapted.\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-02-05T16:04:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022lots of people\u0022 data-cite=\u0022lots of people\u0022\u003E\u003Cdiv\u003EConcerns about x87 being slower than SSE2 due to manipulating scalars\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ll have to experiment, but I\u0027m not sure I will need that much of a speedup (going from CLR to native will already be nice). On the other hand, I\u0027m not sure I \u003Cem\u003Eneed\u003C/em\u003E extended precision either (I certainly don\u0027t for stock, but it might be nice in RSS).\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022another set people, not disjoint from the previous one\u0022 data-cite=\u0022another set people, not disjoint from the previous one\u0022\u003E\u003Cdiv\u003EConcerns about interfacing with unmanaged code through C\u002B\u002B/CLI\u003C/div\u003E\u003C/blockquote\u003E I hope it will work, otherwise I can just import the DLL myself and take care of the marshalling and other interesting details. That\u0027s quite tedious though.\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022a third set such that the intersection of the three sets is nonempty\u0022 data-cite=\u0022a third set such that the intersection of the three sets is nonempty\u0022\u003E\u003Cdiv\u003EConcerns about having lots of binaries\u003C/div\u003E\u003C/blockquote\u003EI\u0027ll worry about that (as well as the two issues above) when I get to using C\u002B\u002B anyway. I\u0027ll first get most of it working in C# and see how that goes, premature optimisation is the mother of all sins.\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Z-Man\u0022 data-cite=\u0022Z-Man\u0022\u003E\u003Cdiv\u003EOf course. My ideal goal would be, however, to keep as many parameters as possible equal to stock: Distance of Kerbin to the Mun, orbit period of the Mun (so launch windows stay; not really an issue with the Mun, but for interplanetary transfers), masses in sizes of bodies (so the difficulty stays the same and existing orbits in savegames still work). Which... is not possible. Thinking about it now, well, the distances shall be adapted.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf Scott Manley\u0027s intuition proves right, things should be pretty stable (and thus stockalike) under \u003Cem\u003EN\u003C/em\u003E-body physics if you just interpret the stock orbital parameters as parameters of the orbits around the barycenter of the primary\u0027s system. I\u0027ll find out when I try to stabilise Vall.\u003C/p\u003E\n"},{"CreatedByName":"Porkjet","CreatedById":92433,"CreatedDateTime":"2014-02-05T16:14:14Z","Content":"\n\u003Cp\u003EModders\u00C3\u00A2\u00E2\u20AC\u017E\u00C2\u00A2 - making things possible since 1961\u003C/p\u003E\u003Cp\u003EAmazing! If you make this work, it will take KSP to a whole new level!\u003C/p\u003E\n"},{"CreatedByName":"timmers_uk","CreatedById":97413,"CreatedDateTime":"2014-02-05T16:20:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Garek\u0022 data-cite=\u0022Garek\u0022\u003E\u003Cdiv\u003EIt\u0027s been a while since I last looked at mixed mode C\u002B\u002B/CLI, but at the time it was only implemented by Visual Studio/Microsoft .NET. I don\u0027t now if any other CLR implementation supports it yet. Also, mixed mode C\u002B\u002B/CLI has all the pitfalls of native C\u002B\u002B concerning cross-platform. You would have to provide separate binaries for each platform, also separate for 32 and 64-Bit, and make sure they all work properly. Actually, since everything is x86-based now, you could maybe get away with one binary for 32 and 64Bit each, IF Unity uses the same CLR implementation on every platform and you don\u0027t call any native library function.\u003Cp\u003EEDIT: timmers, you\u0027re right, he doesn\u0027t have to support every platform. But it would be nice, and if he implements it now for a specific platform, and later decides to support more (mod popularity?), that would get really messy.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAgree 100%, but it\u0027d be a pity if he got bogged down in the overhead of cross-platform support and having to go least common denominator (esp as it entails having access to linux mac and windows dev machines to build/test) ... if that\u0027s a problem perhaps someone else could help out with the ports\u003C/p\u003E\u003Cp\u003EOh, and I\u0027d love to see this whole shizzle happen (though I have enough problems with comm sat corralling as it is and would need something to help me herd the little straying dudes).\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-05T16:23:35Z\u0022 title=\u002202/05/2014 04:23  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 5, 2014\u003C/time\u003E by timmers_uk\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"rhoark","CreatedById":57151,"CreatedDateTime":"2014-02-05T17:19:01Z","Content":"\n\u003Cp\u003ESomeone did an n-body simulation of the kerbol system awhile back\u003C/p\u003E\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/qKp1M4T6z24?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003EIf a Joolian moon or two does strange things, I\u0027d consider that a feature, though perhaps it could be placed in such a way to encourage it to become a Trojan.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-05T17:21:03Z\u0022 title=\u002202/05/2014 05:21  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 5, 2014\u003C/time\u003E by rhoark\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"thorfinn","CreatedById":8349,"CreatedDateTime":"2014-02-05T17:53:59Z","Content":"\n\u003Cp\u003EWonderful. I\u0027ll watch this space carefully. Just wanted to add that having the new integrator even without N-body would be great: things like realistic nuclear-electric propulsion and more intelligent trajectory planning would be invaluable even in the 2-body approximation.\u003C/p\u003E\u003Cp\u003EAll in all, this will make flight quite a bit more difficult (we will really need a \u0022charting table\u0022 more powerful than the current maneuver nodes to get around) but making realistic bi(tri/quater)nary star systems possible would be enough of a payoff? I\u0027m leaning towards a \u0022yes\u0022 \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-05T17:59:35Z\u0022 title=\u002202/05/2014 05:59  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 5, 2014\u003C/time\u003E by thorfinn\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"lyndonguitar","CreatedById":61194,"CreatedDateTime":"2014-02-05T18:03:29Z","Content":"\n\u003Cp\u003EWtf wowowowowowowowowowowow... Wow\u003C/p\u003E\n"},{"CreatedByName":"Itsdavyjones","CreatedById":57605,"CreatedDateTime":"2014-02-05T18:17:40Z","Content":"\n\u003Cp\u003ELooking forward to seeing this, looks fun.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022rhoark\u0022 data-cite=\u0022rhoark\u0022\u003E\u003Cdiv\u003E*N-body sim link*\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell there goes the Joolian system as we know it.\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-02-05T18:40:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022timmers_uk\u0022 data-cite=\u0022timmers_uk\u0022\u003E\u003Cdiv\u003EOh, and I\u0027d love to see this whole shizzle happen (though I have enough problems with comm sat corralling as it is and would need something to help me herd the little straying dudes).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe ability to look at orbits in rotating reference frames might actually make commsat management easier.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022rhoark\u0022 data-cite=\u0022rhoark\u0022\u003E\u003Cdiv\u003ESomeone did an n-body simulation of the kerbol system awhile back\u003Cp\u003E\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/qKp1M4T6z24?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E\u003Cp\u003EIf a Joolian moon or two does strange things, I\u0027d consider that a feature, though perhaps it could be placed in such a way to encourage it to become a Trojan.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes, the same Matt Roesle (\u003Cstrong\u003EMattasmack\u003C/strong\u003E) also did a simulation of the Alternis system (he\u0027s mentioned in the \u0027acknowledgements\u0027 section).\u003C/p\u003E\u003Cp\u003EScott Manley remarked that the system might be much more stable if the orbital parameters were read as barycentric, rather than Jool-centric. Experiments will be carried out in due time.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022thorfinn\u0022 data-cite=\u0022thorfinn\u0022\u003E\u003Cdiv\u003EWonderful. I\u0027ll watch this space carefully. Just wanted to add that having the new integrator even without N-body would be great: things like realistic nuclear-electric propulsion and more intelligent trajectory planning would be invaluable even in the 2-body approximation.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOr better numerical stability. The current \u0027look at your free return trajectory; now look at the SOI change; your free return trajectory is now a Mun collision\u0027 behaviour is irritating, as is the numerical wobbling of orbits when out of timewarp. This game really needs decent integrators, independently from the \u003Cem\u003EN\u003C/em\u003E-body problem.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAll in all, this will make flight quite a bit more difficult (we will really need a \u0022charting table\u0022 more powerful than the current maneuver nodes to get around) but making realistic bi(tri/quater)nary star systems possible would be enough of a payoff? I\u0027m leaning towards a \u0022yes\u0022 \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe thing is, once you get used to how they work, 2-body orbital mechanics are pretty simple. This will hopefully provide an interesting challenge and new possibilities, while not fundamentally changing most of the game.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-05T18:49:32Z\u0022 title=\u002202/05/2014 06:49  PM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 5, 2014\u003C/time\u003E by eggrobin\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"czokletmuss","CreatedById":28063,"CreatedDateTime":"2014-02-05T22:04:45Z","Content":"\n\u003Cp\u003EAmazing. I will be following this thread closely!\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-02-05T22:55:45Z","Content":"\n\u003Cp\u003EThis is great stuff eggrobin! And I\u0027m not just saying that because it has an Abstract and a Bibliography. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003ELet me know if I can help with anything! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-02-06T03:38:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NathanKell\u0022 data-cite=\u0022NathanKell\u0022\u003E\u003Cdiv\u003EThis is great stuff eggrobin! And I\u0027m not just saying that because it has an Abstract and a Bibliography. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe acronym expansions are nice too. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003ELet me know if I can help with anything! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s what the \u0027Open questions for the interested reader\u0027 are for. If you want I can notify you when new questions come up.\u003C/p\u003E\n"},{"CreatedByName":"Tsevion","CreatedById":66600,"CreatedDateTime":"2014-02-06T04:29:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003ESpeed will be further increased by rewriting the numerical integration in (unmanaged) C\u002B\u002B, interfaced with C# through C\u002B\u002B/CLI. The unmanaged C\u002B\u002B (compiled with clang) will use 80-bit extended precision \u0027long double\u0027 (64-bit mantissa instead of 53-bit) for added precision.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhile this is not a bad idea, as unmanaged C\u002B\u002B can be considerably faster, care must be taken here.\u003C/p\u003E\u003Cp\u003EYou need to keep the number of managed/unmanaged boundary crossings (thunks) as low as possible. Ideally, you\u0027ll want a single call: FigureOutEverythingForThisTimespan. Crossing the boundary incurs a not insignificant perf hit (depending on setup and amount of data being marshaled, I\u0027ve measured it between 0.1\u00C3\u017D\u00C2\u00BCs and 100\u00C3\u017D\u00C2\u00BCs). This is generally ignorable if you\u0027re doing a few dozen calls a frame, however if you start doing 1000 or more calls a frame, it can become significant and even dominant in your timing, eating all the perf gains you\u0027re getting from using unmanaged.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-06T04:31:52Z\u0022 title=\u002202/06/2014 04:31  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 6, 2014\u003C/time\u003E by Tsevion\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-02-06T04:44:32Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tsevion\u0022 data-cite=\u0022Tsevion\u0022\u003E\u003Cdiv\u003EIdeally, you\u0027ll want a single call: FigureOutEverythingForThisTimespan.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is what I intend to go for: most of the code in unmanaged C\u002B\u002B, interacting with the C# part once per FixedUpdate (get the new positions/velocities etc., send an update for thrusts \u0026amp;c.). I\u0027ll have to see what integration out of timewarp ends up looking like, but I won\u0027t have more than \u003Ca href=\u0022http://xkcd.com/1070/\u0022 rel=\u0022external nofollow\u0022\u003Ea few\u003C/a\u003E thunks per FixedUpdate (the only way 1000 thunks per update could happen is if I computed the increments in the unmanaged part, but accumulated them in the managed part; this would just be insane from a conceptual standpoint, besides the performance costs).\u003C/p\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2014-02-06T05:09:00Z","Content":"\n\u003Cp\u003ESome more thoughts:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EWould drawing the gravitational potential in the current orbital plane (together with the centrifugal potential if orbits are drawn is a rotating reference frame) be useful?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, if you do something like \u003Ca href=\u0022https://en.wikipedia.org/wiki/File:Restricted_Three-Body_Problem_-_Energy_Potential_Analysis.png\u0022 rel=\u0022external nofollow\u0022\u003Ethis graph\u003C/a\u003E, or something based on it but with colored contours I think it would be very helpful for figuring out what is going on if it can be toggled on and off. I think that the best way to do that would be to draw it in the plane of the orbit only (to reduce confusion), and allowing the player to select which body to base the plane on as an advanced option. By default, set it to handle the \u0022dominant\u0022 bodies in the situation, so by default around Kerbin it would work in the plane of Kerbin and the Mun, until the player gets closer to Minmus and Minmus\u0027 influence outweighs the Mun\u0027s. In a situation like the inner Joolian moons it should attempt to draw in some type of \u0022local ecliptic\u0022 plane that attempts to do a mass average of the bodies involved to find the proper plane, but only do that once.\u003C/p\u003E\u003Cp\u003EI\u0027m not sure how you would handle the rotational potential for the Joolian moons, probably base it on the most massive body?\u003C/p\u003E\u003Cp\u003EWhatever is done, if it\u0027s possible to mark the edges of a body\u0027s Hill Sphere that should be done to make the effects as clear as possible. We\u0027ll need that to be the new SOI type of effect.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EShould long-term trajectory predictions for vessels under thrust be inaccurate, is there a good way of estimating the uncertainty (for instance, would predicting a few perturbed trajectories and plotting them all give a representative idea of what might happen)?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI have an idea here: once you start something under thrust, show the current trajectory (time t), the last calculated trajectory (time t-\u00C3\u017D\u00E2\u20ACt), and the estimated trajectory based on the craft\u0027s instantaneous acceleration a slight bit in the future (time t \u002B \u00C3\u017D\u00E2\u20ACt). Make the last one a little less accurate than the others, since you\u0027ll throw it away; store the current trajectory and shift it over to the last calculated every time you recalculate things forward. Your ghost past and future trajectories now show the approximate error that will occur due to the player making a fraction-of-a-second error in the burn time. My only concern is that the less accurate future calculation might add a bit to the computational overhead, in which case you can simply use the old trajectory. Seems simple enough, especially if fainter colors are used for the ghost trajectories.\u003C/p\u003E\n"},{"CreatedByName":"Tsevion","CreatedById":66600,"CreatedDateTime":"2014-02-06T05:09:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003E(the only way 1000 thunks per update could happen is if I computed the increments in the unmanaged part, but accumulated them in the managed part; this would just be insane from a conceptual standpoint, besides the performance costs).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou have no idea how much interop code I\u0027ve seen written where people do things like this. Good to see you\u0027re in the right frame of mind on this... I tend to assume people will do something insane and idiotic until proven otherwise. If you need any help with interop, I\u0027ve done quite a bit of it over the years (All on Windows though, so no clue on the Mono/Linux/Mac fronts): P/Invoke, COM, C\u002B\u002B/CLI, using downright evil hooks to inject code from an outside process... so feel free to ask about any specifics you run into.\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-02-06T06:05:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EWell, if you do something like \u003Ca href=\u0022https://en.wikipedia.org/wiki/File:Restricted_Three-Body_Problem_-_Energy_Potential_Analysis.png\u0022 rel=\u0022external nofollow\u0022\u003Ethis graph\u003C/a\u003E, or something based on it but with colored contours I think it would be very helpful for figuring out what is going on if it can be toggled on and off. I think that the best way to do that would be to draw it in the plane of the orbit only (to reduce confusion), and allowing the player to select which body to base the plane on as an advanced option. By default, set it to handle the \u0022dominant\u0022 bodies in the situation, so by default around Kerbin it would work in the plane of Kerbin and the Mun, until the player gets closer to Minmus and Minmus\u0027 influence outweighs the Mun\u0027s. In a situation like the inner Joolian moons it should attempt to draw in some type of \u0022local ecliptic\u0022 plane that attempts to do a mass average of the bodies involved to find the proper plane, but only do that once.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s what I was thinking about. Contours should be fairly trivial, I was wondering whether a mesh would be more readable though (it wouldn\u0027t be much harder, but some care would have to be taken in order to make the reference plane readable).\u003C/p\u003E\u003Cp\u003ERegarding the choice of plane, how about the Keplerian orbital plane? That makes things usable for inclined orbits, and it will pretty much do what you want in the CR3BP (I guess there will always be some edge cases, but if things work well in both the 2-body limit and the CR3BP I\u0027ll be happy for now).\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI\u0027m not sure how you would handle the rotational potential for the Joolian moons, probably base it on the most massive body?\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe centrifugal potential is arises from the choice of a rotating reference frame, it\u0027s not a property of the system. So that\u0027s pretty easy, I\u0027ll just add the centrifugal potential for whatever reference frame I\u0027m drawing the orbits in.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EWhatever is done, if it\u0027s possible to mark the edges of a body\u0027s Hill Sphere that should be done to make the effects as clear as possible. We\u0027ll need that to be the new SOI type of effect.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf I draw the potential, you\u0027ll get something more useful than the Hill sphere (and you\u0027ll see something that looks like the Hill sphere as one of the contours).\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI have an idea here: once you start something under thrust, show the current trajectory (time t), the last calculated trajectory (time t-\u00C3\u017D\u00E2\u20ACt), and the estimated trajectory based on the craft\u0027s instantaneous acceleration a slight bit in the future (time t \u002B \u00C3\u017D\u00E2\u20ACt). Make the last one a little less accurate than the others, since you\u0027ll throw it away; store the current trajectory and shift it over to the last calculated every time you recalculate things forward. Your ghost past and future trajectories now show the approximate error that will occur due to the player making a fraction-of-a-second error in the burn time. My only concern is that the less accurate future calculation might add a bit to the computational overhead, in which case you can simply use the old trajectory. Seems simple enough, especially if fainter colors are used for the ghost trajectories.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis sounds like a very good idea, it would help with visualising complicated transfers. It would only double the performance cost of dynamic integration, so that should not be too much of a problem.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tsevion\u0022 data-cite=\u0022Tsevion\u0022\u003E\u003Cdiv\u003EYou have no idea how much interop code I\u0027ve seen written where people do things like this. Good to see you\u0027re in the right frame of mind on this... I tend to assume people will do something insane and idiotic until proven otherwise.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is sadly a fairly good assumption in general.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EIf you need any help with interop, I\u0027ve done quite a bit of it over the years (All on Windows though, so no clue on the Mono/Linux/Mac fronts): P/Invoke, COM, C\u002B\u002B/CLI, using downright evil hooks to inject code from an outside process... so feel free to ask about any specifics you run into.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI won\u0027t refrain from expanding the list of open questions as new ones come up. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"ferram4","CreatedById":21328,"CreatedDateTime":"2014-02-06T06:33:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003EThat\u0027s what I was thinking about. Contours should be fairly trivial, I was wondering whether a mesh would be more readable though (it wouldn\u0027t be much harder, but some care would have to be taken in order to make the reference plane readable).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027d be afraid of the mesh being difficult to read due to the fact that we\u0027re dealing with 3D visualizations, which might make the location of particular dips and rises difficult to pinpoint. Contours could be projected onto a plane, removing that issue completely.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003ERegarding the choice of plane, how about the Keplerian orbital plane? That makes things usable for inclined orbits, and it will pretty much do what you want in the CR3BP (I guess there will always be some edge cases, but if things work well in both the 2-body limit and the CR3BP I\u0027ll be happy for now).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, guess I\u0027m kinda over-complicating things. Fortunately, no one has a system that includes lots of bodies close together with high relative inclinations.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EIf I draw the potential, you\u0027ll get something more useful than the Hill sphere (and you\u0027ll see something that looks like the Hill sphere as one of the contours).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI mean as a subtle kind of highlighting or darkening of the contour. Not enough for it to jump out and scream \u0022THIS IS A HILL SPHERE,\u0022 but enough that it grabs the player\u0027s eye, marking it as important, even if it\u0027s only subconsciously. Subtleties can go a long way towards making things clearer with no one even realizing that it\u0027s there.\u003C/p\u003E\n"},{"CreatedByName":"Faark","CreatedById":69775,"CreatedDateTime":"2014-02-06T09:05:03Z","Content":"\n\u003Cp\u003ENo code available yet to peek into?\u003C/p\u003E\u003Cp\u003EAnd just to save you some googling time in case you don\u0027t already know (since i had to deal with it recently): 2010 and newer version of Visual Studio do not support targeting .net frameworks below 4.0 for c\u002B\u002B/cli assemblies, so you might want to use the vs2008/v90 platform toolset.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-06T09:07:06Z\u0022 title=\u002202/06/2014 09:07  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 6, 2014\u003C/time\u003E by Faark\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-02-06T09:43:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Faark\u0022 data-cite=\u0022Faark\u0022\u003E\u003Cdiv\u003ENo code available yet to peek into?\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022me, in OP\u0022 data-cite=\u0022me, in OP\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EExpect a slow development cycle, due to a combination of laziness, exams, and this actually being a complicated project.\u003C/p\u003E\u003Cp\u003EI\u0027ll put the source on GitHub as soon as I can clean things up a bit (there are quite a few traces that were too hastily implemented for my taste). This might take a few days, see above.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe \u0027exams\u0027 thing will last until 2014-02-14 (only to come back in six months, and be replaced by \u0027studying\u0027 in the meantime). The other two reasons are here to stay. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAnd just to save you some googling time in case you don\u0027t already know (since i had to deal with it recently): 2010 and newer version of Visual Studio do not support targeting .net frameworks below 4.0 for c\u002B\u002B/cli assemblies, so you might want to use the vs2008/v90 platform toolset.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhy would I want to target .NET Framework assemblies below 4.0? I will only be using the C\u002B\u002B/CLI part for easier interfacing with the unmanaged C\u002B\u002B part (probably compiled with clang due to clang\u0027s interpretation of long double). Anyway, I\u0027m not downgrading this project to VS2008 (though I have it somewhere), bad things would be likely to happen. I\u0027d rather do the marshaling myself if the C\u002B\u002B/CLI scheme doesn\u0027t work out.\u003C/p\u003E\u003Cp\u003ERewriting stuff in C\u002B\u002B is not my first priority at the moment though; a tremendous speedup will already come from using a better integrator.\u003C/p\u003E\u003Cp\u003EThe expected order of development can be seen in the \u0027further modding\u0027 section (though neat visualisations, such as drawing gravitational potentials, are fun to write and make for great screenshots, so I might implement those sooner than I should). \u003C/p\u003E\u003Cp\u003EOne of my first tasks will therefore be to find out a way to grab the acceleration of the vessel (not due to gravity) and plug that in my integrator.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-02-06T09:50:20Z\u0022 title=\u002202/06/2014 09:50  AM\u0022 data-short=\u002210 yr\u0022\u003EFebruary 6, 2014\u003C/time\u003E by eggrobin\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"asmi","CreatedById":59068,"CreatedDateTime":"2014-02-06T12:11:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Faark\u0022 data-cite=\u0022Faark\u0022\u003E\u003Cdiv\u003ENo code available yet to peek into?\u003Cp\u003EAnd just to save you some googling time in case you don\u0027t already know (since i had to deal with it recently): 2010 and newer version of Visual Studio do not support targeting .net frameworks below 4.0 for c\u002B\u002B/cli assemblies, so you might want to use the vs2008/v90 platform toolset.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat is not true. I use vs2012 for my mod projects without any issues.\u003C/p\u003E\n"},{"CreatedByName":"timmers_uk","CreatedById":97413,"CreatedDateTime":"2014-02-06T12:12:57Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003EWhy would I want to target .NET Framework assemblies below 4.0? I will only be using the C\u002B\u002B/CLI part for easier interfacing with the unmanaged C\u002B\u002B part (probably compiled with clang due to clang\u0027s interpretation of long double). Anyway, I\u0027m not downgrading this project to VS2008 (though I have it somewhere), bad things would be likely to happen. I\u0027d rather do the marshaling myself if the C\u002B\u002B/CLI scheme doesn\u0027t work out.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think the comment is because the Mono ontop of which Unity\u0027s built, on top of which KSP is built (why am I now imagining a very wobbly pile of wobbly things) ... is equivalent to .net 3.5 assemblies - ISTR I got bitten by that but only once I started including reflection code or something - quite possibly you\u0027ll get similar issues in the managed/unmanaged boundary if your building to 4.0\u002B dlls and then try to use them with KSP?\u003C/p\u003E\u003Cp\u003Eedit to add : @asmi - I think the problem may come with vs2010\u002B when you mix C\u002B\u002B and C# in your assembly and then try to target .net 3.5\u003C/p\u003E\n"},{"CreatedByName":"asmi","CreatedById":59068,"CreatedDateTime":"2014-02-06T15:30:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ferram4\u0022 data-cite=\u0022ferram4\u0022\u003E\u003Cdiv\u003EI have an idea here: once you start something under thrust, show the current trajectory (time t), the last calculated trajectory (time t-\u00C3\u017D\u00E2\u20ACt), and the estimated trajectory based on the craft\u0027s instantaneous acceleration a slight bit in the future (time t \u002B \u00C3\u017D\u00E2\u20ACt). Make the last one a little less accurate than the others, since you\u0027ll throw it away; store the current trajectory and shift it over to the last calculated every time you recalculate things forward. Your ghost past and future trajectories now show the approximate error that will occur due to the player making a fraction-of-a-second error in the burn time. My only concern is that the less accurate future calculation might add a bit to the computational overhead, in which case you can simply use the old trajectory. Seems simple enough, especially if fainter colors are used for the ghost trajectories.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat might not work for performance reasons. The best I\u0027ve managed to get 100k steps of RK5(4) executed is in about 1 second if my memory serves me - that it\u0027s on powerful i7 3930K CPU with significant portions of code written manually on SSE2/3 intrinsics (=assembly). \u003C/p\u003E\u003Cp\u003EAnd in your case it will have to be done \u003Cstrong\u003Ein addition\u003C/strong\u003E to regular updates calculations. You could probably run it for t and (t\u002Bdt) in parallel on separate cores if you write the code carefully not to use any shared state, but experience with my mod (which is heavily parallel and extensively uses all available cores) indicates that there are enough users here with relatively weak 2-core or even 1-core CPUs.\u003C/p\u003E\n"},{"CreatedByName":"Faark","CreatedById":69775,"CreatedDateTime":"2014-02-06T15:58:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022asmi\u0022 data-cite=\u0022asmi\u0022\u003E\u003Cdiv\u003EThat is not true. I use vs2012 for my mod projects without any issues.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell, its an \u003Ca href=\u0022https://connect.microsoft.com/VisualStudio/feedback/details/780602/compiling-c-clr-dll-in-vs-2012-targeting-net-2-0-introduces-indirect-dependency-on-net-4-0#tabs\u0022 rel=\u0022external nofollow\u0022\u003Eofficial statement from MS regarding cli/c\u002B\u002B assemblies on vs2010\u002B that target \u0026lt;net4\u003C/a\u003E, so you might want to check out your assembly in ILSpy or sth similar. You will most likely find a \u0022Runtime: .NET 4.0\u0022 and reference of mscorlib and System.dll to both version 2.0 and 4.0, like this:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/NlnyuD7.png?1\u0022 alt=\u0022NlnyuD7.png?1\u0022\u003E\u003C/p\u003E\u003Cp\u003EOfc that might not be a problem and Unity-Mono simply ignores those references to non-existent librarys... until you accidentally use any feature that requires .NET 4.0 and you just don\u0027t get whats wrong, especially since it compiles just fine. Thats the same reason we frequently tell newer modders to target a framework lower than 4.0 that is more compatible with Ksp\u0027s Unity-Mono.\u003C/p\u003E\u003Cp\u003EI found about about those CLI/C\u002B\u002B limitation when i tried to use my library in a C# project that properly targeted a pure .NET 2 runtime. But hey, if it works for you, no one will force you to change anything. And in case you experience \u0022crazy\u0022 issues you now know an additional possible source.\u003C/p\u003E\n"}]}