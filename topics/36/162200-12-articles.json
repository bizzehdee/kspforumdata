{"TopicId":162200,"ForumId":36,"TopicTitle":"[WIP][1.8.1, 1.9.1, 1.10.1, 1.11.0\u20132, 1.12.2\u20135] Principia\u2014version \u200E\u200EKleene, released 2024-07-05\u2014n-Body and Extended Body Gravitation","CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-02-05T00:19:35Z","PageNum":12,"Articles":[{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-06-27T13:50:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022mic_e\u0022 data-cite=\u0022mic_e\u0022\u003E\u003Cdiv\u003EI must say I think you\u0027re overdoing the performance thing. Using an entirely different, even non-CLI language with platform-specific binaries, with all the trouble of interfacing it correctly and testing the release on every supported platform for every release, is a huge sacrifice just for 30%... I don\u0027t like C# either, and write all my performance-critical code in c\u002B\u002B1y, but for KSP modding I\u0027d just stick to C#...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAs explained earlier, the main reason for using C\u002B\u002B is not performance but language features (I want strongly-typed quantities and reference frames). It greatly helps with testing, since Google\u0027s glog, gtest and gmock libraries can be used, as well as benchmarking (using google/benchmark).\u003C/p\u003E\u003Cp\u003EPerformance \u003Cem\u003Eis\u003C/em\u003E a critical concern here, and if I were to use CLR, I would need to write unsafe C# or C\u002B\u002B98/CLI (75% speedup in my benchmarks). I\u0027d also like to avoid doing calculations in both languages (especially since unchecked quantities and reference frames get messy in C#), so the idea is to do as much as possible in C\u002B\u002B.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EWriting everything in C#, and then, after everything is stable and tested, putting a few performance-critical loops (\u0026lt; 100 lines of code) into a native dll, with a fallback to the original C# code if the native dll fails/is not available would have seemed like a far more reasonable approach to me.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis was my original intent (first with C#, then with C\u002B\u002B/CLI), but I drifted away from it for the aforementioned reasons. Having to reimplement things in both C# and C\u002B\u002B would be a right mess, and I would not be able to have decent abstractions with thunks so far down.\u003C/p\u003E\u003Cp\u003EPortability should not be a significant concern here (beyond making a couple of builds), except perhaps when it comes to multithreading. It\u0027s mostly a question of handling 64 vs. 32 bits, and I get significant performance and readability improvements.\u003C/p\u003E\u003Cp\u003EMoreover, the quantities, geometry, integrators and physics library can be useful on their own, whereas they would be messy (quantities could not exist, and geometry would be next to useless, therefore integrators and physics could not be strongly typed) and underperformed in C#.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EHow come your figures for \u002757 varieties of UNIX\u0027? As far as I see it, it comes down to win32, win64, osx (does 32 even exist?), linux32 (barely anybody uses that anymore), linux64. I _think_ linux binaries even work on most BSDs these days.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Ca href=\u0022https://en.wikipedia.org/wiki/Heinz_57\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://en.wikipedia.org/wiki/Heinz_57\u003C/a\u003E,\n\u003C/p\u003E\u003Cdiv class=\u0022ipsEmbeddedVideo\u0022 contenteditable=\u0022false\u0022\u003E\u003Cdiv\u003E\u003Ciframe width=\u0022480\u0022 height=\u0022270\u0022 src=\u0022https://www.youtube.com/embed/wncTgMi3pWc?feature=oembed\u0022 frameborder=\u00220\u0022 allowfullscreen=\u0022true\u0022\u003E\u003C/iframe\u003E\u003C/div\u003E\u003C/div\u003E. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003Cp\u003EYes, the number is smaller, but I\u0027m not familiar with compatibility details between unix binaries.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EWhat about the GNU standard library/compiler? It has been ported to Windows in the form of mingw32/mingw64, works pretty well, and _should_ be 1:1 interchangable with LLVM (just replace \u0027g\u002B\u002B\u0027 with \u0027clang\u002B\u002B\u0027 in the Makefile). In my experience, gcc binaries even are a little bit faster than clang\u0027s (and a lot faster than Microsoft\u0027s).\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EGCC tends to have long-lasting bugs regarding standard compliance (\u003Ca href=\u0022https://gcc.gnu.org/bugzilla/show_bug.cgi?id=31417\u0022 rel=\u0022external nofollow\u0022\u003EIt\u0027s not just a C\u002B\u002B thing.\u003C/a\u003E Nota bene, I\u0027m not talking about extensions, I\u0027m talking about bugs in the implementation of the standard). MSVC has the same problem (it\u0027s rather worse) of course.\u003C/p\u003E\u003Cp\u003EGCC is also notorious for its sybilline error messages (it\u0027s even worse than MSVC) when templates are involved.\u003C/p\u003E\u003Cp\u003ECertainly for Macintosh, LLVM is the way to go. In term of convenience of development, having a standard-compliant compiler that gives meaningful error messages is nice.\u003C/p\u003E\u003Cp\u003ESince we are following the Google C\u002B\u002B styleguide and Google is developing clang-based utilities for that (include-what-you-use, clang-tidy), it makes sense to head towards clang.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E(peeks at the github) wow, that\u0027s a lot of commits; congratulations. You really _are_ putting a _lot_ of effort into this... (bows in awe)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks! Bear in mind though that I also tend to commit often and make \u003Ca href=\u0022https://github.com/mockingbirdnest/Principia/commit/ef8504ba9fc409477bf830d34d3eef1007efe4b7\u0022 rel=\u0022external nofollow\u0022\u003Etiny commits\u003C/a\u003E \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003ESomething that\u0027s not visible in the Principia repository is the google/benchmark \u003Ca href=\u0022https://github.com/pleroy/benchmark/tree/Windows\u0022 rel=\u0022external nofollow\u0022\u003Eport to Windows\u003C/a\u003E, which was done by \u003Ca href=\u0022https://github.com/pleroy\u0022 rel=\u0022external nofollow\u0022\u003Epleroy\u003C/a\u003E.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-27T14:10:05Z\u0022 title=\u002206/27/2014 02:10  PM\u0022 data-short=\u002210 yr\u0022\u003EJune 27, 2014\u003C/time\u003E by eggrobin\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"rhoark","CreatedById":57151,"CreatedDateTime":"2014-06-27T14:17:47Z","Content":"\n\u003Cp\u003EI was interested in using F# for my project, as it has a well regarded type system for physical units. The free version is apparently only for web apps somehow. I decided to muddle through with C# rather than commit an open-ended amount of time to figuring out how to hook F# to KSP.\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-06-27T14:28:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022rhoark\u0022 data-cite=\u0022rhoark\u0022\u003E\u003Cdiv\u003EI was interested in using F# for my project, as it has a well regarded type system for physical units. The free version is apparently only for web apps somehow. I decided to muddle through with C# rather than commit an open-ended amount of time to figuring out how to hook F# to KSP.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt\u0027s fairly trivial to make F# work with KSP (VB is however not an option because neither Unity nor KSP are CLS-compliant).\u003C/p\u003E\u003Cp\u003EIf I recall correctly F# supports units, rather than physical quantities per se (with our quantities library, \u003Cspan style=\u0022color:#808080;\u0022\u003E\u003Cspan style=\u0022font-family:Fixedsys;\u0022\u003Eprincipia\u003C/span\u003E\u003C/span\u003E::\u003Cspan style=\u0022color:#808080;\u0022\u003Esi\u003C/span\u003E::Metre and \u003Cspan style=\u0022color:#808080;\u0022\u003E\u003Cspan style=\u0022font-family:Fixedsys;\u0022\u003Eprincipia\u003C/span\u003E\u003C/span\u003E::\u003Cspan style=\u0022color:#808080;\u0022\u003Euk\u003C/span\u003E::\u003Cspan style=\u0022color:#808080;\u0022\u003Eadmiralty\u003C/span\u003E::Fathom have the same type, \u003Cspan style=\u0022color:#808080;\u0022\u003E\u003Cspan style=\u0022font-family:Fixedsys;\u0022\u003Eprincipia\u003C/span\u003E\u003C/span\u003E::\u003Cspan style=\u0022color:#808080;\u0022\u003Equantities\u003C/span\u003E::\u003Cspan style=\u0022color:#008080;\u0022\u003ELength\u003C/span\u003E).\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EEDIT:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EHere\u0027s an F# plugin. You need to include FSharp.Core.dll with your plugin (part of the F# Redistributable Package) for it to work.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Enamespace FSharp\u003Cbr\u003Eopen UnityEngine\u003Cbr\u003E[\u0026lt;KSPAddon(KSPAddon.Startup.MainMenu, false)\u0026gt;]\u003Cbr\u003Etype HelloWorld() = class\u003Cbr\u003E    inherit MonoBehaviour()\u003Cbr\u003E    member this.OnGUI() =\u003Cbr\u003E      if HighLogic.LoadedScene.Equals GameScenes.MAINMENU then\u003Cbr\u003E        GUI.Button(Rect(100.0f, 80.0f, 120.0f, 30.0f),\u003Cbr\u003E                   \u0022Hello from F#!\u0022) |\u0026gt; ignore\u003Cbr\u003E    end\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-06-27T14:37:01Z\u0022 title=\u002206/27/2014 02:37  PM\u0022 data-short=\u002210 yr\u0022\u003EJune 27, 2014\u003C/time\u003E by eggrobin\u003C/strong\u003E\n\u003Cbr\u003Eand here\u0026#039;s how.\n\u003C/span\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-06-27T14:57:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Garek\u0022 data-cite=\u0022Garek\u0022\u003E\u003Cdiv\u003E(Emphasis mine)\u003Cp\u003EYou actually want to do ~116 builds? I mean, automation helps, but the sheer amount of binaries would be...impressive. I use manjaro and personally would be okay with building myself from a Makefile (which would propably be the same at least for everyone using the gcc toolset).\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ll have to work with people who actually have the various unixes to test these builds (and maybe build them). 57 is made up though, see post #276. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Garek","CreatedById":73214,"CreatedDateTime":"2014-06-27T22:07:36Z","Content":"\n\u003Cp\u003EAnother thing which came to my mind: what about savegame compatibility?\u003C/p\u003E\u003Cp\u003EIf one starts a savegame now, with the regular patched conics, and later, when this mod is ready installs it, what would happen to crafts already in space?\u003C/p\u003E\u003Cp\u003EI\u0027m especially interested in\u003C/p\u003E\u003Cp\u003Ea) craft that is meant to stay in a certain orbit over an extended period of time, e.g. stations, communictation satelites. So \u0027closed\u0027 orbits around a primary body, clear of any orbiting moons etc.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E a savegame using RSS instead of the stock System, if that makes a difference (I\u0027m really not a astrophysicist \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E )\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-06-27T22:54:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Garek\u0022 data-cite=\u0022Garek\u0022\u003E\u003Cdiv\u003EAnother thing which came to my mind: what about savegame compatibility?\u003Cp\u003EIf one starts a savegame now, with the regular patched conics, and later, when this mod is ready installs it, what would happen to crafts already in space?\u003C/p\u003E\u003Cp\u003EI\u0027m especially interested in\u003C/p\u003E\u003Cp\u003Ea) craft that is meant to stay in a certain orbit over an extended period of time, e.g. stations, communictation satelites. So \u0027closed\u0027 orbits around a primary body, clear of any orbiting moons etc.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E a savegame using RSS instead of the stock System, if that makes a difference (I\u0027m really not a astrophysicist \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E )\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t know, I haven\u0027t thought about persistence yet. I\u0027d like to persist the state of the system myself (in cartesian coordinates in the integration frame, in double-double precision) to avoid loss of precision (keeping the error from Kahan summation). If I just store the conics it depends on whether I interpret them as barycentric or primary-centric.\u003C/p\u003E\n"},{"CreatedByName":"Yoggy","CreatedById":111872,"CreatedDateTime":"2014-06-28T01:29:35Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003EI\u0027ll have to work with people who actually have the various unixes to test these builds (and maybe build them). 57 is made up though, see post #276. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI use 64-bit Ubuntu 12.04 and can help with building/testing.\u003C/p\u003E\n"},{"CreatedByName":"Chuban","CreatedById":113853,"CreatedDateTime":"2014-06-28T02:47:27Z","Content":"\n\u003Cp\u003ECount me in if you need any help testing. I\u0027m using 64-bit Ubuntu 14.04.\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-07-04T21:28:23Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003EStatus update:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EI wrote the second explanatory post, on \u003Ca href=\u0022https://github.com/mockingbirdnest/Principia/blob/master/documentation/Hamiltonian%20Mechanics.pdf?raw=true\u0022 rel=\u0022external nofollow\u0022\u003EHamiltonian mechanics (PDF)\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003EPrerequisites are chapters 4, 8, and sections 11-4 and 11-5 of Richard Feynman\u0027s \u003Cem\u003ELectures on Physics\u003C/em\u003E.\u003C/p\u003E\u003Cp\u003EThe next post will be on symplecticity and the leapfrog integrator.\u003C/p\u003E\n"},{"CreatedByName":"BlazingAngel665","CreatedById":30182,"CreatedDateTime":"2014-07-06T02:49:07Z","Content":"\n\u003Cp\u003EAfter the wonderful excursion into the realm of energy conservation to limit error accumulation in the orbit (I think I understood that) I am thoroughly impressed with you grasp of these topics, and thank you for your dedication to this project. I can\u0027t wait to to take Principia for a spin around the Kerbol system.\u003C/p\u003E\n"},{"CreatedByName":"db48x","CreatedById":66108,"CreatedDateTime":"2014-07-24T09:43:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003EStatus update:\u003C/strong\u003E\u003Cp\u003EI wrote the second explanatory post, on \u003Ca href=\u0022https://github.com/mockingbirdnest/Principia/blob/master/documentation/Hamiltonian%20Mechanics.pdf?raw=true\u0022 rel=\u0022external nofollow\u0022\u003EHamiltonian mechanics (PDF)\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003EPrerequisites are chapters 4, 8, and sections 11-4 and 11-5 of Richard Feynman\u0027s \u003Cem\u003ELectures on Physics\u003C/em\u003E.\u003C/p\u003E\u003Cp\u003EThe next post will be on symplecticity and the leapfrog integrator.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EA good read. You remind me that I need to get back in to Structure and Interpretation of Classical Mechanics; I put it down because I really needed to set up the software environment and play with it.\u003C/p\u003E\n"},{"CreatedByName":"Fred4106","CreatedById":78992,"CreatedDateTime":"2014-07-29T01:26:39Z","Content":"\n\u003Cp\u003EI noticed the last post was 24 days ago and the last commit was 20 days ago. Is this still an active project?\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-07-29T09:38:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Fred4106\u0022 data-cite=\u0022Fred4106\u0022\u003E\u003Cdiv\u003EI noticed the last post was 24 days ago and the last commit was 20 days ago. Is this still an active project?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAbsolutely, I discussed some changes to NBodySystem and Body, and a new class, Trajectory, in order to have the requisite abstractions to keep several alternative trajectories (predicted, actual, manoeuvre nodes, etc.) with \u003Cstrong\u003Epleroy\u003C/strong\u003E last weekend. Actual coding on my part has halted due to exams, and will resume in September. \u003Cstrong\u003Epleroy\u003C/strong\u003E might find some time to implement these API changes, which I could then review.\u003C/p\u003E\n"},{"CreatedByName":"thorfinn","CreatedById":8349,"CreatedDateTime":"2014-07-29T09:53:12Z","Content":"\n\u003Cp\u003EYou understand that there are George R.R. Martin levels of anticipation around here for this.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E :D\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-07-29T11:11:38Z","Content":"\n\u003Cp\u003EThe Krakens are coming.\u003C/p\u003E\u003Cp\u003EAnyway. More of that maths stuff and things.\u003C/p\u003E\n"},{"CreatedByName":"Fred4106","CreatedById":78992,"CreatedDateTime":"2014-07-29T19:12:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003EAbsolutely, I discussed some changes to NBodySystem and Body, and a new class, Trajectory, in order to have the requisite abstractions to keep several alternative trajectories (predicted, actual, manoeuvre nodes, etc.) with \u003Cstrong\u003Epleroy\u003C/strong\u003E last weekend. Actual coding on my part has halted due to exams, and will resume in September. \u003Cstrong\u003Epleroy\u003C/strong\u003E might find some time to implement these API changes, which I could then review.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIs there a guide/readme out there to get everything to build on windows (8.1). I have a pretty solid math and programming background and I would like to help out if I could. I spent about an hour trying to set everything up, but I did not get very far.\u003C/p\u003E\n"},{"CreatedByName":"Mr Shifty","CreatedById":68146,"CreatedDateTime":"2014-07-29T20:52:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022thorfinn\u0022 data-cite=\u0022thorfinn\u0022\u003E\u003Cdiv\u003EYou understand that there are George R.R. Martin levels of anticipation around here for this.\u003Cp\u003E\u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E :D\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think this potential mod is more interesting for being able to draw trajectories in the rotating reference frame of particular bodies than it is for being able to implement n-body physics. Once n-body is working, everyone will jump on board for 2 days, figure out that the lack of station keeping capability makes most of the L-point rendezvous useless and that there\u0027s really nothing there except space, and the hullabaloo will die out. Orbiter\u0027s had n-body physics (and non-spherical gravity and exosphere drag and gravity gradient torque and solar radiation pressure and etc etc) for ages and no one goes to the L-points there. I\u0027d be way more excited if someone was working on axial tilt.\u003C/p\u003E\n"},{"CreatedByName":"thorfinn","CreatedById":8349,"CreatedDateTime":"2014-07-29T22:59:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Mr Shifty\u0022 data-cite=\u0022Mr Shifty\u0022\u003E\u003Cdiv\u003Efigure out that the lack of station keeping capability makes most of the L-point rendezvous useless\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWell,\u003Cstrong\u003E he wants\u003C/strong\u003E to give us a station keeping capability \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E (There has been some discussion of different algorithms for loosely coupled and tightly coupled orbits, \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/68502-WIP-Principia-N-Body-Gravitation-and-Better-Integrators-for-Kerbal-Space-Program?p=962595\u0026amp;viewfull=1#post962595\u0022 rel=\u0022external nofollow\u0022\u003Esee posts around here\u003C/a\u003E)\u003C/p\u003E\u003Cp\u003EActually the part that interests \u003Cem\u003Eme\u003C/em\u003E most is also not the n-body, but the forces integration in timewarp: which means realistic ion/plasma engines with operation times of months, realistic NTR maneuvers which don\u0027t keep you in front of the screen for half an hour, and with the help of Ferram also almost-real time aerobrake calculations, impact point calculation in atmosphere, maybe even a plane autopilot could be possible...\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-07-29T23:30:56Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Mr Shifty\u0022 data-cite=\u0022Mr Shifty\u0022\u003E\u003Cdiv\u003E Orbiter\u0027s had n-body physics (and non-spherical gravity and exosphere drag and gravity gradient torque and solar radiation pressure and etc etc) for ages and no one goes to the L-points there.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAren\u0027t L points crucial for continuous system-wide comm coverage? This could be fun for Remote Tech 2 users.\u003C/p\u003E\n"},{"CreatedByName":"Mr Shifty","CreatedById":68146,"CreatedDateTime":"2014-07-30T02:42:30Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022thorfinn\u0022 data-cite=\u0022thorfinn\u0022\u003E\u003Cdiv\u003EWell,\u003Cstrong\u003E he wants\u003C/strong\u003E to give us a station keeping capability \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E (There has been some discussion of different algorithms for loosely coupled and tightly coupled orbits, \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/68502-WIP-Principia-N-Body-Gravitation-and-Better-Integrators-for-Kerbal-Space-Program?p=962595\u0026amp;viewfull=1#post962595\u0022 rel=\u0022external nofollow\u0022\u003Esee posts around here\u003C/a\u003E)\u003Cp\u003EActually the part that interests \u003Cem\u003Eme\u003C/em\u003E most is also not the n-body, but the forces integration in timewarp: which means realistic ion/plasma engines with operation times of months, realistic NTR maneuvers which don\u0027t keep you in front of the screen for half an hour, and with the help of Ferram also almost-real time aerobrake calculations, impact point calculation in atmosphere, maybe even a plane autopilot could be possible...\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOK, that actually does sound quite interesting. I\u0027ve thought this project looked cool for quite awhile because the trajectories it can draw, but the continuous forces integration makes it very exciting. (But I couldn\u0027t care less about n-body physics or L-points.)\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cpt. Kipard\u0022 data-cite=\u0022Cpt. Kipard\u0022\u003E\u003Cdiv\u003EAren\u0027t L points crucial for continuous system-wide comm coverage? This could be fun for Remote Tech 2 users.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIn real life, there are 3 scientific probes orbiting at ESL1 and 1 at ESL2. Those are the only probes currently orbiting around any L-point. None of them are communications satellites.\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-07-30T03:11:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Mr Shifty\u0022 data-cite=\u0022Mr Shifty\u0022\u003E\u003Cdiv\u003EIn real life...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhat are you talking about?\u003C/p\u003E\u003Cp\u003EBecause I\u0027m talking about system-wide communications in Kerbal Space Program, i.e. from planet to planet. You can use L points 4 an 5 to relay signals between opposite sides of the sun. Actually not as crucial as I thought.\u003C/p\u003E\n"},{"CreatedByName":"AndreyATGB","CreatedById":62674,"CreatedDateTime":"2014-07-30T08:22:51Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Fred4106\u0022 data-cite=\u0022Fred4106\u0022\u003E\u003Cdiv\u003EIs there a guide/readme out there to get everything to build on windows (8.1). I have a pretty solid math and programming background and I would like to help out if I could. I spent about an hour trying to set everything up, but I did not get very far.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDo \u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Setting_up_Visual_Studio\u0022 rel=\u0022external nofollow\u0022\u003Ethis\u003C/a\u003E first.\u003C/p\u003E\u003Cp\u003EThen, download the repo and open the .sln file. You\u0027re gonna need to right click on references and add mono/unity-engine to integrators, Principia and Newtonian physics. You can then build-\u0026gt; run solution. It will output dll\u0027s in the respective folders of the things you compiled, but I think all 3 necessary are in Principia.\u003C/p\u003E\n"},{"CreatedByName":"eggrobin","CreatedById":4680,"CreatedDateTime":"2014-07-30T10:30:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Fred4106\u0022 data-cite=\u0022Fred4106\u0022\u003E\u003Cdiv\u003EIs there a guide/readme out there to get everything to build on windows (8.1). I have a pretty solid math and programming background and I would like to help out if I could. I spent about an hour trying to set everything up, but I did not get very far.\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AndreyATGB\u0022 data-cite=\u0022AndreyATGB\u0022\u003E\u003Cdiv\u003EDo \u003Ca href=\u0022http://wiki.kerbalspaceprogram.com/wiki/Setting_up_Visual_Studio\u0022 rel=\u0022external nofollow\u0022\u003Ethis\u003C/a\u003E first.\u003Cp\u003EThen, download the repo and open the .sln file. You\u0027re gonna need to right click on references and add mono/unity-engine to integrators, Principia and Newtonian physics. You can then build-\u0026gt; run solution. It will output dll\u0027s in the respective folders of the things you compiled, but I think all 3 necessary are in Principia.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis won\u0027t build any of the C\u002B\u002B (which consists in tests and benchmarks only, the plugin is not done yet), only the C# prototype (which is obsolete).\u003C/p\u003E\u003Cp\u003EYou can try these \u003Ca href=\u0022https://github.com/mockingbirdnest/Principia/blob/master/documentation/Setup.md\u0022 rel=\u0022external nofollow\u0022\u003Econvoluted instructions\u003C/a\u003E (I want to put more of that into the patch file so that it\u0027s not 24 steps long, but that\u0027s not a very high priority). They work on Visual Studio 2013 Ultimate, perhaps they will work with Express too. You need 2013, since you need C\u002B\u002B11 support.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-30T10:43:17Z\u0022 title=\u002207/30/2014 10:43  AM\u0022 data-short=\u00229 yr\u0022\u003EJuly 30, 2014\u003C/time\u003E by eggrobin\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Mr Shifty","CreatedById":68146,"CreatedDateTime":"2014-07-30T14:36:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cpt. Kipard\u0022 data-cite=\u0022Cpt. Kipard\u0022\u003E\u003Cdiv\u003EWhat are you talking about?\u003Cp\u003EBecause I\u0027m talking about system-wide communications in Kerbal Space Program, i.e. from planet to planet. You can use L points 4 an 5 to relay signals between opposite sides of the sun. Actually not as crucial as I thought.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMy point was that L-points are not very useful for communications satellites, which explains why we don\u0027t now have and never have had any communications satellite at real-life Lagrange points. Think of this: imagine you could put comms satellites in a stable orbit at the Kerbin-Mun Trojan points. These points lie nearly on the Mun\u0027s orbit, but 60\u00C3\u201A\u00C2\u00B0 ahead of or behind the Mun. So, even with satellites at both points, there would still be a 60\u00C3\u201A\u00C2\u00B0 region opposite Kerbin that is invisible to the satellites. The current RT solution of putting satellites on the Mun\u0027s orbit, but just outside its SOI works better because it covers more of the Mun\u0027s surface.\u003C/p\u003E\u003Cp\u003ELagrange points are only relevant for a particular two body system and only stationary within the rotating reference frame of that system. A Jool-Sun L4 point, for instance, would rotate around the Sun (or rather around the Jool-Sun barycenter) with Jool. It would not be stationary with respect to any of the other planets, so you couldn\u0027t use it as a reliable relay. RT2 has a couple of late-tech dishes that can reach from one side of Eeloo\u0027s orbit to the other, so nothing inside the kerbal solar system is out of their range.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-30T14:49:47Z\u0022 title=\u002207/30/2014 02:49  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 30, 2014\u003C/time\u003E by Mr Shifty\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Fred4106","CreatedById":78992,"CreatedDateTime":"2014-07-30T15:42:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022eggrobin\u0022 data-cite=\u0022eggrobin\u0022\u003E\u003Cdiv\u003EThis won\u0027t build any of the C\u002B\u002B (which consists in tests and benchmarks only, the plugin is not done yet), only the C# prototype (which is obsolete).\u003Cp\u003EYou can try these \u003Ca href=\u0022https://github.com/mockingbirdnest/Principia/blob/master/documentation/Setup.md\u0022 rel=\u0022external nofollow\u0022\u003Econvoluted instructions\u003C/a\u003E (I want to put more of that into the patch file so that it\u0027s not 24 steps long, but that\u0027s not a very high priority). They work on Visual Studio 2013 Ultimate, perhaps they will work with Express too. You need 2013, since you need C\u002B\u002B11 support.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI might not know enough about math to help with the actual project, but Ill work on the patch file when I get home tonight.\u003C/p\u003E\n"}]}