{"TopicId":120776,"ForumId":36,"TopicTitle":"[Plugin] [Design Stage] Modular Mass Modifier - A better system for modifying part mass","CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2015-09-13T00:24:38Z","PageNum":1,"Articles":[{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2015-09-13T00:24:38Z","Content":"\n\u003Cp\u003EThe current options for modifying a part\u0027s mass aren\u0027t very good. You can implement IPartMassModifier, but that mass doesn\u0027t affect physics at all. You can modify the part\u0027s mass, but if you have more than one module trying to do that, you\u0027re going to run into trouble. Therefore I am proposing a new system for part mass modification:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EA single module will handle all mass modifications and update part.mass\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EOther modules that wish to modify a part\u0027s mass will implement an interface similar to IPartMassModifier\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThe part\u0027s mass will be automatically updated on part update events, but modules may request a manual update if necessary\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI\u0027ve got the basic implementation details worked out in code below. Still a lot of work to be done, but most of the major stuff is there\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cdiv\u003E\u003Cbr\u003Epublic interface IPartMassModifier2\u003Cbr\u003E{\u003Cbr\u003E float GetModuleMass(float baseMass);\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003Epublic class PartMassModifierModule : PartModule, IPartMassModifier\u003Cbr\u003E{\u003Cbr\u003E public float BaseMass { get; private set; }\u003Cbr\u003E public float ModuleMass { get; private set; }\u003Cbr\u003E public float Mass { get { return BaseMass \u002B ModuleMass; } }\u003Cbr\u003E\u003Cbr\u003E public override void OnStart(PartModule.StartState state)\u003Cbr\u003E {\u003Cbr\u003E base.OnStart(state);\u003Cbr\u003E\u003Cbr\u003E BaseMass = part.GetPrefab().mass;\u003Cbr\u003E\u003Cbr\u003E if (state == PartModule.StartState.Editor)\u003Cbr\u003E GameEvents.onEditorPartEvent.Add(OnEditorPartUpdate);\u003Cbr\u003E else\u003Cbr\u003E GameEvents.onVesselUpdate.Add(OnVesselUpdate);\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E private void OnDestroy()\u003Cbr\u003E {\u003Cbr\u003E GameEvents.onEditorPartEvent.Remove(OnEditorPartUpdate);\u003Cbr\u003E GameEvents.onVesselUpdate.Remove(OnVesselUpdate);\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E [KSPEvent]\u003Cbr\u003E public void UpdateMass()\u003Cbr\u003E {\u003Cbr\u003E ModuleMass = 0f;\u003Cbr\u003E foreach (PartModule m in part.Modules)\u003Cbr\u003E {\u003Cbr\u003E if (m is IPartMassModifier2)\u003Cbr\u003E ModuleMass \u002B= (m as IPartMassModifier2).GetModuleMass(BaseMass);\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E part.mass = Mass;\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E private void OnEditorPartUpdate(ConstructionEventType eventType, Part part)\u003Cbr\u003E {\u003Cbr\u003E if (object.ReferenceEquals(part, this.part))\u003Cbr\u003E UpdateMass();\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E private void OnVesselUpdate(Vessel vessel)\u003Cbr\u003E {\u003Cbr\u003E if (object.ReferenceEquals(vessel, this.part.vessel))\u003Cbr\u003E UpdateMass();\u003Cbr\u003E }\u003Cbr\u003E\u003Cbr\u003E public float GetModuleMass(float baseMass)\u003Cbr\u003E {\u003Cbr\u003E if (baseMass == BaseMass)\u003Cbr\u003E return ModuleMass;\u003Cbr\u003E else if (baseMass == part.mass)\u003Cbr\u003E return 0f;\u003Cbr\u003E else\u003Cbr\u003E {\u003Cbr\u003E Debug.LogWarning(\u0022Warning: unrecognized mass detected\u0022);\u003Cbr\u003E return 0f;\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E}\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003ESo to all the plugin developers out there, I ask: does this seem like a reasonable system? Would you use it? Is there anything you feel is missing?\u003C/p\u003E\n"},{"CreatedByName":"*Aqua*","CreatedById":103926,"CreatedDateTime":"2015-09-13T08:13:11Z","Content":"\n\u003Cp\u003EYou forgot about the resource mass. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003Ewet mass = (dry) part mass \u002B module mass(es) \u002B resource mass\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003Edoes this seem like a reasonable system?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIMHO you replicate what the game already does. If a programmer wants to add mass, he can just add a module and set a mass attribute. KSP will take care of all calculations.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EWould you use it?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EProbably not. It\u0027s too much of a hassle to search the forums for small things like your interface. If there\u0027s a bundle which incorporates all the snippets I\u0027ll think about it.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-09-13T08:24:51Z\u0022 title=\u002209/13/2015 08:24  AM\u0022 data-short=\u00228 yr\u0022\u003ESeptember 13, 2015\u003C/time\u003E by *Aqua*\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2015-09-13T08:36:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022*Aqua*\u0022 data-cite=\u0022*Aqua*\u0022\u003E\u003Cdiv\u003EYou forgot about the resource mass. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003Cp\u003Ewet mass = (dry) part mass \u002B module mass(es) \u002B resource mass\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EKSP deals with resource mass correctly, so it doesn\u0027t need to be added\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022*Aqua*\u0022 data-cite=\u0022*Aqua*\u0022\u003E\u003Cdiv\u003EIMHO you replicate what the game already does. If a programmer wants to add mass, he can just add a module and set a mass attribute. KSP will take care of all calculations.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECurrently, you can have multiple modules affecting mass (but that mass won\u0027t count toward physics), OR you can affect physics (but only one module can do it). The goal here is to allow both.\u003C/p\u003E\n"},{"CreatedByName":"*Aqua*","CreatedById":103926,"CreatedDateTime":"2015-09-13T09:05:36Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022blowfish\u0022 data-cite=\u0022blowfish\u0022\u003E\u003Cdiv\u003ECurrently, you can have multiple modules affecting mass (but that mass won\u0027t count toward physics), OR you can affect physics (but only one module can do it).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI never heard of that. Are you sure?\u003C/p\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2015-09-13T09:22:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022*Aqua*\u0022 data-cite=\u0022*Aqua*\u0022\u003E\u003Cdiv\u003EI never heard of that. Are you sure?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m sure. IPartMassModifier has no effect on physics. You could possibly devise a system where multiple modules would carefully add their mass to part.mass then keep track of changes in that mass, but it would be messy and prone to error.\u003C/p\u003E\n"},{"CreatedByName":"Blackline","CreatedById":159475,"CreatedDateTime":"2016-11-20T00:45:53Z","Content":"\n\u003Cp\u003E\nSorry for necro-ing, but is the mass behavior still tihs way? Are there any \u0022new\u0022 ways since 1.2\u00A0for a module to have its own mass (which counts towards total part.mass)?\n\u003C/p\u003E\n\u003Cp\u003E\nCheers\n\u003C/p\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2016-11-23T08:08:42Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222857203\u0022 data-ipsquote-contentid=\u0022120776\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221479602753\u0022 data-ipsquote-userid=\u0022159475\u0022 data-ipsquote-username=\u0022Blackline\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 11/19/2016 at 4:45 PM, Blackline said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSorry for necro-ing, but is the mass behavior still tihs way? Are there any \u0022new\u0022 ways since 1.2\u00A0for a module to have its own mass (which counts towards total part.mass)?\n\u003C/p\u003E\n\u003Cp\u003E\nCheers\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThere\u0027s nothing new in this regard in 1.2, but since 1.0? We have \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EIPartMassModifier\u003C/span\u003E (and \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EIPartCostModifier\u003C/span\u003E\u00A0for cost), which, if implemented on a \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EPartModule\u003C/span\u003E, will tell KSP to add some mass to the part (or subtract even).\n\u003C/p\u003E\n"},{"CreatedByName":"Blackline","CreatedById":159475,"CreatedDateTime":"2016-11-23T15:23:17Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222861458\u0022 data-ipsquote-contentid=\u0022120776\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221479888522\u0022 data-ipsquote-userid=\u0022119688\u0022 data-ipsquote-username=\u0022blowfish\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n7 hours ago, blowfish said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nThere\u0027s nothing new in this regard in 1.2, but since 1.0? We have \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EIPartMassModifier\u003C/span\u003E (and \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EIPartCostModifier\u003C/span\u003E\u00A0for cost), which, if implemented on a \u003Cspan style=\u0022font-family:\u0027Courier New\u0027, Courier, monospace;\u0022\u003EPartModule\u003C/span\u003E, will tell KSP to add some mass to the part (or subtract even).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nBut are those additional masses used for physics calculations? Because you said in the \u003Cabbr title=\u0022Original Post(er). The first post in a thread, or the person who posted it.\u0022\u003EOP\u003C/abbr\u003E they are not.\n\u003C/p\u003E\n"},{"CreatedByName":"blowfish","CreatedById":119688,"CreatedDateTime":"2016-11-23T17:29:12Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222861737\u0022 data-ipsquote-contentid=\u0022120776\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221479914597\u0022 data-ipsquote-userid=\u0022159475\u0022 data-ipsquote-username=\u0022Blackline\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, Blackline said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nBut are those additional masses used for physics calculations? Because you said in the \u003Cabbr title=\u0022Original Post(er). The first post in a thread, or the person who posted it.\u0022\u003EOP\u003C/abbr\u003E they are not.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nYes, they are. \u00A0This thread is from before they did however.\n\u003C/p\u003E\n"},{"CreatedByName":"Blackline","CreatedById":159475,"CreatedDateTime":"2016-11-23T18:43:21Z","Content":"\n\u003Cp\u003E\nI wrote since 1.2, but I get that was not what I meant. sry, non-native. I meant if any changes happened from your \u003Cabbr title=\u0022Original Post(er). The first post in a thread, or the person who posted it.\u0022\u003EOP\u003C/abbr\u003E until now (1.2.x)\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ll try\u00A0the interfaces. thanks!\n\u003C/p\u003E\n"}]}