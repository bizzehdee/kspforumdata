{"TopicId":110715,"ForumId":36,"TopicTitle":"How to spawn objects w/ physics","CreatedByName":"Ravien","CreatedById":91920,"CreatedDateTime":"2015-05-24T23:27:09Z","PageNum":1,"Articles":[{"CreatedByName":"Ravien","CreatedById":91920,"CreatedDateTime":"2015-05-24T23:27:09Z","Content":"Could anyone can explain how to spawn and attach together objects/parts in KSP? \n\nIn this post - [http://forum.kerbalspaceprogram.com/threads/104103-SOLVED-Spawning-objects](https://forum.kerbalspaceprogram.com/threads/104103-SOLVED-Spawning-objects) lo-fi shows how to create potatoroid but as a static, non affected by physics object. \n\nI analyzed source code for KAS too, but some steps just eludes me."},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-05-25T04:52:54Z","Content":"I\u0027d look at extra planetary launch pads, it ought to point the way for you."},{"CreatedByName":"Ravien","CreatedById":91920,"CreatedDateTime":"2015-05-27T15:45:27Z","Content":"Sadly, Extraplanetary Launchpads uses *ShipConstruction.AssembleForLaunch(ShipConstruct ...)* and builds craft as a whole from .craft definition. I\u0027m looking for something else."},{"CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2015-05-27T17:08:27Z","Content":"Look at the code in KIS, specifically the file KIS\\_Shared. [https://github.com/KospY/KIS/blob/10bd061c7353219d2fa70a722ed7aaaf65a8b222/Plugins/Source/KIS_Shared.cs](https://github.com/KospY/KIS/blob/10bd061c7353219d2fa70a722ed7aaaf65a8b222/Plugins/Source/KIS_Shared.cs)\n\nThere are a ton of methods in here used to create proper physics parts."},{"CreatedByName":"Ravien","CreatedById":91920,"CreatedDateTime":"2015-05-28T05:41:08Z","Content":"Yes, KAS / KIS got this methods but I\u0027m looking for someone who has answers for \u0022why to do?\u0022 not for copy-paste solution."},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2015-05-28T18:23:35Z","Content":"The only way you\u0027ll find that out is get stuck in and play, or ask the KIS guys very nicely. Most of it looks relatively self explanatory, though I wish more code in general was more heavily commented (mine included)."}]}