{"TopicId":51073,"ForumId":36,"TopicTitle":"[PLUGIN\u002BPARTS][0.23] SCANsat terrain mapping","CreatedByName":"damny","CreatedById":78621,"CreatedDateTime":"2013-10-29T16:06:22Z","PageNum":57,"Articles":[{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-05-03T04:19:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022goldenpeach\u0022 data-cite=\u0022goldenpeach\u0022\u003E\u003Cdiv\u003EIs it normal that there is no legend for the slope(I was in the big map and, yes, I activated the legend)?\u003Cp\u003EThe legend appear without problem for the altitude.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s normal, same for the biome. There\u0027s not much for a legend to show for the slope map; solid puke green, no slope, yellow lines, slope, red lines, steep slope. Maybe it would be a good idea to remove the \u0022legend\u0022 button if you\u0027re on the slope or biome map.\u003C/p\u003E\n"},{"CreatedByName":"Starstrider42","CreatedById":104043,"CreatedDateTime":"2014-05-03T04:22:06Z","Content":"\n\u003Cp\u003EFeature request for the slope map: can you make it so that, if it\u0027s based on low-res altimetry, it gives an average slope between the low-res cells? The current slope map treats the altimetry map as if it were actually a set of perfectly flat cells with infinitely steep edges, which is... not very helpful.\u003C/p\u003E\n"},{"CreatedByName":"futrtrubl","CreatedById":77310,"CreatedDateTime":"2014-05-03T09:00:59Z","Content":"\n\u003Cp\u003EFeature requests:\u003C/p\u003E\u003Cp\u003EAn option to show vehicles with MapTraq on the maps.\u003C/p\u003E\u003Cp\u003EThe ability to show the target vessel on the map if it is equipped with a scansat part (including MapTraq).\u003C/p\u003E\u003Cp\u003EAnd a question:\u003C/p\u003E\u003Cp\u003EHow do you show biome data on the small map?\u003C/p\u003E\u003Cp\u003EEdward\u003C/p\u003E\n"},{"CreatedByName":"Virtualgenius","CreatedById":67644,"CreatedDateTime":"2014-05-03T09:57:46Z","Content":"\n\u003Cp\u003ELets stop asking for feature requests and get a stable workable version going, the guys are doing the best they can but being bombarded by feature requests isnt helping, its clogging the thread so lets cut the requests till version 6 is done dusted and installed\u003C/p\u003E\n"},{"CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-05-03T16:39:59Z","Content":"\n\u003Cp\u003EI\u0027m happy to announce that it was straightforward for me to build SCANsatRPM myself, and I don\u0027t see a reason that I shouldn\u0027t just release it with SCANsat.\u003C/p\u003E\u003Cp\u003EThis version is built against RPM 0.16.\u003C/p\u003E\u003Cp\u003EThis is the version you want to get now if you use \u003Cstrong\u003ERPM\u003C/strong\u003E. If it works properly, I will include this in all future SCANsat versions.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ESCANsat v6rc2\u003C/strong\u003E [\u003Ca href=\u0022https://github.com/technogeeky/SCANsat/releases/tag/v6rc2\u0022 rel=\u0022external nofollow\u0022\u003Edownload\u003C/a\u003E]\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ESCANsat v6rc2\u003C/strong\u003E [\u003Ca href=\u0022https://github.com/technogeeky/SCANsat/tree/v6\u0022 rel=\u0022external nofollow\u0022\u003Esource\u003C/a\u003E]\u003C/p\u003E\u003Cp\u003EI am testing using the pretty damn amazing ALCOR capsule, and it seemed to work fine (though the big map is even slower than I remember! sadface!).\u003C/p\u003E\u003Cp\u003ELet me know if I missed something.\u003C/p\u003E\n"},{"CreatedByName":"Ratzap","CreatedById":75982,"CreatedDateTime":"2014-05-03T17:53:56Z","Content":"\n\u003Cp\u003EIn SCANsat.SCANsat you have a protected bool called \u0027scanning\u0027. Could you add a method or something to expose that please? Or tell me if there\u0027s another way to see if a SCANsat part is currently using the amount of charge specified by SCANsat.SCANsat.power? Ta\u003C/p\u003E\n"},{"CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-05-03T19:34:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Virtualgenius\u0022 data-cite=\u0022Virtualgenius\u0022\u003E\u003Cdiv\u003ELets stop asking for feature requests and get a stable workable version going, the guys are doing the best they can but being bombarded by feature requests isnt helping, its clogging the thread so lets cut the requests till version 6 is done dusted and installed\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf the people asking for these requests don\u0027t know, all feature requests have a lower priority than:\u003C/p\u003E\u003Cp\u003E* repackaging to make a new official release\u003C/p\u003E\u003Cp\u003E* debugging any new features (toolbar support, RPM support, ...)\u003C/p\u003E\u003Cp\u003E* performance optimizations\u003C/p\u003E\u003Cp\u003ESo in that sense, you can feel free to ask (I might even store the request in the TODO.txt), but just know that they are going on some list and there they shall wait.\u003C/p\u003E\n"},{"CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-05-03T19:53:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ratzap\u0022 data-cite=\u0022Ratzap\u0022\u003E\u003Cdiv\u003EIn SCANsat.SCANsat you have a protected bool called \u0027scanning\u0027. Could you add a method or something to expose that please? Or tell me if there\u0027s another way to see if a SCANsat part is currently using the amount of charge specified by SCANsat.SCANsat.power? Ta\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESince I recognized what you probably want it for, I\u0027ve already added this feature. It\u0027s now in v6rc2.\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-05-03T21:19:21Z","Content":"\n\u003Cp\u003EI\u0027ve been doing some more testing of the big map performance. \u003C/p\u003E\u003Cp\u003EFor one thing I tested the alternative radial vector calculation using the Quaternion.AngleAxis thing, it made no difference in performance. \u003C/p\u003E\u003Cp\u003EFor the map caching, I have some concerns about memory usage because the array can be quite large when you start stretching the map out. Unity\u0027s garbage collection is apparently fairly lax, so every time you change the map size a new array is created in memory and the old remains. Eventually the GC kicks in and all of those old arrays get deleted (by stretching the map way off screen, I\u0027m guessing to around 4000 pixels wide, you can make the memory usage jump by 200MB or so each time you change it), but I can see this causing problems in some cases. It\u0027s also not really consistent in how much gets deleted, I\u0027ve seen the memory usage drop from around 3.4 to 1.3GB, but I\u0027ve also seen drop to around 3GB and stay there. \u003C/p\u003E\u003Cp\u003EThat said, I don\u0027t think any of this is really a problem, at least not a \u003Cem\u003Enew\u003C/em\u003E problem. This exact same thing already occurs whenever you resize the big map in v5 (and v6). I assume this is because the texture is also being recreated and taking up a lot of memory. The caching array exacerbates the problem, but I\u0027ve never heard anyone complain about SCANsat causing KSP to run out of memory before. So if it wasn\u0027t causing fatal errors with just the texture taking up space, then I don\u0027t think the addition of the array will really change anything (unless you\u0027re already right on the line with memory usage, but that\u0027s a different issue and doesn\u0027t affect the majority of players).\u003C/p\u003E\u003Cp\u003EAnother reason I\u0027m not too concerned is that for this to really be a problem requires stupidly huge map sizes and constant resizing of the map. When you stay below 1500 pixels or so wide it doesn\u0027t have such a huge memory hit. If you just pick a size and only occasionally change it you won\u0027t have a problem, just like no one that I know of ever reported having memory problems pre-v6.\u003C/p\u003E\u003Cp\u003EThere are some cases where I can understand using very large map sizes. I think they can be valuable for exporting high quality maps. Maybe it would be best to create a dedicated map export function, one where you can input a specific pixel width and one that doesn\u0027t cache the data. In other cases it might be a good idea to throw a warning (maybe just once) when someone stretches the map out too much or resizes it 20 or so times in less than a minute.\u003C/p\u003E\u003Cp\u003EThe performance impact is pretty large and I think worth the trade off. For reasonable size maps it can cut the time to rebuild the map, or switch map modes/colors, by about 50%. For larger maps the difference is even bigger, a map of about 1700 pixels wide takes me about 30 seconds to initially build (and this is the same whether I\u0027m caching or not) and about 9 seconds to rebuild.\u003C/p\u003E\n"},{"CreatedByName":"Ratzap","CreatedById":75982,"CreatedDateTime":"2014-05-03T22:42:14Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022technogeeky\u0022 data-cite=\u0022technogeeky\u0022\u003E\u003Cdiv\u003ESince I recognized what you probably want it for, I\u0027ve already added this feature. It\u0027s now in v6rc2.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks very much. Yes it\u0027s so Fusebox can add in the drain from active SCANsat parts.\u003C/p\u003E\n"},{"CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-05-04T04:20:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DMagic\u0022 data-cite=\u0022DMagic\u0022\u003E\u003Cdiv\u003EI\u0027ve been doing some more testing of the big map performance. \u003Cp\u003EFor one thing I tested the alternative radial vector calculation using the Quaternion.AngleAxis thing, it made no difference in performance. \u003C/p\u003E\u003Cp\u003EFor the map caching, I have some concerns about memory usage because the array can be quite large when you start stretching the map out. Unity\u0027s garbage collection is apparently fairly lax, so every time you change the map size a new array is created in memory and the old remains. Eventually the GC kicks in and all of those old arrays get deleted (by stretching the map way off screen, I\u0027m guessing to around 4000 pixels wide, you can make the memory usage jump by 200MB or so each time you change it), but I can see this causing problems in some cases. It\u0027s also not really consistent in how much gets deleted, I\u0027ve seen the memory usage drop from around 3.4 to 1.3GB, but I\u0027ve also seen drop to around 3GB and stay there. \u003C/p\u003E\u003Cp\u003EThat said, I don\u0027t think any of this is really a problem, at least not a \u003Cem\u003Enew\u003C/em\u003E problem. This exact same thing already occurs whenever you resize the big map in v5 (and v6). I assume this is because the texture is also being recreated and taking up a lot of memory. The caching array exacerbates the problem, but I\u0027ve never heard anyone complain about SCANsat causing KSP to run out of memory before. So if it wasn\u0027t causing fatal errors with just the texture taking up space, then I don\u0027t think the addition of the array will really change anything (unless you\u0027re already right on the line with memory usage, but that\u0027s a different issue and doesn\u0027t affect the majority of players).\u003C/p\u003E\u003Cp\u003EAnother reason I\u0027m not too concerned is that for this to really be a problem requires stupidly huge map sizes and constant resizing of the map. When you stay below 1500 pixels or so wide it doesn\u0027t have such a huge memory hit. If you just pick a size and only occasionally change it you won\u0027t have a problem, just like no one that I know of ever reported having memory problems pre-v6.\u003C/p\u003E\u003Cp\u003EThere are some cases where I can understand using very large map sizes. I think they can be valuable for exporting high quality maps. Maybe it would be best to create a dedicated map export function, one where you can input a specific pixel width and one that doesn\u0027t cache the data. In other cases it might be a good idea to throw a warning (maybe just once) when someone stretches the map out too much or resizes it 20 or so times in less than a minute.\u003C/p\u003E\u003Cp\u003EThe performance impact is pretty large and I think worth the trade off. For reasonable size maps it can cut the time to rebuild the map, or switch map modes/colors, by about 50%. For larger maps the difference is even bigger, a map of about 1700 pixels wide takes me about 30 seconds to initially build (and this is the same whether I\u0027m caching or not) and about 9 seconds to rebuild.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFYI: I am reading what you are writing intently; I am just not ready to respond yet. I am playing around with the profiling data and trying to reconcile my guesses with what the profiling data means and what your improvements change.\u003C/p\u003E\u003Cp\u003EI also wrote a tool that parses the profiling data (using regular expressions) -- at least, the profiling data that can be useful (I don\u0027t parse the UNKNOWN references or file references, since I can\u0027t tell what they are talking about). It works OK-ish. I have both the qualified and unqualified name available from the parse output -- so, say, SCANsat.SCANmap.getPartialMap and getPartialMap. I also parse the arguments signature, the % of time, and the # of calls. The next step I wanted to do was to automatically insert the profiling output for a particular function \u003Cstrong\u003Edirectly\u003C/strong\u003E into the source code (above the function, say). This is actually tricky to do correctly (and should not be attempted with regexes, because it is not context free), and I didn\u0027t want to hack it last night. It also involves inserting unique IDs as placeholders into comments, so they can later be stripped out (remembering line numbers here is not sufficient; I intend to insert things into the files so all of the line numbers after the current function will be wrong).\u003C/p\u003E\u003Cp\u003EThe overall goal here is to be able to build/run the profiling tool, have it run, save profiling data -\u0026gt; turn that data into textual output -\u0026gt; splice textual output and put in place in source, where we can see it. It seems simple, but it was harder than I thought.\u003C/p\u003E\u003Cp\u003EI can think of a few ways to put upper limits (both static and dynamic ones) on the size of the map. I am a \u003Cstrong\u003Ehabitual\u003C/strong\u003E mover and resizer of the SCANsat map (both of which delay rendering).\u003C/p\u003E\u003Cp\u003EI was going to say something like \u0022export is not a problem; for large map sizes we can simply refuse to cache but export to a file\u0022. And there\u0027s already an exportPNG function (which I actually changed in a trivial way in my latest commit). I think the cleverer feature will be to reverse this process, and consider the cache you are using to be an intermediate stage. It is almost surely faster (even with slow loading time) to load a huge texture from a file and scale that down rather than to re-generate the map (this only being useful after the map is fully rendered).\u003C/p\u003E\u003Cp\u003EBTW: Your judgements on the performance are currently via: monitoring memory and/or FPS and/or wall clock time when rendering the map, right? You are not using the performance tool thing?\u003C/p\u003E\n"},{"CreatedByName":"Starstrider42","CreatedById":104043,"CreatedDateTime":"2014-05-04T04:36:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022technogeeky\u0022 data-cite=\u0022technogeeky\u0022\u003E\u003Cdiv\u003EI think the cleverer feature will be to reverse this process, and consider the cache you are using to be an intermediate stage. It is almost surely faster (even with slow loading time) to load a huge texture from a file and scale that down rather than to re-generate the map (this only being useful after the map is fully rendered).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIIRC, ISA Mapsat did something very similar, taking an on-disk image as the \u0022true\u0022 map and displaying it in-game. The problem was that the image tended to become corrupted, causing lots of trouble if you were doing new scans at the time. Something to watch out for.\u003C/p\u003E\n"},{"CreatedByName":"Virtualgenius","CreatedById":67644,"CreatedDateTime":"2014-05-04T05:57:08Z","Content":"\n\u003Cp\u003EI tried using the new RC2 the scansatrpm.dll doesnt play nicely with mechjebrpm.dll they cancel each other out and nothing works using the 238 dev version of MJ go back to version 5 it all works\u003C/p\u003E\n"},{"CreatedByName":"DMagic","CreatedById":57416,"CreatedDateTime":"2014-05-04T06:05:13Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022technogeeky\u0022 data-cite=\u0022technogeeky\u0022\u003E\u003Cdiv\u003EThe overall goal here is to be able to build/run the profiling tool, have it run, save profiling data -\u0026gt; turn that data into textual output -\u0026gt; splice textual output and put in place in source, where we can see it. It seems simple, but it was harder than I thought.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI can get results from the profiler in emveepee (I think), but it is a little hard to get any actual information out of it. I can see that getPartialMap, getElevation, gui_bigmap_build, etc... are all very high up on the list when I quickly go in and rebuild the map. So that\u0027s reassuring.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EI can think of a few ways to put upper limits (both static and dynamic ones) on the size of the map. I am a \u003Cstrong\u003Ehabitual\u003C/strong\u003E mover and resizer of the SCANsat map (both of which delay rendering).\u003C/div\u003E\u003C/blockquote\u003E \u003Cp\u003EPutting an upper limit on map size might not be a bad idea, especially if there is some other way to export larger sizes. Thankfully moving the map, or opening and closing it, doesn\u0027t force a reset of the texture and the cache. And as long as you\u0027re resizing it between reasonable sizes, not changing from 2500 to 2700 pixels wide for instance, it shouldn\u0027t really be a problem.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EI was going to say something like \u0022export is not a problem; for large map sizes we can simply refuse to cache but export to a file\u0022. And there\u0027s already an exportPNG function (which I actually changed in a trivial way in my latest commit). I think the cleverer feature will be to reverse this process, and consider the cache you are using to be an intermediate stage. It is almost surely faster (even with slow loading time) to load a huge texture from a file and scale that down rather than to re-generate the map (this only being useful after the map is fully rendered).\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDo you mean making a big texture file of the map that KSP can open when loading? That\u0027s a bad idea and will cause the same memory issues that ISA had. Any texture that gets loaded into memory from a file will stay there permanently, taking up space. \u003C/p\u003E\u003Cp\u003EIf you mean generating a texture from a full coverage map and using that as a base to rebuild the big map might, that might work out better. There might be problems with the sheer number of maps required to make a complete set for your current planet though.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EBTW: Your judgements on the performance are currently via: monitoring memory and/or FPS and/or wall clock time when rendering the map, right? You are not using the performance tool thing?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYeah, these are all made with the stop watch on my phone and by pushing Task Manager into a corner so I can see the various memory usage values while KSP is running (I always run it windowed). I\u0027m watching FPS using a.g.\u0027s plugin. Though I do have a plugin of my own that writes out FPS to a log file, it\u0027s intended to be used for my CPU database, but if I could setup a kind of standard test run it might be useful for comparing performance.\u003C/p\u003E\n"},{"CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-05-04T06:14:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Virtualgenius\u0022 data-cite=\u0022Virtualgenius\u0022\u003E\u003Cdiv\u003EI tried using the new RC2 the scansatrpm.dll doesnt play nicely with mechjebrpm.dll they cancel each other out and nothing works using the 238 dev version of MJ go back to version 5 it all works\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHm. I wonder how that could happen. I did not include any references to MechJeb at all when building. I did notice that MechJeb things in my ALCOR capsule didn\u0027t work, but the SCANsat ones worked fine.\u003C/p\u003E\u003Cp\u003EI\u0027m not using dev238, I\u0027m on dev229. But again, I don\u0027t see how they would conflict so as to make both not work. I know people in here mentioned recompiling \u0022all three DLLs\u0022. I assume this means RPM, SCANsatRPM, and MJRPM. But does MJRPM have a dependency on SCANsatRPM? Why would it? I don\u0027t think SSRPM has a dependency on MJRPM (since I didn\u0027t build it with one, and it built fine).\u003C/p\u003E\u003Cp\u003EShrug. I hope someone else can elucidate here.\u003C/p\u003E\n"},{"CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-05-04T06:27:58Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022DMagic\u0022 data-cite=\u0022DMagic\u0022\u003E\u003Cdiv\u003EI can get results from the profiler in emveepee (I think), but it is a little hard to get any actual information out of it. I can see that getPartialMap, getElevation, gui_bigmap_build, etc... are all very high up on the list when I quickly go in and rebuild the map. So that\u0027s reassuring.\u003Cp\u003EPutting an upper limit on map size might not be a bad idea, especially if there is some other way to export larger sizes. Thankfully moving the map, or opening and closing it, doesn\u0027t force a reset of the texture and the cache. And as long as you\u0027re resizing it between reasonable sizes, not changing from 2500 to 2700 pixels wide for instance, it shouldn\u0027t really be a problem.\u003C/p\u003E\u003Cp\u003EDo you mean making a big texture file of the map that KSP can open when loading? That\u0027s a bad idea and will cause the same memory issues that ISA had. Any texture that gets loaded into memory from a file will stay there permanently, taking up space. \u003C/p\u003E\u003Cp\u003EIf you mean generating a texture from a full coverage map and using that as a base to rebuild the big map might, that might work out better. There might be problems with the sheer number of maps required to make a complete set for your current planet though.\u003C/p\u003E\u003Cp\u003EYeah, these are all made with the stop watch on my phone and by pushing Task Manager into a corner so I can see the various memory usage values while KSP is running (I always run it windowed). I\u0027m watching FPS using a.g.\u0027s plugin. Though I do have a plugin of my own that writes out FPS to a log file, it\u0027s intended to be used for my CPU database, but if I could setup a kind of standard test run it might be useful for comparing performance.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh. The emveepee output is fine for viewing the first few entries, but the text-based version is better (since it\u0027s amenable to grep/sed/awk/regexen). If you\u0027re ever interested in a particular method, you can just search the text output from mprof-decoder.exe.\u003C/p\u003E\u003Cp\u003EThe primary output that you get (in an abstract sense, and assuming a not-yet-written-tool works properly) is a relative, statistical call table (calls made to, calls made by) for every method in your project (plus any calls your project makes to other, known methods). So you can see things like: for every one call to my method blahblah, I make 100 calls to the method derpderp.\u003C/p\u003E\u003Cp\u003EObviously the ones which are high up on the list (the ones you mentioned) are the prime targets for optimization (because they are taking up a lot of clock time). But any methods they ever call optimize them too. And the methods you are optimizing might be calling them.\u003C/p\u003E\u003Cp\u003EIt\u0027s just one route. I think I\u0027m going to adopt the caching you are doing, in one style or another. I wonder if there is an existing data structure out there in C# libraries or Unity libraries that would provide a cache that we could persist (preferentially in chunks).\u003C/p\u003E\u003Cp\u003EAlso: another route to reducing the memory footprint while sacrificing only a small amount of performance might be to store the cache compressed (just like SCANsat already does with serialize/deserialize). I think the reduction factor is O(10-100) in memory, and I presume that the CPU cost is small enough that it\u0027s worth trying.\u003C/p\u003E\n"},{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2014-05-04T07:06:41Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022technogeeky\u0022 data-cite=\u0022technogeeky\u0022\u003E\u003Cdiv\u003EHm. I wonder how that could happen. I did not include any references to MechJeb at all when building. I did notice that MechJeb things in my ALCOR capsule didn\u0027t work, but the SCANsat ones worked fine.\u003Cp\u003EI\u0027m not using dev238, I\u0027m on dev229. But again, I don\u0027t see how they would conflict so as to make both not work. I know people in here mentioned recompiling \u0022all three DLLs\u0022. I assume this means RPM, SCANsatRPM, and MJRPM. But does MJRPM have a dependency on SCANsatRPM? Why would it? I don\u0027t think SSRPM has a dependency on MJRPM (since I didn\u0027t build it with one, and it built fine).\u003C/p\u003E\u003Cp\u003EShrug. I hope someone else can elucidate here.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere\u0027s no cross-dependency that I\u0027ve seen, but RPM has the same problem with the SSRPM and MJRPM plugins that they have with the SS and MJ Plugins themselves: if they\u0027re a different version than the main RPM plugin, it can\u0027t use them.\u003C/p\u003E\u003Cp\u003EThat\u0027s why I said you have to do all three: every time I compile them myself, even using the \u0027release\u0027 source, I get a different version number than the master release. If I try to just compile one of the plugins and drop it in, it doesn\u0027t work. It needs all three recompiled so they all have matching version numbers.\u003C/p\u003E\u003Cp\u003ELike I said, if you somehow got the thing to spit out your recompiled .dll with the same version number as the master, my understanding is that it\u0027d work as a drop-in replacement without doing the other two. I just have no idea how to do that. As far as I can tell, it\u0027s the version *number* that causes the problem, not the file being different. So in theory, you could also fix it by just having all the new SCANSat.dlls have the same version number as the one that works, as long as the function didn\u0027t change enough to break it. (but that has its own problems)\u003C/p\u003E\u003Cp\u003EI\u0027ve also been having out of memory crashes lately, and I\u0027m not entirely sure why. It happens on scene changes, but only after I\u0027ve loaded a flight in, generally. I don\u0027t know if it\u0027s SCANSat or what, because I started using V6R1, RPM 17, and MJ 238 all at the same time, and that\u0027s the most recent change I\u0027ve made. I also picked up IR recently and already had a ton of other plugins and parts (Including a modified EVE, which I\u0027ve suspected as well.)\u003C/p\u003E\u003Cp\u003EEdit:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Starstrider42\u0022 data-cite=\u0022Starstrider42\u0022\u003E\u003Cdiv\u003EIIRC, ISA Mapsat did something very similar, taking an on-disk image as the \u0022true\u0022 map and displaying it in-game. The problem was that the image tended to become corrupted, causing lots of trouble if you were doing new scans at the time. Something to watch out for.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt actually didn\u0027t. It actually used a group of scan \u0027probe\u0027 lines to query the terrain maps and created the texture on the fly with the results. As a result, he actually set it up such that it could support not only changed terrain maps but \u003Cem\u003Eentirely new planets\u003C/em\u003E without requiring an update, starting with X4R1.\u003C/p\u003E\u003Cp\u003EThe problem it had with the terrain changes in 0.21 was that it has a file called hilo.dat which stores the maximum and minimum height values for each body, used exclusively to set the color scale on the maps. He\u0027d set it up to automatically rebuild it if it found a new planet, but forgot to have it check if the existing planets had changed. So the pre-made hilo.dat it came with was outdated, and resulted in weirdly colored maps due to using the wrong scale. The trick, which \u003Ca href=\u0022http://cloud-4.steampowered.com/ugc/595884319780926330/20FF295433EDA3F9171FE46AB6696083F8C658AD/\u0022 rel=\u0022external nofollow\u0022\u003EI discovered\u003C/a\u003E, was to delete the hilo.dat file entirely to force the thing to rebuild it.\u003C/p\u003E\u003Cp\u003EHe\u0027d done his best to keep it from rebuilding if it didn\u0027t need to, due to the fact that rebuilding it was a slow process which made the game seem to hang during loading. He just forgot to include a check for that particular case. Presumably he fixed it in X4R2, since I told him about it on IRC.\u003C/p\u003E\u003Cp\u003EThe problem with this system is that the map you made was stored purely in the .png it made with the scan results. (There was also an option to spit out a .csv with the raw data alongside, but it wasn\u0027t fully re-implemented last I heard.) This meant that even if Hilo.dat was updated when the terrain changed, your stored maps weren\u0027t. Which could result in the slightly comedic situation of not only the map being wrong, but the legend for the color scale being different than the one the map was made with. Re-scans overwrite the sections of the stored map you scan, allowing you to fix it without dumping your old data (which is what I\u0027m doing in that image I linked above, except I only had a couple orbits worth of \u0027bad scale\u0027 map done when I figured out how to fix it.)\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-04T07:55:35Z\u0022 title=\u002205/04/2014 07:55  AM\u0022 data-short=\u002210 yr\u0022\u003EMay 4, 2014\u003C/time\u003E by Tiron\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Rioliki","CreatedById":108595,"CreatedDateTime":"2014-05-04T09:08:48Z","Content":"\n\u003Cp\u003EI was used SCANsat with pod integration, found somewhere here long time ago (must be outdated now). Suddenly it stops working. It happens right after updating procedural parts v 0.9.8 and Module manager 2.0.9. I don\u0060t really think this is because PP, rather MM. But KER pod integration still works fine\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6 Anyway, if it is exist, please give me link to pod integration cfg. Thank you.\u003C/p\u003E\u003Cp\u003EAlso to Thank you brave connoisseurs of SCANsat, who took development into their own hands. Only two notes:\u003C/p\u003E\u003Cp\u003E- Can you change the description to show scanning altitudes? I learned this to remember, but new users have to seek it in .cfg or lurk over forum.\u003C/p\u003E\u003Cp\u003E- Toolbar icons has gray backgrounds. Sometimes it looks not good. Transparent would be great.\u003C/p\u003E\n"},{"CreatedByName":"BudgetHedgehog\uFEFF","CreatedById":104112,"CreatedDateTime":"2014-05-04T13:54:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Rioliki\u0022 data-cite=\u0022Rioliki\u0022\u003E\u003Cdiv\u003EAnyway, if it is exist, please give me link to pod integration cfg. Thank you.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis will add the BTDT to pods and probes: \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E@PART[*]:HAS[@MODULE[ModuleCommand]]\u003Cbr\u003E{\u003Cbr\u003E\tMODULE\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = SCANsat\u003Cbr\u003E\t\tsensorType = 32\u003Cbr\u003E\t\tfov = 1\u003Cbr\u003E\t\tmin_alt = 0\u003Cbr\u003E\t\tmax_alt = 2000\u003Cbr\u003E\t\tbest_alt = 0\u003Cbr\u003E\t\tpower = 0.01\u003Cbr\u003E\t\tscanName = BTDT scan\u003Cbr\u003E\t}\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThat should work fine.\u003C/p\u003E\n"},{"CreatedByName":"Rioliki","CreatedById":108595,"CreatedDateTime":"2014-05-04T14:00:41Z","Content":"\n\u003Cp\u003EWell, thanks, but MM 2.1.0 suddenly solves the problem. It has to be 2.0.9 issue.\u003C/p\u003E\n"},{"CreatedByName":"Starstrider42","CreatedById":104043,"CreatedDateTime":"2014-05-04T14:53:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Tiron\u0022 data-cite=\u0022Tiron\u0022\u003E\u003Cdiv\u003EThe problem with this system is that the map you made was stored purely in the .png it made with the scan results. (There was also an option to spit out a .csv with the raw data alongside, but it wasn\u0027t fully re-implemented last I heard.) This meant that even if Hilo.dat was updated when the terrain changed, your stored maps weren\u0027t. Which could result in the slightly comedic situation of not only the map being wrong, but the legend for the color scale being different than the one the map was made with. Re-scans overwrite the sections of the stored map you scan, allowing you to fix it without dumping your old data (which is what I\u0027m doing in that image I linked above, except I only had a couple orbits worth of \u0027bad scale\u0027 map done when I figured out how to fix it.)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think you\u0027re referring to a different problem than I was. I encountered problems even when playing with 0.23 exclusively, and without ever deleting Hilo.dat. So there were no terrain changes (real or artificial) to trigger the bug you described.\u003C/p\u003E\u003Cp\u003EIn any case, we seem to agree that an image is not a good primary representation of the player\u0027s scanning progress, though for different reasons.\u003C/p\u003E\n"},{"CreatedByName":"Tiron","CreatedById":51836,"CreatedDateTime":"2014-05-04T16:03:19Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Starstrider42\u0022 data-cite=\u0022Starstrider42\u0022\u003E\u003Cdiv\u003EI think you\u0027re referring to a different problem than I was. I encountered problems even when playing with 0.23 exclusively, and without ever deleting Hilo.dat. So there were no terrain changes (real or artificial) to trigger the bug you described.\u003Cp\u003EIn any case, we seem to agree that an image is not a good primary representation of the player\u0027s scanning progress, though for different reasons.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOh, mayhaps. I was extremely tired when I wrote that. I thought you were saying it took a pre-rendered image and revealed it. \u003C/p\u003E\u003Cp\u003EIt may have had a corruption problem in 0.23 (which would\u0027ve been version X4R2 I believe.) But I wouldn\u0027t know, as I quit playing the middle of 0.22 and only started playing again maybe a month ago. And have been using SCANSat in lieu of Mapsat since I got back.\u003C/p\u003E\n"},{"CreatedByName":"Shania_L","CreatedById":58975,"CreatedDateTime":"2014-05-04T16:30:17Z","Content":"\n\u003Cp\u003EIf I update from the latest damny version to the techno/magic version will I lose my currently scanned maps?\u003C/p\u003E\u003Cp\u003EAlso looking at the changelog, is there a whole lot of difference? My V5 is working fine (afaik) on 0.23.5 Am I going to notice any changes?\u003C/p\u003E\n"},{"CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-05-04T16:59:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Shania_L\u0022 data-cite=\u0022Shania_L\u0022\u003E\u003Cdiv\u003EIf I update from the latest damny version to the techno/magic version will I lose my currently scanned maps?\u003Cp\u003EAlso looking at the changelog, is there a whole lot of difference? My V5 is working fine (afaik) on 0.23.5 Am I going to notice any changes?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere are not yet any substantive gameplay changes, unless you have the bug where planted flags do not appear on the BigMap.\u003C/p\u003E\u003Cp\u003ENo, you should not lose your currently scanned maps.\u003C/p\u003E\n"},{"CreatedByName":"technogeeky","CreatedById":107155,"CreatedDateTime":"2014-05-04T17:03:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Rioliki\u0022 data-cite=\u0022Rioliki\u0022\u003E\u003Cdiv\u003EI was used SCANsat with pod integration, found somewhere here long time ago (must be outdated now). Suddenly it stops working. It happens right after updating procedural parts v 0.9.8 and Module manager 2.0.9. I don\u0060t really think this is because PP, rather MM. But KER pod integration still works fine\u00C3\u00A2\u00E2\u201A\u00AC\u00C2\u00A6 Anyway, if it is exist, please give me link to pod integration cfg. Thank you.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EAlso to Thank you brave connoisseurs of SCANsat, who took development into their own hands. Only two notes:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think you might have confused our Bravery and Stupidity bars.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E- Can you change the description to show scanning altitudes? I learned this to remember, but new users have to seek it in .cfg or lurk over forum.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou mean in the README.txt? Or in the small map? Or both? Either way, OK.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E- Toolbar icons has gray backgrounds. Sometimes it looks not good. Transparent would be great.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAdded to todo list with higher priority. Yes, I noticed this the other day when I toggled to the other skin. Yes, I will fix that. It will go along with other support for skins.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-05-04T17:06:31Z\u0022 title=\u002205/04/2014 05:06  PM\u0022 data-short=\u002210 yr\u0022\u003EMay 4, 2014\u003C/time\u003E by technogeeky\u003C/strong\u003E\n\u003C/span\u003E\n"}]}