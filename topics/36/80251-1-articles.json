{"TopicId":80251,"ForumId":36,"TopicTitle":"[WIP] [PLUGIN] GetOffMyNetwork - A built-in firewall for KSP to enforce opt-in","CreatedByName":"ragzilla","CreatedById":115822,"CreatedDateTime":"2014-07-31T13:58:36Z","PageNum":1,"Articles":[{"CreatedByName":"ragzilla","CreatedById":115822,"CreatedDateTime":"2014-07-31T13:58:36Z","Content":"\n\u003Cp\u003ERepo: \u003Ca href=\u0022https://github.com/ragzilla/GetOffMyNetwork\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/ragzilla/GetOffMyNetwork\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ELicense: GPLv3 \u002B KSP linking exception\u003C/p\u003E\u003Cp\u003EWhat it does:\u003C/p\u003E\u003Cp\u003EAttempts to run early in load order to inspect (using Mono.Cecil) all other plugins loaded into the KSP AppDomain. Does CIL inspection to determine if any plugins are using methods or classes inside System.Net, UnityEngine.Network, or UnityEngine.WWW and if references are found disables any instantiated monobehaviours to prevent them from running (so long as GetOffMyNetwork starts first this will prevent their Start() method from being called, afaik there\u0027s no way to prevent them from calling Awake()).\u003C/p\u003E\u003Cp\u003EStill to do:\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:line-through;\u0022\u003EEnsure we run in other scenes to disable monobehaviours instantiated after initial KSP load (right now I\u0027ve only tested it works during the initial load).\u003C/span\u003E (complete 20140731)\u003C/p\u003E\u003Cp\u003EInterface in the Space Center scene to re-enable disabled plugins (rather than digging into the config file).\u003C/p\u003E\u003Cp\u003EDevelop framework for whitelisting certain usages of the classes (I\u0027m getting some false positives from plugins which use, for example, UnityEngine.WWW to load Sounds from disk).\u003C/p\u003E\u003Cp\u003EWhy:\u003C/p\u003E\u003Cp\u003EConfirmation and enforcement of the future opt-in rule, except it works now and enforces it at a code level so even if a developer forgets to prompt for network access this plugin will. If you have oppositions/reservations and want to start an argument I ask that you do so through PM to reduce moderator workload.\u003C/p\u003E\u003Cp\u003EBut what about rule 7:\u003C/p\u003E\u003Cp\u003ERule 7 specifically states the plugin may not work outside of the GameData folder, and the checkAssemblyForViolations method does check for this (if gamedata is not found in the assemblies path, it doesn\u0027t inspect the assembly and just returns no violation).\u003C/p\u003E\u003Cp\u003EChangelog:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E20140731 - \u003Cbr\u003ERefactor Start() to be more modular\u003Cbr\u003ENow instantiate in every scene (catches assemblies which don\u0027t run immediately), if enabled assemblies are found cancels all coroutines/pending invocations then invokes OnDestroy to cleanup anything the addon did in Awake(). Doesn\u0027t seem to be any way to catch code before it enters Awake() that I can find\u003Cbr\u003EDon\u0027t restart stopped monobehaviours.\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ECurrently looking for feedback on implementation (what stupid things have I done here that I shouldn\u0027t), and if I missed any Unity or CLR classes which contain classes/methods which can access the network. I\u0027m not providing a binary build yet (want to wait until I have the dialog working in the Space Center scene), think of this as a developer preview at this point.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-08-01T02:06:25Z\u0022 title=\u002208/01/2014 02:06  AM\u0022 data-short=\u00229 yr\u0022\u003EAugust 1, 2014\u003C/time\u003E by ragzilla\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2014-07-31T14:34:15Z","Content":"\n\u003Cp\u003EMods that are made to break other mods functions will get you in trouble too. \u003C/p\u003E\u003Cp\u003EMake a popup that display what you think is bad, but don\u0027t go messing up other mods when you don\u0027t know about their legitimate use of the net code (Telemachus for exemple).\u003C/p\u003E\n"},{"CreatedByName":"ragzilla","CreatedById":115822,"CreatedDateTime":"2014-07-31T14:36:34Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022sarbian\u0022 data-cite=\u0022sarbian\u0022\u003E\u003Cdiv\u003EMods that are made to break other mods functions will get you in trouble too. \u003Cp\u003EMake a popup that display what you think is bad, but don\u0027t go messing up other mods when you don\u0027t know about their legitimate use of the net code (Telemachus for exemple).\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt pops up when it\u0027s detected and gives the user a chance to whitelist it. Then it\u0027ll re-enable the monobehaviours (not sure if KSP/Unity call Start() on them at that point or not). Restarting KSP would cause the monobehaviours to start as normal though (GOMN loads user whitelist from config).\u003C/p\u003E\u003Cp\u003E-edit-\u003C/p\u003E\u003Cp\u003EMods messing with other mods for the sake of it seem to be against the rules, but fulfilling a purpose (enforcing opt-in) seems to be ok, the SBTS thread is only locked due to arguments (hence the request for people to keep arguments out of the thread and keep things civil).\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-31T14:38:50Z\u0022 title=\u002207/31/2014 02:38  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 31, 2014\u003C/time\u003E by ragzilla\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"maxrsp","CreatedById":112187,"CreatedDateTime":"2014-07-31T15:26:10Z","Content":"\n\u003Cp\u003EWhile in a perfect world this mod would be totally unneccesary... we obviously don\u0027t live in a perfect world so \u002B \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cool.gif\u0022 alt=\u0022:cool:\u0022\u003E for you.\u003C/p\u003E\n"},{"CreatedByName":"Greys","CreatedById":57109,"CreatedDateTime":"2014-07-31T16:08:49Z","Content":"\n\u003Cp\u003EThis is at the very lease a creative and skillful attempt to solve a perceived issue.\u003C/p\u003E\u003Cp\u003ENow, if I\u0027m to understand how this all works, this would block and alert the user to any mods at all that have network code; so it\u0027s not really enforcing opt-in as much as it preempts it, and potentially this could make it impossible to run a mod even if you have disabled it\u0027s network operation depending on what else runs in that monobehavior. Say the mod has the network accessing code in their Start(). This isn\u0027t a complaint, I understand some people would prefer that out come, but you should mention this potentiality in the first post.\u003C/p\u003E\u003Cp\u003EI\u0027d also recommend as a future feature that you check the offending monobehavior against the \u0027events\u0027 methods, Start(), Active(), Update(), etc(), and if you\u0027re disabling potentially mandatory functionality of the mod, just go ahead and disable all, the other monobehaviors in that namespace too to make sure you don\u0027t leave some half dismembered code that wasn\u0027t properly initialized running.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-31T17:00:48Z","Content":"\n\u003Cp\u003EWouldn\u0027t it make a lot more sense to do this using the OS itself and not the library routines of a *particular language* running on that OS? If you want to implement this it seems like doing it at the level of .NET framework libraries is way, waaaay too high-level of a location to be catching network usage. What about the mod that calls out to a non-Csharp library to accomplish things?\u003C/p\u003E\u003Cp\u003EBasically, if you\u0027re going to call it a firewall, then make it work like an actual firewall. Have it look for network traffic coming from the KSP application, regardless of what exact method call was used to cause the network traffic. Trap the *traffic*, not the API calls.\u003C/p\u003E\u003Cp\u003EThat would also solve your problem of picking up false positives from people using the WWW libraries to load local sound files, because of course using WWW to look at a file: url won\u0027t actually cause any network traffic that a real proper firewall would see.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-31T17:03:15Z\u0022 title=\u002207/31/2014 05:03  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 31, 2014\u003C/time\u003E by Steven Mading\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ragzilla","CreatedById":115822,"CreatedDateTime":"2014-07-31T20:59:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022maxrsp\u0022 data-cite=\u0022maxrsp\u0022\u003E\u003Cdiv\u003EWhile in a perfect world this mod would be totally unneccesary... we obviously don\u0027t live in a perfect world so \u002B \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cool.gif\u0022 alt=\u0022:cool:\u0022\u003E for you.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks!\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Greys\u0022 data-cite=\u0022Greys\u0022\u003E\u003Cdiv\u003EThis is at the very lease a creative and skillful attempt to solve a perceived issue.\u003Cp\u003ENow, if I\u0027m to understand how this all works, this would block and alert the user to any mods at all that have network code; so it\u0027s not really enforcing opt-in as much as it preempts it, and potentially this could make it impossible to run a mod even if you have disabled it\u0027s network operation depending on what else runs in that monobehavior. Say the mod has the network accessing code in their Start(). This isn\u0027t a complaint, I understand some people would prefer that out come, but you should mention this potentiality in the first post.\u003C/p\u003E\u003Cp\u003EI\u0027d also recommend as a future feature that you check the offending monobehavior against the \u0027events\u0027 methods, Start(), Active(), Update(), etc(), and if you\u0027re disabling potentially mandatory functionality of the mod, just go ahead and disable all, the other monobehaviors in that namespace too to make sure you don\u0027t leave some half dismembered code that wasn\u0027t properly initialized running.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAfter thinking this through (half dismembered code) I think I\u0027m going to revise to not re-enable the Monobehaviours after users whitelist, and I\u0027m going to require a KSP restart (at which point the whitelist will tell GOMN not to disable them in the first place). Currently this inspects all methods in all types deriving from monobehaviour in the assembly, and if network code is found anywhere it disables all monobehaviours in the assembly to prevent the mod being half enabled/half disabled (not tested in other scenes yet, still needs some work on this front).\u003C/p\u003E\u003Cp\u003ENot sure I\u0027ve ever had my programming called skillful before, I\u0027m more of a bang two rocks together until something works kind of guy.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EWouldn\u0027t it make a lot more sense to do this using the OS itself and not the library routines of a *particular language* running on that OS? If you want to implement this it seems like doing it at the level of .NET framework libraries is way, waaaay too high-level of a location to be catching network usage. What about the mod that calls out to a non-Csharp library to accomplish things?\u003Cp\u003EBasically, if you\u0027re going to call it a firewall, then make it work like an actual firewall. Have it look for network traffic coming from the KSP application, regardless of what exact method call was used to cause the network traffic. Trap the *traffic*, not the API calls.\u003C/p\u003E\u003Cp\u003EThat would also solve your problem of picking up false positives from people using the WWW libraries to load local sound files, because of course using WWW to look at a file: url won\u0027t actually cause any network traffic that a real proper firewall would see.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ERe non-Csharp, I talked about this with a few other people and this isn\u0027t really a be-all end-all, people can obviously get around it, if they want to (non Csharp libraries, reflection and invoke) but at that point the code is being deliberately obfuscating which will hopefully reflect on the author of said code (if you deliberately try to bypass something like GOMN you\u0027re actively trying to be sneaky). Currently if people want to block all network traffic from KSP it\u0027s trivial enough to do so in windows firewall, this is trying to provide an option halfway between blocking everything and blocking nothing.\u003C/p\u003E\u003Cp\u003EAnother item with the false positives I\u0027ve been considering is embedding a whitelist of known false positives, and plugins which implement responsible opt-in behavior (popup on first load, space center scene applauncher functionality) and implicitly whitelist those for being well behaved or false positives (would need some community help on that since I don\u0027t run a lot of plugins).\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-31T21:05:42Z\u0022 title=\u002207/31/2014 09:05  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 31, 2014\u003C/time\u003E by ragzilla\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-31T21:28:09Z","Content":"\n\u003Cp\u003EYour response is predicated on the presumption that preference for other languages besides CSharp must be due to deception - an unfair presumption. It might be that what the mod does is a lot more sensible to implement in another language, or that the author is a lot more familiar with another language. And you don\u0027t have to implement an entire separate firewall, or use the OS\u0027s firewall to get what I\u0027m talking about - just have the mod look for calls to the much more low-level OS calls instead of looking for calls to the higher level API. i.e. look for the opening of sockets, the sending of packets, that sort of thing, rather than the Csharp .NET libraries, which are just one particular abstraction of the network calls. So it would basically be a firewall, yes, but one that is inside of KSP and is only looking at traffic owned by KSP\u0027s application. I think that would be a far more robust and sane design.\u003C/p\u003E\n"},{"CreatedByName":"Kerbart","CreatedById":78303,"CreatedDateTime":"2014-07-31T21:35:43Z","Content":"\n\u003Cp\u003EKSP LAUNCHER\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003EDisable network connection\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ELaunch KSP\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EWait until KSP exits\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EEnable network connection\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EMight be easier to implement?\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-07-31T21:44:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kerbart\u0022 data-cite=\u0022Kerbart\u0022\u003E\u003Cdiv\u003EKSP LAUNCHER\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003EDisable network connection\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ELaunch KSP\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EWait until KSP exits\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EEnable network connection\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EEasier, but if your goal is to discover WHICH mod is doing the traffic that doesn\u0027t tell you because it would just treat all of KSP as one monolithic application. All you would learn is \u0022network being used by some part of KSP\u0022.\u003C/p\u003E\u003Cp\u003EI\u0027m not familiar enough with Windows to know how to track it at the level of individual DLLs, without the mistake of doing it at way too high a level (Csharp calls), which has the problems I\u0027ve already mentioned.\u003C/p\u003E\n"},{"CreatedByName":"ragzilla","CreatedById":115822,"CreatedDateTime":"2014-08-01T00:35:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Kerbart\u0022 data-cite=\u0022Kerbart\u0022\u003E\u003Cdiv\u003EKSP LAUNCHER\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003EDisable network connection\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ELaunch KSP\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EWait until KSP exits\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EEnable network connection\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EMight be easier to implement?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe goal here is something to enforce opt-in, not shut off networking as a whole (that\u0027s easy enough to do in the Windows firewall).\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Steven Mading\u0022 data-cite=\u0022Steven Mading\u0022\u003E\u003Cdiv\u003EYour response is predicated on the presumption that preference for other languages besides CSharp must be due to deception - an unfair presumption. It might be that what the mod does is a lot more sensible to implement in another language, or that the author is a lot more familiar with another language. And you don\u0027t have to implement an entire separate firewall, or use the OS\u0027s firewall to get what I\u0027m talking about - just have the mod look for calls to the much more low-level OS calls instead of looking for calls to the higher level API. i.e. look for the opening of sockets, the sending of packets, that sort of thing, rather than the Csharp .NET libraries, which are just one particular abstraction of the network calls. So it would basically be a firewall, yes, but one that is inside of KSP and is only looking at traffic owned by KSP\u0027s application. I think that would be a far more robust and sane design.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI agree but this gets well beyond the current inspection (and isn\u0027t something I\u0027m even sure is possible in Windows these days). Back in the days you could patch the call table but that\u0027s harder to do nowawdays with security features like ALSR. Usually to hook all network traffic from a process you need to do so at the kernel level, and there you lose visibility of what inside the app is initiating the traffic.\u003C/p\u003E\u003Cp\u003EI don\u0027t see a good way to handle this, and will instead admit it\u0027s a weakness in the current plan. There\u0027s too many valid uses of reflection (ToolbarWrapper, and other API wrapping interfaces) to blacklist that (without digging into the operands to find what methods people are using) and inspecting pinvoked code is too much work (that\u0027s straight up dll disassembly rather than CIL inspection that Mono.Cecil enables, or at least inspecting the imports, but not sure if there\u0027s C# code around for that- not something I particularly feel the need to write), so I\u0027m tempted to leave those around as known caveats.\u003C/p\u003E\n"},{"CreatedByName":"ragzilla","CreatedById":115822,"CreatedDateTime":"2014-08-01T14:28:49Z","Content":"\n\u003Cp\u003ENow running and disabling plugins in other scenes. First round on the SpaceCenter GUI but re-using the popup I used during the load phase is causing issues since it\u0027s a non-modal popup (so clicks go through it to the spacecenter scene if the user\u0027s cursor passes through a clickable object on the way to the dialog).\u003C/p\u003E\n"}]}