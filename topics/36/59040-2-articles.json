{"TopicId":59040,"ForumId":36,"TopicTitle":"[WIP] Jebnix - A kOS Alternative","CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-01-06T04:35:42Z","PageNum":2,"Articles":[{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2014-01-08T13:21:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Zander\u0022 data-cite=\u0022Zander\u0022\u003E\u003Cdiv\u003EPlease make sure it can maneuver the ship using the gimbals and not the torque. Kos can only manipulate the torque so those of us using realism mods with no torque in parts need the OS to be able to access the engine gimbals and move them to the same degree the keyboard can.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUm... KOS currently does use the gimbals and can fly a ship using no torque. Like so. It can also fly using only fins and it uses RCS in space.\u003C/p\u003E\u003Cblockquote lang=\u0022en\u0022\u003E\u003Ca href=\u0022//imgur.com/a/jzblZ\u0022 rel=\u0022external nofollow\u0022\u003EJavascript is disabled. View full album\u003C/a\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-01-08T20:26:24Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022diomedea\u0022 data-cite=\u0022diomedea\u0022\u003E\u003Cdiv\u003EThis would really be a major improvement over kOS. It would make programming much easier to be able to enter angles directly (Pitch, Roll, Yaw), instead of rotational vectors from a reference direction, as in UP \u002B R(0,0,180) \u002B R(0,pitch,0). It took me days to figure how kOS (and KSP) handles the internal frame of reference and it remains an unneeded complication to me. Just as KSP keeps that reference for internal purposes only, but shows angles that are consistent with the relative orientation of the craft (IRT the main body), the same approach would be best if used by Jebnix.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI will add this request to the list.\u003C/p\u003E\n"},{"CreatedByName":"Zander","CreatedById":76100,"CreatedDateTime":"2014-01-09T01:04:03Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022John FX\u0022 data-cite=\u0022John FX\u0022\u003E\u003Cdiv\u003EUm... KOS currently does use the gimbals and can fly a ship using no torque. Like so. It can also fly using only fins and it uses RCS in space.\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWhy doesnt it work on mine?? when i turn on rcs and let kos control it it just fires all of them at the same time and the ship jiggles but doesnt turn the way it should.\u003C/p\u003E\n"},{"CreatedByName":"HoneyFox","CreatedById":19237,"CreatedDateTime":"2014-01-09T06:20:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022diomedea\u0022 data-cite=\u0022diomedea\u0022\u003E\u003Cdiv\u003EThat concept is interesting. I see that not much in the way of a \u0022distributed intelligence\u0022 to each single part, but about specific actions for each part triggered by different events, all those \u0022scripts\u0022 active concurrently within Jebnix CPU. \u003Cp\u003EBut to implement that, I hope those actions can be executed independently of the standard 10 action groups \u002B standard switches, or we run out of possible actions pretty fast.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes all these scripts (normally will run in its own loop) run concurrently and options can be provided to pause their own scripts.\u003C/p\u003E\u003Cp\u003EThere\u0027s no need to worry about action group limitation because we can code to invoke an action of a part by the action\u0027s name, which is totally not related to the action group system.\u003C/p\u003E\n"},{"CreatedByName":"HoneyFox","CreatedById":19237,"CreatedDateTime":"2014-01-09T06:23:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Zander\u0022 data-cite=\u0022Zander\u0022\u003E\u003Cdiv\u003EWhy doesnt it work on mine?? when i turn on rcs and let kos control it it just fires all of them at the same time and the ship jiggles but doesnt turn the way it should.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI don\u0027t think KSP has provided interface in FlightCtrlState to individually command a reaction whell / an engine to adjust attitude.\u003C/p\u003E\u003Cp\u003EThe control is a global one and all parts will try to follow that if possible (has reaction wheel / engine has gimbal) and if allowed to (reaction wheel enabled / gimbal is freed)\u003C/p\u003E\n"},{"CreatedByName":"diomedea","CreatedById":93700,"CreatedDateTime":"2014-01-09T08:13:00Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022HoneyFox\u0022 data-cite=\u0022HoneyFox\u0022\u003E\u003Cdiv\u003EThere\u0027s no need to worry about action group limitation because we can code to invoke an action of a part by the action\u0027s name, which is totally not related to the action group system.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUh, sorry, slow down a bit, I\u0027m not following what you mean... \u0022we can code to invoke an action of a part...\u0022 not related to the action group system, to me means you want to invoke a specific part.module and those are coded in the KSP.exe (the native ones) or in plugins built to support those parts. But that means to me, Jebnix should be made aware of all part.module definitions (even for future parts!) and include some way to call the methods in those plugins. That certainly requires coding, but by Jebnix author, not by a user who will just create scripts to be run in Jebnix. So, if I\u0027m wrong or missing something, please clarify your idea.\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2014-01-09T12:45:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Zander\u0022 data-cite=\u0022Zander\u0022\u003E\u003Cdiv\u003EWhy doesnt it work on mine?? when i turn on rcs and let kos control it it just fires all of them at the same time and the ship jiggles but doesnt turn the way it should.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHave you tried an install with just KOS to fault-find and check for mod interactions?\u003C/p\u003E\u003Cp\u003EEDIT : Maybe this would be better in the KOS thread? This is the thread for discussing JebNIX after all...\u003C/p\u003E\u003Cp\u003EEDIT 2 : Just looked again at the first post which has been uupdated. looking good!\u003C/p\u003E\u003Cp\u003EEDIT 3 : for \u0060distance delay\u0060 would this be possible to optionally integrate with remotetech? I imagine in an ideal world RT would take care of all the route calculation/loss of signal and be able to let other mods know the delay as a single figure in seconds so JebNIX could either use that figure or it\u0060s own one derived from kerbin distance. This would mean sometimes loss of signal. I would imagine JebNIX would continue to run any programs that were started by this point but not accept input.\u003C/p\u003E\u003Cp\u003EThat would be cool. To totally rely on your program to execute the mission beyond radio range...\u003C/p\u003E\u003Cp\u003EEDIT 4 : Just read about Multitasking. Multiple scripts running, each on its own process, each with its own memory space (no sharing variables).\u003C/p\u003E\u003Cp\u003EInterprocess and intercomputer communication. Threads and computers could send and receive messages to each other without using a convoluted hack.\u003C/p\u003E\u003Cp\u003EMy first thought was multipart ships that break apart in orbit and stay within 250m of each other hurtling down through the atmosphere to the ground and land in formation...\u003C/p\u003E\u003Cp\u003EPlease let processes continue on units that are on other craft but within 250m.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-01-09T13:22:57Z\u0022 title=\u002201/09/2014 01:22  PM\u0022 data-short=\u002210 yr\u0022\u003EJanuary 9, 2014\u003C/time\u003E by John FX\u003C/strong\u003E\n\u003Cbr\u003Eread first post again.\n\u003C/span\u003E\n"},{"CreatedByName":"HoneyFox","CreatedById":19237,"CreatedDateTime":"2014-01-09T13:02:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022diomedea\u0022 data-cite=\u0022diomedea\u0022\u003E\u003Cdiv\u003EUh, sorry, slow down a bit, I\u0027m not following what you mean... \u0022we can code to invoke an action of a part...\u0022 not related to the action group system, to me means you want to invoke a specific part.module and those are coded in the KSP.exe (the native ones) or in plugins built to support those parts. But that means to me, Jebnix should be made aware of all part.module definitions (even for future parts!) and include some way to call the methods in those plugins. That certainly requires coding, but by Jebnix author, not by a user who will just create scripts to be run in Jebnix. So, if I\u0027m wrong or missing something, please clarify your idea.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh... for those actions (shown in action group editor) or events (shown in part\u0027s context menu), they are stored in a list in part modules(including modules implemented by 3rd-parties plugins, as you stated \u0022future parts\u0022). So the Jebnix plugin can of course scan these lists to acquire all available actions/events.\u003C/p\u003E\u003Cp\u003EHowever, Jebnix plugin will never be able to know what an action mean, to invoke which action/event should be decided by users, so Jebnix needs to provide some kind of debugging tool to list all these actions/events so that users can choose which one to invoke.\u003C/p\u003E\u003Cp\u003ETo make things more understandable. Here is a simple process:\u003C/p\u003E\u003Cp\u003E1. User enter something like: List part(...).module\u003C/p\u003E\u003Cp\u003E Jebnix returns names of all part modules in that part, might be something like this if used on an engine: ModuleEngines, ModuleGimbal, ModuleAlternator.\u003C/p\u003E\u003Cp\u003E2. User enter something like: List part(...).module(ModuleEngines).action\u003C/p\u003E\u003Cp\u003E Jebnix returns names of all actions in that part module, might be something like this if used on an engine module: active, shutdown.\u003C/p\u003E\u003Cp\u003E3. User now know what choices are available. And he can write something like this in his script:\u003C/p\u003E\u003Cp\u003E Invoke part(...).module(ModuleEngines).action(shutdown).\u003C/p\u003E\u003Cp\u003EHope that i made it clear to you.\u003C/p\u003E\n"},{"CreatedByName":"diomedea","CreatedById":93700,"CreatedDateTime":"2014-01-09T13:16:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022HoneyFox\u0022 data-cite=\u0022HoneyFox\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EHope that i made it clear to you.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECertainly that example helped a lot to make it clear, thanks for that. That resembles to me how methods and properties are parsed by the editor in a modern IDE. Hope that is doable also in Jebnix, sure it gives a lot of \u0022programming power\u0022 to the user. A lot more powerful than what a simple script would allow.\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2014-01-09T13:31:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022diomedea\u0022 data-cite=\u0022diomedea\u0022\u003E\u003Cdiv\u003ECertainly that example helped a lot to make it clear, thanks for that. That resembles to me how methods and properties are parsed by the editor in a modern IDE. Hope that is doable also in Jebnix, sure it gives a lot of \u0022programming power\u0022 to the user. A lot more powerful than what a simple script would allow.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIt does sound very powerful if it can be implemented. It would seem to suggest that \u0060control from here\u0060 on a docking port would be an option that this would allow for example. If we can find a way to target docking ports on another craft... you can tell where this is going.\u003C/p\u003E\u003Cp\u003EHow possible is it to send translation commands (ikjlhn)?\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-01-09T19:02:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022John FX\u0022 data-cite=\u0022John FX\u0022\u003E\u003Cdiv\u003EIt does sound very powerful if it can be implemented. It would seem to suggest that \u0060control from here\u0060 on a docking port would be an option that this would allow for example. If we can find a way to target docking ports on another craft... you can tell where this is going.\u003Cp\u003EHow possible is it to send translation commands (ikjlhn)?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere are some technical details I need to work out, but I\u0027m hoping to have translation capabilities built in to Jebnix.\u003C/p\u003E\n"},{"CreatedByName":"woodywood245","CreatedById":72562,"CreatedDateTime":"2014-01-09T19:03:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022HoneyFox\u0022 data-cite=\u0022HoneyFox\u0022\u003E\u003Cdiv\u003EAh... for those actions (shown in action group editor) or events (shown in part\u0027s context menu), they are stored in a list in part modules(including modules implemented by 3rd-parties plugins, as you stated \u0022future parts\u0022). So the Jebnix plugin can of course scan these lists to acquire all available actions/events.\u003Cp\u003EHowever, Jebnix plugin will never be able to know what an action mean, to invoke which action/event should be decided by users, so Jebnix needs to provide some kind of debugging tool to list all these actions/events so that users can choose which one to invoke.\u003C/p\u003E\u003Cp\u003ETo make things more understandable. Here is a simple process:\u003C/p\u003E\u003Cp\u003E1. User enter something like: List part(...).module\u003C/p\u003E\u003Cp\u003E Jebnix returns names of all part modules in that part, might be something like this if used on an engine: ModuleEngines, ModuleGimbal, ModuleAlternator.\u003C/p\u003E\u003Cp\u003E2. User enter something like: List part(...).module(ModuleEngines).action\u003C/p\u003E\u003Cp\u003E Jebnix returns names of all actions in that part module, might be something like this if used on an engine module: active, shutdown.\u003C/p\u003E\u003Cp\u003E3. User now know what choices are available. And he can write something like this in his script:\u003C/p\u003E\u003Cp\u003E Invoke part(...).module(ModuleEngines).action(shutdown).\u003C/p\u003E\u003Cp\u003EHope that i made it clear to you.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is an interesting idea. I will look into it.\u003C/p\u003E\n"},{"CreatedByName":"John FX","CreatedById":59415,"CreatedDateTime":"2014-01-14T12:32:23Z","Content":"\n\u003Cp\u003EHow\u0060s everything coming along? Is there a tentative ETA for beta release?\u003C/p\u003E\n"},{"CreatedByName":"FanaticalFighter","CreatedById":77314,"CreatedDateTime":"2014-01-14T12:59:51Z","Content":"\n\u003Cp\u003EWow, this will be amazing. Any idea when you\u0027ll be able to do the alpha testing? \u003C/p\u003E\u003Cp\u003EAlso, I have one small recommendation. Using kOS in Real Solar System, I couldn\u0027t connect to the archive (I think the location of Kerbin is hardcoded into kOS) Could you code in something that figures out where Kerbin is and does the whole antenna thing accordingly?\u003C/p\u003E\n"},{"CreatedByName":"JackGruff","CreatedById":63760,"CreatedDateTime":"2014-01-14T16:29:58Z","Content":"\n\u003Cp\u003EWhatever you do, please make it part-less. It\u0027s display can be toggleble via \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/60863\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/60863\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"Mihara","CreatedById":59752,"CreatedDateTime":"2014-01-14T16:57:04Z","Content":"\n\u003Cp\u003E/me peeks in.\u003C/p\u003E\u003Cp\u003EJust when I wanted to start working on kOS/RPM integration.\u003C/p\u003E\u003Cp\u003EI want a place where I can hook a terminal in, partless or not. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"diomedea","CreatedById":93700,"CreatedDateTime":"2014-01-15T01:26:47Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nothke\u0022 data-cite=\u0022nothke\u0022\u003E\u003Cdiv\u003EI am in full support of this mod.\u003Cp\u003EWhat kind of parts are you planning to have? CPU and additive hard drives separately? In-line and radial? If you need my modeling services I\u0027m available for a few parts.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022JackGruff\u0022 data-cite=\u0022JackGruff\u0022\u003E\u003Cdiv\u003EWhatever you do, please make it part-less. It\u0027s display can be toggleble via \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/60863\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://forum.kerbalspaceprogram.com/threads/60863\u003C/a\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EKnowing there will be nothke making those parts, I would not like to not have them. But, many \u0022computational\u0022 tools were questioned because of their reliance with parts (MechJeb, Protractor, Kerbal Engineer Redux, kOS itself, to name a few).\u003C/p\u003E\u003Cp\u003EI would propose the possibility to have two different setup for the same functionality, and believe it may be as easy as to set a switch or a config value, to let the user decide if Jebnix is made dependent on its parts or not with that user install.\u003C/p\u003E\n"},{"CreatedByName":"JackGruff","CreatedById":63760,"CreatedDateTime":"2014-01-16T11:17:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022diomedea\u0022 data-cite=\u0022diomedea\u0022\u003E\u003Cdiv\u003EKnowing there will be nothke making those parts, I would not like to not have them. But, many \u0022computational\u0022 tools were questioned because of their reliance with parts (MechJeb, Protractor, Kerbal Engineer Redux, kOS itself, to name a few).\u003Cp\u003EI would propose the possibility to have two different setup for the same functionality, and believe it may be as easy as to set a switch or a config value, to let the user decide if Jebnix is made dependent on its parts or not with that user install.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve always thought needing parts to be immersion breaking. It doesn\u0027t make sense to me. Every bit of funtionality that kOS would need in RL could concievably be provided in the space of the probe cores and command pods. Or you imply that they cannot fit a CPU or hard drive in there? That\u0027s silly.\u003C/p\u003E\u003Cp\u003EBut to appease both crowds, I would just make it a single line in a config like you said. Part-less mode: works as long as there is a command part of any sort (except chairs, I guess). Part mode: needs the part. Simple.\u003C/p\u003E\n"},{"CreatedByName":"diomedea","CreatedById":93700,"CreatedDateTime":"2014-01-16T12:18:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022JackGruff\u0022 data-cite=\u0022JackGruff\u0022\u003E\u003Cdiv\u003EI\u0027ve always thought needing parts to be immersion breaking. It doesn\u0027t make sense to me. Every bit of funtionality that kOS would need in RL could concievably be provided in the space of the probe cores and command pods. Or you imply that they cannot fit a CPU or hard drive in there? That\u0027s silly.\u003Cp\u003EBut to appease both crowds, I would just make it a single line in a config like you said. Part-less mode: works as long as there is a command part of any sort (except chairs, I guess). Part mode: needs the part. Simple.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EBe sure I am not implying what you wrote. My point was very different, and making that \u0022silly\u0022 appreciation in that way makes my opinion very negative.\u003C/p\u003E\u003Cp\u003EThose computational tools (I know about a lot of them) certainly would fit a CPU, that as you suppose can easily be considered already existing within a command pod. But it would be more than adequate to consider parts also as SOFTWARE. And that software must actually be installed within that CPU or you don\u0027t have it. So much, I would say it is immersion-breaking to NOT have a part (to each his own! You are entitled to your opinion, others to theirs). When we will have to compute the cost in building a craft, we are going to add also the software parts installed (no pirated software here). What I agree with, instead, is we don\u0027t need any hardware parts unless those are very specific with some feature in the mod that has reason to exist in a hardware piece. Take, e.g., the MechJeb Pod. \u003C/p\u003E\u003Cp\u003EI hope now you get what I mean. If you don\u0027t concur, that\u0027s to you. If you dare again to mark anybody else\u0027s opinion as silly, I will request a ban on you.\u003C/p\u003E\n"},{"CreatedByName":"willow","CreatedById":13072,"CreatedDateTime":"2014-01-16T13:51:13Z","Content":"\n\u003Cp\u003EInstead of building your own language, or continuing on the \u0022less than stellar\u0022 syntax of kOs.\u003C/p\u003E\u003Cp\u003EWhy not simply implement an existing game scripting library? Like Lua, or Javascript? \u003C/p\u003E\u003Cp\u003EThe obvious benefits are twofold...\u003C/p\u003E\u003Cp\u003EFirst of all you don\u0027t have to worry about language and syntax, only implementation, so you can spend all your time on getting the language to work with KSP well..\u003C/p\u003E\u003Cp\u003ESecondly. People don\u0027t need to learn a new language which in it\u0027s initial stages is likely to be very fickle and buggy. And they get to use existing editing tools like luaedit and learn from existing internet resources.\u003C/p\u003E\u003Cp\u003EYour work would then be restricted to handling in and output to and from the script. Meaning you get to add lots of features in little time once the initial plumbing is done.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-01-17T21:57:48Z","Content":"\n\u003Cp\u003EI hadn\u0027t noticed this thread before. This would be good if it can be accomplished. It\u0027s a pretty ambitious set of goals.\u003C/p\u003E\u003Cp\u003EWhat are the plans for release?\u003C/p\u003E\u003Cp\u003E1 - Release nothing until all the goals in the bullet-point list are met.\u003C/p\u003E\u003Cp\u003E2 - Release when some of them are met, and plan to hit the rest in future updates.\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-01-17T22:48:17Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022woodywood245\u0022 data-cite=\u0022woodywood245\u0022\u003E\u003Cdiv\u003EAt the moment, I\u0027m working on my variant-type structure, which will handle operations between different types.\u003Cp\u003EkOS is by definition a loosely-typed programming language, though I\u0027m not entirely sure if it\u0027s implemented that way in kOS.\u003C/p\u003E\u003Cp\u003EMost operators, such as subtraction, multiplication, and division, cannot be performed on string values. Bitwise operations cannot be performed on strings or floating-points. I prefer to control the implementation of operations myself because I know what the result will be, and so will the user.\u003C/p\u003E\u003Cp\u003EI have two choices:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003EThrow an exception in the event an invalid operation is performed. Or...\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ECast the variant to a valid type and then perform the operation. (Strings that cannot be parsed are interpreted as 0 or False depending on the type.)\u003Cbr\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDo you plan to use the addition operator (\u002B) for string concatenation like what kOS does now? Because if so then it would be nice if there was a way for the script writer to pick which meaning of \u0022\u002B\u0022 was meant - string concatenation or math addition. Imagine if you implemented automatic casting (which I think is the right way to go to make the language newbie-friendly), then it would be very odd and confusing if the following two statements get treated differently:\u003C/p\u003E\u003Cp\u003Eset val to \u002250\u0022.\u003C/p\u003E\u003Cp\u003Eset answer to val \u002B 1. // Result: answer = \u0022501\u0022 because \u0027\u002B\u0027 is concatenation.\u003C/p\u003E\u003Cp\u003Eset answer to val - 1. // Result: answer = 49 because \u0027-\u0027 is math subtraction and \u002250\u0022 got parsed into a number.\u003C/p\u003E\u003Cp\u003ETo have the \u0027-\u0027 and the \u0027\u002B\u0027 operator give such opposite behaviors would be weird, and it would mean if you really DO want addition you\u0027d have to subtract a negative, which would be really messy looking.\u003C/p\u003E\u003Cp\u003EOne possible solution: Don\u0027t overload the meaning of \u0022\u002B\u0022 to be concatenate anymore. Concatenate with a different operator. (problem, backward compatibility with kosscript).\u003C/p\u003E\u003Cp\u003EAnother possible solution: Although automatic casting exists, also provide a means for manual casting, so someone can do something like this:\u003C/p\u003E\u003Cp\u003Eset answer to val:AS_NUMBER \u002B 1.\u003C/p\u003E\u003Cp\u003E(I was thinking what would make a good \u0022cast\u0022 operator and thought the : suffix format might work for it and be in keeping with how the rest of kOS looks, as in: :AS_NUMBER or :AS_STRING. )\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-01-17T22:55:22Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022deadshot462\u0022 data-cite=\u0022deadshot462\u0022\u003E\u003Cdiv\u003EGood luck, this looks great. I was hoping someone would continue with the KOS-style update.\u003Cp\u003ECould you add an option for a directional alt-radar? Instead of reading straight down, maybe read distance to ground from the ship\u0027s bottom depending on its orientation relative to the ground?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think it makes sense to invent a Part for this - a small itty bitty thing the same size as the little science instruments like the Gravioli Detector of Seismometer. Then instead of using the orientation of the craft, you base it on the orientation of the part. Whichever way the distance-finder-part is pointed, that\u0027s the line it shoots its \u0022ray\u0022 in to look for intersecting terrain. Most of the time, you\u0027ll want to mount it aimed down to get the behavior you mention, but for other purposes you could mount it in other directions.\u003C/p\u003E\n"},{"CreatedByName":"Rosco P. Coltrane","CreatedById":61065,"CreatedDateTime":"2014-01-18T23:53:44Z","Content":"\n\u003Cp\u003EBesides wishing you good luck, I\u0027d also like to make a petition here: please document your stuff! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 alt=\u0022:D\u0022\u003E\u003C/p\u003E\u003Cp\u003EAs the author of an IDE for kOS looking into supporting Jebnix, lack of documentation is a hell of a problem. And for your potential users too.\u003C/p\u003E\u003Cp\u003EGood luck man!\u003C/p\u003E\n"},{"CreatedByName":"Dunbaratu","CreatedById":63481,"CreatedDateTime":"2014-01-19T04:55:01Z","Content":"\n\u003Cp\u003EBecause this project looks ambitious and I therefore expect it will be quite a while before there\u0027s a release, I\u0027ll continue using eerandrake\u0027s attempts to make a kOS 10.0 that is compatible with KSP 0.23 in the meantime. But once this thing is working well I\u0027d definitely want to use it.\u003C/p\u003E\u003Cp\u003ETo that end, is backward compatibility with kOSscript really a necessary goal? If you\u0027re going to rebuild everything from the ground up anyway, and it will probably differ enough to require people to re-write scripts anyway (many scripts have weird twiddly behavior to work around bugs that you\u0027d hopefully be trying to get rid of), maybe it\u0027s not as important to make it kosscript compatible. I don\u0027t know - it\u0027s up to you at any rate. I wish you good luck. I want to use this.\u003C/p\u003E\n"}]}