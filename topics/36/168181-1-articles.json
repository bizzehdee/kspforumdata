{"TopicId":168181,"ForumId":36,"TopicTitle":"Need some help with Vector3d \u0026amp; planet positions","CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2017-12-03T23:54:26Z","PageNum":1,"Articles":[{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2017-12-03T23:54:26Z","Content":"\n\u003Cp\u003E\nI\u0027m trying to get some code working properly which will check for an eclipse.\u00A0 I\u0027m having some problems, and have narrowed it down to this:\n\u003C/p\u003E\n\u003Cp\u003E\nI thought the function CelestialBody.getPositionAtUT(double)\u00A0 returns the position at the specified UT, but my tests are showing otherwise:\n\u003C/p\u003E\n\u003Cp\u003E\nTest code, which find the Mun and prints out the position at 5 days (ignoring the ScaledSpace.ScaleFactor for now):\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E foreach (CelestialBody rock in FlightGlobals.Bodies)\n                    if (rock.name == \u0022Mun\u0022)\n                    Hire.Log.Info(\u0022currentUT: \u0022 \u002B Math.Floor(Planetarium.GetUniversalTime()) \u002B \u0022,   UT of 86400: \u0022 \u002B rock.getPositionAtUT(86400));\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nSo, when I go into KSP in a new game and immediately call this, I get the following in the log:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EcurrentUT: 2,   UT of 86400: [251406.665520146, 1014.90997314453, 11656821.4515618]\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThen, I timewarp to the next day, and call it, I get the following:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EcurrentUT: 16414,   UT of 86400: [-11489361.4157803, 1014.90997314453, 292532.747668683]\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nwhich doesn\u0027t make sense.\n\u003C/p\u003E\n\u003Cp\u003E\nI then tried using the ScaledSpace.LocalToScaledSpace:\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eforeach (CelestialBody rock in FlightGlobals.Bodies)\n                    if (rock.name == \u0022Mun\u0022)\n                    Hire.Log.Info(\u0022currentUT: \u0022 \u002B Math.Floor(Planetarium.GetUniversalTime()) \u002B \u0022,   UT of 86400: \u0022 \u002B ScaledSpace.LocalToScaledSpace(rock.getPositionAtUT(86400)));\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nand got the following:\n\u003C/p\u003E\n\u003Cp\u003E\nNew game:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EcurrentUT: 2,   UT of 86400: [41.7059294153351, 0.269453529015138, 1942.65336378619]\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nNext day:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EcurrentUT: 16414,   UT of 86400: [-1914.923662531, 0.269453529015138, 48.2014139488716]\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nAgain, they aren\u0027t even close.\u00A0 I would expect that getting the position of a body at a specified UT would always be the same.\n\u003C/p\u003E\n\u003Cp\u003E\nSo I\u0027m obviously missing something, but no idea what.\n\u003C/p\u003E\n\u003Cp\u003E\nAnybody?\n\u003C/p\u003E\n\u003Cp\u003E\nThanks in advance\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-12-04T06:11:39Z\u0022 title=\u002212/04/2017 06:11  AM\u0022 data-short=\u00226 yr\u0022\u003EDecember 4, 2017\u003C/time\u003E by linuxgurugamer\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2017-12-04T13:29:19Z","Content":"\n\u003Cp\u003E\nFor position in the future, I\u0027ve used the CelestialBody\u0027s orbit :\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan\u003EVector3d\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E bodyPos \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E body\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eorbit\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EgetPositionAtUT\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Et\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis has been reliable enough for me to solve closest approach iteratively between bodies.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you just need position \u0022now\u0022 between bodies, CelestialBody.position will provide it.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-12-04T13:29:59Z\u0022 title=\u002212/04/2017 01:29  PM\u0022 data-short=\u00226 yr\u0022\u003EDecember 4, 2017\u003C/time\u003E by MOARdV\u003C/strong\u003E\n\u003Cbr\u003EExtraneous characters\n\u003C/span\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2017-12-04T14:06:46Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223234959\u0022 data-ipsquote-contentid=\u0022168181\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221512394159\u0022 data-ipsquote-userid=\u002260950\u0022 data-ipsquote-username=\u0022MOARdV\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n30 minutes ago, MOARdV said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nFor position in the future, I\u0027ve used the CelestialBody\u0027s orbit :\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\n\u003Cspan\u003EVector3d\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E bodyPos \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E body\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eorbit\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EgetPositionAtUT\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Et\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis has been reliable enough for me to solve closest approach iteratively between bodies.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you just need position \u0022now\u0022 between bodies, CelestialBody.position will provide it.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWell, I\u0027m pretty sure that body.getPositionAtUT just calls that, but I tried it anyway:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eforeach (CelestialBody rock in FlightGlobals.Bodies)\n                    if (rock.name == \u0022Mun\u0022)\n                    Hire.Log.Info(\u0022currentUT: \u0022 \u002B Math.Floor(Planetarium.GetUniversalTime()) \u002B \u0022,   UT of 86400: \u0022 \u002B ScaledSpace.LocalToScaledSpace(rock.orbit.getPositionAtUT(86400)));\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nat UT= 3:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EHire: currentUT: 3,   UT of 86400: [42.4405393536052, 0.269453529015138, 1942.66814631748]\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nAt UT = 16415 (next day):\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EHire: currentUT: 16415,   UT of 86400: [-1914.88357933297, 0.269453529015138, 48.9601178307615]\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThese should be the same, since it\u0027s asking for the same UT in the future.\n\u003C/p\u003E\n\u003Cp\u003E\nSo what\u0027s wrong?\n\u003C/p\u003E\n"},{"CreatedByName":"MOARdV","CreatedById":60950,"CreatedDateTime":"2017-12-04T14:37:06Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223234985\u0022 data-ipsquote-contentid=\u0022168181\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221512396406\u0022 data-ipsquote-userid=\u0022129964\u0022 data-ipsquote-username=\u0022linuxgurugamer\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n19 minutes ago, linuxgurugamer said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSo what\u0027s wrong?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt might be the local -\u0026gt; scaled space conversion then?\u00A0 I am pretty sure that\u0027s not a local space result from getPositionAtUT(), since\u00A0I\u0027ve been using the unaltered results of it, (eg\u00A0\u003Ca href=\u0022https://github.com/MOARdV/AvionicsSystems/blob/1ceb2be8b784a83e51a01e06069e95d9c1104b46/Source/ApproachSolverBW.cs#L89\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E)\u00A0to compare positions between objects that aren\u0027t necessarily in the same \u003Cabbr title=\u0022Sphere of Influence\u0022\u003ESoI\u003C/abbr\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nIsn\u0027t local space local to the current body?\u00A0 If so, it makes sense that the same (body-relative) position will have a different scaled space position after some time passes, although I\u0027m not sure why it\u0027d rotate about 90 degrees like that.\n\u003C/p\u003E\n\u003Cp\u003E\nAlthough you also initially looked at the body.getPositionAtUT, too.\n\u003C/p\u003E\n\u003Cp\u003E\nSorry, I guess I\u0027m\u00A0not much help.\u00A0 I can say that comparing two positions using the orbit\u0027s getPositionAtUT has been reliable in the cases I\u0027ve used, but I haven\u0027t looked at the absolute output of the values for quite some time, and I haven\u0027t used the other methods you mention, so I don\u0027t know how they interrelate.\n\u003C/p\u003E\n"},{"CreatedByName":"linuxgurugamer","CreatedById":129964,"CreatedDateTime":"2017-12-05T02:34:58Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223235020\u0022 data-ipsquote-contentid=\u0022168181\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221512398226\u0022 data-ipsquote-userid=\u002260950\u0022 data-ipsquote-username=\u0022MOARdV\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n11 hours ago, MOARdV said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIt might be the local -\u0026gt; scaled space conversion then?\u00A0 I am pretty sure that\u0027s not a local space result from getPositionAtUT(), since\u00A0I\u0027ve been using the unaltered results of it, (eg\u00A0\u003Ca href=\u0022https://github.com/MOARdV/AvionicsSystems/blob/1ceb2be8b784a83e51a01e06069e95d9c1104b46/Source/ApproachSolverBW.cs#L89\u0022 rel=\u0022external nofollow\u0022\u003Ehere\u003C/a\u003E)\u00A0to compare positions between objects that aren\u0027t necessarily in the same \u003Cabbr title=\u0022Sphere of Influence\u0022\u003ESoI\u003C/abbr\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nIsn\u0027t local space local to the current body?\u00A0 If so, it makes sense that the same (body-relative) position will have a different scaled space position after some time passes, although I\u0027m not sure why it\u0027d rotate about 90 degrees like that.\n\u003C/p\u003E\n\u003Cp\u003E\nAlthough you also initially looked at the body.getPositionAtUT, too.\n\u003C/p\u003E\n\u003Cp\u003E\nSorry, I guess I\u0027m\u00A0not much help.\u00A0 I can say that comparing two positions using the orbit\u0027s getPositionAtUT has been reliable in the cases I\u0027ve used, but I haven\u0027t looked at the absolute output of the values for quite some time, and I haven\u0027t used the other methods you mention, so I don\u0027t know how they interrelate.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe problem is that we are trying to calculate and angle of multiple bodies not disturb and we are getting very strange results\n\u003C/p\u003E\n"}]}