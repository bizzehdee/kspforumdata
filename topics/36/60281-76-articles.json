{"TopicId":60281,"ForumId":36,"TopicTitle":"[Hardware, Plugin] Arduino based physical display \u002B serial port io\u002B tutorial (24-11-19)","CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2014-01-18T01:25:25Z","PageNum":76,"Articles":[{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2017-06-11T14:13:02Z","Content":"\n\u003Cp\u003E\nHi they are listed in the example arduino code (first tab)\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E//Input enums\n#define \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E 7\n#define \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E 6\n#define LIGHTS 5\n#define GEAR 4\n#define BRAKES 3\n#define PRECISION 2\n#define ABORT 1\n#define STAGE 0\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Freakout242","CreatedById":125827,"CreatedDateTime":"2017-06-11T18:53:46Z","Content":"\n\u003Cp\u003E\nI\u0027m having some difficulty getting my LCD display to work again for some reason. I have tested the LCD screen so I know it\u0027s working. Here is what I have in the KSPISO (tab)\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E//lcd\n#include \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;LiquidCrystal.h\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nLiquidCrystal lcd(7, 6, 5, 4, 3, 2);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nSimple enough.. and this is what I have in the Utilities Tab...trying to get the AP and PE data to view.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Evoid Indicators() {\n\n\u00A0\n\u00A0 lcd.begin(16, 2);\n\u00A0 // Print a message to the LCD.\n\u00A0 lcd.setCursor(0,0);\n\u00A0 lcd.print((long)VData.AP);\n\u00A0 lcd.setCursor(0,1);\n\u00A0 lcd.print((long)VData.PE);\n}\n\nvoid InitTxPackets() {\n\u00A0 HPacket.id = 0; \u00A0\n\u00A0 CPacket.id = 101;\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nNothing is showing up on the LCD screen. Am I missing something?\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m using current plugin with ksp1.3 . I have tested the kspido demo16 and that worked, so I don\u0027t think it\u0027s a version mess up.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-06-11T19:17:53Z\u0022 title=\u002206/11/2017 07:17  PM\u0022 data-short=\u00227 yr\u0022\u003EJune 11, 2017\u003C/time\u003E by Freakout242\u003C/strong\u003E\n\u003Cbr\u003EMore info\n\u003C/span\u003E\n"},{"CreatedByName":"Freshmeat","CreatedById":111048,"CreatedDateTime":"2017-06-11T20:06:39Z","Content":"\n\u003Cp\u003E\nHave you tried omitting the typecast? I have printed several floats on my LCDs previously. And tried to just print a static value in your LCD to see if it is set up badly somehow in your control code?\n\u003C/p\u003E\n"},{"CreatedByName":"Freakout242","CreatedById":125827,"CreatedDateTime":"2017-06-11T20:12:55Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223088246\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221497211599\u0022 data-ipsquote-userid=\u0022111048\u0022 data-ipsquote-username=\u0022Freshmeat\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 minutes ago, Freshmeat said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nHave you tried omitting the typecast? I have printed several floats on my LCDs previously. And tried to just print a static value in your LCD to see if it is set up badly somehow in your control code?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWell I could, but this works fine on KSP1_2_2 using\u00A0KSP_Serial_IO-0.18.3\n\u003C/p\u003E\n\u003Cp\u003E\nWhy would it have changed?\n\u003C/p\u003E\n"},{"CreatedByName":"funkheld","CreatedById":174450,"CreatedDateTime":"2017-06-11T20:51:58Z","Content":"\n\u003Cp\u003E\nHello, good day\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nFor me this WarningBoardCode works on my i2c-lcd-display 20x4\u003Cbr\u003E\nwith KSPSerialIO_019_0.\n\u003C/p\u003E\n\u003Cp\u003E\ngreeting\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n\t#include \u0026lt;Wire.h\u0026gt; \u00A0 \u00A0\n#include \u0026lt;LCD.h\u0026gt;\n#include \u0026lt;LiquidCrystal_I2C.h\u0026gt;\n\t#define I2C_ADDR \u00A00x27\u00A0\n#define BACKLIGHT_PIN 3\n#define En_pin \u00A02\n#define Rw_pin \u00A01\n#define Rs_pin \u00A00\n#define D4_pin \u00A04\n#define D5_pin \u00A05\n#define D6_pin \u00A06\n#define D7_pin \u00A07\n\t//macro\n#define details(name) (uint8_t*)\u0026amp;name,sizeof(name)\n\t//if no message received from KSP for more than 2s, go idle\n#define IDLETIMER 2000\n#define CONTROLREFRESH 25\n\tunsigned long deadtime, deadtimeOld, controlTime, controlTimeOld;\nunsigned long now;\n\tboolean Connected = false;\n\tbyte caution = 0, warning = 0, id;\n\tstruct VesselData\n{\n\u00A0 \u00A0 byte id; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//1\n\u00A0 \u00A0 float AP; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //2\n\u00A0 \u00A0 float PE; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //3\n\u00A0 \u00A0 float SemiMajorAxis; \u00A0 \u00A0//4\n\u00A0 \u00A0 float SemiMinorAxis; \u00A0 \u00A0//5\n\u00A0 \u00A0 float VVI; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//6\n\u00A0 \u00A0 float e; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//7\n\u00A0 \u00A0 float inc; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//8\n\u00A0 \u00A0 float G; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//9\n\u00A0 \u00A0 long TAp; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //10\n\u00A0 \u00A0 long TPe; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //11\n\u00A0 \u00A0 float TrueAnomaly; \u00A0 \u00A0 \u00A0//12\n\u00A0 \u00A0 float Density; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//13\n\u00A0 \u00A0 long period; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//14\n\u00A0 \u00A0 float RAlt; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //15\n\u00A0 \u00A0 float Alt; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//16\n\u00A0 \u00A0 float Vsurf; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//17\n\u00A0 \u00A0 float Lat; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//18\n\u00A0 \u00A0 float Lon; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//19\n\u00A0 \u00A0 float LiquidFuelTot; \u00A0 \u00A0//20\n\u00A0 \u00A0 float LiquidFuel; \u00A0 \u00A0 \u00A0 //21\n\u00A0 \u00A0 float OxidizerTot; \u00A0 \u00A0 \u00A0//22\n\u00A0 \u00A0 float Oxidizer; \u00A0 \u00A0 \u00A0 \u00A0 //23\n\u00A0 \u00A0 float EChargeTot; \u00A0 \u00A0 \u00A0 //24\n\u00A0 \u00A0 float ECharge; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//25\n\u00A0 \u00A0 float MonoPropTot; \u00A0 \u00A0 \u00A0//26\n\u00A0 \u00A0 float MonoProp; \u00A0 \u00A0 \u00A0 \u00A0 //27\n\u00A0 \u00A0 float IntakeAirTot; \u00A0 \u00A0 //28\n\u00A0 \u00A0 float IntakeAir; \u00A0 \u00A0 \u00A0 \u00A0//29\n\u00A0 \u00A0 float SolidFuelTot; \u00A0 \u00A0 //30\n\u00A0 \u00A0 float SolidFuel; \u00A0 \u00A0 \u00A0 \u00A0//31\n\u00A0 \u00A0 float XenonGasTot; \u00A0 \u00A0 \u00A0//32\n\u00A0 \u00A0 float XenonGas; \u00A0 \u00A0 \u00A0 \u00A0 //33\n\u00A0 \u00A0 float LiquidFuelTotS; \u00A0 //34\n\u00A0 \u00A0 float LiquidFuelS; \u00A0 \u00A0 \u00A0//35\n\u00A0 \u00A0 float OxidizerTotS; \u00A0 \u00A0 //36\n\u00A0 \u00A0 float OxidizerS; \u00A0 \u00A0 \u00A0 \u00A0//37\n\u00A0 \u00A0 uint32_t MissionTime; \u00A0 //38\n\u00A0 \u00A0 float deltaTime; \u00A0 \u00A0 \u00A0 \u00A0//39\n\u00A0 \u00A0 float VOrbit; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //40\n\u00A0 \u00A0 uint32_t MNTime; \u00A0 \u00A0 \u00A0 \u00A0//41\n\u00A0 \u00A0 float MNDeltaV; \u00A0 \u00A0 \u00A0 \u00A0 //42\n\u00A0 \u00A0 float Pitch; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//43\n\u00A0 \u00A0 float Roll; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //44\n\u00A0 \u00A0 float Heading; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//45\n\u00A0 \u00A0 uint16_t ActionGroups; \u00A0//46 \u00A0status bit order:\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E, \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E, Light, Gear, Brakes, Abort, Custom01 - 10\n\u00A0 \u00A0 byte SOINumber; \u00A0 \u00A0 \u00A0 \u00A0 //47 \u00A0\u003Cabbr title=\u0022Sphere of Influence\u0022\u003ESOI\u003C/abbr\u003E Number (decimal format: sun-planet-moon e.g. 130 = kerbin, 131 = mun)\n\u00A0 \u00A0 byte MaxOverHeat; \u00A0 \u00A0 \u00A0 //48 \u00A0Max part overheat (% percent)\n\u00A0 \u00A0 float MachNumber; \u00A0 \u00A0 \u00A0 //49\n\u00A0 \u00A0 float IAS; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//50 \u00A0Indicated Air Speed\n\u00A0 \u00A0 byte CurrentStage; \u00A0 \u00A0 \u00A0//51 \u00A0Current stage number\n\u00A0 \u00A0 byte TotalStage; \u00A0 \u00A0 \u00A0 \u00A0//52 \u00A0TotalNumber of stages\n\u00A0 \u00A0 float TargetDist; \u00A0 \u00A0 \u00A0 //53 \u00A0Distance to targeted vessel (m)\n\u00A0 \u00A0 float TargetV; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//54 \u00A0Target vessel relative velocity\n\u00A0 \u00A0 byte NavballSASMode; \u00A0 \u00A0//55 \u00A0Combined byte for navball target mode and \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E mode\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 // First four bits indicate AutoPilot mode:\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 // 0 \u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E is off \u00A0//1 = Regular Stability Assist //2 = Prograde\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 // 3 = RetroGrade //4 = Normal //5 = Antinormal //6 = Radial In\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 // 7 = Radial Out //8 = Target //9 = Anti-Target //10 = Maneuver node\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 // Last 4 bits set navball mode. (0=ignore,1=ORBIT,2=SURFACE,3=TARGET)\n};\n\tstruct HandShakePacket\n{\n\u00A0 byte id;\n\u00A0 byte M1;\n\u00A0 byte M2;\n\u00A0 byte M3;\n};\n\t/*struct ControlPacket {\n\u00A0 byte id;\n\u00A0 byte MainControls; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E Lights Gear Brakes Precision Abort Stage\n\u00A0 byte Mode; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//0 = stage, 1 = docking, 2 = map\n\u00A0 unsigned int ControlGroup; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//control groups 1-10 in 2 bytes\n\u00A0 byte NavballSASMode; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//AutoPilot mode\n\u00A0 byte AdditionalControlByte1;\n\u00A0 int Pitch; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//-1000 -\u0026gt; 1000\n\u00A0 int Roll; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //-1000 -\u0026gt; 1000\n\u00A0 int Yaw; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0//-1000 -\u0026gt; 1000\n\u00A0 int TX; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //-1000 -\u0026gt; 1000\n\u00A0 int TY; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //-1000 -\u0026gt; 1000\n\u00A0 int TZ; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //-1000 -\u0026gt; 1000\n\u00A0 int WheelSteer; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 //-1000 -\u0026gt; 1000\n\u00A0 int Throttle; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 // \u00A0 \u00A00 -\u0026gt; 1000\n\u00A0 int WheelThrottle; \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0// \u00A0 \u00A00 -\u0026gt; 1000\n};\n*/\n\tLiquidCrystal_I2C \u00A0lcd(I2C_ADDR,En_pin,Rw_pin,Rs_pin,D4_pin,D5_pin,D6_pin,D7_pin);\n\tint time = 0;\n\tHandShakePacket HPacket;\nVesselData VData;\n//ControlPacket CPacket;\n\tvoid setup() {\n\u00A0 Serial.begin(38400);\n\u00A0 Wire.begin();\u00A0\n\u00A0\u00A0\n\u00A0 InitTxPackets();\n\t\u00A0 lcd.setBacklightPin(BACKLIGHT_PIN,POSITIVE);\n\u00A0 lcd.setBacklight(HIGH);\n\u00A0\u00A0\n\u00A0 lcd.home (); \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0\n\u00A0 lcd.begin(20, 4);\n\u00A0\u00A0\n\u00A0 lcd.clear();\n\u00A0 delay(200);\n\u00A0 lcd.setCursor(0,3);\n\u00A0 lcd.print(\u0022V:\u0022);\n}\nvoid loop()\n{\n\u00A0 input();\n\u00A0 if (time==50)\n\u00A0 {\n\u00A0 \u00A0 lcd.setCursor(8,3);\n\u00A0 \u00A0 lcd.print(VData.Alt);\n\u00A0 \u00A0 lcd.print(\u0022 m/s \u00A0 \u0022);\n\u00A0 \u00A0 time=0;\n\u00A0 }\n\u00A0 time\u002B\u002B;\n}\n\u003C/pre\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-06-11T20:54:12Z\u0022 title=\u002206/11/2017 08:54  PM\u0022 data-short=\u00227 yr\u0022\u003EJune 11, 2017\u003C/time\u003E by funkheld\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Freakout242","CreatedById":125827,"CreatedDateTime":"2017-06-11T21:03:25Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223088256\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221497211975\u0022 data-ipsquote-userid=\u0022125827\u0022 data-ipsquote-username=\u0022Freakout242\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n49 minutes ago, Freakout242 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWell I could, but this works fine on KSP1_2_2 using\u00A0KSP_Serial_IO-0.18.3\n\u003C/p\u003E\n\u003Cp\u003E\nWhy would it have changed?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSo ksp\u00A0\u00A01.3 will work with the old plugin and demo\n\u003C/p\u003E\n"},{"CreatedByName":"Freakout242","CreatedById":125827,"CreatedDateTime":"2017-06-12T00:39:52Z","Content":"\n\u003Cp\u003E\nOk, this has been a long day of troubleshooting with just a few wins. Long story short, I am trying to connect my Arduino Bluetooth adapter to my phone and have it display some data from KSP. I know that I can\u0027t connect directly to pin 0 and 1 for this, so I included the\u00A0\u0026lt;SoftwareSerial.h\u0026gt; Library. I defined pins 12 as Rx and 11 as Tx, then called it mySerial . I set mySerial.begin to 38400. I was able to connect to the adapter with a bluetooth terminal app, but I am receiving no data from\u00A0mySerial.print(VData.AP); \u00A0 \u00A0Thoughts?\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E//pins for LEDs\n#include \u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;LiquidCrystal.h\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n#include\u003C/span\u003E\u003Cspan class=\u0022tag\u0022\u003E\u0026lt;SoftwareSerial.h\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\nSoftwareSerial portOne(10, 11);\nLiquidCrystal lcd(7, 6, 5, 4, 3, 2);\n\nint contr = 9;\nint bright = 100;\n\n\n\n//Action group statuses\n#define AGSAS      0\n#define AGRCS      1\n#define AGLight    2\n#define AGGear     3\n#define AGBrakes   4\n#define AGAbort    5\n#define AGCustom01 6\n#define AGCustom02 7\n#define AGCustom03 8\n#define AGCustom04 9\n#define AGCustom05 10\n#define AGCustom06 11\n#define AGCustom07 12\n#define AGCustom08 13\n#define AGCustom09 14\n#define AGCustom10 15\n\n//macro\n#define details(name) (uint8_t*)\u0026amp;name,sizeof(name)\n\n//if no message received from KSP for more than 2s, go idle\n#define IDLETIMER 2000\n#define CONTROLREFRESH 25\n\n\n\nunsigned long deadtime, deadtimeOld, controlTime, controlTimeOld;\nunsigned long now;\n\nboolean Connected = false;\n\nbyte caution = 0, warning = 0, id;\n\nstruct VesselData\n{\n    byte id;                //1\n    float AP;               //2\n    float PE;               //3\n    float SemiMajorAxis;    //4\n    float SemiMinorAxis;    //5\n    float VVI;              //6\n    float e;                //7\n    float inc;              //8\n    float G;                //9\n    long TAp;               //10\n    long TPe;               //11\n    float TrueAnomaly;      //12\n    float Density;          //13\n    long period;            //14\n    float RAlt;             //15\n    float Alt;              //16\n    float Vsurf;            //17\n    float Lat;              //18\n    float Lon;              //19\n    float LiquidFuelTot;    //20\n    float LiquidFuel;       //21\n    float OxidizerTot;      //22\n    float Oxidizer;         //23\n    float EChargeTot;       //24\n    float ECharge;          //25\n    float MonoPropTot;      //26\n    float MonoProp;         //27\n    float IntakeAirTot;     //28\n    float IntakeAir;        //29\n    float SolidFuelTot;     //30\n    float SolidFuel;        //31\n    float XenonGasTot;      //32\n    float XenonGas;         //33\n    float LiquidFuelTotS;   //34\n    float LiquidFuelS;      //35\n    float OxidizerTotS;     //36\n    float OxidizerS;        //37\n    uint32_t MissionTime;   //38\n    float deltaTime;        //39\n    float VOrbit;           //40\n    uint32_t MNTime;        //41\n    float MNDeltaV;         //42\n    float Pitch;            //43\n    float Roll;             //44\n    float Heading;          //45\n    uint16_t ActionGroups;  //46 status bit order:\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E, \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E, Light, Gear, Brakes, Abort, Custom01 - 10\n    byte SOINumber;         //47 \u003Cabbr title=\u0022Sphere of Influence\u0022\u003ESOI\u003C/abbr\u003E Number (decimal format: sun-planet-moon e.g. 130 = kerbin, 131 = mun)\n    byte MaxOverHeat;       //48  Max part overheat (% percent)\n    float MachNumber;       //49\n    float IAS;              //50  Indicated Air Speed\n    byte CurrentStage;      //51  Current stage number\n    byte TotalStage;        //52  TotalNumber of stages\n};\n\nstruct HandShakePacket\n{\n  byte id;\n  byte M1;\n  byte M2;\n  byte M3;\n};\n\nstruct ControlPacket {\n  byte id;\n  byte MainControls;                  //\u003Cabbr title=\u0022Stability Augmentation System\u0022\u003ESAS\u003C/abbr\u003E \u003Cabbr title=\u0022Reaction Control System\u0022\u003ERCS\u003C/abbr\u003E Lights Gear Brakes Precision Abort Stage\n  byte Mode;                          //0 = stage, 1 = docking, 2 = map\n  unsigned int ControlGroup;          //control groups 1-10 in 2 bytes\n  byte AdditionalControlByte1;        //other stuff\n  byte AdditionalControlByte2;\n  int Pitch;                          //-1000 -\u0026gt; 1000\n  int Roll;                           //-1000 -\u0026gt; 1000\n  int Yaw;                            //-1000 -\u0026gt; 1000\n  int TX;                             //-1000 -\u0026gt; 1000\n  int TY;                             //-1000 -\u0026gt; 1000\n  int TZ;                             //-1000 -\u0026gt; 1000\n  int WheelSteer;                     //-1000 -\u0026gt; 1000\n  int Throttle;                       //    0 -\u0026gt; 1000\n  int WheelThrottle;                  //    0 -\u0026gt; 1000\n};\n\nHandShakePacket HPacket;\nVesselData VData;\nControlPacket CPacket;\n\nvoid setup() {\n  Serial.begin(38400);\n portOne.begin(38400);\n  InitTxPackets();\n\n\n}\n\nvoid loop()\n{\n  input();\n  output();\n}\n  \n  --------Utilities--------\n  \n  void Indicators() {\n\n\n \nanalogWrite(contr, bright);\nlcd.begin(16, 2);\n\n  // Print a message to the LCD.\n  lcd.setCursor(0,0);\n  lcd.print(\u0022APPO:\u0022);\n  lcd.setCursor(5,0);\n  lcd.print((long)VData.AP);\n  lcd.setCursor(0,1);\n  lcd.print(\u0022PERE:\u0022);\n  lcd.setCursor(5,1);\n  lcd.print((long)VData.PE);\n  portOne.println((long)VData.AP);\n //portOne.println(\u0022hello\u0022);\n \n\n}\n\nvoid InitTxPackets() {\n  HPacket.id = 0;  \n  CPacket.id = 101;\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-06-12T02:03:11Z\u0022 title=\u002206/12/2017 02:03  AM\u0022 data-short=\u00227 yr\u0022\u003EJune 12, 2017\u003C/time\u003E by Freakout242\u003C/strong\u003E\n\u003Cbr\u003Eadded code\n\u003C/span\u003E\n"},{"CreatedByName":"funkheld","CreatedById":174450,"CreatedDateTime":"2017-06-12T09:03:17Z","Content":"\n\u003Cpre style=\u0022color:#272a34;\u0022\u003E\n\u003Cspan style=\u0022color:#000000;\u0022\u003ESoftwareSerial portOne(10, 11);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022color:#000000;\u0022\u003Eyou : 11/12 Pin\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022color:#000000;\u0022\u003EGreeting\u003C/span\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-06-12T09:29:52Z\u0022 title=\u002206/12/2017 09:29  AM\u0022 data-short=\u00227 yr\u0022\u003EJune 12, 2017\u003C/time\u003E by funkheld\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Freakout242","CreatedById":125827,"CreatedDateTime":"2017-06-12T10:38:42Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223088880\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221497258197\u0022 data-ipsquote-userid=\u0022174450\u0022 data-ipsquote-username=\u0022funkheld\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, funkheld said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cpre style=\u0022color:#272a34;\u0022\u003E\n\n\u003Cspan style=\u0022color:#000000;\u0022\u003ESoftwareSerial portOne(10, 11);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022color:#000000;\u0022\u003Eyou : 11/12 Pin\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI changed it to 10 and 11 while troubleshooting. So that\u0027s not it. I wrote a simple sketch and used\u00A0Serial.print(\u0022hello\u0022); and portOne.println(\u0022goodbye\u0022); and it works. Data will show over my com port and through the bluetooth. But when I place it on the sketch for ksp, I get nothing.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2017-06-12T15:32:14Z","Content":"\n\u003Cp\u003E\nHave you tried without software serial? It is very slow and uses a lot of processor time. It might be slowing down everything so you don\u0027t have enough time to process the incoming packets.\n\u003C/p\u003E\n\u003Cp\u003E\nI would suggest getting a Mega board which has 4 hardware \u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E ports.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-06-12T15:33:46Z\u0022 title=\u002206/12/2017 03:33  PM\u0022 data-short=\u00227 yr\u0022\u003EJune 12, 2017\u003C/time\u003E by zitronen\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Freakout242","CreatedById":125827,"CreatedDateTime":"2017-06-12T21:52:25Z","Content":"\n\u003Cp\u003E\nI think I\u0027m going to just get a mega. How would you do it without softwareSerial?\n\u003C/p\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2017-06-13T14:24:06Z","Content":"\n\u003Cp\u003E\nYou mean on a mega? You can\u0027t do it without software serial on a normal arduino.\n\u003C/p\u003E\n\u003Cp\u003E\nOn a mega you can use Serial.print(), Serial1.print(), and so on. It will be much faster because they are hardware serial ports. There are also other arduino or teensy boards with more than 1 serial ports. But this is assuming your problem is caused by software serial.\n\u003C/p\u003E\n"},{"CreatedByName":"Freakout242","CreatedById":125827,"CreatedDateTime":"2017-06-18T21:16:47Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223089125\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221497281534\u0022 data-ipsquote-userid=\u002211842\u0022 data-ipsquote-username=\u0022zitronen\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/12/2017 at 11:32 AM, zitronen said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI would suggest getting a Mega board which has 4 hardware \u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E ports.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOK Guys....I\u0027m Stuck.\n\u003C/p\u003E\n\u003Cp\u003E\nGot myself a Mega board (love it) and I wrote the following sketch.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Evoid setup() {\n  // initialize both serial ports:\n  Serial.begin(9600);\n  Serial1.begin(9600);\n}\n\nvoid loop() {\n  Serial.print(\u0022Test1 \u0022); \n  Serial1.println(\u0022Test2 \u0022);\n  delay(1000);\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nI was able to receive data from both the Serial Monitor and my phone (which is connected to my bluetooth adapter....which is monitoring Serial1). So YAY!\n\u003C/p\u003E\n\u003Cp\u003E\nThe I placed this code for ksp into the \u0022utilities\u0022 tab in order to get the Electric Charge total.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003ESerial1.begin(38400);\nSerial1.println((long)VData.ECharge);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nI get no response. Any ideas? I have also tried Serial1.println(VData.ECharge); as well.\n\u003C/p\u003E\n\u003Cp\u003E\nEDIT: I added my lcd display with the above code. I can see data on the LCD screen, but still nothing over the Serial1 monitor.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-06-18T21:37:37Z\u0022 title=\u002206/18/2017 09:37  PM\u0022 data-short=\u00227 yr\u0022\u003EJune 18, 2017\u003C/time\u003E by Freakout242\u003C/strong\u003E\n\u003Cbr\u003Emore testing stuff\n\u003C/span\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2017-06-18T23:59:28Z","Content":"\n\u003Cp\u003E\nhave you tried putting\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003ESerial1.begin(38400);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nIn void setup()\n\u003C/p\u003E\n\u003Cp\u003E\ninstead of utilities?\n\u003C/p\u003E\n\u003Cp\u003E\nAlso what is the baud rate for your bluetooth? Maybe it only works at 9600.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-06-19T00:00:35Z\u0022 title=\u002206/19/2017 12:00  AM\u0022 data-short=\u00227 yr\u0022\u003EJune 19, 2017\u003C/time\u003E by zitronen\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Freakout242","CreatedById":125827,"CreatedDateTime":"2017-06-19T00:01:54Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223096309\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221497830368\u0022 data-ipsquote-userid=\u002211842\u0022 data-ipsquote-username=\u0022zitronen\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nJust now, zitronen said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nhave you tried putting\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan class=\u0022pln\u0022\u003ESerial1.begin(38400);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nIn void setup()\n\u003C/p\u003E\n\u003Cp\u003E\ninstead of utilities?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI did, but it still didn\u0027t work....HOWEVER!!!! I also placed\u00A0\n\u003C/p\u003E\n\u003Cpre style=\u0022color:#272a34;\u0022\u003E\n\u003Cspan style=\u0022color:#000000;\u0022\u003ESerial1.println((long)VData.ECharge);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022color:#000000;\u0022\u003ERight below the loop statement...and it\u0027s WORKING!! WOO HOO!\u003C/span\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"Freakout242","CreatedById":125827,"CreatedDateTime":"2017-06-19T02:41:47Z","Content":"\n\u003Cp\u003E\nI would like to thank everyone here for helping me out with getting this Serial communication down. I now have it working and displaying data from KSP to my phone. I am making a prototype Android App that should show me all the data I need for a mission. Link to the screenshot is below. Again thanks everyone.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://drive.google.com/file/d/0B38_XvEI5TUmSlNGc2NsUGVSejQ/view?usp=sharing\u0022 rel=\u0022external nofollow\u0022\u003EKSP_ISO Glass Cockpit Project\u003C/a\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"funkheld","CreatedById":174450,"CreatedDateTime":"2017-06-19T09:18:43Z","Content":"\n\u003Cp\u003E\nGui (Purebasic) with KOS and Seriell:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://www.kerbalspaceprogram.de/index.php?attachment/12246-seriell-jpg/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.kerbalspaceprogram.de/index.php?attachment/12246-seriell-jpg/\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nHello Freakout242.\n\u003C/p\u003E\n\u003Cp\u003E\nHow do your programs look like?\n\u003C/p\u003E\n\u003Cp\u003E\nCan you please reset this here?\n\u003C/p\u003E\n\u003Cp\u003E\nThank you.\u003Cbr\u003E\ngreeting\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-06-19T09:30:56Z\u0022 title=\u002206/19/2017 09:30  AM\u0022 data-short=\u00227 yr\u0022\u003EJune 19, 2017\u003C/time\u003E by funkheld\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Freakout242","CreatedById":125827,"CreatedDateTime":"2017-06-19T22:27:01Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223096665\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221497863923\u0022 data-ipsquote-userid=\u0022174450\u0022 data-ipsquote-username=\u0022funkheld\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n13 hours ago, funkheld said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nGui (Purebasic) with KOS and Seriell:\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://www.kerbalspaceprogram.de/index.php?attachment/12246-seriell-jpg/\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.kerbalspaceprogram.de/index.php?attachment/12246-seriell-jpg/\u003C/a\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nHello Freakout242.\n\u003C/p\u003E\n\u003Cp\u003E\nHow do your programs look like?\n\u003C/p\u003E\n\u003Cp\u003E\nCan you please reset this here?\n\u003C/p\u003E\n\u003Cp\u003E\nThank you.\u003Cbr\u003E\ngreeting\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNot sure that you mean by \u0022reset\u0022. Sorry. I am making an Android APP that will act as a \u0022Glass Cockpit\u0022. At least thats the idea. I\u0027ll post more pics once I am done testing.\n\u003C/p\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2017-06-20T13:52:51Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223096312\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221497830514\u0022 data-ipsquote-userid=\u0022125827\u0022 data-ipsquote-username=\u0022Freakout242\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 19/06/2017 at 1:01 AM, Freakout242 said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI did, but it still didn\u0027t work....HOWEVER!!!! I also placed\u00A0\n\u003C/p\u003E\n\u003Cpre style=\u0022color:#272a34;\u0022\u003E\n\n\u003Cspan style=\u0022color:#000000;\u0022\u003ESerial1.println((long)VData.ECharge);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u003Cspan style=\u0022color:#000000;\u0022\u003ERight below the loop statement...and it\u0027s WORKING!! WOO HOO!\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nOK cool, but without seeing your whole code it\u0027s hard to say if you put it in the right place.\n\u003C/p\u003E\n\u003Cp\u003E\nIdeally you should put it in the outputs() function, which is run every 25ms by default if you want fast updates from axes controls:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EcontrolTime = now - controlTimeOld; \n  if (controlTime \u0026gt; CONTROLREFRESH){\n    controlTimeOld = now;\n    controls();\n\n    Serial1.println((long)VData.ECharge);\n  }    \u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nor in inputs() which is ran whenever a packet is received from KSP\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eif (KSPBoardReceiveData()){\n    deadtimeOld = now;\n    returnValue = id;\n    switch(id) {\n    case 0: //Handshake packet\n      Handshake();\n      break;\n    case 1:\n      Indicators();\n\n      Serial1.println((long)VData.ECharge);\n\n      break;\n    }\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"funkheld","CreatedById":174450,"CreatedDateTime":"2017-06-20T17:38:50Z","Content":"\n\u003Cp\u003E\nHello, I also make an app ready for kerbal with \u003Ca href=\u0022https://www.b4x.com/b4a.html\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://www.b4x.com/b4a.html\u003C/a\u003E and hc06.\n\u003C/p\u003E\n\u003Cp\u003E\nGreeting\n\u003C/p\u003E\n"},{"CreatedByName":"moeburn","CreatedById":26426,"CreatedDateTime":"2017-06-27T01:09:49Z","Content":"\n\u003Cp\u003E\nWelp, I\u0027m having a little trouble getting this up and running. \u00A0I\u0027ve got the included demo code on my Arduino, modified slightly to work with my TFT LCD and just try and display Fuel, Altitude, and whether we\u0027re connected or not. \u00A0I\u0027m running the latest plugin version on KSP 1.2.2.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nAs soon as I load up a ship, I can see my Arduino flicker off and on, indicating something is trying to connect to it via \u003Cabbr title=\u0022Center of Mass\u0022\u003ECOM\u003C/abbr\u003E port. \u00A0Then my little \u0022Connected\u0022 indicator turns on. \u00A0Then just before the ship is finally done loading, the Arduino flickers off and on a\u00A0\u003Cstrong\u003Esecond\u00A0\u003C/strong\u003Etime, and this time it\u0027s no longer connected.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSo the whole time while loading a ship, it resets the Arduino, connects, resets the Arduino a second time, and is no longer connected.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nEdit: \u00A0According to my logs, the Serial plugin is detecting my Arduino, and getting a handshake received. \u00A0So I guess the problem is on the Arduino side. \u00A0Maybe my TFT LCD is too slow.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-06-27T03:13:40Z\u0022 title=\u002206/27/2017 03:13  AM\u0022 data-short=\u00227 yr\u0022\u003EJune 27, 2017\u003C/time\u003E by moeburn\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Freshmeat","CreatedById":111048,"CreatedDateTime":"2017-06-27T06:29:47Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/26426-moeburn/\u0026amp;do=hovercard\u0022 data-mentionid=\u002226426\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/26426-moeburn/\u0022 rel=\u0022\u0022\u003E@moeburn\u003C/a\u003E First of all: Windows 10 is only partially supported, but since you get a handshake I guess that is not your problem. If your TFT is to slow overall, you are pretty much out of luck. But if the problem is long loading times on the KSP side, there is a setting, handshakedelay in the init file in the plugin directory. Try setting it to 5000 or something like that.\n\u003C/p\u003E\n"},{"CreatedByName":"moeburn","CreatedById":26426,"CreatedDateTime":"2017-06-27T15:57:54Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00223104105\u0022 data-ipsquote-contentid=\u002260281\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221498544987\u0022 data-ipsquote-userid=\u0022111048\u0022 data-ipsquote-username=\u0022Freshmeat\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n9 hours ago, Freshmeat said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/26426-moeburn/\u0026amp;do=hovercard\u0022 data-mentionid=\u002226426\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/26426-moeburn/\u0022 rel=\u0022\u0022\u003E@moeburn\u003C/a\u003E First of all: Windows 10 is only partially supported, but since you get a handshake I guess that is not your problem. If your TFT is to slow overall, you are pretty much out of luck. But if the problem is long loading times on the KSP side, there is a setting, handshakedelay in the init file in the plugin directory. Try setting it to 5000 or something like that.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThanks for your help, \u003Ca href=\u0022https://youtu.be/xvAQ9CeurZ0\u0022 rel=\u0022external nofollow\u0022\u003EI got it working!\u003C/a\u003E \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nTurns out it was my TFT LCD code, was too slow to run alongside serial communications. \u00A0I confirmed this by removing all the TFT code and telling it just to turn on the built-in LED if we\u0027re connected, turn it off if disconnected, and that was working. \u00A0So next step was figuring out how to structure the TFT code alongside the serial code to get them to both work. \u00A0I ended up doing that successfully by sticking it inside the input() command, as such:\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan\u003Eint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E input\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u003C/span\u003E\u003Cspan\u003Eint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E returnValue \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 now \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E millis\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u00A0 \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EKSPBoardReceiveData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 deadtimeOld \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E now\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 returnValue \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E id\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eswitch\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eid\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ecase\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//Handshake packet\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u003C/span\u003E\u003Cspan\u003EHandshake\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ebreak\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ecase\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//Indicators();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ebreak\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u00A0 \u00A0 \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//We got some data, turn the green led on\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 digitalWrite\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ELED_BUILTIN\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E HIGH\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 \u003C/span\u003E\u003Cspan\u003EConnected\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etrue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 tft\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EsetCursor \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 tft\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EsetTextSize \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E2\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 tft\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EsetTextColor\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ERED\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E BLACK\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0\u00A0\n\u00A0 \u00A0 tft\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eprint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Fuel: \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 tft\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eprintln\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EVData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ELiquidFuelTot\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 tft\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eprint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Altitude: \u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 tft\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eprintln\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EVData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EAlt\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 tft\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eprint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022CONNECTED\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0\u00A0\n\u00A0 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eelse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//if no message received for a while, go idle\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 deadtime \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E now \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E deadtimeOld\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\u00A0\n\u00A0 \u00A0 \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Edeadtime \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E IDLETIMER\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 \u00A0 deadtimeOld \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E now\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 \u00A0 \u003C/span\u003E\u003Cspan\u003EConnected\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 \u00A0 digitalWrite\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003ELED_BUILTIN\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E LOW\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 \u00A0 tft\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eprint\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022NOPE\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u00A0 \u00A0\n\u00A0 \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u00A0 \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E returnValue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nIt\u0027s the tft.print lines that are my TFT code. \u00A0I\u0027ve also made a few other changes in my many attemps to get this working, and I\u0027m not sure which of them helped, so I\u0027ll list them here.\n\u003C/p\u003E\n\u003Cp\u003E\nI changed \u0022#define IDLETIMER 2000\u0022 to 20000, because my computer is a little old and takes 30\u002B seconds just to load a ship. Not sure if necessary.\n\u003C/p\u003E\n\u003Cp\u003E\nIn the config, I have \u0022refresh\u0022 set to 1.0 (and you can see that in the linked video, it is only updating once per second) and HandshakeDelay is set to 7000. \u00A0Again, not sure if either is necessary.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m just typing all this out for future googlers if they have the same problem I did. \u00A0Now to see just how fast I can set that refresh value to, and just how much TFT drawing code I can do before it resets itself. \u00A0Not sure why \u0022code takes too long\u0022 = \u0022Entire arduino resets\u0022, but whatever.\n\u003C/p\u003E\n\u003Cp\u003E\nOh and I\u0027m running Windows 8.1, not Windows 10, if that helps.\n\u003C/p\u003E\n"},{"CreatedByName":"zitronen","CreatedById":11842,"CreatedDateTime":"2017-06-28T14:59:47Z","Content":"\n\u003Cp\u003E\nHi\n\u003C/p\u003E\n\u003Cp\u003E\nChangine IDLETIMER is fine, it needs to be at least more than refresh time. Increasing handshake delay is also fine, the only downside is if you have lots of serial ports, the plugin can wait up to the delay for each port as it checks for a connection, so it can increase KSP load time by a lot.\n\u003C/p\u003E\n\u003Cp\u003E\nI don\u0027t know which screen you are using, but you also might try some of the fast tft libraries.\n\u003C/p\u003E\n\u003Cp\u003E\nOh and ideally, you should put your code between\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Ecase 1:\n// your code here\nbreak;\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nyou can also add something like\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Ecase 0: //Handshake packet\n\tHandshake();\n\ttft.print(\u0022connecting\u0022);\nbreak;\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nif you want\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222017-06-28T15:03:34Z\u0022 title=\u002206/28/2017 03:03  PM\u0022 data-short=\u00227 yr\u0022\u003EJune 28, 2017\u003C/time\u003E by zitronen\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"ljkjl","CreatedById":156557,"CreatedDateTime":"2017-06-28T19:20:22Z","Content":"\n\u003Cp\u003E\nHello everyone! I\u0027ve been trying to use this plugin with an Arduino UNO but it wouldn\u0027t work. I loaded \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/11842-zitronen/\u0026amp;do=hovercard\u0022 data-mentionid=\u002211842\u0022 href=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/11842-zitronen/\u0022 rel=\u0022\u0022\u003E@zitronen\u003C/a\u003E\u0027s \u0022Warning LEDs\u0022 example with the same setup he used, except for an additional LED to signal whether or not rx_len is equal to 0 (it always is, thus the BoardReceive function won\u0027t read anything). I suspect this is because\u00A0KSP won\u0027t transmit any data since the\u00A0plugin,\u00A0upon spawning on the launchpad, says \u00A0\u0022No display found\u0022, and\u00A0in the plugin sourcecode (game side)\u00A0i\u0027ve seen that in order for the Begin(); function to be called, a display has to be found. My question is, what do you mean by display, and what could i do to add one?\n\u003C/p\u003E\n\u003Cp\u003E\nHere is the Arduino sourcecode (only the one i modified, the rest is identical to the example):\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-c prettyprinted\u0022\u003E\n\u003Cspan\u003Euint8_t\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E rx_len\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Euint8_t\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E address\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nbyte buffer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E256\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E];\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//address for temporary storage and parsing buffer\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Euint8_t\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E structSize\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Euint8_t\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E rx_array_inx\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//index for RX parsing buffer\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan\u003Euint8_t\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E calc_CS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\t   \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//calculated Chacksum\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//This excrements contains stuff borrowed from EasyTransfer lib\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\nboolean \u003C/span\u003E\u003Cspan\u003EKSPBoardReceiveData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n  \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//THIS IS THE ONLY PART I ADDED\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Erx_len\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    digitalWrite\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E12\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E HIGH\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eelse\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    digitalWrite\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E12\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E LOW\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E((\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Erx_len \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u0026amp;\u0026amp;(\u003C/span\u003E\u003Cspan\u003ESerial\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eavailable\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E3\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ewhile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003ESerial\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eread\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()!=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0xBE\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003ESerial\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eavailable\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E  \n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003ESerial\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eread\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0xEF\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      rx_len \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ESerial\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eread\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E   \n      id \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ESerial\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eread\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \n      rx_array_inx \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n      \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eswitch\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eid\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ecase\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        structSize \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Esizeof\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EHPacket\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E   \n        address \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ebyte\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*)\u0026amp;\u003C/span\u003E\u003Cspan\u003EHPacket\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E     \n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ebreak\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ecase\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E:\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        structSize \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Esizeof\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EVData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E   \n        address \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ebyte\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E*)\u0026amp;\u003C/span\u003E\u003Cspan\u003EVData\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E     \n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ebreak\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//make sure the binary structs on both Arduinos are the same size.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Erx_len \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E structSize\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      rx_len \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E   \n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Erx_len \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ewhile\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E((\u003C/span\u003E\u003Cspan\u003ESerial\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eavailable\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E())\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026amp;\u0026amp;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Erx_array_inx \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E rx_len\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      buffer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Erx_array_inx\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u002B]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ESerial\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eread\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    buffer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E id\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Erx_len \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Erx_array_inx\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//seem to have got whole message\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//last uint8_t is CS\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      calc_CS \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E rx_len\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efor\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003Eint\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E i \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E i\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Erx_len\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E i\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u002B){\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        calc_CS\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E^=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ebuffer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ei\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E];\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \n\n      \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ecalc_CS \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E buffer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E[\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Erx_array_inx\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E-\u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E]){\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//CS good\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        memcpy\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eaddress\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ebuffer\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EstructSize\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        rx_len \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        rx_array_inx \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etrue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eelse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//failed checksum, need to clear this out anyway\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        rx_len \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E0\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        rx_array_inx \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022lit\u0022\u003E1\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n      \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n  \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Efalse\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nP.S. This is the first time i use serial communication, so that \u0022BoardReceive won\u0027t read\u0022 is almost a guess.\n\u003C/p\u003E\n\u003Cp\u003E\nThanks in advance for your answer!\n\u003C/p\u003E\n"}]}