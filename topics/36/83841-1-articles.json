{"TopicId":83841,"ForumId":36,"TopicTitle":"[WIP] BetterLives Fitness/Happiness/Sanity for Kerbals pre-alpha planning","CreatedByName":"Cyrik","CreatedById":117209,"CreatedDateTime":"2014-09-04T23:30:49Z","PageNum":1,"Articles":[{"CreatedByName":"Cyrik","CreatedById":117209,"CreatedDateTime":"2014-09-04T23:30:49Z","Content":"\n\u003Cp\u003ENotice: active development on this will be starting once we know more of what will change in the Kerbal APIs in 0.25. As \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/members/76989-NathanKell\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022color:#008000;\u0022\u003ENathanKell\u003C/span\u003E\u003C/a\u003E\u003Cspan style=\u0022color:#3E3E3E;\u0022\u003E \u003C/span\u003Ementioned, there might be significant changes incoming that I didn\u0027t think about:(\u003C/p\u003E\u003Cp\u003EHi,\u003C/p\u003E\u003Cp\u003Eso without boring you to death with reasons why I want to start this addon, here are the ideas that are swirling around in my head:\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EWhat does it do:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003Etracks stats for every Kerbal, such as Happines, Sanity, Fitness, whatever\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Echanges these stats based on situations and enviorment\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Egives advantages and disadvantages based on those stats, ranging from flavor text popups to crew deaths\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EOk now that you know what the vision is, here are my ideas so far:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003Estarts out as a part-less plugin to see what is possible with just adding some programming to stock parts\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Ekeep the initial stats low\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Einitially do take any dependencies other then toolbar ofc\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EStats:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Col style=\u0022list-style-type:decimal;\u0022\u003E\u003Cli\u003EHappiness:\u003Cbr\u003E\u003Cul\u003E\u003Cli\u003Emostly determined by excitement\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Esame orbit around the sun for the 6th time?\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Enever on eva in a 6year trip?\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Esame module of a space station for 20 years?\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Emostly a flavor stat\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003C/li\u003E\u003C/ol\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]Sanity:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EInfluences:\u003Cbr\u003E\u003Cul\u003E\u003Cli\u003Ethe big brother of happiness\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Edetermined by living space\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eloneliness\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eentertainment on board\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E[*]Effects:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003Erandom behavior\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Estaging errors\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Einput lag\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eturning stuff on and off\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eundocking\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Eeventually death?\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]Fitness:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EInfluences:\u003Cbr\u003E\u003Cul\u003E\u003Cli\u003Etraining\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Egravity\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Esleep?\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E[*]Effects:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003Esluggish behavior\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003Edeath\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAll these stats would change over time. So a Kerbal flying to the mun and back wouldn\u0027t go crazy because he\u00C3\u201A\u00C2\u00B4s alone in a tiny capsule. He will go mad doing the same thing flying in orbit for a year.\u003C/p\u003E\u003Cp\u003EThe stat changes would be accomplished by checking the vessel for essentials like space and entertainment and so on. I would add modules to some of the stock parts as a start and see how far I can go with that. If it\u0027s not enough (I\u0027d guess its not), adding new parts or integrating with other mods would come in.\u003C/p\u003E\u003Cp\u003EI would also try to keep the mod as extendable as possible so that other mods can take advantage of its functionality and hook into it. As an example MKS/OKS parts would make perfect sense or even TAC life support for food quality and consumption.\u003C/p\u003E\u003Cp\u003EFor anyone that has gotten this far: I\u00C3\u201A\u00C2\u00B4m not a graphics guy, so if I need parts for this mod at some point they will either be ugly or provided by someone else:P Aside from that I\u0027m a decent coder so i hope at least that part is covered. Oh and while I\u0027m at it, I\u0027m starting with TAC Lifesupport as a design base since i really like his mods architecture. I\u0027m not sure how long that base will be recognizable however.\u003C/p\u003E\u003Cp\u003EEnough rambling, lets hear some input:P\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-05T02:37:09Z\u0022 title=\u002209/05/2014 02:37  AM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 5, 2014\u003C/time\u003E by Cyrik\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"cakepie","CreatedById":69278,"CreatedDateTime":"2014-09-04T23:41:20Z","Content":"\n\u003Cp\u003EFor how long a duration do you intend to track the \u0022activity history\u0022 of what each kerbal has done in the past? Your ideas seem to suggest quite a fine granularity of tracking, including orbit/SOI, craft, EVA, part of craft that the kerbal is \u0022living\u0022 in, etc, so my first reaction is that it might get costly to keep track of a long and detailed history.\u003C/p\u003E\n"},{"CreatedByName":"Cyrik","CreatedById":117209,"CreatedDateTime":"2014-09-04T23:54:08Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EFor how long a duration do you intend to track the \u0022activity history\u0022 of what each kerbal has done in the past? Your ideas seem to suggest quite a fine granularity of tracking\u0027 date=\u0027 including orbit/SOI, craft, EVA, part of craft that the kerbal is \u0022living\u0022 in, etc, so my first reaction is that it might get costly to keep track of a long and detailed history.[/quote\u0027]\u003Cp\u003EIt depends a bit on the the stat. I don\u0027t want to write a plugin that lags everything and this isn\u0027t supposed to give you a mission history. So if I change SOI i can forget the old one and just remember the new one. Other stuff wouldn\u0027t have to be remembered at all, like EVA. It would be enough if i increase happiness by a certain amount once an EVA happens.\u003C/p\u003E\u003Cp\u003EWhat I\u00C3\u201A\u00C2\u00B4m getting at is that I don\u0027t think I need a huge history since everything changes the base stats while it is happening and you can forget most things once the situation changes. \u003C/p\u003E\u003Cp\u003EI can\u0027t be sure of that of course since I just started with the basics a few hours ago, but memory doesn\u0027t seem to be a big concern. Just like our body doesn\u0027t remember what made it fit, just that it is fit and what is happening to it now.\u003C/p\u003E\u003Cp\u003EBut thank you for the feedback. Stuff like that can easily creep in without it being noticed and then you are screwed:)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"cakepie","CreatedById":69278,"CreatedDateTime":"2014-09-05T00:02:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cyrik\u0022 data-cite=\u0022Cyrik\u0022\u003E\u003Cdiv\u003EIt depends a bit on the the stat. I don\u0027t want to write a plugin that lags everything and this isn\u0027t supposed to give you a mission history. So if I change SOI i can forget the old one and just remember the new one. Other stuff wouldn\u0027t have to be remembered at all, like EVA. It would be enough if i increase happiness by a certain amount once an EVA happens.\u003Cp\u003EWhat I\u00C3\u201A\u00C2\u00B4m getting at is that I don\u0027t think I need a huge history since everything changes the base stats while it is happening and you can forget most things once the situation changes. \u003C/p\u003E\u003Cp\u003EI can\u0027t be sure of that of course since I just started with the basics a few hours ago, but memory doesn\u0027t seem to be a big concern. Just like our body doesn\u0027t remember what made it fit, just that it is fit and what is happening to it now.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh, I see, so it\u0027s going to be some stat increase per activity, and decay over time. That may be exploitable, though -- for instance you\u0027d be able to boost stat by repeatedly doing some token \u0022exciting\u0022 activity such as taking a Kerbal on EVA just out the airlock and immediately go right back in -- flavor-wise that\u0027s not really doing anything meaningful (and might actually be mundane if that\u0027s the only thing you do repeatedly). Without some kind of history you wouldn\u0027t be able to tell the difference.\u003C/p\u003E\n"},{"CreatedByName":"Cyrik","CreatedById":117209,"CreatedDateTime":"2014-09-05T00:11:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EAh\u0027 date=\u0027 I see, so it\u0027s going to be some stat increase per activity, and decay over time. That may be exploitable, though -- for instance you\u0027d be able to boost stat by repeatedly doing some token \u0022exciting\u0022 activity such as taking a Kerbal on EVA just out the airlock and immediately go right back in -- flavor-wise that\u0027s not really doing anything meaningful (and might actually be mundane if that\u0027s the only thing you do repeatedly). Without some kind of history you wouldn\u0027t be able to tell the difference.[/quote\u0027]\u003Cp\u003EI\u0027ve been thinking more along the line: you go on eva, your happiness increases by 0.1 per second because you are excited. That increase stops at some point though since EVA is only a part of the happiness equation. But you are right, in that case I would have to add an EVAHappiness or something to keep track of it. So there\u0027s a bit more to think about there. But I think it would come down to at most 200Kb per Kerbal, so unless you plan to start a huge colony it shouldn\u0027t be to much of a problem:)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-09-05T01:17:05Z","Content":"\n\u003Cp\u003EThis sounds really great!\u003C/p\u003E\u003Cp\u003EYou might want to hold off a couple weeks or so putting major effort in, though, given all the new persistent-kerbal-stats stuff .25 will be adding.\u003C/p\u003E\n"},{"CreatedByName":"Cyrik","CreatedById":117209,"CreatedDateTime":"2014-09-05T01:45:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NathanKell\u0022 data-cite=\u0022NathanKell\u0022\u003E\u003Cdiv\u003EThis sounds really great!\u003Cp\u003EYou might want to hold off a couple weeks or so putting major effort in, though, given all the new persistent-kerbal-stats stuff .25 will be adding.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOh right, I didn\u0027t even think about this. Good catch, thank you! I guess I really should hold off a bit and see how the API changes.\u003C/p\u003E\n"},{"CreatedByName":"madlemur","CreatedById":116597,"CreatedDateTime":"2014-09-05T01:53:15Z","Content":"\n\u003Cp\u003EHow\u0027s this for a thought: Activities give a certain benefit per second, up to some maximum, but there is a cool down before the same activity can grant more benefits. Possibly modified by the benefit gained...\u003C/p\u003E\n"},{"CreatedByName":"Cyrik","CreatedById":117209,"CreatedDateTime":"2014-09-05T02:10:49Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022madlemur\u0022 data-cite=\u0022madlemur\u0022\u003E\u003Cdiv\u003EHow\u0027s this for a thought: Activities give a certain benefit per second, up to some maximum, but there is a cool down before the same activity can grant more benefits. Possibly modified by the benefit gained...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMhhh, is there any benefit to having a cooldown if you have a maximum and an increase over time instead of per \u0022usage\u0022?\u003C/p\u003E\n"},{"CreatedByName":"cakepie","CreatedById":69278,"CreatedDateTime":"2014-09-05T02:13:38Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022madlemur\u0022 data-cite=\u0022madlemur\u0022\u003E\u003Cdiv\u003EHow\u0027s this for a thought: Activities give a certain benefit per second, up to some maximum, but there is a cool down before the same activity can grant more benefits. Possibly modified by the benefit gained...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUsing cooldown time sounds really promising. Repeating an action increases time left on the cooldown \u0022timer\u0022 and diminishes the benefit proportionately; timer can be forgotten once it reaches zero. This way you\u0027d only need to track the actions that are still on cooldown and forget the rest, rather than constantly maintaining a separate stat like EVA happiness for every possible activity [edit: in order to cap the benefit obtainable from any one action].\u003C/p\u003E\n"},{"CreatedByName":"Cyrik","CreatedById":117209,"CreatedDateTime":"2014-09-05T02:33:40Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EUsing cooldown time sounds really promising. Repeating an action increases time left on the cooldown \u0022timer\u0022 and diminishes the benefit proportionately; timer can be forgotten once it reaches zero. This way you\u0027d only need to track the actions that are still on cooldown and forget the rest\u0027 date=\u0027 rather than constantly maintaining a separate stat like EVA happiness for every possible activity [edit: in order to cap the benefit obtainable from any one action\u0027].\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUnless I\u0027m just not seeing how to code this properly, you would be trading a relatively minor gain in memory for a relatively large increase in cpu time and program complexity.\u003C/p\u003E\u003Cp\u003EMy first thought on implementing your idea would be a dictionary of cooldowns. Which would mean you have a string and a double for every active cooldown. The string\u002Bhashmap lookup is a lot slower then just a field access. And if even a few timers are active you are actually loosing memory efficiency since you are now storing a string \u002B a double for every value.\u003C/p\u003E\u003Cp\u003EAside from the performance concerns you do have quit a bit more code now because of all the dictionary access and checks and you lose the type safety by just throwing around strings.\u003C/p\u003E\n"},{"CreatedByName":"cakepie","CreatedById":69278,"CreatedDateTime":"2014-09-05T03:22:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cyrik\u0022 data-cite=\u0022Cyrik\u0022\u003E\u003Cdiv\u003EUnless I\u0027m just not seeing how to code this properly, you would be trading a relatively minor gain in memory for a relatively large increase in cpu time and program complexity.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI guess I\u0027m still thinking about it from the PoV of potentially large numbers of actions/activities that need to be separately tracked in order to prevent exploitative repetition. I don\u0027t know how many of those you have in mind.\u003C/p\u003E\u003Cp\u003EI\u0027m also considering that you\u0027d want this to be extensible by other mods. Besides mods that want to know the well-being of a kerbal, there may be mods that would like to add activities for kerbals too. So I figure you\u0027d need to be prepared to handle arbitrary numbers of trackable activities, each of which would need its own \u0022EVA-Happiness\u0022 variable. Hence my instinctive response is a dictionary approach.\u003C/p\u003E\u003Cp\u003EUltimately, you\u0027re right there is a memory/storage vs time/complexity tradeoff and obviously you\u0027re in a better position to evaluate that, having put a lot of thought into this whereas I\u0027m just working off gut responses (e.g. \u0022whoah seems like there might be arbitrarily many tracking variables\u0022)\u003C/p\u003E\n"},{"CreatedByName":"Cyrik","CreatedById":117209,"CreatedDateTime":"2014-09-05T03:44:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003EI guess I\u0027m still thinking about it from the PoV of potentially large numbers of actions/activities that need to be separately tracked in order to prevent exploitative repetition. I don\u0027t know how many of those you have in mind.\u003Cp\u003EI\u0027m also considering that you\u0027d want this to be extensible by other mods. Besides mods that want to know the well-being of a kerbal\u0027 date=\u0027 there may be mods that would like to add activities for kerbals too. So I figure you\u0027d need to be prepared to handle arbitrary numbers of trackable activities, each of which would need its own \u0022EVA-Happiness\u0022 variable. Hence my instinctive response is a dictionary approach.\u003C/p\u003E\u003Cp\u003EUltimately, you\u0027re right there is a memory/storage vs time/complexity tradeoff and obviously you\u0027re in a better position to evaluate that, having put a lot of thought into this whereas I\u0027m just working off gut responses (e.g. \u0022whoah seems like there might be arbitrarily many tracking variables\u0022)[/quote\u0027]\u003C/p\u003E\u003Cp\u003EWell its good to have the discussion:)\u003C/p\u003E\u003Cp\u003EBesides, you have a point with the extensibility thing. I didn\u0027t consider that since I was thinking that other mods would pretty much update my variables, not add new ones. But it kind of makes sense for someone to add a WasHuggedHappiness variable if thats what their mod does. So the dictionary approach might actually be the better way to go. Thanks for that:)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\n"},{"CreatedByName":"cakepie","CreatedById":69278,"CreatedDateTime":"2014-09-06T00:47:36Z","Content":"\n\u003Cp\u003EGlad that was of some use to you \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Errol","CreatedById":118622,"CreatedDateTime":"2014-09-25T22:00:57Z","Content":"\n\u003Cp\u003EI have two pieces of input to this discussion.\u003C/p\u003E\u003Cp\u003EIs there any planning for a visual representation of sanity/happiness/fitness status? Will they be treated like resources (as some of the early discussion had me thinking) where events either add to or remove from the total resource/stat? If so, they could be new TAC-LS style resources. I don\u0027t know what the licensing is, but it would be awesome if kerbals just consumed fitness and sanity stats and we had to keep them topped up. Would it be possible to perhaps have usi generator modules in certain parts, perhaps an mks/oks recreation lounger and gym, that provides enough of each resource/stat to keep a certain number of kerbals in that craft stable at the cost of EC?\u003C/p\u003E\u003Cp\u003EAnd here is where point two comes in. Can there please be remote tech integration for sanity. So you get a bonus for making sure that vessels have a connection back to kerbin. Maybe even if you have less signal delay they get more of a bonus, encouraging you to build better networks as well. It could even integrate with the mks/oks recreation lounge so that it either gets a huge efficiency boost while it is on a connected vessel or something like that. \u003C/p\u003E\u003Cp\u003EAlso, this just occurred to me, integration with snacks? For sanity?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-25T22:05:10Z\u0022 title=\u002209/25/2014 10:05  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 25, 2014\u003C/time\u003E by Errol\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Helix935","CreatedById":71312,"CreatedDateTime":"2014-09-29T17:34:36Z","Content":"\n\u003Cp\u003Ewill this use a complex ui or will it be light weight?\u003C/p\u003E\u003Cp\u003Eor has the UI design not been determined yet?\u003C/p\u003E\n"},{"CreatedByName":"Cyrik","CreatedById":117209,"CreatedDateTime":"2014-10-02T23:44:36Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Errol\u0022 data-cite=\u0022Errol\u0022\u003E\u003Cdiv\u003EI have two pieces of input to this discussion.\u003Cp\u003EIs there any planning for a visual representation of sanity/happiness/fitness status? Will they be treated like resources (as some of the early discussion had me thinking) where events either add to or remove from the total resource/stat? If so, they could be new TAC-LS style resources. I don\u0027t know what the licensing is, but it would be awesome if kerbals just consumed fitness and sanity stats and we had to keep them topped up. Would it be possible to perhaps have usi generator modules in certain parts, perhaps an mks/oks recreation lounger and gym, that provides enough of each resource/stat to keep a certain number of kerbals in that craft stable at the cost of EC?\u003C/p\u003E\u003Cp\u003EAnd here is where point two comes in. Can there please be remote tech integration for sanity. So you get a bonus for making sure that vessels have a connection back to kerbin. Maybe even if you have less signal delay they get more of a bonus, encouraging you to build better networks as well. It could even integrate with the mks/oks recreation lounge so that it either gets a huge efficiency boost while it is on a connected vessel or something like that. \u003C/p\u003E\u003Cp\u003EAlso, this just occurred to me, integration with snacks? For sanity?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u00C3\u201A\u00C2\u00B4m to sure about point one yet. The representation is still up in the air but I like your idea. I\u00C3\u201A\u00C2\u00B4ll think about it.\u003C/p\u003E\u003Cp\u003EPoint to is a definite yes, but only one the basics are implemented. I don\u0027t want to have dependency\u0027s unless they are optional.\u003C/p\u003E\u003Cp\u003EAnd a definite yes for snacks:)\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Helix935\u0022 data-cite=\u0022Helix935\u0022\u003E\u003Cdiv\u003Ewill this use a complex ui or will it be light weight?\u003Cp\u003Eor has the UI design not been determined yet?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENot sure about the UI yet. \u003C/p\u003E\u003Cp\u003EThe project is frozen until I see what is in the next KSP version.\u003C/p\u003E\n"},{"CreatedByName":"zekew11","CreatedById":59689,"CreatedDateTime":"2014-10-08T22:08:30Z","Content":"\n\u003Cp\u003EHere\u0027s how I\u0027d lay this out: bear in mind that I\u0027m as novice a coder as they come, but I like thinking about these things. For a lot of my inspiration (as to what the system should look like, less as to implementation), see rimworld.\u003C/p\u003E\u003Cp\u003EI\u0027m mainly reacting to the tacit idea present in this thread that we need to be updating happiness values in real time. that just seems silly.\u003C/p\u003E\u003Cp\u003EEach value that the plugin created and tracks is on a turn system. One turn=one kerbin (6hr) day. A complete re-calculation of the value only happens once per turn, though certain actions, like transferring to a new vessel, could force a recalculation. Second, factors affecting these values break down into \u0022conditions\u0022 and \u0022events\u0022. As I explain I\u0027ll assume we\u0027re working in the value \u0022happiness\u0022\u003C/p\u003E\u003Cp\u003EThe first calculation layer is \u0022conditions\u0022. Conditions are things like \u0022spacious environment\u0022 or \u0022experiencing gravity\u0022. Conditions can be stored in code as two bytes: one being the effect on happiness (if your scale is -100 to positive 100 a zero value would be equivalent to -100 while 200 would represent the positive 100) and the other being the condition id (used to fetch, for example, the description string from a config file.). using a string instead of an id byte would open the system up to modding quite nicely. Conditions underpin ultimate happiness value calculated at the beginning of each turn. Essentially the calculation starts when, each turn, the program checks what conditions apply and then finds the sum of their buffs/de-buffs. the value returned will henceforth be referred to as base happiness, and should also be rounded and stored as a single byte. We\u0027re also going to duplicate this byte under the name \u0022active_happiness\u0022.\u003C/p\u003E\u003Cp\u003EThe next layer is the events system (\u0022went on eva\u0022, \u0022had friendly chat\u0022, \u0022ate hearty meal\u0022, ect). This is where the mod can have the most flavor, but is also a processing and ram heavy proposition. My thinking is that while events can have influence over a kerbal\u0027s mood, you shouldn\u0027t be relying on events to keep your kerbals happy. That\u0027s what conditions are for. With this in mind, we only need to track events on loaded kerbals within a single turn. \u003Cem\u003ENone of the events system I\u0027m about to describe needs to be processed in time warp or for unfocused vessels\u003C/em\u003E Each event, upon manifestation, applies its own offset to base happiness. This allows you to dynamically alter the final happiness value in real time, without going back and re-checking for all the current conditions. base happiness is still stored, along with two bytes for each event (in the same style as a condition), and we add one more byte: active happiness. The calculations involving this data still don\u0027t occur every frame, but simply once when each event manifests. For example; you tell your chef to prepare 5 hearty meals. for 5 random kerbals aboard your vessel, \u0022base happiness\u0022 is retrieved, an offset is added for \u0022ate hearty meal\u0022 and \u0022active happiness\u0022 is saved. To be clear, at the end of each turn the events list is deleted for all kerbals, and was only ever present on kerbals that you focused on and who had an event occur effecting them.\u003C/p\u003E\u003Cp\u003EThe third and final layer is happiness inertia. If you take Bill out of the space station and put him in a tiny pod on a tug, he shouldn\u0027t immediately go bananas. This can be tackled very simply by taking advantage of the turn system. Previously we discussed calculating base happiness from the average of a list of conditions. Now, we simply take this value and average it against \u0022active_happiness\u0022 from the last turn (weighted average if you so fancy: useful perhaps for something like \u0022fitness\u0022, which should have considerably more inertia). The result is that whatever you did yesterday that made bill so happy: the computer doesn\u0027t care. Bill doesn\u0027t care. the last trace of that data was obliterated when, in the next line, we overwrote \u0022active happiness\u0022 with the new turn\u0027s base happiness. But even though his head is touching the ceiling, he just ate spinach goo out of a tube, and he\u0027s on freaking space tug duty \u003Cem\u003Eagain\u003C/em\u003E... he\u0027s... smiling...\u003C/p\u003E\u003Cp\u003ETo review, we have two calculations: a conditions calculation that returns byte base_happiness and occurs for every kerbal once every six hours, and an events calculation that occurs for one kerbal, only when focused and only once when an event actually occurs. Two bytes describe the current state of the kerbal: base happiness: for use in events calculations, and active happiness: the actual final value to be printed on a ui for example. up to two lists (functionally tables or arrays: looking up an offset (byte) via an id (byte or string)) are kept per kerbal; one for conditions and one for events.\u003C/p\u003E\u003Cp\u003EPolish. The events system is where this mod will derive the bulk of its flavor, but no events will occur on unfocused vessels. I would argue for a simple system that spawns 1-3 applicable events per kerbal when he is first focused on during a turn. this way an events list can have some background population with things like \u0022had pleasant chat\u0022, \u0022didn\u0027t like the food\u0022, \u0022Beat Jeb in chess\u0022. these would be balanced for an even distribution of positive and negative offsets so as to not give an advantage to traveling to duna in physical time warp, and thus very deliberately avoid having a large game play effect, but the added atmosphere would be almost free computation wise and imho add greatly to the mod.\u003C/p\u003E\u003Cp\u003EExpandability. The list system allows us to keep one list of all the conditions impacting a kerbal. multiple different offsets can be defined for each of these conditions, allowing the same master list to be used in the calculation of all variables addressed by the plugin.\u003C/p\u003E\u003Cp\u003EExample ram usage for 1 of 2 crew in a hitchhiker and a 3 man pod headed for duna, using happiness, sanity, and fitness:\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EConditions List: (2d array)\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E[23,90,99,100] (id 23: \u0022vacuum packed diet\u0022, -10 happiness, -1 sanity, 0 fitness)\u003C/p\u003E\u003Cp\u003E[47,100,95,50] (id 47: \u0022zero g\u0022, 0 happiness, -5 sanity, -50 fitness)\u003C/p\u003E\u003Cp\u003E[8,100,105,100] (id 8: \u0022its me and a partner\u0022, 0 happiness, \u002B5 sanity, 0 fitness)\u003C/p\u003E\u003Cp\u003E[27,110,115,120] (id 27: \u0022ability to exercise\u0022, \u002B10 happiness, \u002B15 sanity, \u002B20 fitness)\u003C/p\u003E\u003Cp\u003E[233,110,100,105] (id 233: \u0022breathing room\u0022, \u002B10 happiness, 0 sanity, \u002B5 fitness)\u003C/p\u003E\u003Cp\u003E4x5 bytes is 20 bytes. the program additionally creates 2 more bytes times 3 variables (base happiness; active happiness); so we\u0027re at 26 bytes for this guy. lets square that because other mod authors add more variables and more conditions. 676 bytes per kerbal. 200 kerbals in your save: 135200 bytes. about 135 kb. about the size of this post as a .txt file, or 1/3000th of the ram one with 4 gigs on their system might expect to be allocated to ksp. What I\u0027m saying is that if you play with variables as bytes you have to try really hard to blow up your ram usage.\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022text-decoration:underline;\u0022\u003Ewhat I\u0027m unsure of:\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EHow to apply random flavor events:\u003C/strong\u003E My thought is to attach them to conditions. for example; the condition \u0022Large Crew\u0022 would enable the random event \u0022Beat Jeb at Chess\u0022 to spawn. I just don\u0027t feel it\u0027s very elegant though; and would certainty complicate the conditions definitions, wherever these were stored.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EHow best to track the conditions list:\u003C/strong\u003E What constitutes \u0022spacious living quarters\u0022? do we re-check the list each turn (seemingly prohibitively expensive) or force specific types of changes to cause a recheck (seemingly very sloppy) probably some hybrid: we cant rebuild the list for 150 kerbals every 6 hours in 10,000x warp, but we also shouldn\u0027t attach code to every SOI change and write and run code that\u0027s constantly looking for perceivable gravity.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EHow best to implement the list system:\u003C/strong\u003E The thought crossed my mind that we\u0027re going to load the directory of possible conditions and events into ram once; why copy most of its data over into each kerbal\u0027s lists. Basically, do we use the id of a condition to reference a common database elsewhere in ram to retrieve offsets for calculations, or do we save the cpu some effort and simply copy over the couple bytes into the kerbal\u0027s data. In my example I did the latter, as it seemed simpler and still not too costly, which I figured was good given my poor understanding of transactions in ram in unity or C#\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EEvent Stacking\u003C/strong\u003EOne of the big discussions in this thread has been avoiding exploitative stacking of event buffs. The turn system makes this much easier to avoid. The options are A) once an event has occurred that turn it cant happen to that kerbal again until the events list is purged at the start of the next turn. you could conceivably do this with around three lines of code. alternately, \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_cool.png\u0022 alt=\u0022B)\u0022\u003E each time you stack an action it has half the effect of last time. first eva of the day? \u002B10 happiness. Second? \u002B5. Third? 2 (rounding to floor bc we have only a byte). Thus, the fifth eva and onward has no effect, and the previous four contributed \u002B18 happiness.\u003C/p\u003E\u003Cp\u003ELastly, I\u0027m a big fan of the adversarial system for idea development: tear this thing to pieces and I\u0027ll do my best to defend it. Do try though to offer better solutions to problems that you dislike how I solve.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-10-08T23:30:19Z\u0022 title=\u002210/08/2014 11:30  PM\u0022 data-short=\u00229 yr\u0022\u003EOctober 8, 2014\u003C/time\u003E by zekew11\u003C/strong\u003E\n\u003C/span\u003E\n"}]}