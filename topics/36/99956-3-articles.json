{"TopicId":99956,"ForumId":36,"TopicTitle":"[WIP] TweakScale - Development Thread","CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-17T21:25:02Z","PageNum":3,"Articles":[{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-19T23:38:18Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ObsessedWithKSP\u0022 data-cite=\u0022ObsessedWithKSP\u0022\u003E\u003Cdiv\u003ETo the best of my knowledge, and having a read through when Biotronic took a stab at this bug, it\u0027s pretty much unavoidable due to the order in which KSP loads the universe and its scale upon reload. Have a read through that support thread I linked for more info, it looks like a nasty bug to squash.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThis is clearly beyond my current knowledge about the internal mechanics of KSP, so I\u0027ll focus on workarounds for the moment. For me, switching to map view and back after each camera change seemed to resolve the situation. \u003C/p\u003E\u003Cp\u003EAnd for parts reverting to original scale, is it possible that this bug requires a scaled root part? This would also be a good workaround.\u003C/p\u003E\n"},{"CreatedByName":"brian6712","CreatedById":119336,"CreatedDateTime":"2015-02-20T20:32:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022pellinor\u0022 data-cite=\u0022pellinor\u0022\u003E\u003Cdiv\u003EThis is clearly beyond my current knowledge about the internal mechanics of KSP, so I\u0027ll focus on workarounds for the moment. For me, switching to map view and back after each camera change seemed to resolve the situation. \u003Cp\u003EAnd for parts reverting to original scale, is it possible that this bug requires a scaled root part? This would also be a good workaround.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI have tried making the part that I\u0027m having a problem with the root part and then not and still having the same problem. When I- first launch the vehicle I can switch to another vessel and come back and the part will be the right size. If I save then quit the programe and come back thats when the part is resized back to it\u0027s origional size. I have even gone into the cfgs and changed the origional size to prefered size and somehow it nows what it used to be and reverts back.\u003C/p\u003E\n"},{"CreatedByName":"FreeThinker","CreatedById":117389,"CreatedDateTime":"2015-02-20T20:41:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022pellinor\u0022 data-cite=\u0022pellinor\u0022\u003E\u003Cdiv\u003EFree scaling is a property of the scaletype. My main config change was this (from DefaultScales.cfg)\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003ESCALETYPE\u003Cbr\u003E{\u003Cbr\u003E    name = stack\u003Cbr\u003E    freeScale = true\u003Cbr\u003E    minScale = 0.3\u003Cbr\u003E    maxScale = 10\u003Cbr\u003E    ...\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAlright, so this is what breaks by carefully selected scale factors\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EMODULE\u003Cbr\u003E{\u003Cbr\u003E    name = TweakScale\u003Cbr\u003E    type = stack\u003Cbr\u003E    defaultScale = 1.25\u003Cbr\u003E    scaleFactors = 0.625, 1.25, 1.875\u003Cbr\u003E    scaleNames = 0.625m, 1.25m, 1.875m\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EI would like freescale to take notice of my max and minimum size\u003C/p\u003E\u003Cp\u003EMy suggestion is to leave the default stack to it\u0027s original tweak scale behavior and leave it the mod developers to decide where to apply freescale\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-20T20:50:40Z\u0022 title=\u002202/20/2015 08:50  PM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 20, 2015\u003C/time\u003E by FreeThinker\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-20T22:00:13Z","Content":"\n\u003Cp\u003EThe stack scaletype defines the default behavior for stock parts, this is exactly what I want to change. In my opinion, the possibilities should be limited just by the UI. From there, you get tools to introduce restrictions if you want. I do not see the old stack behavior as god-given and the best thinkable way to do it, but as something historically grown out of interface limitations (In the old freescale interface the standard stack sizes would be somewhere randomly in the middle of the slider, so it was not even an option to use it for stack parts). \u003C/p\u003E\u003Cp\u003EThe problem in your config is just that freescale does not use the min and max of the scaleFactors list. For whatever reasons, it has its own config values minScale and maxScale. I just tested that you can override them in the same way as the scaleFactors: \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E@PART[engineLargeSkipper] // Rockomax \u0022Skipper\u0022 Liquid Engine\u003Cbr\u003E{\u003Cbr\u003E\tMODULE\u003Cbr\u003E\t{\u003Cbr\u003E\t\tname = TweakScale\u003Cbr\u003E                type = stack\u003Cbr\u003E                defaultScale = 2.5\u003Cbr\u003E                minScale = 1\u003Cbr\u003E                maxScale = 5\u003Cbr\u003E\t}\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EFor free scaling, the tweakable is hardcoded to main increments of maxScale/8 at the moment, so the subdivision gets wonky again. Due to rounding issues I even end up with a wrong max setting for the above config. I will fix this with config options for the slider settings. \u003C/p\u003E\u003Cp\u003EIf you want the old discrete behavior, the best way is to define a custom scaletype with freescale=false.\u003C/p\u003E\u003Cp\u003EThanks for your post, it shows that I should not be hasty with bringing the scaletype changes into an official TweakScale release.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-20T22:27:31Z\u0022 title=\u002202/20/2015 10:27  PM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 20, 2015\u003C/time\u003E by pellinor\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-20T22:25:33Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022brian6712\u0022 data-cite=\u0022brian6712\u0022\u003E\u003Cdiv\u003EI have tried making the part that I\u0027m having a problem with the root part and then not and still having the same problem. When I- first launch the vehicle I can switch to another vessel and come back and the part will be the right size. If I save then quit the programe and come back thats when the part is resized back to it\u0027s origional size. I have even gone into the cfgs and changed the origional size to prefered size and somehow it nows what it used to be and reverts back.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYou are talking about \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/80234-0-90-TweakScale-Rescale-Everything!-%28v1-50-2014-12-24-10-40-UTC%29?p=1746055viewfull=1#post1746055\u0022 rel=\u0022external nofollow\u0022\u003Ethis config\u003C/a\u003E? I\u0027m not a moduleManager expert, but there are a handful of suspicious things about that config: \u003C/p\u003E\u003Cp\u003E* it is referring to a custom scaleType \u0022TweakScaler\u0022 that is not included\u003C/p\u003E\u003Cp\u003E* part[*]: do you know what you\u0027re doing there? Is is safe to give e.g. struts, fuel lines and asteroids a TweakScale module? \u003C/p\u003E\u003Cp\u003E* wasn\u0027t there some \u0022HAS:\u0022 expression when you test the existence of a module? \u003C/p\u003E\u003Cp\u003E* you don\u0027t specify when the patch should be applied. If the patch gets applied early, the TweakScale module you test for might not yet exist.\u003C/p\u003E\n"},{"CreatedByName":"frencrs","CreatedById":95489,"CreatedDateTime":"2015-02-21T00:11:32Z","Content":"\n\u003Cp\u003EHey pellinor! Thanks for taking over this mod, it\u0027s a key piece of a lot of modded Kerbal installs. \u003C/p\u003E\u003Cp\u003EI wanted to find out if you\u0027re planning anything for the ability to separately scale nodes? I submitted some changes to the older version last year to do add the config setting. Basically it\u0027s for Infernal Robotics parts; the parts need nodes with sizes no greater than 1, or else their movements bug out. Keeping the nodes the same let the parts be scaled to larger sizes. (We all know how ridiculously big some creations can get, lol.)\u003C/p\u003E\u003Cp\u003EEdit: This isn\u0027t a huge priority, so don\u0027t worry about it yet. I\u0027ve cloned the new version and I\u0027m getting up to date, I\u0027ll try to see if I can help out with any bugs.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-21T00:27:00Z\u0022 title=\u002202/21/2015 12:27  AM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 21, 2015\u003C/time\u003E by frencrs\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"AccidentalDisassembly","CreatedById":110936,"CreatedDateTime":"2015-02-21T00:27:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022pellinor\u0022 data-cite=\u0022pellinor\u0022\u003E\u003Cdiv\u003EThe stack scaletype defines the default behavior for stock parts, this is exactly what I want to change. In my opinion, the possibilities should be limited just by the UI. From there, you get tools to introduce restrictions if you want. I do not see the old stack behavior as god-given and the best thinkable way to do it, but as something historically grown out of interface limitations (In the old freescale interface the standard stack sizes would be somewhere randomly in the middle of the slider, so it was not even an option to use it for stack parts). \u003Cp\u003EThe problem in your config is just that freescale does not use the min and max of the scaleFactors list. For whatever reasons, it has its own config values minScale and maxScale. I just tested that you can override them in the same way as the scaleFactors: \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E@PART[engineLargeSkipper] // Rockomax \u0022Skipper\u0022 Liquid Engine\u003Cbr\u003E{\u003Cbr\u003E    MODULE\u003Cbr\u003E    {\u003Cbr\u003E        name = TweakScale\u003Cbr\u003E                type = stack\u003Cbr\u003E                defaultScale = 2.5\u003Cbr\u003E                minScale = 1\u003Cbr\u003E                maxScale = 5\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EFor free scaling, the tweakable is hardcoded to main increments of maxScale/8 at the moment, so the subdivision gets wonky again. Due to rounding issues I even end up with a wrong max setting for the above config. I will fix this with config options for the slider settings. \u003C/p\u003E\u003Cp\u003EIf you want the old discrete behavior, the best way is to define a custom scaletype with freescale=false.\u003C/p\u003E\u003Cp\u003EThanks for your post, it shows that I should not be hasty with bringing the scaletype changes into an official TweakScale release.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI think you mentioned something like this before, but if you want to change it so that all of the parts have a freescale-ish way of scaling, I\u0027d personally much, much prefer something like this:\u003C/p\u003E\u003Cp\u003ESCALETYPE {\u003C/p\u003E\u003Cp\u003Ename = thenewscaletype\u003C/p\u003E\u003Cp\u003EmajorScales = 0.625, 1.25, 1.875, 2.5, etc.\u003C/p\u003E\u003Cp\u003EminorIncrements = free / 0.25 /whatever\u003C/p\u003E\u003Cp\u003EmaxScale\u003C/p\u003E\u003Cp\u003EminScale\u003C/p\u003E\u003Cp\u003Eotherstuff\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003EIt could operate with two sliders, kind of like Infernal Robotics does for speed control (or something, can\u0027t remember) - one slider for major changes (i.e. stack size changing), a second slider for minor increments. Just an example - I\u0027m sure there\u0027s a better way, and actually B9 procedural wings have a pretty good interface right now.\u003C/p\u003E\u003Cp\u003EMy thinking here is that I would really like to be able to increment the part to standard stack sizes \u003Cem\u003Eor \u003C/em\u003Eto any size I define, like I can do now with normal, not-free scaling (I changed the \u0022stack\u0022 scaletype to include lots of different sizes).\u003C/p\u003E\u003Cp\u003EThen, depending on the part, it could theoretically be useful to fine-tune the scale (especially for parts that aren\u0027t REALLY 2.5m or 3.75m scale, or whatever, to make them match up with stock or other parts).\u003C/p\u003E\u003Cp\u003EBut here\u0027s the rub: the reason free/surface vs. stack scaling exist as two separate things right now is that scaling many surface-attached parts according to \u00221.25m, 2.5m, 3.75m\u0022 or any other sizes with discrete measurements makes no sense. Sure, some surface-mount parts have discernible 1.25m bits on them, or whatever, but think about radially-mounted engines: let\u0027s say they default to 1.25m in the SCALETYPE - well, they may or may not actually be 1.25m in size to begin with, so scaling them to 2.5m might make zero sense and not be intuitive at all.\u003C/p\u003E\u003Cp\u003EI don\u0027t think it\u0027s possible to eliminate the difference between stack-style, discrete-step scaling and surface/free scaling and still have things make sense.\u003C/p\u003E\u003Cp\u003EBut: I do think it\u0027s possible to combine all surface scaling into the free-scaled regime, so long as you leave major size-increment options that are appropriate for surface-mounted parts that actually are 1.25m or 2.5m or whatever in size: in which case 1x, 1.5x, 2x, 3x, 4x, 5x, 6x sizes would be apporpriate, or however big or small you want to go, with a second slider allowing for fine-tuning if you want (or something).\u003C/p\u003E\u003Cp\u003EAnother thing to think about: one of the major limitations of current TweakScale configs and SCALETYPEs is that scaling engines up produces useless monstrosities, while scaling them down produces ridiculous TWR. Thrust increases as a square, mass increases as a cube - or decreases as a cube, where thrust only decreases as a square.\u003C/p\u003E\u003Cp\u003EI would propose:\u003C/p\u003E\u003Cp\u003E1. Create new SCALETYPE(S) with different mass scaling for engines - probably TWEAKSCALEEXPONENTS { mass = 2.2 or 2.5 or something}\u003C/p\u003E\u003Cp\u003E2. Create an MM config that runs last in the order, searches out every engine part that has a TweakScale module, and applies this scaletype to them (maintains all the default scaling and whatever)\u003C/p\u003E\u003Cp\u003EOr something along those lines. I bet I can cook up a glitchy version of each right now:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ESCALETYPE\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E name = stack_mid\u003C/p\u003E\u003Cp\u003E freeScale = false\u003C/p\u003E\u003Cp\u003E scaleFactors = 0.625, 0.75, 1.0, 1.25, 1.5, 1.875, 2.5, 3.75, 5.0, 6.25, 7.5, 8.75, 10.0 \u003C/p\u003E\u003Cp\u003E scaleNames = 62.5cm, 75cm, 1.0m, 1.25m, 1.5m, 1.875m, 2.5m, 3.75m, 5m, 6.25m, 7.5m, 8.75m, 10m\u003C/p\u003E\u003Cp\u003E defaultScale = 1.25\u003C/p\u003E\u003Cp\u003E TWEAKSCALEEXPONENTS { mass = 2.5 }\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EMM Patch that probably will break everything:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E@PART\u003C/p\u003E\u003Cp\u003E[*]:HAS[@MODULE[TweakScale],@MODULE[ModuleEngines|ModuleEnginesFX]]:FINAL\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E@MODULE[TweakScale]\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E@type = newType\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOr this might possibly be better, it would catch surface-scaling engines too, maybe? Thought it would override any custom scaletype\u0027s mass scaling, if that\u0027s a factor.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E@PART\u003C/p\u003E\u003Cp\u003E[*]:HAS[@MODULE[TweakScale],@MODULE[ModuleEngines|ModuleEnginesFX]]:FINAL\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E@MODULE[TweakScale]\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E%TWEAKSCALEEXPONENTS { mass = 2.5 }\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYet another option would be to do what I\u0027ve done personally, which is edit every single TweakScale config so that engines have the stack_mid scaletype (and some other parts too)/\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022frencrs\u0022 data-cite=\u0022frencrs\u0022\u003E\u003Cdiv\u003EHey pellinor! Thanks for taking over this mod, it\u0027s a key piece of a lot of modded Kerbal installs. \u003Cp\u003EI wanted to find out if you\u0027re planning anything for the ability to separately scale nodes? I submitted some changes to the older version last year to do add the config setting. Basically it\u0027s for Infernal Robotics parts; the parts need nodes with sizes no greater than 1, or else their movements bug out. Keeping the nodes the same let the parts be scaled to larger sizes. (We all know how ridiculously big some creations can get, lol.)\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s the problem with scaling up IR parts? Holy crap!\u003C/p\u003E\u003Cp\u003EI think you could define a custom SCALETYPE that makes the node sizes stay identical, maybe... not sure on that one. I think node size is determined the same way mass is, so it maybe should be possible...\u003C/p\u003E\u003Cp\u003EWould that mean that joints on large IR parts are really, really flimsy?\u003C/p\u003E\u003Cp\u003EEDIT: I take it back, nodes do this:\u003C/p\u003E\u003Cp\u003EattachNodes\u003C/p\u003E\u003Cp\u003E {\u003C/p\u003E\u003Cp\u003E breakingForce = 2\u003C/p\u003E\u003Cp\u003E breakingTorque = 2\u003C/p\u003E\u003Cp\u003E }\u003C/p\u003E\u003Cp\u003ESo breaking forces are controlled by TWEAKSCALEEXPONENTS, but I don\u0027t know how node size actually ends up getting done.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-21T00:29:21Z\u0022 title=\u002202/21/2015 12:29  AM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 21, 2015\u003C/time\u003E by AccidentalDisassembly\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-21T01:54:41Z","Content":"\n\u003Cp\u003EGood to have more people here who know how this stuff is used in other mods. \u003C/p\u003E\u003Cp\u003E@\u0022free\u0022 scaling: There seems some confusion about what freescaling means, because we have a scaletype \u0022free\u0022 and a properts \u0022isfreescale\u0022 which are different things. \u003Cstrong\u003EisFreeScale\u003C/strong\u003E is what I am changing, this just means that intermediate values are allowed. The \u003Cstrong\u003Efree\u003C/strong\u003E/\u003Cstrong\u003Esurface\u003C/strong\u003E scaletypes on the other hand are meant for parts for which percent seems a more natural scaling unit than meter. I do not plan to merge these categories. \u003C/p\u003E\u003Cp\u003E@\u003Cstrong\u003Escale-sliders\u003C/strong\u003E: right now I go with the same interface as procedural parts. The limitation is the slider tweakable from KSPApiExtensions, which needs fixed increments. For stack parts, the main increment is 1.25m, so with the outer arrows you jump between the larger stock scales. The small arrow gives the intermediate sizes (0.625, 1.875 etc). So the buttons give you basically the same selection as before. The main difference is that there exists a slider to access intermediate values. \u003C/p\u003E\u003Cp\u003E@\u003Cstrong\u003ENodes\u003C/strong\u003E: I changed some stuff about node sizes because the code only worked for discrete scaling, or between parts with identical scaling units. Now they scale proportionally with the visual model. What would work in the current version is to make the original models big with small nodes, so you scale them down most of the time. Then you would end up with size0 nodes most of the time (probably not optimal). Do you know why they need small nodes? Probably they move their servos in a non-smooth way and the connected parts need some wiggle room so they can follow a bit smoother. Sounds like a reasonable request, though if my intuition is right it seems a bit like working around a problem that is better solved in other ways. I\u0027d be interested if they would be more stable with a smooth interpolation (might have a look at that if I ever get TweakScale stable). Anyway, I\u0027ll look for a good way to configure node scaling. And if something is worse than in TS 1.50 please tell me. \u003C/p\u003E\u003Cp\u003E@\u003Cstrong\u003Emass scaling\u003C/strong\u003E: are you sure? I thought the same, until I recently found that the default exponents in ScaleExponents.cfg are 2.5 for mass and 2.6 for thrust. That looks quite reasonable. Or is anything overriding this?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-21T02:02:53Z\u0022 title=\u002202/21/2015 02:02  AM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 21, 2015\u003C/time\u003E by pellinor\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"AccidentalDisassembly","CreatedById":110936,"CreatedDateTime":"2015-02-21T02:40:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022pellinor\u0022 data-cite=\u0022pellinor\u0022\u003E\u003Cdiv\u003EGood to have more people here who know how this stuff is used in other mods. \u003Cp\u003E@\u0022free\u0022 scaling: There seems some confusion about what freescaling means, because we have a scaletype \u0022free\u0022 and a properts \u0022isfreescale\u0022 which are different things. \u003Cstrong\u003EisFreeScale\u003C/strong\u003E is what I am changing, this just means that intermediate values are allowed. The \u003Cstrong\u003Efree\u003C/strong\u003E/\u003Cstrong\u003Esurface\u003C/strong\u003E scaletypes on the other hand are meant for parts for which percent seems a more natural scaling unit than meter. I do not plan to merge these categories. \u003C/p\u003E\u003Cp\u003E@\u003Cstrong\u003Escale-sliders\u003C/strong\u003E: right now I go with the same interface as procedural parts. The limitation is the slider tweakable from KSPApiExtensions, which needs fixed increments. For stack parts, the main increment is 1.25m, so with the outer arrows you jump between the larger stock scales. The small arrow gives the intermediate sizes (0.625, 1.875 etc). So the buttons give you basically the same selection as before. The main difference is that there exists a slider to access intermediate values. \u003C/p\u003E\u003Cp\u003E@\u003Cstrong\u003ENodes\u003C/strong\u003E: I changed some stuff about node sizes because the code only worked for discrete scaling, or between parts with identical scaling units. Now they scale proportionally with the visual model. What would work in the current version is to make the original models big with small nodes, so you scale them down most of the time. Then you would end up with size0 nodes most of the time (probably not optimal). Do you know why they need small nodes? Probably they move their servos in a non-smooth way and the connected parts need some wiggle room so they can follow a bit smoother. Sounds like a reasonable request, though if my intuition is right it seems a bit like working around a problem that is better solved in other ways. I\u0027d be interested if they would be more stable with a smooth interpolation (might have a look at that if I ever get TweakScale stable). Anyway, I\u0027ll look for a good way to configure node scaling. And if something is worse than in TS 1.50 please tell me. \u003C/p\u003E\u003Cp\u003E@\u003Cstrong\u003Emass scaling\u003C/strong\u003E: are you sure? I thought the same, until I recently found that the default exponents in ScaleExponents.cfg are 2.5 for mass and 2.6 for thrust. That looks quite reasonable. Or is anything overriding this?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EOops, maybe something changed in a recent version? Assuming only stock \u0026amp; tweakscale are installed, then, the base mass of everything goes up at 2.5 exponent, while mass of resources contributes appropriately? It used to be 3 for mass, anyway...\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-21T12:34:16Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AccidentalDisassembly\u0022 data-cite=\u0022AccidentalDisassembly\u0022\u003E\u003Cdiv\u003EOops, maybe something changed in a recent version? Assuming only stock \u0026amp; tweakscale are installed, then, the base mass of everything goes up at 2.5 exponent, while mass of resources contributes appropriately? It used to be 3 for mass, anyway...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI haven\u0027t searched when that happened, but it also catched me by surprise.\u003C/p\u003E\n"},{"CreatedByName":"LayTzz_swe","CreatedById":113895,"CreatedDateTime":"2015-02-21T17:02:00Z","Content":"\n\u003Cp\u003EI\u0027m having problems with tweakscale and air intakes... when I launch a vessel with an air intake the world goes blue and dark. (not a RAM issue) plz help (ksp beta btw) and latest version of tweakscale (previous thread)\u003C/p\u003E\n"},{"CreatedByName":"Enceos","CreatedById":110725,"CreatedDateTime":"2015-02-21T19:16:43Z","Content":"\n\u003Cp\u003EBlue and dark like this?\u003C/p\u003E\u003Cblockquote lang=\u0022en\u0022\u003E\u003Ca href=\u0022//imgur.com/a/S3Qce\u0022 rel=\u0022external nofollow\u0022\u003EJavascript is disabled. View full album\u003C/a\u003E\u003C/blockquote\u003E\u003Cp\u003EPellinor, will freescale work with welding as well as other types of scaling did?\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-21T19:25:14Z\u0022 title=\u002202/21/2015 07:25  PM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 21, 2015\u003C/time\u003E by Enceos\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"frencrs","CreatedById":95489,"CreatedDateTime":"2015-02-21T20:15:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022LayTzz_swe\u0022 data-cite=\u0022LayTzz_swe\u0022\u003E\u003Cdiv\u003EI\u0027m having problems with tweakscale and air intakes... when I launch a vessel with an air intake the world goes blue and dark. (not a RAM issue) plz help (ksp beta btw) and latest version of tweakscale (previous thread)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESorry man, but it\u0027s very difficult to provide help without a good write up of the problem.\u003C/p\u003E\u003Cp\u003EYour post should have: screenshots, reproduction steps, any log errors you find occurring with the problem.\u003C/p\u003E\u003Cp\u003EAlso you should check to make sure the problem is occurring with ONLY tweakscale installed. If it stops happening, add mods back 1-by-1 until it happens again. Then try to figure out what part of the conflicting mod is causing the problem.\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-21T21:07:02Z","Content":"\n\u003Cp\u003EI have a problem with this line from ScaleType.cs:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E            MaxValue      = Tools.ConfigValue(config, \u0022maxScale\u0022,     source.MaxValue);\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThis is supposed to return the last parameter in case of a problem. It works like this, however when I change the last param to something explicit like 3f, I seem to always get this 3f back (as a result, it overrides the maxScale of all scaletypes). \u003C/p\u003E\u003Cp\u003EAnyone with C# has an idea on this? The method is from Tools.cs:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cblockquote\u003E\u003Cdiv\u003E\u003Cbr\u003E public static T ConfigValue\u0026lt;T\u0026gt;(ConfigNode config, string name, T defaultValue)\u003Cbr\u003E {\u003Cbr\u003E if (!config.HasValue(name))\u003Cbr\u003E {\u003Cbr\u003E return defaultValue;\u003Cbr\u003E }\u003Cbr\u003E string cfgValue = config.GetValue(name);\u003Cbr\u003E try\u003Cbr\u003E {\u003Cbr\u003E var result = ConvertEx.ChangeType\u0026lt;T\u0026gt;(cfgValue);\u003Cbr\u003E return result;\u003Cbr\u003E }\u003Cbr\u003E catch (Exception ex)\u003Cbr\u003E {\u003Cbr\u003E if (ex is InvalidCastException || ex is FormatException || ex is OverflowException || ex is ArgumentNullException)\u003Cbr\u003E {\u003Cbr\u003E LogWf(\u0022Failed to convert string value \\\u0022{0}\\\u0022 to type {1}\u0022, cfgValue, typeof(T).Name);\u003Cbr\u003E return defaultValue;\u003Cbr\u003E }\u003Cbr\u003E throw;\u003Cbr\u003E }\u003Cbr\u003E }\u003Cbr\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/blockquote\u003E\u003Cp\u003E\u003Cspan style=\u0022font-size:8px;\u0022\u003E\u003Cspan style=\u0022color:#C0C0C0;\u0022\u003E- - - Updated - - -\u003C/span\u003E\u003C/span\u003E\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Enceos\u0022 data-cite=\u0022Enceos\u0022\u003E\u003Cdiv\u003EPellinor, will freescale work with welding as well as other types of scaling did?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf it worked with the old free scaletype then it should still work. My guess is it uses the most straightforward method of just getting currentScale and defaultScale from the TweakScale module, these work the same regardless of scaletype.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-21T21:11:12Z\u0022 title=\u002202/21/2015 09:11  PM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 21, 2015\u003C/time\u003E by pellinor\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-21T22:55:18Z","Content":"\n\u003Cp\u003EThe next iteration is up \u003Ca href=\u0022https://github.com/pellinor0/TweakScale/archive/master.zip\u0022 rel=\u0022external nofollow\u0022\u003E[.ZIP from Github]\u003C/a\u003E, uploaded a few minutes ago. \u003C/p\u003E\u003Cp\u003E* Slider increments are now configurable (see examples in DefaultScales.cfg). \u003C/p\u003E\u003Cp\u003E* If min/maxScale are not set we try the min and max of the scaleFactors list. \u003C/p\u003E\u003Cp\u003E* If a free scaletype has no increments set, it gets a simple slider from min to max. \u003C/p\u003E\u003Cp\u003E* Removed the inner buttons for the %-based scaletypes, it seems more convenient like this.\u003C/p\u003E\u003Cp\u003EEdit: I still haven\u0027t understood the above problem, just avoided to change that line.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-21T23:26:46Z\u0022 title=\u002202/21/2015 11:26  PM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 21, 2015\u003C/time\u003E by pellinor\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"FreeThinker","CreatedById":117389,"CreatedDateTime":"2015-02-22T14:47:37Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022pellinor\u0022 data-cite=\u0022pellinor\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI\u0027m a bit surprised by the setting of 2.5, this means that engines scale fine and tanks do not follow the constant mass fraction that is standard in stock. In my memory it was the other way round and engines needed some work. Guess I haven\u0027t looked in there for a long time.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s quite shocking. I always assumed mass growed with exponent 3, not 2.5. It even sais so in the OP in tweakscale\u003C/p\u003E\n"},{"CreatedByName":"AccidentalDisassembly","CreatedById":110936,"CreatedDateTime":"2015-02-22T16:29:26Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022FreeThinker\u0022 data-cite=\u0022FreeThinker\u0022\u003E\u003Cdiv\u003EThat\u0027s quite shocking. I always assumed mass growed with exponent 3, not 2.5. It even sais so in the OP in tweakscale\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EVery easy to change if you want. The resources do grow with an exponent of 3, of course. Sometimes I wonder in reality whether things really use 8 times the material when scaled to 2x the size, though...\u003C/p\u003E\u003Cp\u003EAt least on engines specifically, the 2.5 exponent is much better than 3. An exponent of 3 makes engine scaling very wonky and REALLY favors scaling engines down.\u003C/p\u003E\n"},{"CreatedByName":"The Space Man","CreatedById":73734,"CreatedDateTime":"2015-02-23T14:01:36Z","Content":"\n\u003Cp\u003EIs anyone else getting problems with some of the mk2 parts not attaching and throwing null reference exceptions?\u003C/p\u003E\u003Cp\u003ETrying to attach the Mk2 Liquid Fuel Fuselage and this happens:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/yyioLJN.jpg\u0022 alt=\u0022yyioLJN.jpg\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"BudgetHedgehog\uFEFF","CreatedById":104112,"CreatedDateTime":"2015-02-23T15:11:16Z","Content":"\n\u003Cp\u003EComplete guess, but do you have configs for stock Mk2 and SP\u002B Mk2? Duplicate configs can cause such issues..\u003C/p\u003E\n"},{"CreatedByName":"The Space Man","CreatedById":73734,"CreatedDateTime":"2015-02-23T16:05:55Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022ObsessedWithKSP\u0022 data-cite=\u0022ObsessedWithKSP\u0022\u003E\u003Cdiv\u003EComplete guess, but do you have configs for stock Mk2 and SP\u002B Mk2? Duplicate configs can cause such issues..\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ENo, there\u0027s only the cfgs that came with tweakscale 1.50 by default.\u003C/p\u003E\n"},{"CreatedByName":"BudgetHedgehog\uFEFF","CreatedById":104112,"CreatedDateTime":"2015-02-23T22:23:21Z","Content":"\n\u003Cp\u003EHello to everyone from Modding Mondays!\u003C/p\u003E\n"},{"CreatedByName":"peadar1987","CreatedById":81207,"CreatedDateTime":"2015-02-23T22:45:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022AccidentalDisassembly\u0022 data-cite=\u0022AccidentalDisassembly\u0022\u003E\u003Cdiv\u003EVery easy to change if you want. The resources do grow with an exponent of 3, of course. Sometimes I wonder in reality whether things really use 8 times the material when scaled to 2x the size, though...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThey won\u0027t. Something like a fuel tank will tend to scale roughly with surface area, which is proportional to the square of the size, plus an extra fudge factor to account for the thicker skin needed for a bigger tank.\u003C/p\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-23T22:55:10Z","Content":"\n\u003Cp\u003EWow, so much attention and still no release out...\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EPre-release for version 1.51: \u003C/span\u003E\u003C/strong\u003E\u003Ca href=\u0022https://github.com/pellinor0/TweakScale/archive/master.zip\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003E[.ZIP]\u003C/span\u003E\u003C/strong\u003E\u003C/a\u003E (\u003Cspan style=\u0022color:#b22222;\u0022\u003Epre-release, might contain bees\u003C/span\u003E)\u003C/p\u003E\u003Cp\u003EThis should be compatible to 1.50 and old career saves, please try it give feedback! When I get a few positive replies I\u0027ll label this as an official release. \u003C/p\u003E\u003Cp\u003ELast changes: \u003C/p\u003E\u003Cp\u003E* on setup in the flight scene, only touch part transforms if the part is rescaled. This should avoid the camera bug as long as the root part is not scaled. \u003C/p\u003E\u003Cp\u003E* changed the unit of the surface scaletype back to 1 (instead of 100[%]). This would be a save-breaking change so I\u0027ll postpone it till ksp 1.0.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-23T23:03:18Z\u0022 title=\u002202/23/2015 11:03  PM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 23, 2015\u003C/time\u003E by pellinor\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"AccidentalDisassembly","CreatedById":110936,"CreatedDateTime":"2015-02-24T01:17:25Z","Content":"\n\u003Cp\u003EHaving a bit of an issue with a scaletype I created for LLL parts. I like the way the new stack/freescale combo works, but something has gone haywire with non-freescaling scaletypes - or my scaletype needs to be updated with the new incrementStuff, but see below.\u003C/p\u003E\u003Cp\u003EHere\u0027s the example you have in the DefaultScales.cfg:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E// ** Example for a discrete scaletype **\u003C/p\u003E\u003Cp\u003E// SCALETYPE\u003C/p\u003E\u003Cp\u003E//{\u003C/p\u003E\u003Cp\u003E// name = exampleDiscrete\u003C/p\u003E\u003Cp\u003E// freeScale = false\u003C/p\u003E\u003Cp\u003E// defaultScale = 1.25\u003C/p\u003E\u003Cp\u003E// incrementLarge = 1.25\u003C/p\u003E\u003Cp\u003E// incrementSmall = 0.625\u003C/p\u003E\u003Cp\u003E// incrementSlide = 0.025\u003C/p\u003E\u003Cp\u003E// scaleFactors = 0.625, 1.25, 2.5, 3.75, 5.0, 6.25, 7.5\u003C/p\u003E\u003Cp\u003E// scaleNames = 62.5cm, 1.25m, 2.5m, 3.75m, 5m, 6.25m, 7.5m\u003C/p\u003E\u003Cp\u003E//}\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat\u0027s all well and good. Here\u0027s the SCALETYPE I made, and below it the MM patch that applies that scaletype:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003ESCALETYPE\u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E name = LLLsizes2x1\u003C/p\u003E\u003Cp\u003E freeScale = false\u003C/p\u003E\u003Cp\u003E scaleFactors = 0.5, 0.75, 1.0, 1.5, 2.0, 3.0, 4.0, 5.3333, 6.0, 8.0, 10.6666, 12.0, 13.3333, 16.0\u003C/p\u003E\u003Cp\u003E scaleNames = 1x0.5, 1.5x0.75, 2x1, 3x1.5, 4x2, 6x3, 8x4, B9HX1, 12x6, 16x8, B9HX2, 24x12, B9HX2.5, 32x16\u003C/p\u003E\u003Cp\u003E defaultScale = 1.0 \u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003E@PART[2x1x1StandardTank] \u003C/p\u003E\u003Cp\u003E{ \u003C/p\u003E\u003Cp\u003EMODULE \u003C/p\u003E\u003Cp\u003E{\u003C/p\u003E\u003Cp\u003E name = TweakScale\u003C/p\u003E\u003Cp\u003E type = LLLsizes2x1\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThe trouble is that:\u003C/p\u003E\u003Cp\u003E1) In-game, the defaultScale is not set properly when placing a part. In the editor, when you place that particular 2x1 tank, its visual scale, fuel contents, whatever are all correct. However, the scale readout isn\u0027t: it thinks the part\u0027s current size is scaleFactor 0.5, not 1.0. It can\u0027t be scaled down as a result; it begins as if the part\u0027s default size were the smallest scaleFactor in the set.\u003C/p\u003E\u003Cp\u003E2) Scale increments don\u0027t make sense with user-defined discrete scale steps:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E// incrementLarge = 1.25\u003C/p\u003E\u003Cp\u003E// incrementSmall = 0.625\u003C/p\u003E\u003Cp\u003E// incrementSlide = 0.025\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAll of the incrementStuff makes no sense when applied to something with FreeScale = false, but having these in the example makes me think that the absence of this stuff is what\u0027s breaking my scaletype.\u003C/p\u003E\u003Cp\u003EIt doesn\u0027t make sense because I\u0027ve just gone and \u003Cem\u003Edefined \u003C/em\u003Ethe increments using scaleFactors = and scaleNames =, so having major/minor/slider increments conflicts conceptually.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-02-24T01:22:19Z\u0022 title=\u002202/24/2015 01:22  AM\u0022 data-short=\u00229 yr\u0022\u003EFebruary 24, 2015\u003C/time\u003E by AccidentalDisassembly\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"pellinor","CreatedById":85299,"CreatedDateTime":"2015-02-24T11:04:23Z","Content":"\n\u003Cp\u003EYour scaletype looks fine, so the bug must be on my side. I\u0027ll look into it. \u003C/p\u003E\u003Cp\u003EAnd you are right on the increments, they do not matter for a discrete scaletype and should not be part of the example. \u003C/p\u003E\u003Cp\u003EThanks for the feedback!\u003C/p\u003E\n"}]}