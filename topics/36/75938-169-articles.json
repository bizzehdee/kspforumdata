{"TopicId":75938,"ForumId":36,"TopicTitle":"[1.0.x] [V1.9f] Kerbal Foundries wheels, anti-grav repulsors and tracks","CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2014-06-25T17:24:04Z","PageNum":169,"Articles":[{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-06-06T20:32:14Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222619411\u0022 data-ipsquote-contentid=\u002275938\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221465241004\u0022 data-ipsquote-userid=\u0022123074\u0022 data-ipsquote-username=\u0022damerell\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, damerell said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSeems reasonable to me.\n\u003C/p\u003E\n\u003Cp\u003E\n[snip]\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nSorry, don\u0027t have time to respond to the full post, but I\u0027ll leave this here; this was one of the first problems I examined when working through the spring/damper setup.\n\u003C/p\u003E\n\u003Cp\u003E\nThis is the reason why suspension forces must be applied along the hit-normal and cannot be applied along the suspension axis. If not there will be a constant force-input, accelerating the vehicle opposite of the suspension angle.\u00A0 In the image below the vehicle would be accelerated towards the right of the image; more-or-less depending upon the compression of the suspension.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022ca8aq8Z.png\u0022 class=\u0022ipsImage\u0022 src=\u0022http://i.imgur.com/ca8aq8Z.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nNow, I\u0027m not saying that your wrong -- the current implementation has issues when contacting surfaces at oblique angles; merely pointing out why your proposed solution for it is not workable (and was in fact the way I had it originally implemented...).\n\u003C/p\u003E\n"},{"CreatedByName":"TiktaalikDreaming","CreatedById":136290,"CreatedDateTime":"2016-06-06T21:51:06Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222619515\u0022 data-ipsquote-contentid=\u002275938\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221465245134\u0022 data-ipsquote-userid=\u0022138730\u0022 data-ipsquote-username=\u0022Shadowmage\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Shadowmage said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nSorry, don\u0027t have time to respond to the full post, but I\u0027ll leave this here; this was one of the first problems I examined when working through the spring/damper setup.\n\u003C/p\u003E\n\u003Cp\u003E\nThis is the reason why suspension forces must be applied along the hit-normal and cannot be applied along the suspension axis. If not there will be a constant force-input, accelerating the vehicle opposite of the suspension angle.\u00A0 In the image below the vehicle would be accelerated towards the right of the image; more-or-less depending upon the compression of the suspension.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cimg alt=\u0022ca8aq8Z.png\u0022 class=\u0022ipsImage\u0022 src=\u0022http://i.imgur.com/ca8aq8Z.png\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nNow, I\u0027m not saying that your wrong -- the current implementation has issues when contacting surfaces at oblique angles; merely pointing out why your proposed solution for it is not workable (and was in fact the way I had it originally implemented...).\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nJust a quick note on not confusing movement with force.\n\u003C/p\u003E\n\u003Cp\u003E\nThe line of Suspension is a freedom of movement axis, not force.\u00A0 In fact, the fact that the wheel travel is constrained to that axis guarantees forces are holding it to that.\u00A0 Travel up and down the suspension is driven by the spring rate and damper, travel outside is governed by modulus of elasticity of big chunks of (usually) steel.\u00A0 They generally flex a lot less than a spring.\u00A0 So, usually you just summarize and say there\u0027s no movement in those directions.\u00A0 But the forces are there, and need to be there.\n\u003C/p\u003E\n\u003Cp\u003E\nPlease now return to your regular scheduled programming.\u003Cbr\u003E\n(PS: this is really in response to \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/123074-damerell/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022123074\u0022 href=\u0022%7B___base_url___%7D/index.php?/profile/123074-damerell/\u0022 rel=\u0022\u0022\u003E@damerell\u003C/a\u003E, there\u0027s zero wrong with Shadowmage\u0027s description.\u00A0 I just thought it needed my brand of clarity, cos we\u0027re all egotistical in that way)\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-06-06T21:52:55Z\u0022 title=\u002206/06/2016 09:52  PM\u0022 data-short=\u00228 yr\u0022\u003EJune 6, 2016\u003C/time\u003E by TiktaalikDreaming\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"damerell","CreatedById":123074,"CreatedDateTime":"2016-06-07T14:08:35Z","Content":"\n\u003Cp\u003E\n\u003Cspan\u003EHm, that makes it clearer; thanks both.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EI think what actually needs to be done is to apply a hit-normal force (at the top of the suspension travel) which will produce a force corresponding to the suspension force. The suspension force is known and the hit-normal force is the suspension force divided by cos theta [1] (since cos theta \u0026lt;=1, this makes the hit-normal force greater than the suspension force). This should be capped at some small multiple of the suspension force to avoid comedy ensuing when ramming the wheels into walls head-on (which _does_ produce very large forces - the vehicle will want to bounce rigidly and/or crumple - but the combination of the interval between updates and the lack of modelling of the springiness perpendicular to the suspension axis could produce crazy-huge values in simulation.)\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nIn Shadowmage\u0027s diagram above, then, Wheel 1\u0027s suspension compresses less (as you\u0027d expect because gravity is acting on it less directly) but the suspension force is then divided by a smaller cos theta to produce the same upward force as on Wheel 2.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003E[1] As above, theta is the angle between the suspension axis and a line from the top of the suspension travel to the hit, possibly reduced in absolute magnitude to cut down on crazy results and allow for pneumatic tyres and other off-axis compression.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-06-08T00:10:22Z\u0022 title=\u002206/08/2016 12:10  AM\u0022 data-short=\u00228 yr\u0022\u003EJune 8, 2016\u003C/time\u003E by damerell\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-06-09T21:48:57Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222620469\u0022 data-ipsquote-contentid=\u002275938\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221465308515\u0022 data-ipsquote-userid=\u0022123074\u0022 data-ipsquote-username=\u0022damerell\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn Tuesday, June 07, 2016 at 8:08 AM, damerell said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Cspan\u003EHm, that makes it clearer; thanks both.\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003EI think what actually needs to be done is to apply a hit-normal force (at the top of the suspension travel) which will produce a force corresponding to the suspension force. The suspension force is known and the hit-normal force is the suspension force divided by cos theta [1] (since cos theta \u0026lt;=1, this makes the hit-normal force greater than the suspension force). This should be capped at some small multiple of the suspension force to avoid comedy ensuing when ramming the wheels into walls head-on (which _does_ produce very large forces - the vehicle will want to bounce rigidly and/or crumple - but the combination of the interval between updates and the lack of modelling of the springiness perpendicular to the suspension axis could produce crazy-huge values in simulation.)\u003C/span\u003E\n\u003C/p\u003E\n\u003Cp\u003E\nIn Shadowmage\u0027s diagram above, then, Wheel 1\u0027s suspension compresses less (as you\u0027d expect because gravity is acting on it less directly) but the suspension force is then divided by a smaller cos theta to produce the same upward force as on Wheel 2.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cspan\u003E[1] As above, theta is the angle between the suspension axis and a line from the top of the suspension travel to the hit, possibly reduced in absolute magnitude to cut down on crazy results and allow for pneumatic tyres and other off-axis compression.\u003C/span\u003E\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHave implemented a spring-force multiplier based on the dot product of the hit.normal and suspension.axis; this only applies to the spring force though for suspension, friction still uses the pre-multiplied spring-force as its \u0027down-force\u0027.\u00A0 No clue if this is the \u0027correct\u0027 implementation, but it did seem to clean up some of the problems regarding suspension forces at non surface aligned angles.\u00A0 Not quite done working with it though, still a few more things to try out, a few more issues to fix.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nGot one thing implemented today that I\u0027ve been banging my head against for a few weeks now -- bump stop / anti-punchthrough setup for the wheels.\u00A0 Actually, \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/111099-lo-fi/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022111099\u0022 href=\u0022%7B___base_url___%7D/index.php?/profile/111099-lo-fi/\u0022 rel=\u0022\u0022\u003E@lo-fi\u003C/a\u003E is the one who implemented the original code for it (in his joint-based wheel model), I merely adapted the code and added it into the existing force-based framework.\u00A0 It uses a Unity ConfigurableJoint to handle the constraints; this joint is already setup to be used by the wheel collider for static/sticky/adherent friction (not-yet-implemented), so being able to add a few lines of code to re-purpose it/extend it to fix the bump-stop problem was awesome.\u00A0 Also nice to have Unity do some work for me/work with me, rather than fighting it as I\u0027ve had to do for everything else.\n\u003C/p\u003E\n\u003Cp\u003E\nAlso working on implementing an alternate friction model, the popular Pacejka \u0027magic-formula\u0027.\u00A0 Initial results with a partial implementation look promising; though it needs some sort of force-limit to prevent overshoot/oscillations, especially with lateral forces.\u00A0 But... more options are good (assuming I can get it working) \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nIt is slowly coming together.\u00A0 The bump-stop was one of the larger remaining pieces to get sorted out and working, so that is one big step closer.\u00A0 Still a few pretty big features to tackle, but I\u0027ve got a few more ideas to try out for those as well.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2016-06-10T12:49:39Z","Content":"\n\u003Cp\u003E\nExcellent! Again, I\u0027m glad my crazy tinkering came in handy.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"damerell","CreatedById":123074,"CreatedDateTime":"2016-06-10T13:30:41Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222624390\u0022 data-ipsquote-contentid=\u002275938\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221465508937\u0022 data-ipsquote-userid=\u0022138730\u0022 data-ipsquote-username=\u0022Shadowmage\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n15 hours ago, Shadowmage said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/111099-lo-fi/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022111099\u0022 href=\u0022%7B___base_url___%7D/index.php?/profile/111099-lo-fi/\u0022 rel=\u0022external\u0022\u003E@lo-fi\u003C/a\u003EHave implemented a spring-force multiplier based on the dot product of the hit.normal and suspension.axis; this only applies to the spring force though for suspension, friction still uses the pre-multiplied spring-force as its \u0027down-force\u0027.\u00A0 No clue if this is the \u0027correct\u0027 implementation, but it did seem to clean up some of the problems regarding suspension forces at non surface aligned angles.\u00A0 Not quite done working with it though, still a few more things to try out, a few more issues to fix.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nI think it\u0027s wrong but I also think conceivably I should work out how to build the thing myself and tinker with it. :-/\n\u003C/p\u003E\n"},{"CreatedByName":"Steel Dragon","CreatedById":160095,"CreatedDateTime":"2016-06-10T21:40:36Z","Content":"\n\u003Cp\u003E\nis there a working version of this anywhere currently available to download? I really miss my treads\n\u003C/p\u003E\n"},{"CreatedByName":"0111narwhalz","CreatedById":110660,"CreatedDateTime":"2016-06-10T22:32:02Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222625771\u0022 data-ipsquote-contentid=\u002275938\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221465594836\u0022 data-ipsquote-userid=\u0022160095\u0022 data-ipsquote-username=\u0022Steel Dragon\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n51 minutes ago, Steel Dragon said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nis there a working version of this anywhere currently available to download? I really miss my treads\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nNot yet. Shadowmage is currently working on making a usable wheel collider. Your treads will come...soon\u003Csup\u003ETM\u003C/sup\u003E.\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-06-11T17:54:22Z","Content":"\n\u003Cp\u003E\nIndeed, \u0027Soon\u0027 \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nFigured out a couple of the larger remaining issues this week, so things are getting -very- close.\u00A0 Still a few more problems to tackle; but it shouldn\u0027t be too much longer.\u00A0 Probably a few more weeks at the pace things are progressing; though that is just the time to get the wheel-collider working.\u00A0 Will require additional time after that to integrate it into various mods and write the PartModules to make it all work in KSP (stock, KF, SSTU, etc).\n\u003C/p\u003E\n\u003Cp\u003E\nGot the \u0027combinatorial\u0027 friction sorted out yesterday; no more integration errors causing yaw on thrust input, while still allowing for powered slides and wheels \u0027breaking loose\u0027.\u00A0 Playing with it in Unity it is quite predictable and enjoyable to use; you get adequate warning that you are exceeding limits before spin outs, and \u0027flipping\u0027/\u0027rolling\u0027 is mostly dictated by the crafts center-of-mass (so sane designs will be hard to flip or roll).\n\u003C/p\u003E\n\u003Cp\u003E\nHave a very basic implementation of Pacejka tire friction working as well; currently using constants for the input values, but will adjust those to use the existing friction curve parameters.\u00A0 Really not much effective/noticeable difference between the two friction models so far, but options are usually not a bad thing.\n\u003C/p\u003E\n\u003Cp\u003E\nTodays/this-weekends\u0027 problem to tackle is calculating the force-application axis\u0027 relative to the plane defined by the hit-normal.\u00A0 Currently forces are applied according to the wheels\u0027 game-object orientation (plus steering); however, this is not quite correct.\u00A0 Forces should be applied relative to the surface hit, with the lat/long axis running along the surface of that plane.\u00A0 So I\u0027ve got to find a way to \u0027project\u0027 the forward and sideways wheel\u0027 axis onto this plane, and use those projected vectors for the force-application axis.\u00A0 This will also require re-transforming the wheel-local velocity onto this plane so that everything is working in the same coordinate system.\u00A0 Mostly just a bunch of trig that I\u0027ve got to remember/learn/implement.\n\u003C/p\u003E\n\u003Cp\u003E\nNext up will be validating force limits vs current velocity, mostly as it relates to sitting on an inclined surface; this will see more wheel friction/traction available when on an incline (as determined by the per-tick velocity from gravity/external forces relative to hit-normal) to aid in proper stopping power when on hills and help reduce or eliminate \u0027creep\u0027.\u00A0 This functionality will be needed for the \u0027sticky friction\u0027 setup to minimize the velocity that it needs for triggering (so the transition from dynamic-to-static friction is not so jarring).\n\u003C/p\u003E\n\u003Cp\u003E\nSo... a few steps closer this week, some of them pretty large.\u00A0 Will try to keep you all informed regarding the status of things; sadly there is still no way to provide an ETA as I do not/can not know how long the remaining problems will take to solve, nor can I anticipate any as-yet-unknown problems being found.\n\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2016-06-11T18:01:35Z","Content":"\n\u003Cp\u003E\nLook in my code for vector projection onto a plane. I\u0027ll post an example when I\u0027m in front of the pc. KFlookat certainly had that equation in, though.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-06-11T18:08:27Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222626734\u0022 data-ipsquote-contentid=\u002275938\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221465668095\u0022 data-ipsquote-userid=\u0022111099\u0022 data-ipsquote-username=\u0022lo-fi\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, lo-fi said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nLook in my code for vector projection onto a plane. I\u0027ll post an example when I\u0027m in front of the pc. KFlookat certainly had that equation in, though.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThanks, will do \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nYeah, I though I had some code I could use from my own axis-locked look-at-constraits, but I was unable to adapt it last night (could have just been too late/tired to be coding though).\n\u003C/p\u003E\n\u003Cp\u003E\nCleaning up a few things in SSTU for an update/release this morning, but I\u0027ll likely be back to working on wheel code this afternoon/evening/tomorrow.\n\u003C/p\u003E\n"},{"CreatedByName":"Ohm Machre","CreatedById":55596,"CreatedDateTime":"2016-06-11T18:11:42Z","Content":"\n\u003Cp\u003E\nYou guys are doing so much intensive work, and it\u0027s awesome. \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2016-06-13T13:27:16Z","Content":"\n\u003Cp\u003E\nFor Future reference:\u00A0Code to project a vector onto a plane, which is defined by its normal. A bit like casting a shadow of a line in 3D space onto a 2D surface, for those who want an easily visualised explanation.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n\tVector3 projectedVector = \u0026lt;VectorToProject\u0026gt; - (\u0026lt;PlaneNormal\u0026gt;) * Vector3.Dot(\u0026lt;VectorToProject\u0026gt;, \u0026lt;PlaneNormal\u0026gt;);\n\t\u003C/pre\u003E\n\u003Cp\u003E\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-06-13T16:39:13Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222628992\u0022 data-ipsquote-contentid=\u002275938\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221465824436\u0022 data-ipsquote-userid=\u0022111099\u0022 data-ipsquote-username=\u0022lo-fi\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, lo-fi said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nFor Future reference:\u00A0Code to project a vector onto a plane, which is defined by its normal. A bit like casting a shadow of a line in 3D space onto a 2D surface, for those who want an easily visualised explanation.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode\u0022\u003E\n\n\tVector3 projectedVector = \u0026lt;VectorToProject\u0026gt; - (\u0026lt;PlaneNormal\u0026gt;) * Vector3.Dot(\u0026lt;VectorToProject\u0026gt;, \u0026lt;PlaneNormal\u0026gt;);\n\t\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAwesome; will give this a try a bit later today.\u00A0 Exactly what I was looking for originally.\n\u003C/p\u003E\n\u003Cp\u003E\nThe method that I came up with over the weekend used the cross-function to determine the contact-patch sideways axis from the hit-normal and wheel-forward axis, and then a second cross function from the hit-normal and newly-calculated contact-patch sideways axis to derive the new \u0027forwards\u0027 axis, which was right in the majority of cases; but at some angles it was calculating the wrong axis slightly (not noticeable in normal use, but not really correct either).\n\u003C/p\u003E\n\u003Cp\u003E\nYeah pretty much I was looking for a way to see the vector as projected onto the plane and viewed from an orthographic view face-on to the plane defined by the normal; pretty much the \u0027shadow\u0027 as it were.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nAlso going to have to take another look over the bump-stop functionality;\u00A0 I thought I had something that was working, but upon further examination it.. well.. wasn\u0027t.\n\u003C/p\u003E\n\u003Cp\u003E\nApparently there is also a problem regarding using joints when it comes to KSP; anytime I break a joint that I created, KSP sees that as the part-joint breaking, and proceeds to decouple the part from the craft (even though the part joint did -not- break).\u00A0 So might not be able to use any joint-based solutions as far as KSP is concerned; still investigating a bit.\n\u003C/p\u003E\n\u003Cp\u003E\nI think both of these may be able to be solved through a custom constraint manager/solver setup; manually repositioning the rigidbody if/when it needs to be.\u00A0 I\u0027m not sure how well that is going to play with the rest of the Unity physics and joints setup; nor do I have any experience with implementing constraints or solvers... but it looks like I\u0027ll be doing some learning on all that this week \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nHowever, I must say, that the stuff that I do have working \u0027feels\u0027 very good while in use.\u00A0 The traction and friction model seem quite appropriate, both for accuracy and for ease-of-use/understanding; there aren\u0027t really any \u0027surprises\u0027 when using it.\u00A0 Give it too much power and you\u0027ll spin out, too much sideways friction and too high of a CG/COM and you\u0027ll roll/flip.\u00A0 Even my test vehicle setup to simulate tracks works very pleasantly and without surprises (even without any special code for wheel-rpm-averaging).\n\u003C/p\u003E\n\u003Cp\u003E\nFor general \u0027wheeled vehicle\u0027 use it all functions quite well; at this point the two most notable missing features are sticky/adherent friction (nope, still haven\u0027t been able to solve that one), and the bump-stop mechanics, neither of which prevent general use.\u00A0 The lack of sticky/adherent friction mostly means that there is some sliding/creeping while parked on hills, and the lack of bump stop means that wheels can (and will) over-compress when overloaded (possibly resulting in compressing so far that the suspension sweep no longer detects the contact surface and punch-through occurring).\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ll likely post up a \u0027testing\u0027 release of the stock-wheel conversions hopefully this-weekend; this will give a good test-case for the wheel-collider component and hopefully let the work on bug-finding commence while other mods\u0027 part-modules are being worked on and the wheel-collider finished up.\n\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2016-06-13T21:36:27Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222629207\u0022 data-ipsquote-contentid=\u002275938\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221465835953\u0022 data-ipsquote-userid=\u0022138730\u0022 data-ipsquote-username=\u0022Shadowmage\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, Shadowmage said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nApparently there is also a problem regarding using joints when it comes to KSP; anytime I break a joint that I created, KSP sees that as the part-joint breaking, and proceeds to decouple the part from the craft (even though the part joint did -not- break).\u00A0 So might not be able to use any joint-based solutions as far as KSP is concerned; still investigating a bit.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThe solution is maybe\u00A0not to break the joints. Simply set the connected body to\u00A0null and set the linear and rotational joints to free. I\u0027ve been though this with my trailer hitch module, so look that up in the dev branch of KF. It\u0027s a mess, but you\u0027ll get the idea. I reckon the sticky friction is solvable with the joint too - they were rock solid in my testing.\n\u003C/p\u003E\n\u003Cp\u003E\nGlad the vector projection is what you\u0027re after. \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/76163-zodiusinfuser/\u0026amp;do=hovercard\u0022 data-mentionid=\u002276163\u0022 href=\u0022%7B___base_url___%7D/index.php?/profile/76163-zodiusinfuser/\u0022 rel=\u0022\u0022\u003E@ZodiusInfuser\u003C/a\u003E\u00A0was kind enough to help me out with that.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Ca href=\u0022https://github.com/KerbalFoundries/KF_plugin/blob/Dev/KF_plugin/KFCouplingHitch.cs\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/KerbalFoundries/KF_plugin/blob/Dev/KF_plugin/KFCouplingHitch.cs\u003C/a\u003E\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-06-13T21:38:48Z\u0022 title=\u002206/13/2016 09:38  PM\u0022 data-short=\u00228 yr\u0022\u003EJune 13, 2016\u003C/time\u003E by lo-fi\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-06-14T18:47:22Z","Content":"\n\u003Cp\u003E\nThanks for the link \u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/111099-lo-fi/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022111099\u0022 href=\u0022%7B___base_url___%7D/index.php?/profile/111099-lo-fi/\u0022 rel=\u0022\u0022\u003E@lo-fi\u003C/a\u003E.\n\u003C/p\u003E\n\u003Cp\u003E\nSadly I have not been able to get joints to do what I want/need them to do (likely due to my inexperience with them and lack of actual documentation on them).\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve been able to make them constrain to a certain distance for bump-stop purposes, but unable to make them constraint to a certain min distance; e.g. to only enforce the constraint if distance \u0026lt; limit (currently they force the suspension to max compression and keep it there, without allowing it to uncompress).\u00A0 It seems like they are intended for more the opposite; to keep something from going beyond a certain max-distance.\u00A0 But again, this is likely mostly due to my inexperience with them and lack of properly detailed documentation.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nSo, today, I\u0027ve gone with a bit of an alternate route of investigation; bare un-solved constraints (un-solved in that they operate independently with no attempt made to find the \u0027most acceptable solution\u0027 for all of them).\u00A0 This basically just operates on a if(position!=desiredPosition){ rigidbody.addForce(positionDelta, wheelPos, ForceMode.VelocityChange); }, which so far seems to work very well.\u00A0 There is some slight jittering when the \u0027constraints\u0027 are activated in an unsolvable configuration, but the oscillations are minimal and should be able to be cleaned up by doing a solving pass over all of the constraints (which will require some sort of entire-vessel-aware setup, to solve for all of them on a vessel at a given time).\u00A0 Have the bare constraints setup working so far for both bump-stop and sticky friction.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nFor sticky friction it basically just checks the last-frame-movement of the rigidbody, and if below a certain threshold, set the \u0027sticky target pos\u0027 and activate the constraint, else recheck next tick.\u00A0 When active it will \u0027force\u0027 the wheel back into the sticky-constraint desired position (which is not updated after being initially set); if the movement exceeds the movement threshold after the \u0027sticky\u0027 has been activated (through external forces, motor input, whatever), the constraint will be deactivated and re-checked next update tick.\u003Cbr\u003E\u003Cbr\u003E\nBump stop does pretty much the same thing, but checking position along the suspension sweep and intended to prevent over-compression of the suspension.\u00A0 The main quirkiness that it currently exhibits is that I don\u0027t know how much \u0027downforce\u0027 to add to simulate the force used by the bump-stop (as the constraint is velocity based and not force based); so that when the bump-stop is engaged the maximum friction that can be applied is that specified by the spring at max compression as opposed to the actual sprung mass.\u00A0 Not quite ideal... but none of the other \u0027bump-stop\u0027 methods has allowed me to derive a force either, so... not less ideal than the other methods either.\n\u003C/p\u003E\n\u003Cp\u003E\nIs this the proper way to do it?\u00A0 I don\u0027t know, but I\u0027m going to investigate it a bit more as I was about at the end of my patience dealing with Unity joints.\u00A0 With the results that I\u0027m currently seeing... this seems to be a much easier to implement and likely a more controllable solution in the end.\u00A0 After all... PhysX itself uses suspension and sticky-friction constraints, so it can\u0027t be that far off from a \u0027proper\u0027 solution \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nNow, as to implementing a solver... that is going to be a bit of fun learning and implementing.\u00A0 My experience with constraints/solvers is, as of now, non-existent.\u00A0 But several implementations exist that I can examine for solutions, so hopefully I\u0027ll be able to come up with something usable/workable.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2016-06-14T23:41:41Z","Content":"\n\u003Cp\u003E\nI\u0027ll have a look and see if I can plug my joint knowledge into your solution. I ought to write some documentation on joints, as I struggled myself. The Unity documents are rather poor, and most community references are either out of date, just as poor, or plain wrong.\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Shadowmage","CreatedById":138730,"CreatedDateTime":"2016-06-15T21:44:42Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222631175\u0022 data-ipsquote-contentid=\u002275938\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221465947701\u0022 data-ipsquote-userid=\u0022111099\u0022 data-ipsquote-username=\u0022lo-fi\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n21 hours ago, lo-fi said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI\u0027ll have a look and see if I can plug my joint knowledge into your solution. I ought to write some documentation on joints, as I struggled myself. The Unity documents are rather poor, and most community references are either out of date, just as poor, or plain wrong.\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIndeed, if/when you have time to take a look, that would be great \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cp\u003E\nElsewise I\u0027ll keep working at it as I have been; there is still a bit more cleanup that can be done with the friction model code, a few more friction models/options to implement.\u00A0 At this point most of the things needed for \u0027basic\u0027 functionality are in place and working very well, so I\u0027ll likely work on finishing up the stock replacement module and patches so that some in-KSP testing can be done on them.\n\u003C/p\u003E\n\u003Cp\u003E\n\u003Cbr\u003E\nYeah, the Unity documentation is sorely lacking;\u00A0 for example:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E\nLinear Limit \t Limit on the joint\u2019s linear movement (ie, movement over distance rather than rotation), specified as a distance from the joint\u2019s origin.\n        Limit\tThe distance in world units from the origin to the limit.\u003C/span\u003E\u003C/pre\u003E\n\u003Ctable\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\u0022text-align:left;\u0022\u003E\n\u00A0\n\u003C/td\u003E\n\u003Ctd style=\u0022text-align:left;\u0022\u003E\n\u00A0\n\u003C/td\u003E\n\u003C/tr\u003E\u003Ctr\u003E\u003Ctd style=\u0022text-align:left;\u0022\u003E\n\u00A0\n\u003C/td\u003E\n\u003Ctd style=\u0022text-align:left;\u0022\u003E\n\u00A0\n\u003C/td\u003E\n\u003C/tr\u003E\u003C/tbody\u003E\u003C/table\u003E\u003Cp\u003E\nLimit to what? Limit to minimum distance, limit to maximum distance? Limit to movement from the origin (and what is the joints origin... the anchor?)?\u00A0 What does it do when set to \u00272\u0027?\u00A0 Why does it not allow negative values?\u00A0 What is the valid range/domain for input?\u00A0 What units does it use? What axis/axes does it work on?\u00A0\u00A0\u00A0 (not really looking for answers to those, merely posting examples of why the documentation is so poor)\u003Cbr\u003E\u003Cbr\u003E\nShould be like 2-3 paragraphs for each setting/option/function.\u00A0 Instead they post a single sentence, mostly just expanding on the name of the option.\u00A0 Gee, thanks Unity... I could tell it was some sort of a limit based on the name alone; you really didn\u0027t need to re-explain that in your \u0027description\u0027; how about an actual description of its functionality with some example use-cases?\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2016-06-15T23:44:56Z","Content":"\n\u003Cp\u003E\nI feel your pain. Agreed that each ought to have at least a paragraph or two - I\u0027ve asked myself the very same questions. \u0022Glib\u0022 doesn\u0027t even come close. I\u0027d go so far as terse!\n\u003C/p\u003E\n"},{"CreatedByName":"McLowery","CreatedById":165560,"CreatedDateTime":"2016-06-16T15:08:09Z","Content":"\n\u003Cp\u003E\nMan, I\u0027m champing at the bit for this to release for 1.1.x! \u00A0I had to reinstall 1.0.5 along with the latest version coz I really don\u0027t get into building much without this mod. \u00A0It\u0027s a great mod and the effort you guys put into it is appreciated here!\n\u003C/p\u003E\n"},{"CreatedByName":"Kaiser82","CreatedById":152674,"CreatedDateTime":"2016-06-16T23:12:42Z","Content":"\n\u003Cp\u003E\nThis thread since 1.1 is how I know i\u0027ll never be a coder. youre breaking my mind with these explanations.\n\u003C/p\u003E\n"},{"CreatedByName":"Fireheart318","CreatedById":159932,"CreatedDateTime":"2016-06-17T06:00:00Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222632693\u0022 data-ipsquote-contentid=\u002275938\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221466034296\u0022 data-ipsquote-userid=\u0022111099\u0022 data-ipsquote-username=\u0022lo-fi\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn June 15, 2016 at 6:44 PM, lo-fi said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nI feel your pain. Agreed that each ought to have at least a paragraph or two - I\u0027ve asked myself the very same questions. \u0022Glib\u0022 doesn\u0027t even come close. I\u0027d go so far as terse!\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWhat percentage of the parts have you finished by now?\n\u003C/p\u003E\n"},{"CreatedByName":"0111narwhalz","CreatedById":110660,"CreatedDateTime":"2016-06-17T06:02:18Z","Content":"\n\u003Cp\u003E\nParts?! Surely you mean PartModules.\u003Cbr\u003E\nThe actual wheel technology is not yet done.\u003Cbr\u003E\nEvidently we should be looking between \u0022soon\u0022 and \u0022soon\u003Csup\u003ETM\u003C/sup\u003E\u0022 for the release of the plugin, and I expect the adaptation of the old parts to go as smoothly as something of this sort can go.\n\u003C/p\u003E\n"},{"CreatedByName":"Ryusho","CreatedById":7056,"CreatedDateTime":"2016-06-17T08:58:31Z","Content":"\n\u003Cp\u003E\nI am actually about to make a backup external copy of KSP at 1.0.5 just so I can do more rover fun from mising this, even though I hate the fact I won\u0027t be able to go super crazy with mods on that version because of no proper 64 bit tricks \u0026gt;.\u0026lt; But I miss these wheels so much, but thats becasuse I love rovers, and messing with these, And it really is \u0022Boring\u0022 to try to do rover contracts from contract configurator, without ways to make awesome rovers XD\n\u003C/p\u003E\n"},{"CreatedByName":"lo-fi","CreatedById":111099,"CreatedDateTime":"2016-06-17T09:36:23Z","Content":"\n\u003Cp\u003E\nYeah, sorry it\u0027s taking a while. ShadowMage is writing a brand new wheel simulation model to fix the \u0022odd\u0022 behavior of stock parts, and to allow the more advanced KF parts to function as they should. Sadly, it\u0027s not easy. Once it\u0027s done, it will be AWESOME, though. Better than even the previous versions.\u00A0Thanks to all\u00A0for hanging in there and patiently encouraging. We\u0027re just as excited as you!\n\u003C/p\u003E\n"}]}