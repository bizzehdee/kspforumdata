{"TopicId":111065,"ForumId":36,"TopicTitle":"[Beta] Merill\u0027s plugins [PartUpgrade, ObsoleteParts, EngineCooler, NoseConeWithTank]","CreatedByName":"Merill","CreatedById":136069,"CreatedDateTime":"2015-05-27T22:27:37Z","PageNum":1,"Articles":[{"CreatedByName":"Merill","CreatedById":136069,"CreatedDateTime":"2015-05-27T22:27:37Z","Content":"This post is made for gathering feedback for my plugins in beta state, before a proper release. I made them for an other ksp project, but I think it may be useful for someone else.\n\nAll plugins are made \u0026 released for ksp 1.0.4\n\nPartUpgrade:\n\nThis mod is about unlocking upgrades of existing parts when researching tech nodes.\n\nIt\u0027s a collection of PartModule to add to a part to create these upgrades options.\n\nNeeded: feedback and request about useful UpgradeModule I should make.\n\ndonwload demo with upgrades for LV-T15 and T100 in stock tech tree: [DOWNLOAD](https://github.com/supermerill/KspPartUpgrade/releases)\n\n**When use it, please copy it in the GameData folder, to be sure the last version is run** (not in a sub-folder)\n\n\u003E [Javascript is disabled. View full album](//imgur.com/a/zovDM)\n\nUsed in : [Tech-Based Probe SAS Upgrades](https://forum.kerbalspaceprogram.com/threads/130540)\n\nBasic Example: [basic POC config for lvt-30](https://github.com/supermerill/KspPartUpgrade/releases/download/beta-v0.1/PartUpgradeExamples.zip)\n\n\u003E \n\u003E code: [https://github.com/supermerill/KspPartUpgrade](https://github.com/supermerill/KspPartUpgrade)\n\u003E \n\u003E This plugin can upgrade a part with these modules (advice: use ModuleManager):\n\u003E \n\u003E note: most modules save their internal data when in flight, to not be upgraded (as you can\u0027t magically upgrade a part already build and flying around the mun). But if you encounter some weird behavior with this, you can disable it by adding the field \u0022persitance = false\u0022 in the ModuleUpgradeXXX\n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \u003E \n\u003E \u003E \n\u003E \u003E \n\u003E \u003E //module to change the category of the part in the vab  \n\u003E \u003E  //if none, it will be inaccessible ( it\u0027s a way for updating parts, cf ObsoleteParts)  \n\u003E \u003E  MODULE  \n\u003E \u003E  {  \n\u003E \u003E  name = ModuleUpgradeCategory  \n\u003E \u003E  TECH-VALUE  \n\u003E \u003E  {  \n\u003E \u003E  // move this part to Control category when generalRocketry is researched  \n\u003E \u003E  generalRocketry = Control  \n\u003E \u003E  // remove this part from building list when heavyRocketry is researched  \n\u003E \u003E  heavyRocketry = none  \n\u003E \u003E  }  \n\u003E \u003E  }\n\u003E \u003E \n\u003E \u003E \n\u003E \u003E     \n\u003E \u003E \n\u003E \u003E \n\u003E \u003E \n\u003E \u003E \n\u003E \u003E \n\u003E \n\n\u003E \n\u003E \n\u003E \n\u003E //module to upgrade the mass  \n\u003E  //if multiple tech in the list have been researched, the only one used is the last in this list.  \n\u003E  // when a vessel load, this module restore his last mass (because it shouldn\u0027t upgrade)  \n\u003E  MODULE  \n\u003E  {  \n\u003E  name = ModuleUpgradeMass  \n\u003E   \n\u003E  //if you have problems with data persistance, you can set this field to false, to make part in flight magically upgrades when you research a new tech.  \n\u003E  //persitance = true //default true  \n\u003E   \n\u003E  //list of techName / value to set  \n\u003E  TECH-VALUE  \n\u003E  {  \n\u003E  generalRocketry = 1.5  \n\u003E  advRocketry = 1.25  \n\u003E  heavyRocketry = 1  \n\u003E  }  \n\u003E  // example: if generalRocketry and heavyRocketry are researched, The lv-t15 mass value will be the one of heavyRocketry because it\u0027s below in the list.  \n\u003E  }\n\u003E \n\u003E \n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\n\u003E \n\u003E warning: it\u0027s a game-wide modification: it will impact the recovery fund from already launched ship.\n\u003E \n\u003E \n\u003E \n\u003E MODULE  \n\u003E  {  \n\u003E  name = ModuleUpgradeCost  \n\u003E  TECH-VALUE  \n\u003E  {  \n\u003E  generalRocketry = 1000  \n\u003E  advRocketry = 900  \n\u003E  heavyRocketry = 800  \n\u003E  }  \n\u003E  }\n\u003E \n\u003E \n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\n\u003E \n\u003E warning: it\u0027s a game-wide modification: it will impact also all launch ship (when right-click on a part).\n\u003E \n\u003E \n\u003E \n\u003E MODULE  \n\u003E  {  \n\u003E  name = ModuleUpgradeTitle  \n\u003E  TECH-VALUE  \n\u003E  {  \n\u003E  generalRocketry = Ar-200  \n\u003E  advRocketry = Ar-210 college new \u002B  \n\u003E  }  \n\u003E  }\n\u003E \n\u003E \n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\n\u003E \n\u003E warning: it\u0027s a game-wide modification. But as it can only be seen inside the VAB, it\u0027s not a big deal.\n\u003E \n\u003E \n\u003E \n\u003E MODULE  \n\u003E  {  \n\u003E  name = ModuleUpgradeDescription  \n\u003E  TECH-VALUE  \n\u003E  {  \n\u003E  generalRocketry = It\u0027s a good part  \n\u003E  advRocketry = It\u0027s an amazing part  \n\u003E  }  \n\u003E  }\n\u003E \n\u003E \n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\n\u003E \n\u003E It can update all simple fields (string, int, float) inside a Part. It can be used instead of ModuleUpgradeMaxTemp.\n\u003E \n\u003E It cannot be used for complex type like ModuleUpgradeAttachRules do.\n\u003E \n\u003E \n\u003E \n\u003E MODULE  \n\u003E  {  \n\u003E  name = ModuleUpgradeSetField  \n\u003E  fieldName = crashTolerance  \n\u003E  TECH-VALUE  \n\u003E  {  \n\u003E  rcsMedium = 50  \n\u003E  rcsBig = 100  \n\u003E  }  \n\u003E  }\n\u003E \n\u003E \n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\n\u003E \n\u003E \n\u003E \n\u003E //same as the mass, but change the max temp value  \n\u003E  MODULE  \n\u003E  {  \n\u003E  name = ModuleUpgradeMaxTemp  \n\u003E  TECH-VALUE  \n\u003E  {  \n\u003E  generalRocketry = 1200  \n\u003E  advRocketry = 1500  \n\u003E  heavyRocketry = 2000  \n\u003E  }  \n\u003E  }\n\u003E \n\u003E \n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\n\u003E \n\u003E \n\u003E \n\u003E //module to upgrade the attach rules  \n\u003E  MODULE  \n\u003E  {  \n\u003E  name = ModuleUpgradeAttachRules  \n\u003E  TECH-VALUE  \n\u003E  {  \n\u003E  generalRocketry = 1,1,1,1,0  \n\u003E  }  \n\u003E  }\n\u003E \n\u003E \n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\n\u003E \n\u003E \n\u003E \n\u003E MODULE  \n\u003E  {  \n\u003E  name = ModuleUpgradeResource  \n\u003E  resourceName = LiquidFuel  \n\u003E  TECH-VALUE  \n\u003E  {  \n\u003E  generalRocketry = 45  \n\u003E  //you can add other techname/value after, only the last researched is applied  \n\u003E  }  \n\u003E  }\n\u003E \n\u003E \n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\n\u003E \n\u003E \n\u003E \n\u003E //module to upgrade engine (in a more easy way than ModuleUpgradeModule)  \n\u003E  MODULE  \n\u003E  {  \n\u003E  name = ModuleUpgradeEngine  \n\u003E  //Here, it\u0027s a list of an other type of \u0022TECH-VALUE\u0022  \n\u003E  // each TECH-VALUE node contain an upgrade at a tech level.  \n\u003E  // like ModuleUpgradeMass, only the last researched is taken.  \n\u003E  TECH-VALUE  \n\u003E  {  \n\u003E  tech = generalRocketry  \n\u003E  // the min/max thrust is considered with vaccum isp =\u003E it give the min/max fuel flow.  \n\u003E  minThrust = 0  \n\u003E  maxThrust = 215  \n\u003E  atmosphereIsp = 260  \n\u003E  vacuumIsp = 310  \n\u003E  }  \n\u003E  TECH-VALUE  \n\u003E  {  \n\u003E  tech = advRocketry  \n\u003E  minThrust = 0  \n\u003E  maxThrust = 230  \n\u003E  atmosphereIsp = 280  \n\u003E  vacuumIsp = 330  \n\u003E  }  \n\u003E  TECH-VALUE  \n\u003E  {  \n\u003E  tech = heavyRocketry  \n\u003E  minThrust = 0  \n\u003E  maxThrust = 250  \n\u003E  atmosphereIsp = 300  \n\u003E  vacuumIsp = 350  \n\u003E  }  \n\u003E  }\n\u003E \n\u003E \n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\n\u003E \n\u003E It can update some simple fields inside a Module, like ModuleUpgradeSetTitle. It\u0027s hard to find a useful use-case, as so little fields works. Use ModuleUpgradeModule if ModuleUpgradeModuleSetField doesn\u0027t work.\n\u003E \n\u003E \n\u003E \n\u003E MODULE  \n\u003E  {  \n\u003E  name = ModuleUpgradeModuleSetField  \n\u003E  moduleName = ModuleEnginesFX  \n\u003E  fieldName = heatProduction  \n\u003E  TECH-VALUE  \n\u003E  {  \n\u003E  advRocketry= 150  \n\u003E  heavyRocketry= 100  \n\u003E  }  \n\u003E  }\n\u003E \n\u003E \n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\n\u003E \n\u003E \n\u003E \n\u003E This module is different from the previous.  \n\u003E The base fields are:  \n\u003E  - type : [ create | replace | delete ]  \n\u003E  - tech : the tech name. If this teh is research this module is applied  \n\u003E  - id : (optional, default = 0) if you want to use more than one ModuleUpgradeModule with same type/tech per part.  \n\u003E It\u0027s what define a ModuleUpgradeModule in a part. This combination is their \u0022key\u0022  \n\u003E When upgrading, each of them is applied, in the definition order, so be careful.  \n\u003E Inside , place all the MODULEs as you would define them in a part.  \n\u003E [spoiler=\u0022create examples\u0022]  \n\u003E [CODE]  \n\u003E  MODULE  \n\u003E  {  \n\u003E  name = ModuleUpgradeModule  \n\u003E  type = create  \n\u003E  tech = generalRocketry  \n\u003E  MODULE  \n\u003E  {  \n\u003E  name = ModuleAlternator  \n\u003E  RESOURCE  \n\u003E  {  \n\u003E  name = ElectricCharge  \n\u003E  rate = 3  \n\u003E  }  \n\u003E  }  \n\u003E  }\n\u003E \n\u003E \n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E MODULE  \n\u003E  {  \n\u003E  name = ModuleUpgradeModule  \n\u003E  type = create  \n\u003E  tech = advRocketry  \n\u003E  MODULE  \n\u003E  {  \n\u003E  name = ModuleGimbal  \n\u003E  gimbalTransformName = thrustTransform  \n\u003E  gimbalRange = 0.5  \n\u003E  useGimbalResponseSpeed = true  \n\u003E  gimbalResponseSpeed = 2  \n\u003E  }  \n\u003E  }\n\u003E \n\u003E \n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\n\u003E \n\u003E \n\u003E \n\u003E MODULE  \n\u003E  {  \n\u003E  name = ModuleUpgradeModule  \n\u003E  type = replace  \n\u003E  tech = advRocketry  \n\u003E  MODULE  \n\u003E  {  \n\u003E  name = ModuleAlternator  \n\u003E  RESOURCE  \n\u003E  {  \n\u003E  name = ElectricCharge  \n\u003E  rate = 7  \n\u003E  }  \n\u003E  }  \n\u003E  }\n\u003E \n\u003E \n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E MODULE  \n\u003E  {  \n\u003E  name = ModuleUpgradeModule  \n\u003E  type = replace  \n\u003E  tech = heavyRocketry  \n\u003E  MODULE  \n\u003E  {  \n\u003E  name = ModuleGimbal  \n\u003E  gimbalTransformName = thrustTransform  \n\u003E  gimbalRange = 1  \n\u003E  useGimbalResponseSpeed = true  \n\u003E  gimbalResponseSpeed = 5  \n\u003E  }  \n\u003E  //you can upgrade multiple modules  \n\u003E  MODULE  \n\u003E  {  \n\u003E  name = ModuleAlternator  \n\u003E  RESOURCE  \n\u003E  {  \n\u003E  name = ElectricCharge  \n\u003E  rate = 10  \n\u003E  }  \n\u003E  }  \n\u003E  }\n\u003E \n\u003E \n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\nLicence: Source is GPL v3 ; The released dll is distributed as CC BY-NC 4.0\n\nObsoleteParts:\n\nThis plugin permit to remove parts from the vab building list.\n\nIt\u0027s a much simpler of way to upgrade your part:\n\n . make clones with upgraded stats, title (and perhaps graphics) , like the stock probe cores.\n\n. set the TechResearch and TechObsolete Fields to the desired values.\n\nPRO : you can set a new name, a new model.\n\nCON : unlike PartUpgrade, players need to rebuild their rocket \u0026 preassemblies when a part became obsolete.\n\n[DOWNLOAD](https://github.com/supermerill/KspObsoleteParts/releases)\n\ncode: [https://github.com/supermerill/KspObsoleteParts](https://github.com/supermerill/KspObsoleteParts)\n\nExample of ModuleManager config:\n\n    @PART[probeCoreSphere]{    TechObsolete = electrics}\n\nLicence: Source is GPL v3 ; The released dll is distributed as CC BY-NC 4.0\n\nmore plugins are coming, but they need more work before a beta release.\n\nIf someone want to help me to improve my english skill, i\u0027m ok (non-native speaker)\n\n**Edited \u003Ctime datetime=\u00222015-10-24T18:09:51Z\u0022 title=\u002210/24/2015 06:09  PM\u0022 data-short=\u00228 yr\u0022\u003EOctober 24, 2015\u003C/time\u003E by Merill**"},{"CreatedByName":"Merill","CreatedById":136069,"CreatedDateTime":"2015-06-07T15:29:10Z","Content":"EngineCooler: *(ksp v1.04) [update 1.1 @2015/10/24]*\n\nThis plugin make your engines to explode if they\u0027re not cooled by a way. \n\nWith radiative cooling, you are forced to reduce the trottle to make long burn.\n\nAt General Rocketry, you unlock the ablative coating: it add mass but you can run your engine up to ~4\u0027 at full thrust\n\nAt Propulsion Systems, you unlock the regenerative cooling: it increase the cost by 75%, but your engine can run infinitely.\n\nSee the config file to change all settings. Source includes in the zip file.\n\nDownload : [Kerbal stuff](https://kerbalstuff.com/mod/894/Engine%20Cooler)\n\n\u003E \n\u003E v1.1 \n\u003E \n\u003E - Re-writing all heating and cooling stuff to take ownership and undestand how they work.\n\u003E \n\u003E - Now, all these formulea are automatically scaled by thrust. We assume the surface aera is scaled the same way for the models\n\u003E \n\u003E - Heating: add {degreePerSecond} degree each second (just after cooling) at full fuel flow\n\u003E \n\u003E - Radiative cooling : black body radiation (unobscured): z\\*T^4, with z to be at equilibrium with 80% thrust at maxTemp.\n\u003E \n\u003E - Ablative cooling: nb of abator scaled by thrust, {ablatorLossConst}% ablator =\u003E remove {ablatorPyrolysisLossFactor} degrees\n\u003E \n\u003E - Regenerative cooling =\u003E asymptote to maxtemp\\*0.75\n\nLicence: Apache2\n\nNoseConeWithTank:\n\nThis plugin permit to add rcs, fuel fuel\u0026oxidizer to cone \u0026 adapter in the vab. (with added mass, it\u0027s not op)\n\nTODO: some MM config to extend config to part mods (now, i made only the stock config).\n\n[DOWNLOAD](https://github.com/supermerill/KspNoseConeWithTank/releases)\n\n\u003E [Javascript is disabled. View full album](//imgur.com/a/hfOhJ)\n\n\u003E \n\u003E code: [https://github.com/supermerill/KspNoseConeWithTank](https://github.com/supermerill/KspNoseConeWithTank)\n\u003E \n\u003E Example of config:\n\u003E \n\u003E \n\u003E \n\u003E @PART[standardNoseCone]  \n\u003E {  \n\u003E  MODULE  \n\u003E  {  \n\u003E  name = ModuleNoseConeWithTank  \n\u003E  maxMonoPropellant = 20  \n\u003E  maxOxidizerPer11 = 1  \n\u003E  }  \n\u003E }\n\u003E \n\u003E \n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E fields:\n\u003E \n\u003E \n\u003E \n\u003E //////////////////////////////////////////////////////////  \n\u003E // Parameters for ModuleNoseConeWithTank: (all optional)  \n\u003E //  \n\u003E // maxMonoPropellant : float, number of MonoPropellant, deactivate if \u003C=0 or unset  \n\u003E // massMonoPropellant : float, mass added to base part (default is activated via negative/unset value). Default compute from various rcs tanks.  \n\u003E //  \n\u003E // maxLiquidFuel : float, number of LiquidFuel, deactivate if \u003C=0 or unset  \n\u003E // massLiquidFuel : float, mass added to base part (default is activated via negative/unset value). Default compute from MK1Fuselage.  \n\u003E //  \n\u003E // maxOxidizerPer11 : float, number of Oxidizer/11, deactivate if \u003C=0 or unset (add also 9\\*maxOxidizerPer11 as LiquidFuel)  \n\u003E // massOxidizerAndLiquidFuel : float, mass added to base part (default is activated via negative/unset value). Default compute from fuelTankSmallFlat (T100).  \n\u003E //  \n\u003E // massAddEmpty : float, mass added to base part if empty. Default 0.  \n\u003E //  \n\u003E /////////////////////////////////////////////////////\n\u003E \n\u003E \n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\nLicence: Apache2\n\nHow to install: unzip inside your GameData folder.\n\nmore plugins are coming, but they need more work before a beta release.\n\n**Edited \u003Ctime datetime=\u00222015-10-24T14:20:15Z\u0022 title=\u002210/24/2015 02:20  PM\u0022 data-short=\u00228 yr\u0022\u003EOctober 24, 2015\u003C/time\u003E by Merill**\n  \nmaj"},{"CreatedByName":"Azimech","CreatedById":50750,"CreatedDateTime":"2015-06-09T08:31:07Z","Content":"Nice job! I was a bit frustrated though, because I didn\u0027t really RTFM, playing on hardcore. I\u0027ll try again now that I have some regenerative cooling for my head."},{"CreatedByName":"Merill","CreatedById":136069,"CreatedDateTime":"2015-06-09T21:32:32Z","Content":"Thanks\n\nThe first release has a conf file a little harsh. Now, it\u0027s more gentle, you can even burn a FL-T800 with a lv-t30!"},{"CreatedByName":"albany_","CreatedById":112259,"CreatedDateTime":"2015-07-22T00:59:19Z","Content":"Hi Merill -- how would you like to handle distribution of your plugin(s) (specifically, PartUpgrade)? I\u0027d like to utilize the plugin for a little part mod I\u0027m working on but I wasn\u0027t sure what your desires were in regards to how the plugin should be distributed -- i.e., should the download redirect users to you for downloading the plugin, or should it be bundled with the add-on like ModuleManager?\n\nEDIT: Now that I\u0027ve had some time to play around with the plugin\u0027s features I have to say, this is really neat for OCD folks like myself who hate additional parts. The only thing I\u0027m finding myself wanting would be the ability to update the base non-module part cfg elements with research (e.g., name, description, etc). Is this functionality something you\u0027d consider adding?\n\n**Edited \u003Ctime datetime=\u00222015-07-22T15:03:32Z\u0022 title=\u002207/22/2015 03:03  PM\u0022 data-short=\u00228 yr\u0022\u003EJuly 22, 2015\u003C/time\u003E by albany\\_**\n  \nadditional question"},{"CreatedByName":"Merill","CreatedById":136069,"CreatedDateTime":"2015-08-01T18:08:32Z","Content":"Hi (sorry for the last answer, return from holidays)\n\nRight now, it\u0027s nowhere near a release state, so i didn\u0027t add a version-check thing like modulemanger, but i may consider adding it.\n\nFor the title thing, i tried it but it\u0027s a more complicated thing: The name of a part is shared by all parts, even these created before the upgrade (it\u0027s the same for cost, but it\u0027s less problematic).\n\nIf you want to try :\n\n\u003E \n\u003E \n\u003E \n\u003E MODULE  \n\u003E  {  \n\u003E  name = ModuleUpgradeTitle  \n\u003E  TECH-VALUE  \n\u003E  {  \n\u003E  tech = new title  \n\u003E  tech2 = new title 2  \n\u003E  }  \n\u003E  }\n\u003E \n\u003E \n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\n\u003E \n\u003E \n\u003E \n\u003E MODULE  \n\u003E  {  \n\u003E  name = ModuleUpgradeTitle  \n\u003E  newTitle = new title  \n\u003E  addSuffix = . add at the end  \n\u003E  tech = heavyRocketry   \n\u003E  }\n\u003E \n\u003E \n\u003E     \n\u003E \n\u003E \n\u003E \n\u003E \n\u003E \n\nTo change the description it\u0027s the same thing: it\u0027s not easy.\n\n**Edited \u003Ctime datetime=\u00222015-08-02T20:24:41Z\u0022 title=\u002208/02/2015 08:24  PM\u0022 data-short=\u00228 yr\u0022\u003EAugust 2, 2015\u003C/time\u003E by Merill**"},{"CreatedByName":"albany_","CreatedById":112259,"CreatedDateTime":"2015-08-01T20:38:34Z","Content":"No sweat, thanks for the response.\n\nI\u0027ve already made a neat little modlet that adds SASServiceLevel ranks to unmanned probes as you progress up the tech tree (so you can aim at nodes, prograde/retrograde, normal/anti-normal, etc). I haven\u0027t decided if I\u0027ll make it available for others but if I do I\u0027ll wait until you think it\u0027s ready. This is a great idea, I\u0027m glad *someone\u0027s*\u00C3\u00A2\u00E2\u201A\u00AC\u00E2\u20AC\u00B9 making it. ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)"},{"CreatedByName":"Merill","CreatedById":136069,"CreatedDateTime":"2015-08-02T20:31:15Z","Content":"I\u0027ve published a new release (betav0.3).\n\nYou can now publish it with your mod, just put it in the GameData folder and not in an inner one (to ensure the last version will be run in case of conflicts).\n\nI add ModuleUpgradeDescription. I should be safe, as the description is only sed in the vab.\n\nI add ModuleUpgradeReflexion to modify simple fields inside Part (like crashTolerance)\n\nI corrected the how to for the ModuleUpgradeTitle (i made an error when i write it). I\u0027m still working on it.\n\nif you need something else, feel free to ask."},{"CreatedByName":"albany_","CreatedById":112259,"CreatedDateTime":"2015-08-03T21:21:33Z","Content":"Wow, you really knocked that out quick!\n\nAs far as additional module ideas... I mean, texture/model changes w/ upgrades would be neat. It\u0027d have to be persistent, since you *really* don\u0027t want parts changing dimensions mid-flight, but I\u0027m imagining a neat use case where you get a part that changes visually as you upgrade it -- gets extra little doodads, changes colors, etc. \n\nIt\u0027s not something I\u0027d have an immediate use for but I bet there are a lot of mod developers who could get a lot of mileage out of that function.\n\nEDIT: Also, I released the [SAS module mod](https://forum.kerbalspaceprogram.com/threads/130540) today. Thanks for the help. ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)"},{"CreatedByName":"Merill","CreatedById":136069,"CreatedDateTime":"2015-08-04T22:14:13Z","Content":"@albany : nice! \n\n(ps: the licence is not mit, i\u0027ve updated the first post to be clearier)\n\nReleased an other update: beta\\_v0.4\n\n - add ModuleUpgradeModuleSetField, to have a simplier and prettier way to update a module if we only have a little field to change. But i discover it\u0027s a very rare things, as modules are messing themselves in plenty of ways with their fields. ModuleUpgradeModule is much more useful.\n\n - add a warning log if ParUpgrade discover that the version running is not the last one placed inside GameData.\n\n**Edited \u003Ctime datetime=\u00222015-08-04T22:30:17Z\u0022 title=\u002208/04/2015 10:30  PM\u0022 data-short=\u00228 yr\u0022\u003EAugust 4, 2015\u003C/time\u003E by Merill**"},{"CreatedByName":"albany_","CreatedById":112259,"CreatedDateTime":"2015-08-04T22:19:14Z","Content":"\u003E \n\u003E @albany : nice! (ps: this one GPL, not mit, as i invested much more time than the others)\n\nGotcha. Fixed. ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)"},{"CreatedByName":"monstah","CreatedById":95210,"CreatedDateTime":"2015-08-07T14:09:39Z","Content":"First impressions are good! I\u0027m gonna play around a little on the default config just to get a feeling for it, then probably mess around making my own .cfgs. I\u0027m one of those players that hates more mod parts."},{"CreatedByName":"Aknar","CreatedById":68073,"CreatedDateTime":"2015-08-08T15:16:31Z","Content":"I envisioned a upgrade-based tech-tree for some time now but I\u0027m no modder. I\u0027m so happy to see this mod come along. I can\u0027t find the old thread I started on this but I\u0027ll recap in the hope that you might be sharing a similar view of the game play-style: \n\nI\u0027ve never liked campaign too much because you start off with a sole cockpit\u002Bbooster. It\u0027s somewhat of an excruciating experience for me to make abominations for most of the game and the end result is to be able to make a complete apollo-styled mission. I would envision the game as starting slightly prior to apollo missions and actually having the parts that aren\u0027t profoundly technical and thus shouldn\u0027t be locked from the start. Instead, those parts should be \u0022primitive\u0022 in the beginning, striped of all but their core functionality. They shouldn\u0027t have all the features (the modules) from the start. It\u0027s by building and flying crafts that you acquire experience to modify the parts to make them more convenient, reliable. That\u0027s where the idea of a upgrade-based tech tree comes from. Evolving through it will let you make more reliable crafts that can do more with less and be more performant while still being able to make realistic crafts and interesting missions from the start. Going to the mun would be a dare-devil\u0027s challenge in the beginning but would become easier going through the tech tree by:\n\n- improving docking ports with magnetic capabilities\n\n- improving landing lights (intensity for focused beam able to light from afar)\n\n- parachute capabilities carrying more weight and slowing down craft more effectively (for return obviously)\n\n- SAS improves\n\n- engine gimbal control and efficiency\n\n- solar panels more effective\n\n- antenna max range increase\n\n- batteries become rechargeable\n\n- capsules get SAS, ablator sheilding, life support\n\n- ladders include lights, are deployable\n\n- decouplers have higher ejection force\n\n- monopropellant has higher Isp\n\n- wheels get upgraded with motors, become steerable, get fitted with lights, become more durable\n\n- ...\n\nParts that would remain in tech tree are all high end tech that are just now becoming available (ion engine, hybrid engines =\u003E rapier/saber, ...) and pretty much all parts that are deployable, have an animation. They are more compact and complex and are improvements on base parts so shouldn\u0027t be unlocked from start.\n\n**Edited \u003Ctime datetime=\u00222015-08-08T17:47:24Z\u0022 title=\u002208/08/2015 05:47  PM\u0022 data-short=\u00228 yr\u0022\u003EAugust 8, 2015\u003C/time\u003E by Aknar**"},{"CreatedByName":"Merill","CreatedById":136069,"CreatedDateTime":"2015-08-11T21:20:42Z","Content":"\u003E \n\u003E First impressions are good! I\u0027m gonna play around a little on the default config just to get a feeling for it, then probably mess around making my own .cfgs. I\u0027m one of those players that hates more mod parts.\n\nYou should test with albany\u0027s add-on, as i removed the \u0022basic example\u0022 from the zip.\n\nI add some links in the first post to the mods using it (or my extremely crude example).\n\n\u003E \n\u003E I envisioned a upgrade-based tech-tree for some time now but I\u0027m no modder. I\u0027m so happy to see this mod come along. I can\u0027t find the old thread I started on this but I\u0027ll recap in the hope that you might be sharing a similar view of the game play-style: \n\u003E [...]\n\nMaybe. I created all these plug-in (and a lot more) to create a career mod. Maybe i can push an early beta release in few weeks.\n\nAnyway, you make me think of an other way to upgrade parts: just replace them:\n\n**New release of PartUpgrader (v0.5)**\n\n - new ModuleUpgradeCategory, useful to change the category to none for hiding the part from the partList (works even with FilterExtensions).\n\n**Release of ObsoleteParts**\n\nIt\u0027s basically ModuleUpgradeCategory but simpler.\n\nTo define when a part is obsolete, it\u0027s the same for defining the research tech:\n\n    PART{[...]TechResearch = startTechObsolete = electrics[...]}\n\n**Edited \u003Ctime datetime=\u00222015-08-11T21:23:13Z\u0022 title=\u002208/11/2015 09:23  PM\u0022 data-short=\u00228 yr\u0022\u003EAugust 11, 2015\u003C/time\u003E by Merill**"},{"CreatedByName":"albany_","CreatedById":112259,"CreatedDateTime":"2015-08-12T13:22:32Z","Content":"That\u0027s actually what I initially had in mind when I started looking for a solution to what I wanted to make with TBPSASU (I wish I had a catchier name). ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)\n\nQuick question, not sure if you\u0027ve tested this or not: if you reduce a part\u0027s mass through tech, does it affect the orbits of existing craft with that part? Or does it all sort of compensate? I know you have already built a solution to this with the persistence flag but I was just curious if that was why."},{"CreatedByName":"Merill","CreatedById":136069,"CreatedDateTime":"2015-08-12T13:36:12Z","Content":"Quick answer: no, ( i don\u0022t understand what you mean by \u0027compensate\u0027).\n\nLong answer:\n\nOrbits are \u0022on rails\u0022 when your make researchs. Vessels are not loaded, and their new position is computed when you load it or need it.\n\nAnd the only way i see to have a research done when you\u0027re flying a craft is to use KCT. (ps: i play with KCT, it\u0027s compatible with my mods)\n\nAnd even, you need to \u0022launch\u0022 mass to gain DV to change your orbit (ie a running engine). Modifying the mass of a free-falling object do nothing. ([http://www.physicsclassroom.com/mmedia/newtlaws/efff.cfm](http://www.physicsclassroom.com/mmedia/newtlaws/efff.cfm)) \n\nAnd even, (unless you set the flag) the flying part should retain their initial mass (and other properties they have at launch).\n\nps: i don\u0027t understand \u0022I was just curious if that was why\u0022. I\u0027m sorry, my English level is not excellent."},{"CreatedByName":"Aknar","CreatedById":68073,"CreatedDateTime":"2015-08-12T13:55:58Z","Content":"I\u0027ve started working on what I think the tech tree should look like. It\u0027s still far from perfect (and far from finished) but i\u0027d appreciate feedback/ideas. Let me know if that\u0027s something you might be looking for in a tech tree.\n\nIt\u0027s all still WIP but it\u0027s starting to look neat ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)\n\n[![Capture3_zpsl6olbowm.png](http://i1360.photobucket.com/albums/r658/Aknar-/KSP/Capture3_zpsl6olbowm.png)](http://s1360.photobucket.com/user/Aknar-/media/KSP/Capture3_zpsl6olbowm.png.html)\n\n**Edited \u003Ctime datetime=\u00222015-08-14T13:30:05Z\u0022 title=\u002208/14/2015 01:30  PM\u0022 data-short=\u00228 yr\u0022\u003EAugust 14, 2015\u003C/time\u003E by Aknar**\n  \nRevised tech-tree"},{"CreatedByName":"albany_","CreatedById":112259,"CreatedDateTime":"2015-08-12T17:12:34Z","Content":"\u003E \n\u003E ps: i don\u0027t understand \u0022I was just curious if that was why\u0022. I\u0027m sorry, my English level is not excellent.\n\nSorry, I should have been more clear. My understanding was that if an object in orbit suddenly gains/loses mass, the pull of gravity on that object increases/decreases, disrupting the object\u0027s orbit. My assumption was that you added the \u0022persistent\u0022 flag to counteract this effect, but if I understand what you\u0027re saying, the game itself compensates for the change in mass and maintains its previous orbital trajectory."},{"CreatedByName":"Merill","CreatedById":136069,"CreatedDateTime":"2015-08-13T16:50:30Z","Content":"\u003E \n\u003E Sorry, I should have been more clear. My understanding was that if an object in orbit suddenly gains/loses mass, the pull of gravity on that object increases/decreases, disrupting the object\u0027s orbit. My assumption was that you added the \u0022persistent\u0022 flag to counteract this effect, but if I understand what you\u0027re saying, the game itself compensates for the change in mass and maintains its previous orbital trajectory.\n\n\u0022the pull of gravity on that object increases/decreases\u0022 =\u003E no it doesn\u0027t. If your mass is /2, Force(g) is /2 =\u003E they work against each other so : same acceleration. To change your orbit, you need to change the mass of Kerbin.\n\nMy assumption was that you added the \u0022persistent\u0022 flag to counteract this effect =\u003E persistent is true by default =\u003E already existing vessel didn\u0027t upgrade by magic. If you want to create a \u0022software update\u0022, you may want to change this parameter to false.\n\n@Aknar :\n\nI whsh you great success with your tech tree mod.\n\nDon\u0027t forget the game designer mantra: Follow The Fun!\n\n\u003E \n\u003E if that\u0027s something you might be looking for in a tech tree.\n\nMy tech tree is already done. I think every player has his own vision of the \u0022best\u0022 tech tree, anyway."},{"CreatedByName":"albany_","CreatedById":112259,"CreatedDateTime":"2015-08-13T19:40:45Z","Content":"Ah, okay, that all makes sense. You learn something every day. ![:)](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif)"},{"CreatedByName":"Merill","CreatedById":136069,"CreatedDateTime":"2015-10-24T18:05:16Z","Content":"**Engine cooler update v1.1:**\n\nRewriting all systems used by this mod (heating, ablating, black body radiation) as the stock system stop working sometimes. Now it\u0027s custom made, it do exactly what i expect.\n\nNow radiative cooling is usable with throttling, with all rocket configuration (even if it\u0027s a bit unrealistic sometimes)\n\nAblative cooling work smoother, reliably and use all ablator before exploding.\n\nit\u0027s backward compatible, using a new module.\n\nPs: someone know why (for my two kerbal stuff mod) people download mostly the second revision instead of the last one?\n\n**Edited \u003Ctime datetime=\u00222015-10-25T22:12:24Z\u0022 title=\u002210/25/2015 10:12  PM\u0022 data-short=\u00228 yr\u0022\u003EOctober 25, 2015\u003C/time\u003E by Merill**"},{"CreatedByName":"riocrokite","CreatedById":129319,"CreatedDateTime":"2015-12-13T10:21:34Z","Content":"hey Merill,\n\nI was wandering would it be possible to tweak ObsoleteParts mod to eliminate the drawback you mentioned? For example if part has an obsolete technology specified, the plugin - instead of removing an obsolete item - moved it to separate part tab (for example \u0027obsolete parts\u0027 category). So then player could still use / load older designs. Moreover player could use Testflight mod nicely so i.e. you\u0027d have still access to more reliable older parts if you wanted to use them (as opposed to less reliable new parts).\n\n**Edited \u003Ctime datetime=\u00222015-12-13T10:29:01Z\u0022 title=\u002212/13/2015 10:29  AM\u0022 data-short=\u00228 yr\u0022\u003EDecember 13, 2015\u003C/time\u003E by riocrokite**"},{"CreatedByName":"Tibio","CreatedById":133522,"CreatedDateTime":"2016-01-21T10:16:52Z","Content":"### \n**[Merill](https://forum.kerbalspaceprogram.com/index.php?/profile/136069-merill/ \u0022Go to Merill\u0027s profile\u0022)** thank you for this great plugin."},{"CreatedByName":"Alshain","CreatedById":110959,"CreatedDateTime":"2016-05-20T03:04:34Z","Content":"By [request](https://forum.kerbalspaceprogram.com/index.php?/topic/138159-would-someone-be-interested-in-reviving-partupgrade/) of [@Streetwind](https://forum.kerbalspaceprogram.com/index.php?/profile/98962-streetwind/) I have recompiled PartUpgrade for use in 1.1.  It should function as it did in previous versions.  I really don\u0027t plan on maintaining this mod myself, hopefully I\u0027m not feeding a stray cat here ![:P](//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif \u0022:P\u0022)\n\n[Download Here](https://www.dropbox.com/s/4uz85bptzifw2o8/PartUpgrade_beta_v0.5.1_recompile2.zip?dl=0)\n\nChange Notes:\n\n- Attached KSPUtil.dll to references and recompiled.\n- Disabled version checker script as it was causing an exception and isn\u0027t a critical function.\n\nKnown Issues:\n\n- While Testing I found an issue where the plugin ignores initial buy in costs if they are enabled.  The upgrades are unlocked the moment the tech tree node is unlocked, whether you purchase it or not.  I believe this issue to have always been present (not a result of 1.1) and fixing it would require a bigger overhaul than I want to try and tackle myself."}]}