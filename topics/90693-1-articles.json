{"TopicId":90693,"ForumId":15,"TopicTitle":"Overcomplicating a Prop?","CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2014-11-19T04:43:38Z","PageNum":1,"Articles":[{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2014-11-19T04:43:38Z","Content":"\n\u003Cp\u003EI\u0027m working on RPM IVA props... and I\u0027m pondering doing something... and I\u0027d like to know if it\u0027s technologically dumb or not. \u003C/p\u003E\u003Cp\u003EWhat I\u0027m thinking is - I\u0027d like to play around with a cockpit where the instruments are interconnected. For example, if you switch the main MFD to docking mode, it might switch the secondary MFD to target selection mode, and bring up a camera feed on a smaller monitor that shows a different forward view that could assist in docking - it could even switch mechjeb to parallel minus mode to automatically orient you for docking and activate rcs. If you switch the primary mfd to landing mode, the secondary one might switch to stage resources, and the smaller monitor could bring up the ground-facing camera.\u003C/p\u003E\u003Cp\u003EThis seems easy enough to do if I build the whole cockpit as one file in blender, and import it through Unity as a single part. RPM doesn\u0027t mind if two MFD\u0027s share the same button, so you just make the docking button on one monitor the camera select button on another and the target select button on the third... etc.... I\u0027ve seen Nli2work\u0027s retrofuture mfd, which includes 3 separate RPM screens in one prop... \u003C/p\u003E\u003Cp\u003EWhat I\u0027m looking at currently would be 4 full MFD\u0027s, 2 CCTV only RPM monitors, and all of the associated buttons for a cockpit... so a LOT of transforms... but I\u0027ve certainly seen more monitors and buttons in other cockpits. \u003C/p\u003E\u003Cp\u003E What I\u0027m hoping someone knows... before I wire it all up to test... is if I\u0027ll run into any performance issues because all of the controls for the ship are in a single prop? Does RPM, for any reason, prefer to have the pieces spread out into multiple props? Since it all uses the same part module to call updates, I\u0027m thinking it shouldn\u0027t matter if 6 screens are one prop or 6 individual ones, right? But it\u0027s going to be a long .cfg file... so before I sit there typing all day tomorrow, I just wanted to as to see if someone else has tried it and has a good reason I should do something else tomorrow. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_tongue.gif\u0022 alt=\u0022:P\u0022\u003E\u003C/p\u003E\u003Cp\u003EIf nobody tells me not to, I\u0027ll just give it a shot and report back. I suppose if I work my way around the cockpit in logical chunks there\u0027s no reason I can\u0027t go back later and pretty quickly split it up into several props and just cut and paste the relevant .cfg entries. RPM DOES have the facility for one prop to call another... but it seems easier to just put it all together if that works! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003Cp\u003EArt\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-11-19T05:49:20Z","Content":"\n\u003Cp\u003EThe multiple screen prop uses 3 separate RPM modules. so it\u0027s still 3 separate MFDs technically, even if it\u0027s all in a single prop. The three screen don\u0027t share buttons between them, meaning the left screen buttons are not linked to any functions on the right screen. etc. \u003C/p\u003E\u003Cp\u003Eit\u0027s possible to share buttons across RPM modules/props, but seems like it would get complicated extremely quickly. \u003Ca href=\u0022https://github.com/Mihara/RasterPropMonitor/wiki/Configuring-a-monitor#a-note-on-buttons\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/Mihara/RasterPropMonitor/wiki/Configuring-a-monitor#a-note-on-buttons\u003C/a\u003E\u003C/p\u003E\u003Cp\u003Eand if you want more complicated setups, there\u0027s context-redirect within page blocks to change the button function based on which page is active.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-11-19T05:57:28Z\u0022 title=\u002211/19/2014 05:57  AM\u0022 data-short=\u00229 yr\u0022\u003ENovember 19, 2014\u003C/time\u003E by nli2work\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2014-11-19T18:25:58Z","Content":"\n\u003Cp\u003EMy big concern - do you feel like having 3 RPM modules in one prop is any more/less resource intensive than having them spread around 3 separate props? I\u0027m imagining it will be the same... unless there\u0027s something about being stuck \u0027in my prop\u0027 for a larger than normal amount of time in each update that blocks other tasks from happening when they\u0027re supposed to?\u003C/p\u003E\u003Cp\u003EI\u0027m already certain it\u0027s going to be a dumb idea for configuring simply... I\u0027m just wondering if it will prove to be a dumb idea from a performance standpoint. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-11-19T18:34:15Z","Content":"\n\u003Cp\u003Edoesn\u0027t seem like it would be a negative impact on performance. all RPM modules share same core computation code so I think 10 MFDs will use about the same resources as 1 MFD. the only times where I\u0027ve seen performance costs is with TransparentPods where the internals are updated when seen from outside; and when you have many of RPM camera modules rendering to different screens at large resolutions\u003C/p\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2014-11-20T07:12:03Z","Content":"\n\u003Cp\u003EI\u0027m not seeing any noticeable performance hit with it, but I\u0027m having a slightly annoying problem. When I leave a vessel (to the space center) and return to it... all of the screens are set to the same page, regardless of what they were set on before. Is there anyway to make the RPM Part Module store data for multiple screens in the same part? It usually does it by part id, I believe, so there may not be a work-around. \u003C/p\u003E\u003Cp\u003EIf that\u0027s the case... is there a way to override what it stores in the data string, so that every time the craft loads the displays go back to some default settings, instead of all matching? \u003C/p\u003E\u003Cp\u003EIt\u0027s really not that much more work to split the piece up into separate parts, but if there\u0027s an easy answer, I\u0027d hate to not ask first. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-11-20T15:10:50Z","Content":"\n\u003Cp\u003Emake sure you have \u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERasterPropMonitorComputer\u003C/strong\u003E Part Module on the pod part\u003C/p\u003E\u003Cp\u003Eand \u003Cstrong\u003EInternalCameraTargetHelper\u003C/strong\u003E on the internal config\u003C/p\u003E\u003Cp\u003Eno configuration needed for either one.\u003C/p\u003E\u003Cp\u003Eeach page block in RPM module has the option \u0022default = yes\u0022. that will set a page to load as default when the vessel launched. only one page should be set to default for each RPM module.\u003C/p\u003E\n"},{"CreatedByName":"artwhaley","CreatedById":118388,"CreatedDateTime":"2014-11-20T18:35:12Z","Content":"\n\u003Cp\u003EI\u0027ve got that part, and can make it work for the initial loading of the vessel after the VAB. My problem is that if you configure the monitors the way you want them, then leave the vessel and come back to it, they\u0027ve all changed to show the screen from whichever monitor you selected last. So, if I\u0027d set my 4 monitors as - primary flight, orbital data, resources, and scansat, in that order... when I leave the vessel and come back all 4 show scansat. \u003C/p\u003E\u003Cp\u003EI believe it has to do with the way the Data= string in the RasterPropMonitorComputer portion of the save file stores the current state by prop id number.... \u003C/p\u003E\u003Cp\u003EBut I haven\u0027t found a way to change that behavior.\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-11-20T19:21:31Z","Content":"\n\u003Cp\u003EI don\u0027t know. I guess it\u0027s something in the code that saved page states are by prop instead of module. in that case I\u0027d expect the behaviour you see. and in that case it\u0027s probably something deeper in the code, I haven\u0027t come across any RPM settings related to how page states are saved.\u003C/p\u003E\n"}]}