{"TopicId":79991,"ForumId":15,"TopicTitle":"Normal map / Lighting direction problems","CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-07-29T16:19:15Z","PageNum":1,"Articles":[{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-07-29T16:19:15Z","Content":"\n\u003Cp\u003EI don\u0027t know why but some parts of my model make it look as if the light is coming from a different direction.\u003C/p\u003E\u003Cp\u003EYellow is the actual light direction\u003C/p\u003E\u003Cp\u003ERed is the apparent direction for different parts of the model\u003C/p\u003E\u003Cp\u003EHow do I fix this?\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/3nFJ1jB.png\u0022 alt=\u00223nFJ1jB.png\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"blizzy78","CreatedById":68543,"CreatedDateTime":"2014-07-29T17:22:45Z","Content":"\n\u003Cp\u003ENot sure I get the question, but I\u0027ll take a stab anyway. Are you sure all your normals are looking in the direction they\u0027re supposed to?\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-07-29T17:49:52Z","Content":"\n\u003Cp\u003Eflipping the mesh normal will cause them to turn inside-out in Unity. How does it look in Unity? it may simply be a display thing in Blender. Some 3d apps doesn\u0027t display mirrored Normal maps, requiring you to give unique UV coordinate to entire mesh. But Unity doesn\u0027t mind flipped normals and overlapping UVs. I wouldn\u0027t worry about it as long as the model looks fine in Unity.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-29T17:54:46Z\u0022 title=\u002207/29/2014 05:54  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 29, 2014\u003C/time\u003E by nli2work\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-07-29T18:15:52Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022blizzy78\u0022 data-cite=\u0022blizzy78\u0022\u003E\u003Cdiv\u003ENot sure I get the question, but I\u0027ll take a stab anyway. Are you sure all your normals are looking in the direction they\u0027re supposed to?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI made a normal map to test this. Look at the dimples near the red arrows. Look where the shading and highlights are. It\u0027s not consistent.\u003C/p\u003E\u003Cp\u003EAnyway the face normals and vertex normals seem to be correct.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nli2work\u0022 data-cite=\u0022nli2work\u0022\u003E\u003Cdiv\u003Eflipping the mesh normal will cause them to turn inside-out in Unity. How does it look in Unity? it may simply be a display thing in Blender. Some 3d apps doesn\u0027t display mirrored Normal maps, requiring you to give unique UV coordinate to entire mesh. But Unity doesn\u0027t mind flipped normals and overlapping UVs. I wouldn\u0027t worry about it as long as the model looks fine in Unity.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EUnity shows the same problem. It must be something to do with the model.\u003C/p\u003E\u003Cp\u003EI have other mirrored meshes in there. They don\u0027t reverse the normal map. I noticed that joining one of the problematic meshes to a new untextured mesh changes the direction of the shading and highlights. I\u0027m just not sure how to fix it so that it\u0027s all consistent.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-29T18:21:09Z\u0022 title=\u002207/29/2014 06:21  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 29, 2014\u003C/time\u003E by Cpt. Kipard\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-07-29T19:11:36Z","Content":"\n\u003Cp\u003Ehard to say without knowing how you got to this step. haven\u0027t ran into this issue for a while now. and last I encountered it, it was Max not displaying mirrored normals correctly. \u003C/p\u003E\u003Cp\u003Eis there a backface cull display so you can see if all the faces are really facing outward? is the shader set to tangent space? is there some operation in blender to unify or reset the normals for the entire model? you could try flipping the UV patch but that probably won\u0027t fix it. Don\u0027t see any tools that might help in the Blender manual. :/\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-29T19:14:03Z\u0022 title=\u002207/29/2014 07:14  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 29, 2014\u003C/time\u003E by nli2work\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-07-29T23:13:59Z","Content":"\n\u003Cp\u003EThe texture space is set to \u0022tangent\u0022 by default. I don\u0027t know what I did to get it like that. The only things that come to mind is mirroring, and scaling to negative 1 along an axis then recalculating normals outside. I\u0027m not really sure that\u0027s what caused it because I do it all the time and when I pay attention this problem doesn\u0027t occur.\u003C/p\u003E\u003Cp\u003EI was able to fix it by joining objects to another object that behaved correctly.\u003C/p\u003E\u003Cp\u003EI\u0027d still like to know what happened there though. It\u0027s weird, and frankly joining meshes like that is more work because now I have to separate them again and move the origins around. There has to be a simpler way.\u003C/p\u003E\u003Cp\u003Eedit.\u003C/p\u003E\u003Cp\u003EIt\u0027s as if the normal map coordinates are flipped along either x or y or both, but the texture itself is fine.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-07-29T23:20:32Z\u0022 title=\u002207/29/2014 11:20  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 29, 2014\u003C/time\u003E by Cpt. Kipard\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-07-29T23:53:35Z","Content":"\n\u003Cp\u003EIt\u0027s probably mirroring. I get similar issues in Max if I mirror, forget to reset the object\u0027s scale. It will export into Unity with the normals flipped, and the mesh looks inside out. \u003C/p\u003E\u003Cp\u003EI do the attach/detach thing often, generally I just make a primitive, align it to the original object\u0027s pivot. Attach the original object to the primitive, then delete the primitive sub-object. Fixes issues without having to deal with shifted pivots.\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-09-02T00:59:29Z","Content":"\n\u003Cp\u003EI\u0027m still having this problem and the workaround isn\u0027t working anymore. This is getting really annoying.\u003C/p\u003E\u003Cp\u003EIn Blender Under \u0022Mapping\u0022 in the texture tab, setting the Y size to negative 1 fixes the shading across the board. I still don\u0027t understand why. In the past exporting a normal map from GIMP without flipping any of the axes would make the normal map appear correct in blender, but Y would have to be flipped in order to appear right in Unity. Now I have to flip Y in blender as well.\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-09-02T21:40:32Z","Content":"\n\u003Cp\u003ENo. I spoke too soon. It doesn\u0027t work. What works is inverting Y when generating the normal map in the first place. AFAIK This is not normal behaviour for blender. Up until now I only had to do that for the final Unity work. Seriously I\u0027m getting pretty sick of this, so if no one comes up with something I\u0027m going to abandon this mod.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-02T21:43:48Z\u0022 title=\u002209/02/2014 09:43  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 2, 2014\u003C/time\u003E by Cpt. Kipard\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-09-03T06:36:07Z","Content":"\n\u003Cp\u003EOh. Wait.\u003C/p\u003E\u003Cp\u003EWhat kind of textures are you using? Ones you didn\u0027t export from Unity as uncompressed MBM, perchance?\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-09-03T12:15:53Z","Content":"\n\u003Cp\u003ENo. I haven\u0027t started working with Unity yet, except to check how the normal map behaves in Unity. I generate the normal map with the NormalMap plugin in GIMP. They are compressed TGAs. I have to check \u0022Invert Y\u0022 in order for the shading and highlights to appear in the correct direction. AFAIK that\u0027s expected for Unity. The only good thing about this is that now I don\u0027t have to re-generate it after previewing the models in Blender, but I don\u0027t like the fact that Blender isn\u0027t behaving consistently any more. In the past Blender displayed normal maps correctly without \u0022Inverting Y\u0022. Now it doesn\u0027t.\u003C/p\u003E\u003Cp\u003EI\u0027ve tried every possibility of mirroring, scaling the meshes to negative 1 and recalculating normals to outside, scaling the objects to negative 1 and recalculating normals, applying object rotations and scale, but whatever I do it always ends up looking the same now... unless I invert Y in the map.\u003C/p\u003E\u003Cp\u003EAfter that last post I checked a few of the objects with the normal map in Unity and they reflect light correctly, so that\u0027s something at least. I just wish I knew what I did to break things like this. Google isn\u0027t very helpful, but this is such a specific problem that maybe my fu isn\u0027t good enough and I\u0027ve already clicked and slid a bunch of setting in Blender to no avail. This WILL happen again if I continue to mod complex things like the Skylon\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-09-03T12:35:57Z","Content":"\n\u003Cp\u003Eif blender\u0027s the only part behaving odd, revert blender to all default settings? reinstall blender?\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-09-03T20:18:17Z","Content":"\n\u003Cp\u003EWell, bingo. That\u0027s the issue right there.\u003C/p\u003E\u003Cp\u003EUnity\u0027s native normal map format is a weird one--4 channels, and inverted.\u003C/p\u003E\u003Cp\u003EAll of R, G, and B should be the old G channel (inverted), and Alpha the old R channel.\u003C/p\u003E\u003Cp\u003EIf you export a texture as a normal map from the Unity editor, the editor will take care of all that. If you do it yourself, you...have to do it yourself.\u003C/p\u003E\u003Cp\u003EOpen some Squad normal maps (i.e. convert mbm to png) to see what I mean.\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-09-04T12:59:34Z","Content":"\n\u003Cp\u003EThat\u0027s a bingo?\u003C/p\u003E\u003Cp\u003EI don\u0027t get it. I\u0027ve never exported a texture \u003Cstrong\u003Efrom\u003C/strong\u003E unity. This doesn\u0027t seem relevant to what I\u0027m talking about at all.\u003C/p\u003E\n"},{"CreatedByName":"Beale","CreatedById":70533,"CreatedDateTime":"2014-09-04T13:33:54Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NathanKell\u0022 data-cite=\u0022NathanKell\u0022\u003E\u003Cdiv\u003EWell, bingo. That\u0027s the issue right there.\u003Cp\u003EUnity\u0027s native normal map format is a weird one--4 channels, and inverted.\u003C/p\u003E\u003Cp\u003EAll of R, G, and B should be the old G channel (inverted), and Alpha the old R channel.\u003C/p\u003E\u003Cp\u003EIf you export a texture as a normal map from the Unity editor, the editor will take care of all that. If you do it yourself, you...have to do it yourself.\u003C/p\u003E\u003Cp\u003EOpen some Squad normal maps (i.e. convert mbm to png) to see what I mean.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ECould you go into more detail into the make-up of normal maps?\u003C/p\u003E\u003Cp\u003EI took a look at the Squad ones and...\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EMine\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://puu.sh/bl90V/b310719804.jpg\u0022 alt=\u0022b310719804.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ESquad\u0027s\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://puu.sh/bl93B/4c316f7549.jpg\u0022 alt=\u00224c316f7549.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EI generate my normal maps using a height-map like this, maybe I\u0027m doing it wrong.\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://puu.sh/bl9dl/46060daa33.jpg\u0022 alt=\u002246060daa33.jpg\u0022\u003E\u003C/p\u003E\u003Cp\u003EThanks! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-04T13:40:21Z\u0022 title=\u002209/04/2014 01:40  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 4, 2014\u003C/time\u003E by Beale\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-09-04T13:42:39Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Beale\u0022 data-cite=\u0022Beale\u0022\u003E\u003Cdiv\u003ECould you go into more detail into the make-up of normal maps?\u003Cp\u003EI took a look at the Squad ones and...\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EMine\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://puu.sh/bl90V/b310719804.jpg\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://puu.sh/bl90V/b310719804.jpg\u003C/a\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ESquad\u0027s\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://puu.sh/bl93B/4c316f7549.jpg\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://puu.sh/bl93B/4c316f7549.jpg\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EI generate my normal maps using a height-map like this, maybe I\u0027m doing it wrong.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://puu.sh/bl9dl/46060daa33.jpg\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://puu.sh/bl9dl/46060daa33.jpg\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EThanks! \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ewhat do you use to generate the normal with? Unity\u0027s normal generated from your 3rd bump map is identical to nDo PS plugin or Max; Green is Up. But your first normal, the green channel is inverted, Green is down.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-04T13:51:49Z\u0022 title=\u002209/04/2014 01:51  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 4, 2014\u003C/time\u003E by nli2work\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Beale","CreatedById":70533,"CreatedDateTime":"2014-09-04T14:41:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022nli2work\u0022 data-cite=\u0022nli2work\u0022\u003E\u003Cdiv\u003Ewhat do you use to generate the normal with? Unity\u0027s normal generated from your 3rd bump map is identical to nDo PS plugin or Max; Green is Up. But your first normal, the green channel is inverted, Green is down.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EHi!\u003C/p\u003E\u003Cp\u003EI generate the Normal map outside of Unity, using software called SSBump_Generator . The generated map is then put straight into unity for export.\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-09-04T15:07:05Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Cpt. Kipard\u0022 data-cite=\u0022Cpt. Kipard\u0022\u003E\u003Cdiv\u003EThat\u0027s a bingo?\u003Cp\u003EI don\u0027t get it. I\u0027ve never exported a texture \u003Cstrong\u003Efrom\u003C/strong\u003E unity. This doesn\u0027t seem relevant to what I\u0027m talking about at all.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eit just means whatever you are using to create the normal map is using reversed Y as Unity engine. Everything is working fine. if you want to keep using what you\u0027ve been using to get normal maps; invert the Y before feeding it to KSP.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222014-09-04T15:13:02Z\u0022 title=\u002209/04/2014 03:13  PM\u0022 data-short=\u00229 yr\u0022\u003ESeptember 4, 2014\u003C/time\u003E by nli2work\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-09-04T21:07:28Z","Content":"\n\u003Cp\u003ECpt Kipard:\u003C/p\u003E\u003Cp\u003ELet\u0027s try this again:\u003C/p\u003E\u003Cp\u003EUnity expects normal maps in a certain format. If you do not give Unity a normal map in that format, and you do not tell it to convert to that format, it will not appear correctly ingame.\u003C/p\u003E\u003Cp\u003EThe format Unity expects normal maps in is:\u003C/p\u003E\u003Cp\u003EThe Green channel has the Y value, and needs to be inverted. (Note that this is usually also copied to the R and B channels)\u003C/p\u003E\u003Cp\u003EThe Alpha channel has the X value.\u003C/p\u003E\u003Cp\u003EYou can see the result in the pic Beale posted of a SQUAD normal map; it\u0027s gray because the R, B, and G channels are identical, since they all express Y-inverted, and X is in alpha.\u003C/p\u003E\u003Cp\u003EThe format you are passing has X in the Red channel, Y in the Green channel, and Z in the Blue channel, with no Alpha channel.\u003C/p\u003E\u003Cp\u003EIf you export your textures from Unity (i.e. to MBM) this conversion is handled automatically. If you don\u0027t do that and you are not using ATM, it is \u003Cem\u003Eusually \u003C/em\u003Ehandled automatically in texture loading. If you don\u0027t do that, and you are using Active Texture Management but do not have the texture specified as a normal map (i.e. the NORMAL_LIST node) in an ATM config, then it will not be converted automatically on load by KSP, and \u003Cem\u003Eit will fail to work\u003C/em\u003E.\u003C/p\u003E\u003Cp\u003ESince Unity has this weird format, obviously you should only do this conversion *after* you have finished getting everything looking right in Blender, since obviously Blender is not going to know what to do with weird Unity-style normal maps.\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-09-04T21:31:27Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NathanKell\u0022 data-cite=\u0022NathanKell\u0022\u003E\u003Cdiv\u003ESQUAD normal map; it\u0027s gray because the R, B, and G channels are identical, since they all express Y-inverted, and X is in alpha.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027ve been doing pretty much the same as Capt Kipard, only exception being \u002BY is up. They work fine in Unity and KSP, whether directly from Photoshop, Max, or through PartTools. with or without ATM. This RGB = X; Alpha = Y is a funky setup I have never heard of before, and seems rather wasteful. Is it MBM only?\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-09-04T21:36:48Z","Content":"\n\u003Cp\u003ENo, it\u0027s how Unity stores normal maps internally. All textures (that Unity is told will be used for a normal map) are converted to that format on load.\u003C/p\u003E\u003Cp\u003EHowever, if Unity doesn\u0027t know it\u0027s supposed to be used as a normal map (i.e. if it not a normal-map-flagged MBM, and you\u0027re using ATM, and ATM isn\u0027t told to treat it as a normal map) it will not be converted, and there will be a line in the log that it failed to load.\u003C/p\u003E\n"},{"CreatedByName":"nli2work","CreatedById":106805,"CreatedDateTime":"2014-09-04T21:44:05Z","Content":"\n\u003Cp\u003EI see, is that why ATM requires \u0022_NRM\u0022 postfix?\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2014-09-04T22:03:09Z","Content":"\n\u003Cp\u003EAh, right. Forgot that bit. Yes, if you postfix _NRM to a filename, Unity will recognize it as a normal map and convert it if it\u0027s not in the internal format already.\u003C/p\u003E\n"},{"CreatedByName":"CaptainKipard","CreatedById":70516,"CreatedDateTime":"2014-09-05T09:23:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022NathanKell\u0022 data-cite=\u0022NathanKell\u0022\u003E\u003Cdiv\u003ESince Unity has this weird format, obviously you should only do this conversion *after* you have finished getting everything looking right in Blender, since obviously Blender is not going to know what to do with weird Unity-style normal maps.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYes. I know this. The problem I\u0027ve been trying to describe in this thread is that \u003Cstrong\u003ENOW\u003C/strong\u003E for some reason Blender behaves like Unity in the way it handles normal maps. Unity is completely irrelevant here. I don\u0027t understand how I can make this any clearer. It\u0027s most likely a problem with the model itself, because that\u0027s all I\u0027ve been working on.\u003C/p\u003E\n"}]}