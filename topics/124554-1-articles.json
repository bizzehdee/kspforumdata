{"TopicId":124554,"ForumId":29,"TopicTitle":"ModuleScienceLab::ProcessData and the merits of patience","CreatedByName":"SixHourDays","CreatedById":140711,"CreatedDateTime":"2015-11-06T06:32:22Z","PageNum":1,"Articles":[{"CreatedByName":"SixHourDays","CreatedById":140711,"CreatedDateTime":"2015-11-06T06:32:22Z","Content":"\n\u003Cp\u003E\u003Cstrong\u003EEDIT2 answered (thanks xEvilReeperx!) ProcessData is meant to be used in a Coroutine, not called as a regular member function:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cstrong\u003E StartCoroutine( myLab.ProcessData( myData, myDoneCallback) );\u003C/strong\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERead on for my big long sob story of doing it every which way \u003C/strong\u003E\u003Cem\u003E\u003Cstrong\u003Eexcept \u003C/strong\u003E\u003C/em\u003E\u003Cstrong\u003Ethe right way (facepalm)...\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHi. Grab a beer, pull up a bar stool. It\u0027s a long story, and I\u0027m a little frustrated.\u003C/p\u003E\u003Cp\u003EI\u0027m trying to automate some science features for my mod. One thing I\u0027d like to do is make a data-research copy of a ScienceData using the MPL Lab via code.\u003C/p\u003E\u003Cp\u003ENow - this seems like the obvious choice to do that:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E public IEnumerator ModuleScienceLab::ProcessData( ScienceData item, Callback\u0026lt;ScienceData\u0026gt; onComplete ); \u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Eexcept when I run it, nothing happens. No \u0022Sending data to vessel labs..\u0022 etc print in the log, no top left green text running up a percentage complete, and the callback never fired. I provided a simple dummy print method callback, which never called (no print).\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EWhy doesn\u0027t this function work?\u003C/strong\u003E Is a specific callback expected?\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EEDIT1 - \u003C/strong\u003E\u003Cstrong\u003EThe following has been answered as a stock bug, thanks to jkortech.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://bugs.kerbalspaceprogram.com/issues/5212\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://bugs.kerbalspaceprogram.com/issues/5212\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ENext up, we have the magic callback:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E public Callback\u0026lt;ScienceData\u0026gt; ExperimentResultDialogPage::OnSendToLab; \u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003ENow this actually \u003Cem\u003Edoes\u003C/em\u003E work. However I don\u0027t like this route: you have to call a ReviewData N times for N IScienceDataContainers, to get a result page and therein a callback each, then fire said callbacks and dismiss the dialog yourself, while the user sees N dialogs flash by for 1 frame uninvited... \u003Cem\u003Eugh. \u003C/em\u003E It\u0027s abusing an entire dialog class just to get callback, and we\u0027re better than that, damnit.\u003C/p\u003E\u003Cp\u003EOk, so lets get MacGyver:\u003C/p\u003E\u003Cp\u003EIf we know that OnSendToLab works, and it\u0027s a callback, we can use reflection to see what it\u0027s calling, and we find it\u0027s actually a multidelegate calling\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E- void ModuleScienceExperiment::sendDataToLab(ScienceData)\u003Cbr\u003E- void ExperimentsResultDialog::dismissCurrentPage(ScienceData)\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E...which I don\u0027t see in the assembly object viewer in VS 2015. This leads me to think \u003Cstrong\u003Ethe delegates are calling private / hidden methods\u003C/strong\u003E Squad doesn\u0027t want us using. \u003Cem\u003ESo let\u0027s use those! \u003C/em\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EDisclaimer:\u003C/strong\u003E kids don\u0027t do this at home! Abusing reflection to access private methods of strange assemblies that can change at any moment is clearly a quick trip to brittle, breaky code. Beware.\u003C/p\u003E\u003Cp\u003ESo we roll up our sleeves, remember some reflection code, and arrive here:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EType modSciExperiType = Type.GetType(\u0022ModuleScienceExperiment, Assembly-CSharp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\u0022); //grabbing types from assemblies other than yours needs fully qualified name\u003Cbr\u003EMethodInfo privateMethodInfo = modSciExperiType.GetMethod(\u0022sendDataToLab\u0022, BindingFlags.Instance | BindingFlags.NonPublic); //specifically search for non-public instance methods to find hidden/private ones\u003Cbr\u003EprivateMethodInfo.Invoke(myLabModuleInstance, new object[] {myScienceData}); //invoke private method on an instance, passing a science data as a parameter\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ENow, this actually works.\u003C/strong\u003E You can directly call it on the module. It prints the \u0022Sending Data to Vessel Labs...\u0022 print in log. The green progress text shows up top left. The data gets copied into the lab\u0027s research-data bank.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EBut...\u003C/strong\u003Eit always ends the progress with the top left orange failure text \u0022[MPL] not enough data storage...\u0022. Even when the lab clearly has enough storage for said data. \u003C/p\u003E\u003Cp\u003EAnd that\u0027s about when I rage quit. \u003C/p\u003E\u003Cp\u003EI can accept the brittle factor of using the private sendDataToLab; I feel like that functionality is what ProcessData \u003Cem\u003Eshould\u003C/em\u003E have given me to begin with. But spewing a failure message each time, I can\u0027t accept. Can RoverDude/NathanKell/Squad bretheren please read my plea, and explain to me what is happening? The function succeeds in every way - except throwing the fail message up to the player. \u003C/p\u003E\u003Cp\u003EI\u0027m also open to unknown other ways to get the MPL to make a data-research copy of a ScienceData into an onboard MPL lab.\u003C/p\u003E\u003Cp\u003E\u0026lt;clink my beer to yours\u0026gt;As always, any help is appreciated. Thanks for reading.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-11-06T23:54:24Z\u0022 title=\u002211/06/2015 11:54  PM\u0022 data-short=\u00228 yr\u0022\u003ENovember 6, 2015\u003C/time\u003E by SixHourDays\u003C/strong\u003E\n\u003Cbr\u003E100% answered\n\u003C/span\u003E\n"},{"CreatedByName":"jkortech","CreatedById":146934,"CreatedDateTime":"2015-11-06T16:58:30Z","Content":"\n\u003Cp\u003EThe failure message you\u0027re seeing is a stock bug that happens normally when putting data in the lab.\u003C/p\u003E\n"},{"CreatedByName":"SixHourDays","CreatedById":140711,"CreatedDateTime":"2015-11-06T18:46:01Z","Content":"\n\u003Cp\u003EWow... I haven\u0027t done any ships with a lab since 1.02, and was just remembering it working correctly!\u003C/p\u003E\u003Cp\u003EYet, I tested on 1.04 and so did my friend (unrelated save \u0026amp; PCs), and sure enough:\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://bugs.kerbalspaceprogram.com/issues/5212\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://bugs.kerbalspaceprogram.com/issues/5212\u003C/a\u003E\u003C/p\u003E\u003Cp\u003Eeach and every time.\u003C/p\u003E\u003Cp\u003EOk! Thank you jkortech. I\u0027ll update my post to the remaining question; why doesn\u0027t ProcessData work in the first place?\u003C/p\u003E\n"},{"CreatedByName":"xEvilReeperx","CreatedById":75857,"CreatedDateTime":"2015-11-06T19:10:45Z","Content":"\n\u003Cp\u003EYou didn\u0027t say how you were calling it, but I suspect that\u0027s the problem. It\u0027s meant to be used as a coroutine:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eprivate void DoSomethingWithScience(ScienceData data)\u003Cbr\u003E{\u003Cbr\u003E    var myLab = // ModuleScienceLab here\u003Cbr\u003E\u003Cbr\u003E    StartCoroutine(myLab.ProcessData(data, ScienceProcessingFinished)); // MonoBehaviour.StartCoroutine\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003Eprivate void ScienceProcessingFinished(ScienceData data)\u003Cbr\u003E{\u003Cbr\u003E    PopupDialog.SpawnPopupDialog(\u0022Finished\u0022, \u0022Science data has been processed\u0022, \u0022OK\u0022, false, HighLogic.Skin);\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"SixHourDays","CreatedById":140711,"CreatedDateTime":"2015-11-06T23:45:29Z","Content":"\n\u003Cp\u003ETHAT is the real answer! Thank you \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/members/77866-xEvilReeperx\u0022 rel=\u0022external nofollow\u0022\u003E\u003Cspan style=\u0022color:#417394;\u0022\u003ExEvilReeperx\u003C/span\u003E\u003C/a\u003E\u003Cspan style=\u0022color:#417394;\u0022\u003E. \u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#417394;\u0022\u003EI was calling ProcessData as a plain member function in my mod\u0027s update... calling it as a Coroutine works perfectly, including firing the OnComplete callback.\u003C/span\u003E\u003C/p\u003E\u003Cp\u003E\u003Cspan style=\u0022color:#417394;\u0022\u003EIn hindsight, the IEnumerator return type should have been the hint. My C# experience hadn\u0027t encountered Coroutines yet :-) Learn something new every day...\u003C/span\u003E\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-11-07T06:40:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022SixHourDays\u0022 data-cite=\u0022SixHourDays\u0022\u003E\u003Cdiv\u003EMy C# experience hadn\u0027t encountered Coroutines yet :-)\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EShould make a note here that while the IEnumerator type comes from one of the general C# collections libraries, Coroutines are Unity functionality for classes inheriting from MonoBehaviour.\u003C/p\u003E\n"}]}