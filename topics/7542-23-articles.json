{"TopicId":7542,"ForumId":29,"TopicTitle":"The official unoffical \u0026quot;help a fellow plugin developer\u0026quot; thread","CreatedByName":"Cephei","CreatedById":2555,"CreatedDateTime":"2012-03-04T10:02:40Z","PageNum":23,"Articles":[{"CreatedByName":"Ekku Zakku","CreatedById":34696,"CreatedDateTime":"2013-12-17T03:46:42Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Ekku Zakku\u0022 data-cite=\u0022Ekku Zakku\u0022\u003E\u003Cdiv\u003EAnybody have any idea why using \u0022KSPAddon.Startup.EditorAny\u0022 only works for the VAB and not for the SPH? I know I can just do one for each, but using EditorAny seems like a much nicer approach...\u003Cp\u003EEDIT: actually this might not be EditorAny giving me problems, but GameScenes. I\u0027m just not getting things to show up in the SPH that are working just fine in the VAB =P\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EFound out the problem, and it was indeed the GameScenes. I had to include both GameScenes.EDITOR AND GameScenes.SPH. I hope Squad fixes this in the future, having \u0022Editor\u0022 and \u0022SPH\u0022 are a bit inconsistent; definitely needs \u0022VAB\u0022 added and \u0022Editor\u0022 mean either scene.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Nutt007\u0022 data-cite=\u0022Nutt007\u0022\u003E\u003Cdiv\u003E\u003Cstrong\u003EEkku:\u003C/strong\u003E Have you tried using KSPAddonFixed by Majiir? Probably won\u0027t change anything but it\u0027s what all the ~cool~ modders are using. If the editor thing doesn\u0027t work have you considered loading at the Menu? Hyperedit does that.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks for the advice, I took a look at that previously and felt that I was fine just using KSPAddon with the \u0022once\u0022 parameter set to false. It works for me currently, and it\u0027s what Kerbal Alarm Clock uses (which my mod is quite similar to in certain ways), so I\u0027ll stick to that unless something comes up later =3\u003C/p\u003E\n"},{"CreatedByName":"EndlessWaves","CreatedById":41302,"CreatedDateTime":"2013-12-17T12:33:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022XanderTek\u0022 data-cite=\u0022XanderTek\u0022\u003E\u003Cdiv\u003EIt should be simple, but I\u0027ve tried a bunch of functions and variables within moduleengines and partmodule without any success.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EWe know it\u0027s KSPEvent tagged because it appears in the GUI, so \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/7529-Plugin-Posting-Rules-And-Official-Documentation\u0022 rel=\u0022external nofollow\u0022\u003Eas per sticky\u003C/a\u003E you use partInQuestion.SendEvent(\u0022EventName\u0022); \u003C/p\u003E\u003Cp\u003EAs to getting the event name, try iterating through PartModule.Events and seeing what name corresponds to the GUIName of the right click menu (alternative just guess, they\u0027re usually something simple and similar like Shutdown or ShutdownEngine).\u003C/p\u003E\n"},{"CreatedByName":"XanderTek","CreatedById":92553,"CreatedDateTime":"2013-12-17T15:03:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022EndlessWaves\u0022 data-cite=\u0022EndlessWaves\u0022\u003E\u003Cdiv\u003EWe know it\u0027s KSPEvent tagged because it appears in the GUI, so \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/7529-Plugin-Posting-Rules-And-Official-Documentation\u0022 rel=\u0022external nofollow\u0022\u003Eas per sticky\u003C/a\u003E you use partInQuestion.SendEvent(\u0022EventName\u0022); \u003Cp\u003EAs to getting the event name, try iterating through PartModule.Events and seeing what name corresponds to the GUIName of the right click menu (alternative just guess, they\u0027re usually something simple and similar like Shutdown or ShutdownEngine).\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Epart.SendEvent(\u0022Shutdown\u0022); causes all engines on the vessel to shut down. In the documentation I could find, it looks like SendEvent should only be sending the command to the part, but that doesn\u0027t appear to be what happens.\u003C/p\u003E\n"},{"CreatedByName":"EndlessWaves","CreatedById":41302,"CreatedDateTime":"2013-12-17T16:27:36Z","Content":"\n\u003Cp\u003EHmm, you could try \u003Ca href=\u0022https://docs.unity3d.com/Documentation/ScriptReference/GameObject.SendMessage.html\u0022 rel=\u0022external nofollow\u0022\u003ESendMessage\u003C/a\u003E instead.\u003C/p\u003E\n"},{"CreatedByName":"stupid_chris","CreatedById":62017,"CreatedDateTime":"2013-12-17T16:34:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022XanderTek\u0022 data-cite=\u0022XanderTek\u0022\u003E\u003Cdiv\u003Epart.SendEvent(\u0022Shutdown\u0022); causes all engines on the vessel to shut down. In the documentation I could find, it looks like SendEvent should only be sending the command to the part, but that doesn\u0027t appear to be what happens.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Eanother thing you could do is loop through all the part that have your module and tell them to shutdown.\u003C/p\u003E\u003Cp\u003ESomething like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eforeach (Part p in vessel.parts)\u003Cbr\u003E{\u003Cbr\u003E    foreach (PartModule pm in p.Modules)\u003Cbr\u003E    {\u003Cbr\u003E        if (pm is Landertron) { p.SendEven(\u0022Shutdown\u0022); }\u003Cbr\u003E    }\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-17T16:53:48Z\u0022 title=\u002212/17/2013 04:53  PM\u0022 data-short=\u002210 yr\u0022\u003EDecember 17, 2013\u003C/time\u003E by stupid_chris\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"hab136","CreatedById":75997,"CreatedDateTime":"2013-12-17T16:36:56Z","Content":"\n\u003Cp\u003EDoes GUI.Tooltip not work? It\u0027s always blank for me. I\u0027m calling it from OnGUI() and checking the event type, like the \u003Ca href=\u0022http://docs.unity3d.com/Documentation/ScriptReference/GUI-tooltip.html\u0022 rel=\u0022external nofollow\u0022\u003Eexample\u003C/a\u003E:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003E\u003Cp\u003Eif (Event.current.type == EventType.Repaint) {\u003C/p\u003E\u003Cp\u003E tooltip = GUI.tooltip;\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m fairly certain I\u0027m declaring my tooltips correctly:\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022\u003E\u003Cdiv\u003Eif (GUILayout.Button(new GUIContent (\u0022Asparagus\u0022,aspTexture, \u0022Create fuel lines and stage the ship, asparagus-style\u0022),picbuttonstyle)) {\u003Cp\u003E mystate = ASPState.ADDASP;\u003C/p\u003E\u003Cp\u003E}\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI can whip up my own detection of what control I\u0027m over, but it seems silly that I would have to do so.\u003C/p\u003E\u003Cp\u003EAlso is there any good way to shrink a window to the current content? The best I\u0027ve come up with is to change the height and width to 1x1 and let it automatically resize, but that causes flicker.\u003C/p\u003E\n"},{"CreatedByName":"TriggerAu","CreatedById":57838,"CreatedDateTime":"2013-12-18T06:54:02Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022hab136\u0022 data-cite=\u0022hab136\u0022\u003E\u003Cdiv\u003EDoes GUI.Tooltip not work? It\u0027s always blank for me. I\u0027m calling it from OnGUI() and checking the event type, like the \u003Ca href=\u0022http://docs.unity3d.com/Documentation/ScriptReference/GUI-tooltip.html\u0022 rel=\u0022external nofollow\u0022\u003Eexample\u003C/a\u003E:\u003Cp\u003EI\u0027m fairly certain I\u0027m declaring my tooltips correctly:\u003C/p\u003E\u003Cp\u003EI can whip up my own detection of what control I\u0027m over, but it seems silly that I would have to do so.\u003C/p\u003E\u003Cp\u003EAlso is there any good way to shrink a window to the current content? The best I\u0027ve come up with is to change the height and width to 1x1 and let it automatically resize, but that causes flicker.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EYour code snippets certainly look right. A few things that I can think of when I did this recently (this is just my fiddling \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 alt=\u0022:)\u0022\u003E ):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EI didnt do it in the OnGUI routine itself - I added my draw functions to the renderingmanager - RenderingManager.AddToPostDrawQueue(0, DrawGUI)\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EIn my DrawGUI function that is where i drew my window with GUILayout.Window\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EInside the window function is where I have all my GUILayout.button, etc\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThe \u003Cspan style=\u0022text-decoration:underline;\u0022\u003Elast\u003C/span\u003E thing in that window function is the bit that reads the GUI.tooltip\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThen you obviously do stuff with the tooltip string - in my case I draw the tooltip on the screen as the last thing in that DrawGUI routine\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHope thats helpful, and if you want to see it in use you can see the functions/order I use in \u003Ca href=\u0022https://kspalternateresourcepanel.codeplex.com/SourceControl/latest#DevBranch/Source/AlternateResourcePanel.cs\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://kspalternateresourcepanel.codeplex.com/SourceControl/latest#DevBranch/Source/AlternateResourcePanel.cs\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EFor the autofit content I have yet to find something in the native unity stuff myself\u003C/p\u003E\n"},{"CreatedByName":"hab136","CreatedById":75997,"CreatedDateTime":"2013-12-18T10:40:12Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Trigger Au\u0022 data-cite=\u0022Trigger Au\u0022\u003E\u003Cdiv\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EThe \u003Cspan style=\u0022text-decoration:underline;\u0022\u003Elast\u003C/span\u003E thing in that window function is the bit that reads the GUI.tooltip\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThen you obviously do stuff with the tooltip string - in my case I draw the tooltip on the screen as the last thing in that DrawGUI routine\u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EHope thats helpful, and if you want to see it in use you can see the functions/order I use in \u003Ca href=\u0022https://kspalternateresourcepanel.codeplex.com/SourceControl/latest#DevBranch/Source/AlternateResourcePanel.cs\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://kspalternateresourcepanel.codeplex.com/SourceControl/latest#DevBranch/Source/AlternateResourcePanel.cs\u003C/a\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThat was exactly what I needed, thanks! Now I read the tooltip at the end of OnWindow() for the window, and then draw the tooltip after the GUILayout.Window() call in OnGUI(). Also set GUI.Depth=0. It works!\u003C/p\u003E\u003Cp\u003EI noticed you used a real texture file for the background, but I just made it black for now:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003ETexture2D blackTexture = new Texture2D (1, 1);\u003Cbr\u003EblackTexture.SetPixel(0,0,Color.black);\u003Cbr\u003EblackTexture.Apply();\u003Cbr\u003Etooltipstyle.normal.background = blackTexture;\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"BananaDealer","CreatedById":60684,"CreatedDateTime":"2013-12-18T11:10:24Z","Content":"\n\u003Cp\u003ESo I\u0027m looking to overhaul the \u003Cem\u003ESCIENCE!\u003C/em\u003E in my mod...\u003C/p\u003E\u003Cp\u003EAny idea of how I can bar certain experiments that come from the same part until a certain tech node is researched?\u003C/p\u003E\n"},{"CreatedByName":"hab136","CreatedById":75997,"CreatedDateTime":"2013-12-18T12:04:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022BananaDealer\u0022 data-cite=\u0022BananaDealer\u0022\u003E\u003Cdiv\u003EAny idea of how I can bar certain experiments that come from the same part until a certain tech node is researched?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI\u0027m just figuring that out too. Here\u0027s what I\u0027ve come up with so far:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eif (ResearchAndDevelopment.Instance != null) {\u003Cbr\u003E\u003Cbr\u003E    if (ResearchAndDevelopment.PartModelPurchased (availablePart)) {\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    if (ResearchAndDevelopment.GetTechnologyState (\u0022techIDstring\u0022) == RDTech.State.Available) {\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"BananaDealer","CreatedById":60684,"CreatedDateTime":"2013-12-18T12:37:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022hab136\u0022 data-cite=\u0022hab136\u0022\u003E\u003Cdiv\u003EI\u0027m just figuring that out too. Here\u0027s what I\u0027ve come up with so far:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eif (ResearchAndDevelopment.Instance != null) {\u003Cbr\u003E\u003Cbr\u003E    if (ResearchAndDevelopment.PartModelPurchased (availablePart)) {\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    if (ResearchAndDevelopment.GetTechnologyState (\u0022techIDstring\u0022) == RDTech.State.Available) {\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESo then it would look something like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eif (ResearchAndDevelopment.Instance != null) {\u003Cbr\u003E\u003Cbr\u003E    if (ResearchAndDevelopment.PartModelPurchased ([COLOR=\u0022#FF0000\u0022]Stayputnik\u0027s ID[/COLOR])) {[COLOR=\u0022#FFA500\u0022]DO STUFF![/COLOR]\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    if (ResearchAndDevelopment.GetTechnologyState (\u0022[COLOR=\u0022#FF0000\u0022]spaceExploration[/COLOR]\u0022) == RDTech.State.Available) { [COLOR=\u0022#FFA500\u0022]add the new experiment[/COLOR]\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E... Right?\u003C/p\u003E\n"},{"CreatedByName":"XanderTek","CreatedById":92553,"CreatedDateTime":"2013-12-18T15:55:21Z","Content":"\n\u003Cp\u003ESomething that people might find useful: There\u0027s a new float in ModuleEngines called thrustPercentage. This is a value from 0 to 100 that seems to correspond to where you set the thrust limiter in the new VAB tweakable for engines.\u003C/p\u003E\u003Cp\u003EAnd a question: Any suggestions on how to find all copies of a part that are tied to the same symmetry? I tried the following without success \u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E        foreach (Part p in this.vessel.parts)\u003Cbr\u003E        {\u003Cbr\u003E            if (p.isSymmetryCounterPart(this.part))\u003Cbr\u003E            {\u003Cbr\u003E               ...\u003Cbr\u003E            }\u003Cbr\u003E        }\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-18T16:10:18Z\u0022 title=\u002212/18/2013 04:10  PM\u0022 data-short=\u002210 yr\u0022\u003EDecember 18, 2013\u003C/time\u003E by XanderTek\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"hab136","CreatedById":75997,"CreatedDateTime":"2013-12-18T16:09:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022BananaDealer\u0022 data-cite=\u0022BananaDealer\u0022\u003E\u003Cdiv\u003ESo then it would look something like this:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eif (ResearchAndDevelopment.Instance != null) {\u003Cbr\u003E\u003Cbr\u003E    if (ResearchAndDevelopment.PartModelPurchased ([COLOR=\u0022#FF0000\u0022]Stayputnik\u0027s ID[/COLOR])) {[COLOR=\u0022#FFA500\u0022]DO STUFF![/COLOR]\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    if (ResearchAndDevelopment.GetTechnologyState (\u0022[COLOR=\u0022#FF0000\u0022]spaceExploration[/COLOR]\u0022) == RDTech.State.Available) { [COLOR=\u0022#FFA500\u0022]add the new experiment[/COLOR]\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E... Right?\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EClose. PartModelPurchased() needs an AvailablePart, like:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EAvailablePart ap = PartLoader.getPartInfoByName (\u0022fuelLine\u0022);\u003Cbr\u003Eif (ResearchAndDevelopment.PartTechAvailable(ap)) {\u003Cbr\u003E    }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe name (in this case \u0022fuelLine\u0022) is the part name in the part.cfg file.\u003C/p\u003E\u003Cp\u003EYou probably don\u0027t need to check both the tech tree and the part availability, just one or the other.\u003C/p\u003E\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022XanderTek\u0022 data-cite=\u0022XanderTek\u0022\u003E\u003Cdiv\u003EAnd a question: Any suggestions on how to find all copies of a part that are tied to the same symmetry?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESomething like this:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eforeach (Part p in this.vessel.parts){\u003Cbr\u003E    if (p.symmetryMode\u0026gt;0) {\u003Cbr\u003E        foreach (Part brother in p.symmetryCounterparts) {\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"BananaDealer","CreatedById":60684,"CreatedDateTime":"2013-12-18T17:02:10Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022hab136\u0022 data-cite=\u0022hab136\u0022\u003E\u003Cdiv\u003EClose. PartModelPurchased() needs an AvailablePart, like:\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EAvailablePart ap = PartLoader.getPartInfoByName (\u0022fuelLine\u0022);\u003Cbr\u003Eif (ResearchAndDevelopment.PartTechAvailable(ap)) {\u003Cbr\u003E    }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe name (in this case \u0022fuelLine\u0022) is the part name in the part.cfg file.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESooo... Then:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003Eif (ResearchAndDevelopment.Instance != null) {\u003Cbr\u003E    AvailablePart ap = PartLoader.getPartInfoByName (\u0022[COLOR=\u0022#FF0000\u0022]Stayputnik\u0027s ID[/COLOR]\u0022);\u003Cbr\u003E    if (ResearchAndDevelopment.PartTechAvailable(ap)) {\u003Cbr\u003E\u003Cbr\u003E         if (ResearchAndDevelopment.PartModelPurchased ([COLOR=\u0022#FF0000\u0022]Stayputnik\u0027s ID[/COLOR])) {[COLOR=\u0022#FF8C00\u0022]DO STUFF![/COLOR]\u003Cbr\u003E         }\u003Cbr\u003E\u003Cbr\u003E         if (ResearchAndDevelopment.GetTechnologyState (\u0022[COLOR=\u0022#FF0000\u0022]spaceExploration[/COLOR]\u0022) == RDTech.State.Available) {[COLOR=\u0022#FF8C00\u0022] add the new experiment[/COLOR]\u003Cbr\u003E         }\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E...?\u003C/p\u003E\u003Cp\u003EI\u0027m really bad at figuring code...\u003C/p\u003E\n"},{"CreatedByName":"XanderTek","CreatedById":92553,"CreatedDateTime":"2013-12-18T19:30:44Z","Content":"\n\u003Cp\u003EThanks guys!\u003C/p\u003E\u003Cp\u003EI ended up successfully using this to find each part that has symmetry with the current one (useful for making your tweakables functions affect all parts in a symmetry):\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E            foreach (Part p in this.part.symmetryCounterparts)\u003Cbr\u003E            {\u003Cbr\u003E                    ...\u003Cbr\u003E            }\u003C/pre\u003E\u003Cp\u003E For some reason, p.symmetryMode was not greater than zero in every case. Maybe the \u0022master\u0022 part had p.symmetryMode=0? In any case, I was able to just omit that line.\u003C/p\u003E\u003Cp\u003EAnd I used this to successfully shut down only the current engine:\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Epart.SendMessage(\u0022Shutdown\u0022);\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"BananaDealer","CreatedById":60684,"CreatedDateTime":"2013-12-18T21:53:19Z","Content":"\n\u003Cp\u003EHmm... Any idea where I can find the abilities a Kerbal has while on EVA? As in the file(s) that govern the EVA...\u003C/p\u003E\n"},{"CreatedByName":"panzer1b","CreatedById":95108,"CreatedDateTime":"2013-12-19T00:58:48Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022EndlessWaves\u0022 data-cite=\u0022EndlessWaves\u0022\u003E\u003Cdiv\u003EFrom the error message it may be a scope issue, can you post your code?\u003Cp\u003Especifically the following code compiles fine for me:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Epublic class SomeClass : PartModule\u003Cbr\u003E{\u003Cbr\u003E\t[KSPField]\u003Cbr\u003E\tpublic float color_red = 1.0f;\u003Cbr\u003E\t[KSPField]\u003Cbr\u003E\tpublic float color_green = 1.0f;\u003Cbr\u003E\t[KSPField]\u003Cbr\u003E\tpublic float color_blue = 1.0f;\u003Cbr\u003E\u003Cbr\u003E\tpublic Color tracerColor;\u003Cbr\u003E\u003Cbr\u003E\tpublic override void OnStart(StartState state)\u003Cbr\u003E\t{\u003Cbr\u003E\t\ttracerColor = new Color(color_red, color_green, color_blue);\u003Cbr\u003E\t}\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003Ei dont know what on earth i did but i fixed it\u003C/p\u003E\u003Cp\u003Ethx for your effort guys, even if i dont really know what on earth i did to make it work\u003C/p\u003E\u003Cp\u003Efinally have tracers defined in each part file, so i can shoot rainbows (or at least make the sci-fi gunpods shoot blue/purple, conventional ones shoot red/orange/yellow/white)\u003C/p\u003E\u003Cp\u003Enow i have another question, how can i make a random vector modifier?\u003C/p\u003E\u003Cp\u003Ei have a vector that defines the direction the bullet is going, but i want to be able to add some random spread (preferable configurable by a modifier that can be made to work. \u003C/p\u003E\u003Cp\u003E***How can i implement random bullet spread in this code?***\u003C/p\u003E\u003Cp\u003Ealso,\u003C/p\u003E\u003Cp\u003E***How can i modify bullet initial velocity?***\u003C/p\u003E\u003Cp\u003Ehere is what i have sofar (based on DYJ\u0027s minigun code, modified to be used with my upcoming gunpods and missile pack mod release):\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E\u003Cbr\u003Eusing System;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003Eusing System.Linq;\u003Cbr\u003Eusing System.Text;\u003Cbr\u003Eusing System.Threading.Tasks;\u003Cbr\u003Eusing UnityEngine;\u003Cbr\u003E\u003Cbr\u003Enamespace AKSKineticEnergyWeapon\u003Cbr\u003E{\u003Cbr\u003E    public class AKSKineticEnergyWeapon : PartModule\u003Cbr\u003E    {\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public string keyFire = \u0022joystick button 0\u0022;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public string keyFirealt = \u0022[0]\u0022;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public float BulletMass = 0.5f;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public float BulletDrag = 0.05f;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public float BulletPower = 120f;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public float recoilreductionfactor = 0.1f;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public float fireRate = 0.08f;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public float lackofkrakensbanontrailrendererscompensation = 0.2f;\u003Cbr\u003E\u003Cbr\u003E        public string test;\u003Cbr\u003E\u003Cbr\u003E        public FXGroup sound = null;\u003Cbr\u003E\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public string soundfilelocation = \u0022AKSTechnologies/sounds/20mm\u0022;\u003Cbr\u003E\u003Cbr\u003E        private float nextFire = 0.0f;\u003Cbr\u003E\u003Cbr\u003E        public const string quote = \u0022\\\u0022\u0022;\u003Cbr\u003E\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public float rotationSpeed = 1200f;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public bool isGatling = false;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public float heatProduction = 800;\u003Cbr\u003E\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public string ProjectileFileLoc;\u003Cbr\u003E\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public string CasingFileLoc;\u003Cbr\u003E\u003Cbr\u003E        private VInfoBox heatGauge = null;\u003Cbr\u003E\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public string ProjectileType;\u003Cbr\u003E\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public bool CasingCollision = false;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public string Casinglocationwithquotes;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public float color_red = 1.0f;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public float color_green = 0.0f;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public float color_blue = 0.0f;\u003Cbr\u003E\u003Cbr\u003E        public Color tracerColor;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public GameObject Bullet, Casing, Muzzlefx, Rocketfx;\u003Cbr\u003E\u003Cbr\u003E        public override void OnStart(PartModule.StartState state)\u003Cbr\u003E        {\u003Cbr\u003E\u003Cbr\u003E            if (!Bullet)\u003Cbr\u003E            {\u003Cbr\u003E                //Bullet = PartReader.Read(KSPUtil.ApplicationRootPath \u002B ProjectileFileLoc, \u0022model\u0022, \u0022.mu\u0022);\u003Cbr\u003E                Bullet = GameDatabase.Instance.GetModel(\u0022AKSTechnologies/Parts/bulletcasing/Bullet/model\u0022);\u003Cbr\u003E                Bullet.name = \u0022Bullet\u0022;\u003Cbr\u003E                Bullet.transform.position = new Vector3(1e10f, 1e10f, 1e10f);\u003Cbr\u003E                Bullet.SetActive(true);\u003Cbr\u003E\u003Cbr\u003E                if (ProjectileType == \u0022bullet\u0022)\u003Cbr\u003E                {\u003Cbr\u003E                    Casing = GameDatabase.Instance.GetModel(\u0022AKSTechnologies/Parts/bulletcasing/Casing/model\u0022);\u003Cbr\u003E                    Casing.name = \u0022Casing\u0022;\u003Cbr\u003E                    Casing.transform.position = new Vector3(1e10f, 1e10f, 1e10f);\u003Cbr\u003E                    Casing.SetActive(true);\u003Cbr\u003E                }\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E            Muzzlefx = (GameObject)GameObject.Instantiate(UnityEngine.Resources.Load(\u0022Effects/fx_exhaustFlame_yellow\u0022));\u003Cbr\u003E            Muzzlefx.particleEmitter.emit = false;\u003Cbr\u003E            Muzzlefx.transform.parent = (transform.Find(\u0022model/MuzzleLoc\u0022));\u003Cbr\u003E            Muzzlefx.transform.localPosition = new Vector3(0, -0.5F, 0);\u003Cbr\u003E            Muzzlefx.transform.localRotation = this.part.transform.rotation;\u003Cbr\u003E            Muzzlefx.particleEmitter.useWorldSpace = false;\u003Cbr\u003E            Muzzlefx.particleEmitter.minSize = Muzzlefx.particleEmitter.maxSize = 0.75f;\u003Cbr\u003E            Muzzlefx.particleEmitter.localVelocity = Vector3.zero;\u003Cbr\u003E\u003Cbr\u003E            sound.audio = gameObject.AddComponent\u0026lt;AudioSource\u0026gt;();\u003Cbr\u003E            sound.audio.volume = GameSettings.SHIP_VOLUME;\u003Cbr\u003E            sound.audio.maxDistance = 10;\u003Cbr\u003E            sound.audio.Stop();\u003Cbr\u003E            sound.audio.clip = GameDatabase.Instance.GetAudioClip(\u0022AKSTechnologies/Sounds/20mm\u0022);\u003Cbr\u003E            sound.audio.loop = true;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            //tracer color defenition\u003Cbr\u003E            tracerColor = new Color(color_red, color_green, color_blue);\u003Cbr\u003E\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        public void Update()\u003Cbr\u003E        {\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            if (!HighLogic.LoadedSceneIsFlight) return;\u003Cbr\u003E\u003Cbr\u003E            if (vessel == null)\u003Cbr\u003E            {\u003Cbr\u003E                return;\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            if (this.part.temperature \u0026gt; this.part.maxTemp * 0.3F)\u003Cbr\u003E            {\u003Cbr\u003E                if (heatGauge == null)\u003Cbr\u003E                    heatGauge = InitHeatGauge(this.part);\u003Cbr\u003E                heatGauge.SetValue(this.part.temperature, this.part.maxTemp, this.part.maxTemp);\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E            else if (heatGauge != null)\u003Cbr\u003E            {\u003Cbr\u003E                this.part.stackIcon.ClearInfoBoxes();\u003Cbr\u003E                heatGauge = null;\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E            //sound playing additional information\u003Cbr\u003E            if ((Input.GetKeyDown(keyFire) == true || Input.GetKeyDown(keyFirealt)) \u0026amp;\u0026amp; (vessel.isActiveVessel == true)) sound.audio.Play();\u003Cbr\u003E            if ((Input.GetKeyUp(keyFire) == true || Input.GetKeyUp(keyFirealt)) \u0026amp;\u0026amp; (vessel.isActiveVessel == true)) sound.audio.Stop();\u003Cbr\u003E\u003Cbr\u003E            if ((Input.GetKey(keyFire) || Input.GetKey(keyFirealt)) \u0026amp;\u0026amp; (Time.time \u0026gt; nextFire) \u0026amp;\u0026amp; (vessel.isActiveVessel == true))\u003Cbr\u003E            {\u003Cbr\u003E                nextFire = Time.time \u002B fireRate;\u003Cbr\u003E\u003Cbr\u003E                GameObject newBullet = (GameObject)GameObject.Instantiate(Bullet);\u003Cbr\u003E\u003Cbr\u003E                this.part.transform.rigidbody.AddForce(-part.transform.up * BulletPower * recoilreductionfactor, ForceMode.Impulse);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E                Vector3d orbitalVelocity = vessel.orbit.GetVel();\u003Cbr\u003E                Vector3d airVelocity = vessel.mainBody.getRFrmVel(vessel.findWorldCenterOfMass());\u003Cbr\u003E                Vector3d relativeVelocity = ((orbitalVelocity - airVelocity) * lackofkrakensbanontrailrendererscompensation);\u003Cbr\u003E\u003Cbr\u003E                if (Krakensbane.GetFrameVelocityV3f() == Vector3.zero)\u003Cbr\u003E                {\u003Cbr\u003E                    newBullet.transform.position = (transform.Find(\u0022model/MuzzleLoc\u0022).position);\u003Cbr\u003E                }\u003Cbr\u003E                else\u003Cbr\u003E                {\u003Cbr\u003E                    newBullet.transform.position = (transform.Find(\u0022model/MuzzleLoc\u0022).position);\u003Cbr\u003E                }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E                if (ProjectileType == \u0022bullet\u0022)\u003Cbr\u003E                {\u003Cbr\u003E\u003Cbr\u003E                    newBullet.transform.rotation = part.transform.rotation;\u003Cbr\u003E                    newBullet.AddComponent\u0026lt;Rigidbody\u0026gt;();\u003Cbr\u003E                    newBullet.rigidbody.mass = BulletMass;\u003Cbr\u003E                    newBullet.rigidbody.drag = BulletDrag;\u003Cbr\u003E\u003Cbr\u003E                    Muzzlefx.particleEmitter.emit = true;\u003Cbr\u003E\u003Cbr\u003E                    newBullet.AddComponent\u0026lt;Hit\u0026gt;();\u003Cbr\u003E                    newBullet.AddComponent\u0026lt;Bulleteffects\u0026gt;();\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E/*  casing spawn code, disabled for now as current gunpod 3d models lack shell ejection ports and look weird with random shells spawning\u003Cbr\u003E                    GameObject newCasing = (GameObject)GameObject.Instantiate(Casing);\u003Cbr\u003E\u003Cbr\u003E                    newCasing.transform.position = transform.Find(\u0022model/CasingLoc\u0022).position;\u003Cbr\u003E                    newCasing.AddComponent\u0026lt;Rigidbody\u0026gt;();\u003Cbr\u003E                    newCasing.transform.rotation = UnityEngine.Random.rotation;\u003Cbr\u003E                    newCasing.rigidbody.velocity = (this.vessel.rigidbody.velocity);\u003Cbr\u003E                    newCasing.rigidbody.AddForce(part.transform.forward * 2, ForceMode.Impulse);\u003Cbr\u003E                    newCasing.rigidbody.drag = 0.9f;\u003Cbr\u003E                    newCasing.rigidbody.detectCollisions = false;\u003Cbr\u003E\u003Cbr\u003E                    if (CasingCollision == true)\u003Cbr\u003E                    {\u003Cbr\u003E                        newCasing.AddComponent\u0026lt;SphereCollider\u0026gt;();\u003Cbr\u003E                    }\u003Cbr\u003E                    newCasing.AddComponent\u0026lt;CasingCleanup\u0026gt;();\u003Cbr\u003E*/\u003Cbr\u003E\u003Cbr\u003E                    newBullet.rigidbody.velocity = this.vessel.rigidbody.velocity;\u003Cbr\u003E                    newBullet.rigidbody.AddForce(part.transform.up * BulletPower, ForceMode.Impulse);\u003Cbr\u003E                    newBullet.rigidbody.interpolation = RigidbodyInterpolation.Interpolate;\u003Cbr\u003E                    newBullet.AddComponent\u0026lt;physicalObject\u0026gt;();\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E                }\u003Cbr\u003E/* unused code leftover from DYJ\u0027s original, keeping incase rocket launcher pods are implemented\u003Cbr\u003E\u003Cbr\u003E           if (ProjectileType == \u0022rocket\u0022)\u003Cbr\u003E                {\u003Cbr\u003E\u003Cbr\u003E                    newBullet.transform.rotation = part.transform.rotation;\u003Cbr\u003E                    newBullet.AddComponent\u0026lt;Rigidbody\u0026gt;();\u003Cbr\u003E                    newBullet.AddComponent\u0026lt;physicalObject\u0026gt;();\u003Cbr\u003E                    newBullet.rigidbody.mass = BulletMass;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E                    newBullet.rigidbody.drag = BulletDrag;\u003Cbr\u003E                    //print(\u0022Bulletcreated\u0022);\u003Cbr\u003E\u003Cbr\u003E                    newBullet.AddComponent\u0026lt;ExplosiveHit\u0026gt;();\u003Cbr\u003E                    newBullet.AddComponent\u0026lt;Rocketeffects\u0026gt;();\u003Cbr\u003E\u003Cbr\u003E                    newBullet.rigidbody.velocity = this.vessel.rigidbody.velocity;\u003Cbr\u003E                    newBullet.rigidbody.AddForce(part.transform.up * BulletPower, ForceMode.Force);\u003Cbr\u003E                    newBullet.rigidbody.interpolation = RigidbodyInterpolation.Interpolate;\u003Cbr\u003E                }\u003Cbr\u003E*/\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E            else\u003Cbr\u003E            {\u003Cbr\u003E                Muzzlefx.particleEmitter.emit = false;\u003Cbr\u003E            }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            if ((Input.GetKey(keyFire) || Input.GetKey(keyFirealt)) \u0026amp;\u0026amp; (vessel.isActiveVessel == true))\u003Cbr\u003E            {\u003Cbr\u003E\u003Cbr\u003E                this.rigidbody.AddForce(part.transform.up * (-BulletPower * recoilreductionfactor), ForceMode.Force);\u003Cbr\u003E                part.temperature \u002B= heatProduction * TimeWarp.deltaTime;\u003Cbr\u003E\u003Cbr\u003E/*  unused currently, will be reused later once models get animated moving shell feed belting\u003Cbr\u003E            if (isGatling == true)\u003Cbr\u003E                {\u003Cbr\u003E                    Transform Barrels = base.transform.FindChild(\u0022model\u0022).FindChild(\u0022Base\u0022).FindChild(\u0022Barrelparent\u0022);\u003Cbr\u003E                    Barrels.transform.Rotate(Vector3.forward * (rotationSpeed * TimeWarp.deltaTime));\u003Cbr\u003E                }\u003Cbr\u003E */\u003Cbr\u003E            }\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E        static public VInfoBox InitHeatGauge(Part p)\u003Cbr\u003E        {\u003Cbr\u003E            VInfoBox v = p.stackIcon.DisplayInfo();\u003Cbr\u003E\u003Cbr\u003E            v.SetMsgBgColor(XKCDColors.DarkRed);\u003Cbr\u003E            v.SetMsgTextColor(XKCDColors.Orange);\u003Cbr\u003E            v.SetMessage(\u0022Overheat\u0022);\u003Cbr\u003E            v.SetProgressBarBgColor(XKCDColors.DarkRed);\u003Cbr\u003E            v.SetProgressBarColor(XKCDColors.Orange);\u003Cbr\u003E\u003Cbr\u003E            return v;\u003Cbr\u003E        }\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E    public class CasingCleanup : MonoBehaviour\u003Cbr\u003E    {\u003Cbr\u003E        public float casingTimeout = 1.5f;\u003Cbr\u003E\u003Cbr\u003E        void Awake()\u003Cbr\u003E        {\u003Cbr\u003E\u003Cbr\u003E            Destroy(this.gameObject, (casingTimeout));\u003Cbr\u003E\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    public class Hit : MonoBehaviour\u003Cbr\u003E    {\u003Cbr\u003E        public void OnCollisionEnter(Collision collision)\u003Cbr\u003E        {\u003Cbr\u003E            Destroy(this.gameObject, 0.1f);\u003Cbr\u003E            //print(\u0022Hit!\u0022);\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    public class ExplosiveHit : MonoBehaviour\u003Cbr\u003E    {\u003Cbr\u003E        public void OnCollisionEnter(Collision collision)\u003Cbr\u003E        {\u003Cbr\u003E            Destroy(this.gameObject, 0.1f);\u003Cbr\u003E            //print(\u0022Hit!\u0022);\u003Cbr\u003E\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    public class Bulleteffects : MonoBehaviour\u003Cbr\u003E    {\u003Cbr\u003E\u003Cbr\u003E        public float bulletTimeout = 5.0f;\u003Cbr\u003E        public Shader shader1 = Shader.Find(\u0022Transparent/VertexLit\u0022);\u003Cbr\u003E        public Color tracerColor;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E        void Awake()\u003Cbr\u003E        {\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            this.gameObject.AddComponent\u0026lt;TrailRenderer\u0026gt;();\u003Cbr\u003E            TrailRenderer trailRenderer = (TrailRenderer)this.gameObject.renderer;\u003Cbr\u003E            trailRenderer.time = 0.2f;\u003Cbr\u003E            trailRenderer.startWidth = 0.15f;\u003Cbr\u003E            trailRenderer.endWidth = 0.0f;\u003Cbr\u003E            trailRenderer.autodestruct = true;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            trailRenderer.material.shader = shader1;\u003Cbr\u003E            trailRenderer.material.SetColor(\u0022_Emission\u0022, tracerColor);\u003Cbr\u003E            trailRenderer.material.SetColor(\u0022_Color\u0022, tracerColor);\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            Destroy(this.gameObject, (bulletTimeout));\u003Cbr\u003E\u003Cbr\u003E            this.gameObject.AddComponent\u0026lt;Light\u0026gt;();\u003Cbr\u003E            this.gameObject.light.type = LightType.Point;\u003Cbr\u003E            this.gameObject.light.color = tracerColor;\u003Cbr\u003E            this.gameObject.light.range = 5f;\u003Cbr\u003E            this.gameObject.light.intensity = 0.5F;\u003Cbr\u003E            this.gameObject.light.renderMode = LightRenderMode.ForcePixel;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    public class Rocketeffects : MonoBehaviour //unused for now, will be needed once rocket pod implemented\u003Cbr\u003E    {\u003Cbr\u003E\u003Cbr\u003E        public float bulletTimeout = 5.0f;\u003Cbr\u003E        public GameObject Rocketfx;\u003Cbr\u003E        [KSPField]\u003Cbr\u003E        public float RocketPower = 10f;\u003Cbr\u003E\u003Cbr\u003E        void Awake()\u003Cbr\u003E        {\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            Rocketfx = (GameObject)GameObject.Instantiate(UnityEngine.Resources.Load(\u0022Effects/fx_exhaustFlame_blue\u0022));\u003Cbr\u003E            Rocketfx.particleEmitter.emit = true;\u003Cbr\u003E            Rocketfx.transform.parent = (transform.Find(\u0022model/FFarRocket\u0022));\u003Cbr\u003E            Rocketfx.transform.localPosition = new Vector3(0, -0.5F, 0);\u003Cbr\u003E            Rocketfx.particleEmitter.useWorldSpace = false;\u003Cbr\u003E            print(transform.Find(\u0022model/FFarRocket\u0022));\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            Destroy(this.gameObject, (bulletTimeout));\u003Cbr\u003E\u003Cbr\u003E            this.gameObject.AddComponent\u0026lt;Light\u0026gt;();\u003Cbr\u003E            this.gameObject.light.type = LightType.Point;\u003Cbr\u003E            this.gameObject.light.color = Color.red;\u003Cbr\u003E            this.gameObject.light.range = 25f;\u003Cbr\u003E            this.gameObject.light.intensity = 0.5F;\u003Cbr\u003E            this.gameObject.light.renderMode = LightRenderMode.ForcePixel;\u003Cbr\u003E        }\u003Cbr\u003E\u003Cbr\u003E    }\u003Cbr\u003E}\u003Cbr\u003E\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003Enow i know basic C# coding, but as to how im going to make variable initial velocity (need that since a 30mm snub nose cannon is obviously not the same as a 20mm high velocity long barrel gun), and also variable random spread (again, 30mm less accurate then 20mm in this case, so need to balance the 30mm firepower boost with spread)\u003C/p\u003E\n"},{"CreatedByName":"Faark","CreatedById":69775,"CreatedDateTime":"2013-12-19T14:48:23Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022BananaDealer\u0022 data-cite=\u0022BananaDealer\u0022\u003E\u003Cdiv\u003EHmm... Any idea where I can find the abilities a Kerbal has while on EVA? As in the file(s) that govern the EVA...\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere is a KerbalEVA partModule that configures a lot of stuff you might use. I don\u0027t think its properly saved when a kerbal enters a vessel, so you might have to work around that yourself. Haven\u0027t found any related CFGs, if that\u0027s what you were looking for.\u003C/p\u003E\n"},{"CreatedByName":"BananaDealer","CreatedById":60684,"CreatedDateTime":"2013-12-19T19:29:25Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Faark\u0022 data-cite=\u0022Faark\u0022\u003E\u003Cdiv\u003EThere is a KerbalEVA partModule that configures a lot of stuff you might use. I don\u0027t think its properly saved when a kerbal enters a vessel, so you might have to work around that yourself. Haven\u0027t found any related CFGs, if that\u0027s what you were looking for.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EAh, and where would one find said partModule, pray tell?\u003C/p\u003E\u003Cp\u003EAlso, regarding my ideas for the Cabana Corp. Data Drives- would it be possible to have the module for the Data Drives inherit from the ModuleScienceContainer?\u003C/p\u003E\u003Cp\u003EI\u0027m looking for it to have a function similar to the \u0022transmission boost\u0022 of the Space Lab as well as being able to retrieve data from experiments on the same vessel automatically -results will be stored on the Drive upon completion of the experiment, instead of on the equipment.\u003C/p\u003E\n"},{"CreatedByName":"SirJulio","CreatedById":95447,"CreatedDateTime":"2013-12-19T19:48:50Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022BananaDealer\u0022 data-cite=\u0022BananaDealer\u0022\u003E\u003Cdiv\u003EAh, and where would one find said partModule, pray tell?\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf you\u0027re using Visual studio. Just type KerbalEVA, right click and \u0022go to declaration\u0022.\u003C/p\u003E\n"},{"CreatedByName":"LaydeeDem","CreatedById":5984,"CreatedDateTime":"2013-12-19T23:57:01Z","Content":"\n\u003Cp\u003EEdit: disregard. Using GameDataBase to load textures now.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222013-12-20T01:33:20Z\u0022 title=\u002212/20/2013 01:33  AM\u0022 data-short=\u002210 yr\u0022\u003EDecember 20, 2013\u003C/time\u003E by Nutt007\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"TheBard","CreatedById":89636,"CreatedDateTime":"2013-12-20T01:09:32Z","Content":"\n\u003Cp\u003Eis there any way to get the part a module is attached to?\u003C/p\u003E\u003Cp\u003Ein my case... if I add a module to an engine using Module Manager, is there a way to access from the new module the methods and variables of the ModuleEngines of the same part?\u003C/p\u003E\n"},{"CreatedByName":"Faark","CreatedById":69775,"CreatedDateTime":"2013-12-20T02:19:08Z","Content":"\n\u003Cp\u003EAn loaded instance of PartModule has a part property. So check out [this.]part.FindModulesImplementing\u0026lt;ModuleEngines\u0026gt;()\u003C/p\u003E\n"},{"CreatedByName":"Damocles","CreatedById":92224,"CreatedDateTime":"2013-12-20T04:00:29Z","Content":"\n\u003Cp\u003EI started fumbling around with modding just today, so there might be an easy answer for this.\u003C/p\u003E\u003Cp\u003EI really would like to run my code after the player recovers a vessel. I don\u0027t care if it runs before the science calculations, or right after it. I tried using the OnInactive() method of a part, but it seems that\u0027s only gets called when the part blows up. I checked, and can\u0027t find anything recovery related neither around the vessel or the staging API. It probably wouldn\u0027t be impossible for me to work around this, and try to figure out if a recovery just happened when the player reaches the spacecenter view, but I\u0027d rather not do that if not necessary.\u003C/p\u003E\n"},{"CreatedByName":"SirJulio","CreatedById":95447,"CreatedDateTime":"2013-12-20T04:26:46Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Damocles\u0022 data-cite=\u0022Damocles\u0022\u003E\u003Cdiv\u003EI started fumbling around with modding just today, so there might be an easy answer for this.\u003Cp\u003EI really would like to run my code after the player recovers a vessel. I don\u0027t care if it runs before the science calculations, or right after it. I tried using the OnInactive() method of a part, but it seems that\u0027s only gets called when the part blows up. I checked, and can\u0027t find anything recovery related neither around the vessel or the staging API. It probably wouldn\u0027t be impossible for me to work around this, and try to figure out if a recovery just happened when the player reaches the spacecenter view, but I\u0027d rather not do that if not necessary.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThere is a big static class GameEvents full of good stuff. Try OnVesselRecovered and OnVesselRecoveryRequested. Good luck.\u003C/p\u003E\n"}]}