{"TopicId":117333,"ForumId":29,"TopicTitle":"Referencing other mod\u0026#039;s assemblies.","CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2015-07-31T18:30:08Z","PageNum":1,"Articles":[{"CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2015-07-31T18:30:08Z","Content":"\n\u003Cp\u003EI\u0027m trying to write an extension to another mod, but the only way I can reference the assembly and have it load is to place my dll in the same folder as the assembly I\u0027m referencing. Is there any way I can reference it without it being in the same folder? When I tried to put my plugin in a different folder, it threw an exception and didn\u0027t function properly.\u003C/p\u003E\n"},{"CreatedByName":"MrHappyFace","CreatedById":76365,"CreatedDateTime":"2015-07-31T18:42:40Z","Content":"\n\u003Cp\u003EOh, its that simple, thanks.\u003C/p\u003E\u003Cp\u003EI actually needed to reference Kopernicus.\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-07-31T19:24:14Z","Content":"\n\u003Cp\u003EOne point of order is that this method only works if the mod you are depending on is present. \u003C/p\u003E\u003Cp\u003EIf you want your mod to be able to load and run without the mod you are referencing being present, you need to look into using Reflection.\u003C/p\u003E\u003Cp\u003EWhile more complicated then the KSPAssemblyDependency method, it allows you mod to make calls to another mod, but still load if that mod is not present.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2015-07-31T21:04:04Z","Content":"\n\u003Cp\u003EThere\u0027s a third way, a core plugin and then some additional dlls that each require (and reference) the core and (the other mod0. I.e. how Mechjeb supports plugins that link MJ and FAR, MJ and KM_Gimbal, etc.\u003C/p\u003E\n"},{"CreatedByName":"Nertea","CreatedById":83952,"CreatedDateTime":"2015-08-04T07:52:45Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Diazo\u0022 data-cite=\u0022Diazo\u0022\u003E\u003Cdiv\u003EOne point of order is that this method only works if the mod you are depending on is present. \u003Cp\u003EIf you want your mod to be able to load and run without the mod you are referencing being present, you need to look into using Reflection.\u003C/p\u003E\u003Cp\u003EWhile more complicated then the KSPAssemblyDependency method, it allows you mod to make calls to another mod, but still load if that mod is not present.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EDiazo, might you be able to point me to an example of reflection being used? Don\u0027t quite understand the C# documentation with respect to how I would use it to say, grab variables from other partmodules.\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-08-04T08:12:00Z","Content":"\n\u003Cp\u003EGetting a \u003Ca href=\u0022https://github.com/Crzyrndm/B9-PWings-Fork/blob/master/B9%20PWings%20Fork/WingProcedural.cs#L2011\u0022 rel=\u0022external nofollow\u0022\u003Efield reference\u003C/a\u003E (in this case, it gets cached), and then \u003Ca href=\u0022https://github.com/Crzyrndm/B9-PWings-Fork/blob/master/B9%20PWings%20Fork/WingProcedural.cs#L2047\u0022 rel=\u0022external nofollow\u0022\u003Esetting its value\u003C/a\u003E. Another example. Get the \u003Ca href=\u0022https://github.com/Crzyrndm/DynamicControls/blob/master/Dynamic%20Controls/ModuleDynamicDeflection.cs#L85\u0022 rel=\u0022external nofollow\u0022\u003Efield reference\u003C/a\u003E (cached again), \u003Ca href=\u0022https://github.com/Crzyrndm/DynamicControls/blob/master/Dynamic%20Controls/ModuleDynamicDeflection.cs#L111\u0022 rel=\u0022external nofollow\u0022\u003Egetting the value\u003C/a\u003E, \u003Ca href=\u0022https://github.com/Crzyrndm/DynamicControls/blob/master/Dynamic%20Controls/ModuleDynamicDeflection.cs#L134\u0022 rel=\u0022external nofollow\u0022\u003Esetting the value\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003EMethods are similar. Get the \u003Ca href=\u0022https://github.com/Crzyrndm/B9-PWings-Fork/blob/master/B9%20PWings%20Fork/WingProcedural.cs#L2039\u0022 rel=\u0022external nofollow\u0022\u003Emethod reference\u003C/a\u003E, and then \u003Ca href=\u0022https://github.com/Crzyrndm/B9-PWings-Fork/blob/master/B9%20PWings%20Fork/WingProcedural.cs#L2061\u0022 rel=\u0022external nofollow\u0022\u003Einvoke it\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003ENote: These are all aimed at FAR\u0027s wing or control surface modules\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-08-04T08:14:56Z\u0022 title=\u002208/04/2015 08:14  AM\u0022 data-short=\u00228 yr\u0022\u003EAugust 4, 2015\u003C/time\u003E by Crzyrndm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-08-04T14:08:44Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Nertea\u0022 data-cite=\u0022Nertea\u0022\u003E\u003Cdiv\u003EDiazo, might you be able to point me to an example of reflection being used? Don\u0027t quite understand the C# documentation with respect to how I would use it to say, grab variables from other partmodules.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf you are looking at getting and setting KSPFields, Squad has done all the heavy lifting already.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Ebool valueBool = (bool)this.part.Modules[\u0022TheirPartModule\u0022].Fields.GetValue(\u0022theirBool\u0022); //assumes you are in a partModule on the same part as the partModule you want to reference, finds the first partModule named \u0022TheirPartModule\u0022 and returns the \u0022theirBool\u0022 value.\u003Cbr\u003Efloat valueFloat = (float)this.part.Modules[\u0022TheirPartModule\u0022].Fields.GetValue(\u0022theirFloat\u0022); //Finds the first partModule named \u0022TheirPartModule\u0022 and returns the \u0022theirFloat\u0022 value.\u003Cbr\u003E\u003Cbr\u003Ethis.part.Modules[\u0022TheirPartModule\u0022].Fields.SetValue(\u0022theirBool\u0022, true); //sets theirBool true\u003Cbr\u003Ethis.part.Modules[\u0022TheirPartModule\u0022].Fields.GetValue(\u0022theirFloat\u0022, 1.5f); //sets theirFloat to 1.5\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://github.com/SirDiazo/ModActions/blob/master/ModActions/Execute.cs#L24\u0022 rel=\u0022external nofollow\u0022\u003EI make extensive use of this method here.\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EIf you want to get/set a value that is not a KSPField, or execute methods in another partmodule, you have to do the reflection calls your self.\u003C/p\u003E\u003Cp\u003EI use reflection extensively in my AGX mod, the code in AGX to receive reflection calls \u003Ca href=\u0022https://github.com/SirDiazo/AGExt/blob/master/AGExt/External.cs\u0022 rel=\u0022external nofollow\u0022\u003E is found here in the External.cs file\u003C/a\u003E and the code needed in the other mod to make reflection calls \u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/74199-Action-Groups-Extended-Development-Thread-and-External-Interface\u0022 rel=\u0022external nofollow\u0022\u003E can be found here.\u003C/a\u003E (Ignore the warning about being out of date, just make sure you are calling the correct method name as listed in External.cs.) Note that this example code makes extensive use of the \u0022static\u0022 keyword to simply things, if you are trying to get/set/run a method in an instance of a class, things work a bit differently.\u003C/p\u003E\u003Cp\u003EHope that helps, \u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"wrcsubers","CreatedById":148899,"CreatedDateTime":"2015-08-18T11:08:07Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Crzyrndm\u0022 data-cite=\u0022Crzyrndm\u0022\u003E\u003Cdiv\u003EGetting a \u003Ca href=\u0022https://github.com/Crzyrndm/B9-PWings-Fork/blob/master/B9%20PWings%20Fork/WingProcedural.cs#L2011\u0022 rel=\u0022external nofollow\u0022\u003Efield reference\u003C/a\u003E (in this case, it gets cached), and then \u003Ca href=\u0022https://github.com/Crzyrndm/B9-PWings-Fork/blob/master/B9%20PWings%20Fork/WingProcedural.cs#L2047\u0022 rel=\u0022external nofollow\u0022\u003Esetting its value\u003C/a\u003E. Another example. Get the \u003Ca href=\u0022https://github.com/Crzyrndm/DynamicControls/blob/master/Dynamic%20Controls/ModuleDynamicDeflection.cs#L85\u0022 rel=\u0022external nofollow\u0022\u003Efield reference\u003C/a\u003E (cached again), \u003Ca href=\u0022https://github.com/Crzyrndm/DynamicControls/blob/master/Dynamic%20Controls/ModuleDynamicDeflection.cs#L111\u0022 rel=\u0022external nofollow\u0022\u003Egetting the value\u003C/a\u003E, \u003Ca href=\u0022https://github.com/Crzyrndm/DynamicControls/blob/master/Dynamic%20Controls/ModuleDynamicDeflection.cs#L134\u0022 rel=\u0022external nofollow\u0022\u003Esetting the value\u003C/a\u003E.\u003Cp\u003EMethods are similar. Get the \u003Ca href=\u0022https://github.com/Crzyrndm/B9-PWings-Fork/blob/master/B9%20PWings%20Fork/WingProcedural.cs#L2039\u0022 rel=\u0022external nofollow\u0022\u003Emethod reference\u003C/a\u003E, and then \u003Ca href=\u0022https://github.com/Crzyrndm/B9-PWings-Fork/blob/master/B9%20PWings%20Fork/WingProcedural.cs#L2061\u0022 rel=\u0022external nofollow\u0022\u003Einvoke it\u003C/a\u003E.\u003C/p\u003E\u003Cp\u003ENote: These are all aimed at FAR\u0027s wing or control surface modules\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EThanks for this! Really helped me with integrating FAR Support for my mod =)\u003C/p\u003E\n"}]}