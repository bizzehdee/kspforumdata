{"TopicId":10059,"ForumId":34,"TopicTitle":"Numerical Fuel Gauges (unfinished)","CreatedByName":"The_Duck","CreatedById":1156,"CreatedDateTime":"2012-05-01T01:17:50Z","PageNum":1,"Articles":[{"CreatedByName":"The_Duck","CreatedById":1156,"CreatedDateTime":"2012-05-01T01:17:50Z","Content":"\n\u003Cp\u003EI was messing around with this at the request of semininja but I didn\\\u0027t quite get it working completely. If anyone wants to grab this code and run with it, feel free; I\\\u0027m not working on it at the moment.\u003C/p\u003E\u003Cp\u003EThis plugin provides an alternate command pod. When you use it in your ship it will add a numerical readout to the info boxes of fuel tanks:\u003C/p\u003E\u003Cp\u003E\u003Cimg src=\u0022http://i.imgur.com/JMpXO.png\u0022 alt=\u0022JMpXO.png\u0022\u003E\u003C/p\u003E\u003Cp\u003EThe only problem is that it currently disrupts icon grouping: none of the fuel tank icons will group together, even when they aren\\\u0027t in use or are empty. I\\\u0027m not sure why this is; I haven\\\u0027t figured out how exactly the icon grouping is controlled.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022http://www./download.php?fwziyq3813x41gx\u0022 rel=\u0022external nofollow\u0022\u003EDownload here\u003C/a\u003E and unzip in your main KSP folder to install. The source is included, but I\\\u0027ll paste it here for easy viewing since it\\\u0027s short.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eusing System;\u003Cbr\u003Eusing System.Collections.Generic;\u003Cbr\u003Eusing System.Linq;\u003Cbr\u003Eusing System.Text;\u003Cbr\u003E\u003Cbr\u003Epublic class ImprovedFuelGaugePod : CommandPod\u003Cbr\u003E{\u003Cbr\u003E  Dictionary\u0026lt;FuelTank, VInfoBox\u0026gt; infoBoxes = new Dictionary\u0026lt;FuelTank, VInfoBox\u0026gt;();\u003Cbr\u003E\u003Cbr\u003E  protected override void onFlightStart()\u003Cbr\u003E  {\u003Cbr\u003E    foreach (Part p in this.vessel.parts)\u003Cbr\u003E    {\u003Cbr\u003E      if (p is FuelTank)\u003Cbr\u003E      {\u003Cbr\u003E        //clearing and recreating the info box seems to trick FuelTank into using our info box\u003Cbr\u003E        //and this way we get a reference to the info box:\u003Cbr\u003E        p.stackIcon.ClearInfoBoxes();\u003Cbr\u003E        infoBoxes[(FuelTank)p] = p.stackIcon.DisplayInfo();\u003Cbr\u003E      }\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    base.onFlightStart();\u003Cbr\u003E  }\u003Cbr\u003E\u003Cbr\u003E  protected override void onPartFixedUpdate()\u003Cbr\u003E  {\u003Cbr\u003E    foreach (KeyValuePair\u0026lt;FuelTank, VInfoBox\u0026gt; pair in infoBoxes)\u003Cbr\u003E    {\u003Cbr\u003E      pair.Value.SetMessage(\u0027Fuel: \u0027 \u002B (int)pair.Key.fuel);\u003Cbr\u003E    }\u003Cbr\u003E\u003Cbr\u003E    base.onPartFixedUpdate();\u003Cbr\u003E  }\u003Cbr\u003E}\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n"},{"CreatedByName":"semininja","CreatedById":3837,"CreatedDateTime":"2012-05-01T04:24:38Z","Content":"\n\u003Cp\u003EIdeas discussed so far: clearing the infoboxes only when the engine starts to draw fuel from a tank, clearing again when empty (to see if infoboxes will revert, allowing stacking again).\u003C/p\u003E\n"},{"CreatedByName":"OtherDalfite","CreatedById":8317,"CreatedDateTime":"2012-05-01T04:27:43Z","Content":"\n\u003Cp\u003EThis looks pretty nice! Could there by chance be a guage to measure how fast your engine is consuming the fuel? \u003C/p\u003E\n"},{"CreatedByName":"semininja","CreatedById":3837,"CreatedDateTime":"2012-05-01T04:29:41Z","Content":"\n\u003Cp\u003EI expect that probably wouldn\\\u0027t be too difficult, although I\\\u0027m not enough of a coder to even start to tell you how.\u003C/p\u003E\u003Cp\u003EAlso, here\\\u0027s a part that does this, which you can add to any rocket you\\\u0027ve already built.\u003C/p\u003E\u003Cp\u003ESource is included. Model credit to NovaSilisko, code credit to The_Duck.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://dl.dropbox.com/u/46530390/ImprovedFuelGauges.zip\u0022 rel=\u0022external nofollow\u0022\u003Ehttp://dl.dropbox.com/u/46530390/ImprovedFuelGauges.zip\u003C/a\u003E\u003C/p\u003E\n"},{"CreatedByName":"OtherDalfite","CreatedById":8317,"CreatedDateTime":"2012-05-01T04:30:59Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022semininja\u0022 data-cite=\u0022semininja\u0022\u003E\u003Cdiv\u003E\u003Cp\u003EI expect that probably wouldn\\\u0027t be too difficult, although I\\\u0027m not enough of a coder to even start to tell you how.\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003ESame goes for me. I imagine it may be a little tough to determine it by throttle. Anyways, just a question/suggestion. \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"VincentMcConnell","CreatedById":14492,"CreatedDateTime":"2012-05-04T00:17:23Z","Content":"\n\u003Cp\u003EHow about fuel percentage? That\\\u0027s kind of more important than a number that is going to be different out of the total for each tank...\u003C/p\u003E\n"},{"CreatedByName":"semininja","CreatedById":3837,"CreatedDateTime":"2012-05-05T01:16:13Z","Content":"\n\u003Cp\u003EThe way I see it, the fuel percentage isn\\\u0027t really the important part, and it\\\u0027s pretty easy to estimate using the existing fuel bar in the gauge. \u003C/p\u003E\n"},{"CreatedByName":"Cepheus","CreatedById":10683,"CreatedDateTime":"2012-05-05T04:27:00Z","Content":"\n\u003Cp\u003ELooks pretty neat. Does it work with solids, or only with liquid tanks?\u003C/p\u003E\n"},{"CreatedByName":"semininja","CreatedById":3837,"CreatedDateTime":"2012-05-05T21:19:51Z","Content":"\n\u003Cp\u003EJudging by the code, it\\\u0027s currently set up to work with liquid tanks. It could probably be changed so that it also works with solid boosters, though.\u003C/p\u003E\n"}]}