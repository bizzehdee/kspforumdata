{"TopicId":150679,"ForumId":29,"TopicTitle":"(SOLVED) Part field value in editor","CreatedByName":"jim1240","CreatedById":170701,"CreatedDateTime":"2016-10-23T14:24:36Z","PageNum":1,"Articles":[{"CreatedByName":"jim1240","CreatedById":170701,"CreatedDateTime":"2016-10-23T14:24:36Z","Content":"\n\u003Cp\u003E\nHi everyone.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m trying to retrieve a value of a part, used in an edited ship\n\u003C/p\u003E\n\u003Cp\u003E\nFor example, i\u0027m trying here to retrieve CURRENT \u0027deployAltitude\u0027 value of the \u0027parachuteSingle\u0027 part, used in the currently edited ship (\u003Cabbr title=\u0022Vehicle Assembly Building\u0022\u003EVAB\u003C/abbr\u003E):\n\u003C/p\u003E\n\u003Cp\u003E\nNotes: GetVesselPart and DebugFunctions.SendLog are working.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Estatic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E string \u003C/span\u003E\u003Cspan\u003EGetAttribute\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estring partName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E,\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E string parameterName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan\u003EPart\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E part \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EGetVesselPart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EpartName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    string value\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    foreach \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EPartModule\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E module in part\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EModules\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        foreach \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EBaseField\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E field in module\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EFields\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan\u003EDebugFunctions\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ESendLog\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Checking field \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E field\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ename\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E field\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Ename \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E parameterName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                value \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Estring\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Efield\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EGetValue\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EparameterName\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                \u003C/span\u003E\u003Cspan\u003EDebugFunctions\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ESendLog\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Parameter found : actual string -\u0026gt; \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E value\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E value\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan\u003EDebugFunctions\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ESendLog\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Parameter \u0022\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E parameterName \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u002B\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022 NOT found\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E null\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nUsed values in this example:\n\u003C/p\u003E\n\u003Cp\u003E\npartName = \u0022parachuteSingle\u0022\n\u003C/p\u003E\n\u003Cp\u003E\nparameterName = \u0022deployAltitude\u0022\n\u003C/p\u003E\n\u003Cp\u003E\nHere\u0027s produced log:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E[LOG 16:03:29.929] [7]Checking field invertCanopy.\n[LOG 16:03:29.929] [7]Checking field semiDeployedAnimation.\n[LOG 16:03:29.930] [7]Checking field fullyDeployedAnimation.\n[LOG 16:03:29.930] [7]Checking field autoCutSpeed.\n[LOG 16:03:29.930] [7]Checking field rotationSpeedDPS.\n[LOG 16:03:29.931] [7]Checking field capName.\n[LOG 16:03:29.931] [7]Checking field canopyName.\n[LOG 16:03:29.931] [7]Checking field persistentState.\n[LOG 16:03:29.932] [7]Checking field stowedDrag.\n[LOG 16:03:29.932] [7]Checking field semiDeployedDrag.\n[LOG 16:03:29.932] [7]Checking field fullyDeployedDrag.\n[LOG 16:03:29.933] [7]Checking field animTime.\n[LOG 16:03:29.933] [7]Checking field clampMinAirPressure.\n[LOG 16:03:29.933] [7]Checking field minAirPressureToOpen.\n[LOG 16:03:29.934] [7]Checking field deployAltitude.\n[ERR 16:03:29.934] Value could not be retrieved from field \u0027deployAltitude\u0027\n\n[LOG 16:03:29.934] [7]Parameter found : actual string -\u0026gt; .\n[EXC 16:03:29.935] ArgumentNullException: Argument cannot be null.\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nI can\u0027t find the good method to get value of this parameter.\n\u003C/p\u003E\n\u003Cp\u003E\nI tried field.GetStringValue without success.\n\u003C/p\u003E\n\u003Cp\u003E\nHave you any idea how to do this?\n\u003C/p\u003E\n\u003Cp\u003E\nThank you\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-10-23T20:01:03Z\u0022 title=\u002210/23/2016 08:01  PM\u0022 data-short=\u00227 yr\u0022\u003EOctober 23, 2016\u003C/time\u003E by jim1240\u003C/strong\u003E\n\u003Cbr\u003ESolved topic\n\u003C/span\u003E\n"},{"CreatedByName":"jim1240","CreatedById":170701,"CreatedDateTime":"2016-10-23T20:00:11Z","Content":"\n\u003Cp\u003E\nNevermind, just found the right method in this post:\n\u003C/p\u003E\n\u003Ciframe data-embedcontent=\u0022\u0022 frameborder=\u00220\u0022 src=\u0022https://forum.kerbalspaceprogram.com/index.php?/topic/88067-reading-cfg-fields/\u0026amp;do=embed\u0022\u003E\u003C/iframe\u003E\n\u003Cp\u003E\n(cast) module.Fields.GetValue(parameterName)\n\u003C/p\u003E\n\u003Cp\u003E\nwith cast, desired value format.\n\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2016-10-24T09:13:24Z","Content":"\n\u003Cp\u003E\nWhy do you use reflection tricks (BaseField is more or less that) to get values of public field ?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-10-24T09:14:05Z\u0022 title=\u002210/24/2016 09:14  AM\u0022 data-short=\u00227 yr\u0022\u003EOctober 24, 2016\u003C/time\u003E by sarbian\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"jim1240","CreatedById":170701,"CreatedDateTime":"2016-10-24T22:03:05Z","Content":"\n\u003Cp\u003E\nI can\u0027t find another method to get actual parameter of a part in editor.\n\u003C/p\u003E\n\u003Cp\u003E\nThis method is working but i\u0027m thinking it\u0027s actually a bit too complicated.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you\u0027ve a simpler way to do this, i\u0027ll use it with enthusiasm.\n\u003C/p\u003E\n\u003Cp\u003E\nI tried:\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nPart.partInfo (not actual parameter)\n\u003C/li\u003E\n\u003Cli\u003E\nPart.internalModel.internalConfig (internal config)\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nActual code:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Epublic static string GetAttribute(string partName, string parameterName) {\n    Part part = VesselFunctions.GetVesselPart(partName);\n    string value;\n    foreach ( PartModule module in part.Modules ) {\n    \tvalue = module.Fields.GetValue(parameterName).ToString();\n        DebugFunctions.SendLog(\u0022Parameter \u0022 \u002B parameterName \u002B \u0022 found: \u0022 \u002B value);\n        return value;\n    }\n    DebugFunctions.SendLog(\u0022Parameter \u0022 \u002B parameterName \u002B \u0022 NOT found\u0022);\n\treturn null;\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThanks you for answer\n\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2016-10-25T07:41:48Z","Content":"\n\u003Cp\u003E\nIf you\u0027re just querying stock modules or other classes you have a hard reference to\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\u003Cspan\u003EModuleParachute\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E parachute \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E part\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EModules\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EGetModule\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026lt;\u003C/span\u003E\u003Cspan\u003EModuleParachute\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E\u0026gt;();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Eparachute \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E null\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n  \u003C/span\u003E\u003Cspan\u003EDebug\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ELog\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E$\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022parachute deployment altitude is: {parachute.deployAltitude}\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nas for getting a Part reference from AvailablePart (the thing you normally have in the editor), you want partPrefab\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-10-25T07:42:00Z\u0022 title=\u002210/25/2016 07:42  AM\u0022 data-short=\u00227 yr\u0022\u003EOctober 25, 2016\u003C/time\u003E by Crzyrndm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"jim1240","CreatedById":170701,"CreatedDateTime":"2016-10-25T11:08:12Z","Content":"\n\u003Cp\u003E\nIt\u0027s for stock modules for the moment, but it will be also for custom modules and parameters. So effectively, i can give module name to the function for stock parts, it will be simpler. I\u0027ll try partPrefab too, maybe interesting.\n\u003C/p\u003E\n\u003Cp\u003E\nThanks you\n\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2016-10-25T14:28:12Z","Content":"\n\u003Cp\u003E\nThe way I\u0027ve started doing this is using the Dictionary function of the Fields list. I suspect it is simply passing to GetValue and SetValue in the background anyway, but it seems to be how Squad set things up for us. Note this is essentially what was posted already, just compressed down into one line.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EPart.Modules[\u0022MyPartModule\u0022].Fields.SetValue(\u0022MyField\u0022, true);\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis finds the first partModule named \u0022MyPartModule\u0022 on the part and sets the value of \u0022MyField\u0022 to true. The hard limitation is that this will only work if there is only one module of that type on the part, it can\u0027t handle multiple modules.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you have multiple modules of the same type, I do the following, again pretty much the same as posted already but the best way I\u0027ve found to handle things:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Eforeach (PartModule pm2 in part.Modules)\n{\n if (pm2.moduleName == \u0022FARControllableSurface\u0022)\n {\n   float curVal = (float)pm2.Fields.GetValue(\u0022yawaxis\u0022);\n   sp = curVal \u002B sp;\n   pm2.Fields.SetValue(\u0022yawaxis\u0022, sp);\n }\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nHere I am interfacing with \u003Cabbr title=\u0022Ferram Aerospace Research (mod)\u0022\u003EFAR\u003C/abbr\u003E and changing the Yaw axis limit on the control surface by adding a float value \u0022sp\u0022 to the current yawaxis limit.\n\u003C/p\u003E\n\u003Cp\u003E\nIn neither case do I need a reference set, these methods work for both stock and other mods.\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-10-25T14:33:09Z\u0022 title=\u002210/25/2016 02:33  PM\u0022 data-short=\u00227 yr\u0022\u003EOctober 25, 2016\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"jim1240","CreatedById":170701,"CreatedDateTime":"2016-10-25T15:55:46Z","Content":"\n\u003Cp\u003E\nIt seems effectively more efficient to pass module name to the function, to avoid searching a parameter in all modules of a part.\n\u003C/p\u003E\n\u003Cp\u003E\nThank you everyone\n\u003C/p\u003E\n"}]}