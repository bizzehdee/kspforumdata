{"TopicId":113689,"ForumId":29,"TopicTitle":"Vessel Modules Discussion","CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-06-22T09:17:07Z","PageNum":1,"Articles":[{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-06-22T09:17:07Z","Content":"\n\u003Cp\u003EI haven\u0027t seen any proper discussion of this (very useful) new type of plugin that was introduced with KSP 1.0 and feel they need a bit more attention. They\u0027re not hugely different from other plugin types but the sheer lack of information slows things down so hopefully this will be helpful \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003ECompared the plugin types\u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003E\u003Cstrong\u003EPart Module\u003C/strong\u003E: One set of modules per part. Number of modules for a part is set in part configuration file. Active during initial loading (do try not to...), editor, and flight scenes. Save persistence of variables using the KSPField attribute with the option isPersistant set true \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cstrong\u003EKSP Addon\u003C/strong\u003E: Single instance. Only one instance of the plugin object running, limited to either a single scene or all scenes \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cstrong\u003EScenario Module\u003C/strong\u003E: Single instance per save, used for storing/retrieving persistent data that isn\u0027t associated with a part (? I haven\u0027t used this one so I don\u0027t know much about it) \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E\u003Cstrong\u003EVessel Module\u003C/strong\u003E: One instance per physics enabled vessel object. Only active in the flight scene. No direct access to the persistence file. \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E Vessel Modules are closer to the KSP Addon style plugin in my opinion, the main difference being that it\u0027s one instance per loaded vessel rather than per scene. Otherwise VesselModule also inherits directly from MonoBehaviour and has no behaviour of its own other than the startup mechanism.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EUsing Vessel Modules\u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EInherit from VesselModule to have your class added to every vessel as it becomes physics enabled\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eclass DerivedVesselModule : VesselModule\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EClasses inheriting from VesselModule have access to all of \u003Ca href=\u0022http://docs.unity3d.com/Manual/ExecutionOrder.html\u0022 rel=\u0022external nofollow\u0022\u003EMonoBehaviour\u003C/a\u003E\u0027s functions (Awake, Start, OnDestroy, OnGUI, Update, FixedUpdate, etc.)\u003C/p\u003E\u003Cp\u003EGetting a vessel module object from a vessel:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EvesselObject.GetComponents\u0026lt;VesselModule\u0026gt;(); // a list of all classes inheriting from VesselModule attached to the vessel\u003Cbr\u003EvesselObject.GetComponent\u0026lt;DerivedVesselModule\u0026gt;(); // the instance of your derived class attached to the vessel\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EGetting the vessel object from the VesselModule\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003EvesselModule.GetComponent\u0026lt;Vessel\u0026gt;();\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003ETips and notes on using Vessel Modules\u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EDon\u0027t keep a reference to the vessel module in another class unless you can guarantee the other class will be destroyed first or will not attemt to call any function after the module is destroyed (ie. not part modules or KSP addons). Instead keep a \u003Ca href=\u0022https://github.com/ferram4/Ferram-Aerospace-Research/blob/master/FerramAerospaceResearch/FARGUI/FARFlightGUI/FlightGUI.cs#L67\u0022 rel=\u0022external nofollow\u0022\u003Estatic dictionary\u003C/a\u003E of the vessels and their associated vessel modules in the class deriving from VesselModule (credit to \u003Cstrong\u003Eferram4\u003C/strong\u003E) \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EIf your VesselModule is tracking the output of some part modules, you can tell when a part module separated from the original vessel because it will show up in a \u003Ca href=\u0022https://github.com/Crzyrndm/SymmetricFlameout/blob/master/SymmetricFlameout/VesselFlowManager.cs#L32-L40\u0022 rel=\u0022external nofollow\u0022\u003Enew vessel module\u003C/a\u003E. Use this to make sure the parts are attributed to the correct vessel instead of responding to various GameEvents or watching part.vessel for changes. \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EThe first frame of Fixed Update when switching to the scene is called before the Flight scene setup completes. Leads to lots of nullrefs/NaN/other Kracken bait \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003E...? \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003E\u003Cspan style=\u0022font-size:12px;\u0022\u003EPlugins using VesselModules\u003C/span\u003E\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EExamples are always helpful \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_wink.gif\u0022 alt=\u0022;)\u0022\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cul\u003E\u003Cli\u003EModular Flight Integrator: \u003Ca href=\u0022https://github.com/sarbian/ModularFlightIntegrator/blob/master/ModularFlightIntegrator.cs\u0022 rel=\u0022external nofollow\u0022\u003Elink\u003C/a\u003E \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EFerram Aerospace Research: \u003Ca href=\u0022https://github.com/ferram4/Ferram-Aerospace-Research/blob/master/FerramAerospaceResearch/FARGUI/FARFlightGUI/FlightGUI.cs\u0022 rel=\u0022external nofollow\u0022\u003Elink1\u003C/a\u003E \u003Ca href=\u0022https://github.com/ferram4/Ferram-Aerospace-Research/blob/master/FerramAerospaceResearch/FARAeroComponents/FARVesselAero.cs\u0022 rel=\u0022external nofollow\u0022\u003Elink2\u003C/a\u003E \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EPilot Assistant: \u003Ca href=\u0022https://github.com/Crzyrndm/Pilot-Assistant/blob/master/PilotAssistant/FlightModules/AsstVesselModule.cs\u0022 rel=\u0022external nofollow\u0022\u003Elink\u003C/a\u003E \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ESymmetric Flameout: \u003Ca href=\u0022https://github.com/Crzyrndm/SymmetricFlameout/blob/master/SymmetricFlameout/VesselFlowManager.cs\u0022 rel=\u0022external nofollow\u0022\u003Elink\u003C/a\u003E \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EReal Fuels (ullage branch): \u003Ca href=\u0022https://github.com/NathanKell/ModularFuelSystem/blob/Ullage/Source/Ullage/UllageModule.cs\u0022 rel=\u0022external nofollow\u0022\u003Elink\u003C/a\u003E\u003Cbr\u003E\u003C/li\u003E\u003Cli\u003ESolver Engines: \u003Ca href=\u0022https://github.com/KSP-RO/SolverEngines/blob/master/SolverEngines/FlightSys.cs\u0022 rel=\u0022external nofollow\u0022\u003Elink\u003C/a\u003E \u003Cbr\u003E\u003C/li\u003E\u003Cli\u003EOthers...? \u003Cbr\u003E\u003C/li\u003E\u003C/ul\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-06-23T06:03:06Z\u0022 title=\u002206/23/2015 06:03  AM\u0022 data-short=\u00229 yr\u0022\u003EJune 23, 2015\u003C/time\u003E by Crzyrndm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-06-22T15:45:04Z","Content":"\n\u003Cp\u003EA couple things to add to this:\u003C/p\u003E\u003Cp\u003EVesselModules inherit MonoBehavior so some of the familiar methods are available.\u003C/p\u003E\u003Cp\u003EKnown to work: Awake(), Start(), OnDestroy(), OnGUI(), Update(), FixedUpdate()\u003C/p\u003E\u003Cp\u003EKnown to NOT work: OnSave(), OnLoad()\u003C/p\u003E\u003Cp\u003EThis is the biggest limitation of VesselModule, there is no persistence with the .sfs file, you have to save/load data manually or hook into a PartModule to persist data.\u003C/p\u003E\u003Cp\u003ETo Use:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003Eclass DerivedVesselModule : VesselModule\u003Cbr\u003E{\u003Cbr\u003E//stuff here\u003Cbr\u003E}\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EKSP will do the rest and add a single instance of your DerivedVesselModule class to every vessel in the game when said vessel is loaded into the flight scene.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"NathanKell","CreatedById":75006,"CreatedDateTime":"2015-06-22T21:12:55Z","Content":"\n\u003Cp\u003ERealFuels uses it (in source) for ullage.\u003C/p\u003E\n"},{"CreatedByName":"TaranisElsu","CreatedById":57742,"CreatedDateTime":"2015-06-26T21:32:21Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022Diazo\u0022 data-cite=\u0022Diazo\u0022\u003E\u003Cdiv\u003Ethere is no persistence with the .sfs file, you have to save/load data manually or hook into a PartModule to persist data.\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EIf that is true, then this is much less useful to me \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-06-26T22:32:53Z","Content":"\n\u003Cblockquote data-ipsquote=\u0022\u0022 class=\u0022ipsQuote\u0022 data-ipsquote-username=\u0022TaranisElsu\u0022 data-cite=\u0022TaranisElsu\u0022\u003E\u003Cdiv\u003EIf that is true, then this is much less useful to me \u003Cimg src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_sad.gif\u0022 alt=\u0022:(\u0022\u003E\u003C/div\u003E\u003C/blockquote\u003E\u003Cp\u003EI know, I\u0027ve been trying to find a way around this myself.\u003C/p\u003E\u003Cp\u003EThe best idea I\u0027ve been able to come up with so far is to hook into the GameEvents.Load/Save methods to read/write data.\u003C/p\u003E\u003Cp\u003EI have not tested this, but as I understand it those events pass a configNode that ties into the save file, so if you added a master node \u0022MyModNode\u0022, then each vessel as a sub-node (probably with Vessel.ID), I think that would work?\u003C/p\u003E\u003Cp\u003ENote I have not tested this in any way, one of the issues I have already thought of is how to tell the difference between a newly spawned vessel on the pad, and a vessel that has just undocked? In both cases the vessel will not have an entry in the MyModNode confignode so I\u0027m not sure how to handle that yet.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\u003Cp\u003Eedit: I just had a thought on how to do this, I should have something to post tomorrow that would make this work.\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-06-26T23:12:50Z\u0022 title=\u002206/26/2015 11:12  PM\u0022 data-short=\u00229 yr\u0022\u003EJune 26, 2015\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2015-06-28T02:56:42Z","Content":"\n\u003Cp\u003EAlright, my brainwave produced something.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://forum.kerbalspaceprogram.com/threads/127023-1-0-4-VesselModule-class-data-persistence?p=2046583#post2046583\u0022 rel=\u0022external nofollow\u0022\u003EFramework for Save/Load of data in a VesselModule.\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EHopefully this works and we can go ahead with this.\u003C/p\u003E\u003Cp\u003ED.\u003C/p\u003E\n"},{"CreatedByName":"AaronLS","CreatedById":142846,"CreatedDateTime":"2015-07-03T22:56:47Z","Content":"\n\u003Cp\u003ENice list, I was trying to figure out what type of mod I needed to modify recovery values, and this list really helped. It\u0027d be nice to update with a short mention of how each is accomplished, i.e. inheriting from :PartModule or \u0022a KSP Addon is simply a class marked with the attribute [KSPAddon(...)] and inherits from MonoBehavior. Note even though this doesn\u0027t inherit from anything KSP specific, there\u0027s static classes such as GameEvents that expose KSP specific hooks into the game.\u003C/p\u003E\u003Cp\u003EThis is a good example of a KSPAddon: \u003Ca href=\u0022https://github.com/magico13/StageRecovery/blob/master/StageRecovery/StageRecovery.cs\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://github.com/magico13/StageRecovery/blob/master/StageRecovery/StageRecovery.cs\u003C/a\u003E\u003C/p\u003E\u003Cp\u003ENote wiring functions up to events so that the Addon can hook and have an opportunity to modify game behaviors:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E        //Fired when the mod loads each scene\u003Cbr\u003E        public void Start()\u003Cbr\u003E        {\u003Cbr\u003E            if (Settings.instance != null)\u003Cbr\u003E                Settings.instance.gui.hideAll();\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            //If we\u0027re in the MainMenu, don\u0027t do anything\u003Cbr\u003E            if (forbiddenScenes.Contains(HighLogic.LoadedScene))\u003Cbr\u003E                return;\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E            //If the event hasn\u0027t been added yet, run this code (adds the event and the stock button)\u003Cbr\u003E            if (!eventAdded)\u003Cbr\u003E            {\u003Cbr\u003E                GameEvents.onGameSceneLoadRequested.Add(GameSceneLoadEvent);\u003Cbr\u003E                //Add the VesselDestroyEvent to the listeners\u003Cbr\u003E                GameEvents.onVesselDestroy.Add(VesselDestroyEvent);\u003Cbr\u003E                //Add the event that listens for unloads (for removing launch clamps)\u003Cbr\u003E                GameEvents.onVesselGoOnRails.Add(VesselUnloadEvent);\u003Cbr\u003E                //GameEvents..Add(DecoupleEvent);\u003Cbr\u003E                //If Blizzy\u0027s toolbar isn\u0027t available, use the stock one\u003Cbr\u003E              //  if (!ToolbarManager.ToolbarAvailable)\u003Cbr\u003E                GameEvents.onGUIApplicationLauncherReady.Add(Settings.instance.gui.OnGUIAppLauncherReady);\u003Cbr\u003E                //Set the eventAdded flag to true so this code doesn\u0027t run again\u003Cbr\u003E                eventAdded = true;\u003Cbr\u003E            }\u003Cbr\u003E        ....\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EGameEvents are a bit funky data structure for exposing events. \u003Cstrong\u003EHere\u0027s how you can determine what types you need in your event handler.\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003EType this in Visual Studio:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EGameEvents.onVesselRecoveryProcessing.Add(\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EAnd then mouse over .Add( or hit Ctrl\u002BK\u002BP to popup parameter info, you should see the parameter type of \u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EEventData\u0026lt;ProtoVessel,MissionRecoveryDialog,float\u0026gt;.OnEvent\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EIf you\u0027re familiar with Func\u0026lt;X,Y,Z\u0026gt; generic delegates, this is essentially the same thing.\u003C/p\u003E\u003Cp\u003EThe above types in angle brackets \u0060\u0026lt;ProtoVessel,MissionRecoveryDialog,float\u0026gt;\u0060 tells you that you need to declare a function with those three parameters:\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003E      void OnVesselRecoveryProcessing(ProtoVessel vessel, MissionRecoveryDialog recoveryDialog, float unknown)\u003Cbr\u003E      {\u003Cbr\u003E\u003Cbr\u003E      }\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003EThe parameter types are self explanitory sometimes, but a primitive type like float is a bit of a mystery. If the documentation doesn\u0027t reveal anything useful, then probably just using \u0060print(\u0060 to print to Debug window values as the event is triggered is best way to try and guess the meaning of the parameter.\u003C/p\u003E\u003Cp\u003E\u003Ca href=\u0022https://anatid.github.io/XML-Documentation-for-the-KSP-API/class_game_events.html#a17641c8a2f9a01e61eec763737eb7b89\u0022 rel=\u0022external nofollow\u0022\u003Ehttps://anatid.github.io/XML-Documentation-for-the-KSP-API/class_game_events.html#a17641c8a2f9a01e61eec763737eb7b89\u003C/a\u003E\u003C/p\u003E\u003Cp\u003EOnce you\u0027ve declared your function, then pass the function name to .Add. When you reference a function by name without parenthesis then you are passing it as a delegate instead of executing it. If you are familiar with function pointers in other languages, this is a similar concept.\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003ERIGHT:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EGameEvents.onVesselRecoveryProcessing.Add( OnVesselRecoveryProcessing );\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\u003Cp\u003E\u003Cstrong\u003EWRONG:\u003C/strong\u003E\u003C/p\u003E\u003Cp\u003E\u003C/p\u003E\u003Cdiv\u003E\u003C/div\u003E\u003Cpre class=\u0022ipsCode\u0022\u003E\u003Cbr\u003EGameEvents.onVesselRecoveryProcessing.Add( OnVesselRecoveryProcessing() );\u003Cbr\u003E\u003C/pre\u003E\u003Cp\u003E\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222015-07-03T23:02:55Z\u0022 title=\u002207/03/2015 11:02  PM\u0022 data-short=\u00229 yr\u0022\u003EJuly 3, 2015\u003C/time\u003E by AaronLS\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2015-07-03T23:28:50Z","Content":"\n\u003Cp\u003EYou may not have noticed but this was specifically about VesselModule type plugins, for which there was no information unless you happened to stumble upon them in one of about 4 plugins and do your own testing to ascertain the behaviour. The only reason the other plugin types are mentioned is as a comparison, there are hundreds of examples of PartModules and MonoBehaviour/KSPAddon out there. If you look at all you can\u0027t miss them.\u003C/p\u003E\u003Cp\u003Etl;dr\u003C/p\u003E\u003Cp\u003ENice helpful post, but the context is somewhat lacking...\u003C/p\u003E\n"},{"CreatedByName":"AaronLS","CreatedById":142846,"CreatedDateTime":"2015-07-03T23:55:00Z","Content":"\n\u003Cp\u003EYes, I did notice that, but I wanted to mention that more than anything that list was the most valuable. Yes, there may be many example of each, but if you aren\u0027t even aware of the different mod types they are very hard to find. Any google of \u0022ksp add on\u0022 turns up pages listing part modules. This is the first time I\u0027ve seen the different types all listed together and distinguished as to what their purpose is. I had seen this post when you first posted it, and today I was wanting to mod the recovery process and was asking myself \u0022Is this even possible? Is there a way to mod the entire game? I\u0027m sure I saw someone mention that somewhere.\u0022 I actually thought I remembered you refer to it as an \u0022Add On\u0022 but every google of \u0022ksp add on\u0022 turns up just generic pages dealing with any type of KSP mod, which are mostly PartModules. The entire first page of results are just pages that list mods. I began to question whether I was mistaken in what I had remembered, but I kept hunting around and googling and found this post again.\u003C/p\u003E\u003Cp\u003EMany of the getting started examples and tutorials jump right into things like \u0022Let\u0027s make an engine\u0022 that is so specific that I found them of virtually no use. I got tired of trudging through that and I\u0027ve been learning more from looking through code on github than anything else.\u003C/p\u003E\u003Cp\u003EI just thought I\u0027d build upon that and expand slightly deeper to emphasize exactly what a KSP Add on is. I realize that wasn\u0027t the original purpose of the post. But the list was the only comprehensive list I\u0027ve seen and thought I\u0027d build upon that with just a little bit more concrete information. I find that kind of detailed information is helpful in selecting what approach to take in anything programming related. Conceptual descriptions help a little bit, but seeing just a couple examples helps make it more concrete and that decision process has alot more to go on.\u003C/p\u003E\n"},{"CreatedByName":"FreeThinker","CreatedById":117389,"CreatedDateTime":"2020-08-11T15:13:12Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222017726\u0022 data-ipsquote-contentid=\u0022113689\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221434987904\u0022 data-ipsquote-userid=\u002281549\u0022 data-ipsquote-username=\u0022Diazo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\nOn 6/22/2015 at 5:45 PM, Diazo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nKnown to NOT work: OnSave(), OnLoad()\n\u003C/p\u003E\n\u003Cp\u003E\nThis is the biggest limitation of VesselModule, there is no persistence with the .sfs file, you have to save/load data manually or hook into a PartModule to persist data.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWhat exavtly do you mean by \u0022Known to NOT work\u0022?\u00A0 OnStart and OnLoad are called durring runtime and [KSPField(isPersistant = true)] seems to save variables (KSP 1.8.1)\n\u003C/p\u003E\n\u003Cp\u003E\nPerhaps they fixed it?\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222020-08-11T15:34:11Z\u0022 title=\u002208/11/2020 03:34  PM\u0022 data-short=\u00223 yr\u0022\u003EAugust 11, 2020\u003C/time\u003E by FreeThinker\u003C/strong\u003E\n\u003C/span\u003E\n"}]}