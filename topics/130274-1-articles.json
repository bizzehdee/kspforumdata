{"TopicId":130274,"ForumId":29,"TopicTitle":"Parts relative rotation an position to parent","CreatedByName":"kimiko","CreatedById":112505,"CreatedDateTime":"2016-01-19T13:29:53Z","PageNum":1,"Articles":[{"CreatedByName":"kimiko","CreatedById":112505,"CreatedDateTime":"2016-01-19T13:29:53Z","Content":"\n\u003Cp\u003E\nGreetings! : D\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve been trying to figure out a method for measuring a crafts \u0022wobbliness\u0022/rigidity and have things happen when it\u0027s poorly constructed or subjected to excess stress. I\u0027ve been looking into breaking forces and torque, but as I have understood, it is not possible to have Unity give up any values on forces applied to a part\u0027s joints, except when it has actually fallen off.\n\u003C/p\u003E\n\u003Cp\u003E\nI was therefore thinking of trying to measure parts relative rotation and position to its parent part (or joint). Then store the values at start of a flight. Then during flight check the offset values of the original position/rotation. Then finally, have thing happen when the offset values are too great.\n\u003C/p\u003E\n\u003Cp\u003E\nHowever, I\u0027ve been trying for a while to figure out exactly what I should measure (or where I can get the information I need), but I\u0027m still just as clueless as I was when I started.\n\u003C/p\u003E\n\u003Cp\u003E\nAny help would be greatly appreciated : D\n\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2016-01-19T17:23:45Z","Content":"\n\u003Cp\u003E\nUnity\u0027s different frame of references will help you here, specifically the LocalSpace reference.\n\u003C/p\u003E\n\u003Cp\u003E\nWorldSpace is the absolute coordinates of the actual 3D game world, if a part moves 10 meters, it\u0027s position vector will have changed by 10 meters.\n\u003C/p\u003E\n\u003Cp\u003E\nLocalSpace is relative to the part. (So yes, each part has it\u0027s own LocalSpace.) From your current part, get the zero location of it\u0027s parent part in LocalSpace and store it. As LocalSpace is relative to the part, any changes in this number mean the relative positions of the parts has changed that much.\n\u003C/p\u003E\n\u003Cp\u003E\nNote that KSP has a couple odd quirks with frame of reference:\n\u003C/p\u003E\n\u003Cp\u003E\nWorldSpace: While WorldSpace is absolute, it is also limited to the area immediately around the vessel as that is only the area of space being simulated by KSP. So WorldSpace coordinates are not persistent or consistent, don\u0027t rely on them.\n\u003C/p\u003E\n\u003Cp\u003E\nScaledSpace: Specific to KSP, this was added to calculate orbits as the numbers involved were getting so big that math overflow errors were occuring. I never worked with this and don\u0027t know any further details.\n\u003C/p\u003E\n\u003Cp\u003E\nHope that helps,\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2016-01-19T20:43:08Z","Content":"\n\u003Cp\u003E\nPart.orgRot may do about 90% of what you\u0027re trying to do. Something like this (note: only slightly verified Quat math...)\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\u003Cspan\u003EQuaternion\u003C/span\u003E\u003Cspan\u003E rotError \u003C/span\u003E\u003Cspan\u003E=\u003C/span\u003E\u003Cspan\u003E part\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\u003Cspan\u003Etransform\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\u003Cspan\u003ElocalRotation \u003C/span\u003E\u003Cspan\u003E*\u003C/span\u003E\u003Cspan\u003E part\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\u003Cspan\u003EorgRot\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\u003Cspan\u003EInverse\u003C/span\u003E\u003Cspan\u003E();\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nShould be able to tell you how much the part has deviated from it\u0027s original rotation\n\u003C/p\u003E\n\u003Cp\u003E\nThere\u0027s also a part.orgPos field that probably can be used the same way. Whether that is relative to it\u0027s parent or the vessel would determine how useful it is though\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint\u0022\u003E\nVector3 locError = part.transform.localPosition - part.orgLoc;\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-01-19T20:46:30Z\u0022 title=\u002201/19/2016 08:46  PM\u0022 data-short=\u00228 yr\u0022\u003EJanuary 19, 2016\u003C/time\u003E by Crzyrndm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2016-01-19T21:13:54Z","Content":"\n\u003Cp\u003E\nMay I suggest the use of\u00A0Quaternion.Angle( part.transform.localRotation ,\u00A0part.orgRot.Inverse()) to make things even easier ?\n\u003C/p\u003E\n"},{"CreatedByName":"Crzyrndm","CreatedById":92871,"CreatedDateTime":"2016-01-19T21:20:50Z","Content":"\n\u003Cp\u003E\nMaybe not any inverse in that case (haven\u0027t dealt with Quat math in a while, but that wouldn\u0027t that be 180 when they\u0027re aligned?), but yes...\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-01-19T21:22:06Z\u0022 title=\u002201/19/2016 09:22  PM\u0022 data-short=\u00228 yr\u0022\u003EJanuary 19, 2016\u003C/time\u003E by Crzyrndm\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"kimiko","CreatedById":112505,"CreatedDateTime":"2016-01-19T21:54:05Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222369843\u0022 data-ipsquote-contentid=\u0022130274\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221453224225\u0022 data-ipsquote-userid=\u002281549\u0022 data-ipsquote-username=\u0022Diazo\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 hours ago, Diazo said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nUnity\u0027s different frame of references will help you here, specifically the LocalSpace reference.\n\u003C/p\u003E\n\u003Cp\u003E\nWorldSpace is the absolute coordinates of the actual 3D game world, if a part moves 10 meters, it\u0027s position vector will have changed by 10 meters.\n\u003C/p\u003E\n\u003Cp\u003E\nLocalSpace is relative to the part. (So yes, each part has it\u0027s own LocalSpace.) From your current part, get the zero location of it\u0027s parent part in LocalSpace and store it. As LocalSpace is relative to the part, any changes in this number mean the relative positions of the parts has changed that much.\n\u003C/p\u003E\n\u003Cp\u003E\nNote that KSP has a couple odd quirks with frame of reference:\n\u003C/p\u003E\n\u003Cp\u003E\nWorldSpace: While WorldSpace is absolute, it is also limited to the area immediately around the vessel as that is only the area of space being simulated by KSP. So WorldSpace coordinates are not persistent or consistent, don\u0027t rely on them.\n\u003C/p\u003E\n\u003Cp\u003E\nScaledSpace: Specific to KSP, this was added to calculate orbits as the numbers involved were getting so big that math overflow errors were occuring. I never worked with this and don\u0027t know any further details.\n\u003C/p\u003E\n\u003Cp\u003E\nHope that helps,\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nThis helps a lot! It\u0027s a lot more complicated than I expected. Thanks! : D\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222370107\u0022 data-ipsquote-contentid=\u0022130274\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221453236188\u0022 data-ipsquote-userid=\u002292871\u0022 data-ipsquote-username=\u0022Crzyrndm\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 hour ago, Crzyrndm said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nPart.orgRot may do about 90% of what you\u0027re trying to do. Something like this (note: only slightly verified Quat math...)\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\n\u003Cspan\u003EQuaternion\u003C/span\u003E\u003Cspan\u003E rotError \u003C/span\u003E\u003Cspan\u003E=\u003C/span\u003E\u003Cspan\u003E part\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\u003Cspan\u003Etransform\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\u003Cspan\u003ElocalRotation \u003C/span\u003E\u003Cspan\u003E*\u003C/span\u003E\u003Cspan\u003E part\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\u003Cspan\u003EorgRot\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\u003Cspan\u003EInverse\u003C/span\u003E\u003Cspan\u003E();\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nShould be able to tell you how much the part has deviated from it\u0027s original rotation\n\u003C/p\u003E\n\u003Cp\u003E\nThere\u0027s also a part.orgPos field that probably can be used the same way. Whether that is relative to it\u0027s parent or the vessel would determine how useful it is though\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint prettyprinted\u0022\u003E\n\n\u003Cspan\u003EVector3\u003C/span\u003E\u003Cspan\u003E locError \u003C/span\u003E\u003Cspan\u003E=\u003C/span\u003E\u003Cspan\u003E part\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\u003Cspan\u003Etransform\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\u003Cspan\u003ElocalPosition \u003C/span\u003E\u003Cspan\u003E-\u003C/span\u003E\u003Cspan\u003E part\u003C/span\u003E\u003Cspan\u003E.\u003C/span\u003E\u003Cspan\u003EorgLoc\u003C/span\u003E\u003Cspan\u003E;\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nAmazing! This seems to be exactly what I was looking for! Thanks! \u003Cimg alt=\u0022:D\u0022 data-emoticon=\u0022true\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_cheesy.gif\u0022 title=\u0022:D\u0022\u003E\u003C/p\u003E\n"}]}