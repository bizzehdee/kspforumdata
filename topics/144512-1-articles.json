{"TopicId":144512,"ForumId":29,"TopicTitle":"[RESOLVED] Q: Correct way to write to the log.","CreatedByName":"genericeventhandler","CreatedById":149557,"CreatedDateTime":"2016-07-25T09:36:28Z","PageNum":1,"Articles":[{"CreatedByName":"genericeventhandler","CreatedById":149557,"CreatedDateTime":"2016-07-25T09:36:28Z","Content":"\n\u003Cp\u003E\nTL;DR: Exceptions are bad, what is the correct way to write to the log?\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027m currently looking at other peoples code to learn more about how things work,\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nIn the mod I\u0027m looking at, no names, the developer is using Exceptions to log information.\n\u003C/p\u003E\n\u003Cp\u003E\nI\u0027ve been doing C# since before day 1, and Exceptions shouldn\u0027t be used to define logic, they are hugely memory consuming and slow.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nSo what is the correct way to write to the log in KSP? I might change this mod as it\u0027s one I use regularly.\n\u003C/p\u003E\n\u003Cp\u003E\nThanks\u003Cbr\u003E\nGE\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-07-25T09:44:16Z\u0022 title=\u002207/25/2016 09:44  AM\u0022 data-short=\u00227 yr\u0022\u003EJuly 25, 2016\u003C/time\u003E by genericeventhandler\u003C/strong\u003E\n\u003Cbr\u003EAnswered\n\u003C/span\u003E\n"},{"CreatedByName":"Thomas P.","CreatedById":113164,"CreatedDateTime":"2016-07-25T09:37:42Z","Content":"\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003EUnityEngine.Debug.Log(\u0022Hello!\u0022)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nmight be what you are looking for\n\u003C/p\u003E\n"},{"CreatedByName":"genericeventhandler","CreatedById":149557,"CreatedDateTime":"2016-07-25T09:39:46Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222690136\u0022 data-ipsquote-contentid=\u0022144512\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221469439462\u0022 data-ipsquote-userid=\u0022113164\u0022 data-ipsquote-username=\u0022Thomas P.\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 minutes ago, Thomas P. said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\n\u003Cspan\u003EUnityEngine\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003EDebug\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan\u003ELog\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Hello!\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nmight be what you are looking for\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt\u0027s not the debug log, but the actual log file that he is trying to write to, \u00A0or is that the same thing?\n\u003C/p\u003E\n"},{"CreatedByName":"Thomas P.","CreatedById":113164,"CreatedDateTime":"2016-07-25T09:42:22Z","Content":"\n\u003Cp\u003E\nDebug.Log writes the given message to output_log.txt / Player.log / KSP.log. Thrown exceptions end up there too, unless you catch them and redirect them manually.\n\u003C/p\u003E\n"},{"CreatedByName":"genericeventhandler","CreatedById":149557,"CreatedDateTime":"2016-07-25T09:43:48Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222690141\u0022 data-ipsquote-contentid=\u0022144512\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221469439742\u0022 data-ipsquote-userid=\u0022113164\u0022 data-ipsquote-username=\u0022Thomas P.\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, Thomas P. said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nDebug.Log writes the given message to output_log.txt / Player.log / KSP.log. Thrown exceptions end up there too, unless you catch them and redirect them manually.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nCool thanks \u003Cimg alt=\u0022:)\u0022 data-emoticon=\u0022\u0022 src=\u0022//kerbal-forum-uploads.s3.us-west-2.amazonaws.com/emoticons/default_k_smiley.gif\u0022 title=\u0022:)\u0022\u003E\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2016-07-25T11:46:14Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222690134\u0022 data-ipsquote-contentid=\u0022144512\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221469439388\u0022 data-ipsquote-userid=\u0022149557\u0022 data-ipsquote-username=\u0022genericeventhandler\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n2 hours ago, genericeventhandler said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nIn the mod I\u0027m looking at, no names, the developer is using Exceptions to log information.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nWhat do you mean by that ? The code uses throw to log ?\n\u003C/p\u003E\n"},{"CreatedByName":"genericeventhandler","CreatedById":149557,"CreatedDateTime":"2016-07-25T11:54:27Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222690207\u0022 data-ipsquote-contentid=\u0022144512\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221469447174\u0022 data-ipsquote-userid=\u002257146\u0022 data-ipsquote-username=\u0022sarbian\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n1 minute ago, sarbian said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nWhat do you mean by that ? The code uses throw to log ?\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nPsudeo code, because I don\u0027t want to point fingers.\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-javascript prettyprinted\u0022\u003E\n\u003Cspan\u003EIf\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EvesselPart \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enull\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ethrow\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EException\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022str\u0022\u003E\u0022Vessel part not found\u0022\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E);\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\nand in the calling method\u00A0\n\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Etry\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.....\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ecatch\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EException\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// log the message. \u00A0\u0026lt;\u0026lt;\u0026lt;\u0026lt; GE: psuedo comment in the code.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ethrow\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThere are other instances, where it\u0027s just being used for logic\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-javascript prettyprinted\u0022\u003E\n\u003Cspan class=\u0022kwd\u0022\u003Etry\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u00A0 \u00A0\u003C/span\u003E\u003Cspan\u003EPerformActionOnPart\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ecatch\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003EException\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// Part not found\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nProbably a Java developer at heart, as exceptions are pretty lightweight in Java. No so in C#\n\u003C/p\u003E\n\u003Cp\u003E\nGE\n\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2016-07-25T12:06:47Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222690211\u0022 data-ipsquote-contentid=\u0022144512\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221469447667\u0022 data-ipsquote-userid=\u0022149557\u0022 data-ipsquote-username=\u0022genericeventhandler\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n6 minutes ago, genericeventhandler said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nProbably a Java developer at heart, as exceptions are pretty lightweight in Java. No so in C#\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nlightweight (and I would not agree here) does not make them a good way to handle logic.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nThe others cases have their use. The null check makes sense if it should never append and is not bad code IMHO. The catch and throw make handling some specific case easier to read but I agree that\u0027s not the kind of thing to abuse (I do it in \u003Cabbr title=\u0022Module Manager (mod)\u0022\u003EMM\u003C/abbr\u003E where handling the exception deep in a coroutine would block the loading.)\n\u003C/p\u003E\n"},{"CreatedByName":"genericeventhandler","CreatedById":149557,"CreatedDateTime":"2016-07-25T12:39:07Z","Content":"\n\u003Cp\u003E\nI didn\u0027t say it was good programming practice, just overused in java.\u00A0\n\u003C/p\u003E\n\u003Cul\u003E\u003Cli\u003E\nIn C# if you don\u0027t know how to handle something throw the correct exception, or a new exception inherited from System.Exception (never ApplicationException and never inherited from another exception)\n\u003C/li\u003E\n\u003Cli\u003E\nif the method you are calling throws exceptions, can you avoid those exceptions by doing some checking before?\n\u003C/li\u003E\n\u003Cli\u003E\nif you can\u0027t avoid the exception, let it bubble to a method that can handle it.\n\u003C/li\u003E\n\u003Cli\u003E\nLog if you catch the exception, but don\u0027t log if you throw;\u00A0\n\u003C/li\u003E\n\u003C/ul\u003E\u003Cp\u003E\nGE\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2016-07-25T16:07:52Z","Content":"\n\u003Cp\u003E\nUnfortunately, there are several quirks present relative to exceptions that I\u0027m not sure whether to blame on KSP or Unity that muddy this situation.\n\u003C/p\u003E\n\u003Cp\u003E\nI don\u0027t think I am guilty of exactly anything you are posting here, but I do use some logic that is awfully close for reasons as follows:\n\u003C/p\u003E\n\u003Cp\u003E\n1) KSP uses singletons quite a bit so I have not found any other way to handle something like this:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Epublic class Master\n{\n\tpublic static Master ourMaster\n\tpublic string ourText\n}\n\n//If ourMaster is not initialized yet...\npublic void Update()\n{\n\tif(ourMaster != null) //returns true\n\t{\n\t\tif(ourMaster.ourText != null) //this throws a NullRef error instead of returning false, need a try/catch block to handle it\n\t}\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\n2) KSP uses sequential routines a lot, for example the load routine:\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-html prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003Epublic class ourPartModule : PartModule\n{\n\tpublic ConfigNode Load(ConfigNode node) \n\t{\n\t\t//stick any code here that throws a nullref error\n\t}\n}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nThis nullref error causes the entire load routine to abort. Ran into this several months ago where only the root part would spawn as the load routine starts there, ksp would spawn the part and while trying to load the partModules on it run into this nullref error and KSP just threw its hands up and stopped the entire load routine leaving you with a single part visible in the editor.\n\u003C/p\u003E\n\u003Cp\u003E\nAgain, the only way I\u0027ve ever found to handle this is a try/catch block so you keep the error contained within your own code, but I use the existing exceptions for that so I don\u0027t think it\u0027s exactly the same issue.\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n\u003Cspan class=\u0022ipsType_reset ipsType_medium ipsType_light\u0022 data-excludequote=\u0022\u0022\u003E\n\u003Cstrong\u003EEdited \u003Ctime datetime=\u00222016-07-25T16:09:20Z\u0022 title=\u002207/25/2016 04:09  PM\u0022 data-short=\u00227 yr\u0022\u003EJuly 25, 2016\u003C/time\u003E by Diazo\u003C/strong\u003E\n\u003C/span\u003E\n"},{"CreatedByName":"genericeventhandler","CreatedById":149557,"CreatedDateTime":"2016-07-26T13:10:06Z","Content":"\n\u003Cp\u003E\nWhen dealing with statics, you need to lock the resource while you use it, I\u0027ve seen a lot of bad singleton implementations in many addons. There is only ONE way to implement a singleton that is safe \u0026lt; .Net 4.0, \u00A0above .net 4.0 there is another way but It hides why it is thread safe so I don\u0027t advise using it.\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-javascript prettyprinted\u0022\u003E\n\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eclass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ESingletonClass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// this gets instanced once per singleton class created!\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Estatic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E readonly object \u003C/span\u003E\u003Cspan\u003ELockObject\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E object\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n            \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// this gets set once per singleton class created!\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Estatic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E readonly \u003C/span\u003E\u003Cspan\u003ESingletonClass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E instance\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n            \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// hide the public creation of the class\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eprivate\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ESingletonClass\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n            \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// Gets an instance of the singleton class\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E/// \u0026lt;/summary\u0026gt;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ESingletonClass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EInstance\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eget\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                    \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// lock on the lock object, so only one LockObject is created, only one thread can pass through here\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                    lock \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan\u003ELockObject\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// is the instance null?\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Einstance \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enull\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                            \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// create a new singleton class\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                            instance \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enew\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ESingletonClass\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E();\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n                        \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E// return the new instance.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E instance\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n        \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nIf someone tries to tell you that you should use an outer if around the lock, they are wrong. The optimiser will optimise away the internal if in that case.\n\u003C/p\u003E\n\u003Cp\u003E\nIf you use the pattern above you won\u0027t get null reference exceptions because multiple threads have created multiple versions of your singleton\n\u003C/p\u003E\n\u003Cp\u003E\nhere\u0027s why you get NRE\u0027s with your code.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nYour code.\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-javascript prettyprinted\u0022\u003E\n\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eclass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EMaster\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Estatic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EMaster\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E ourMaster\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E string ourText\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n\u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//If ourMaster is not initialized yet...\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Evoid\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EUpdate\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E()\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EourMaster \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enull\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//returns true\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\t\u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EourMaster\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E.\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003EourText \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E!=\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enull\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022com\u0022\u003E//this throws a NullRef error instead of returning false, need a try/catch block to handle it\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\t\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nImagine 2 threads, \u00A0 T1 is a few ms\u00A0infront of T2.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nT1 : set ourMaster = new MasterT1\n\u003C/p\u003E\n\u003Cp\u003E\nT1 : call update\n\u003C/p\u003E\n\u003Cp\u003E\nT1: if(ourMaster != null) \u00A0 -\u0026gt; true\n\u003C/p\u003E\n\u003Cp\u003E\nT2: set ourMaster = new MasterT2 \u00A0 \u00A0// previous MasterT1 falls out of scope\n\u003C/p\u003E\n\u003Cp\u003E\nT1: if( ourMaster.ourText != null) \u00A0 -----\u0026gt;\u0026gt; \u00A0 ourMaster = MasterT1 = null -----\u0026gt; Null reference exception\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0 \u00A0 \u00A0 \u00A0 \u00A0 \u00A0\n\u003C/p\u003E\n\u003Cp\u003E\nWith the locked instance, T2 cannot replace the Master object created by T1.\n\u003C/p\u003E\n\u003Cp\u003E\nif you really don\u0027t want the locks you can create a new static Property like this,\u00A0\n\u003C/p\u003E\n\u003Cpre class=\u0022ipsCode prettyprint lang-javascript prettyprinted\u0022\u003E\n\u003Cspan class=\u0022kwd\u0022\u003Epublic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Estatic\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003ESingletonClass\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EInstanceNotSafe\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eget\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Eif\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E(\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003Einstance \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E==\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Enull\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E)\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E{\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                        \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E \u003C/span\u003E\u003Cspan\u003EInstance\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                    \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n\n                    \u003C/span\u003E\u003Cspan class=\u0022kwd\u0022\u003Ereturn\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E instance\u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E;\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n                \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003Cspan class=\u0022pln\u0022\u003E\n            \u003C/span\u003E\u003Cspan class=\u0022pun\u0022\u003E}\u003C/span\u003E\u003C/pre\u003E\n\u003Cp\u003E\nAll threads will block on the instance, the first time around, but after it\u0027s been created it\u0027s semi safe to use.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2016-07-26T13:22:31Z","Content":"\n\u003Cp\u003E\nNothing in the execution of a Unity Monobehaviour/GameObject is threaded.\n\u003C/p\u003E\n"},{"CreatedByName":"genericeventhandler","CreatedById":149557,"CreatedDateTime":"2016-07-26T13:28:48Z","Content":"\n\u003Cblockquote class=\u0022ipsQuote\u0022 data-ipsquote=\u0022\u0022 data-ipsquote-contentapp=\u0022forums\u0022 data-ipsquote-contentclass=\u0022forums_Topic\u0022 data-ipsquote-contentcommentid=\u00222691632\u0022 data-ipsquote-contentid=\u0022144512\u0022 data-ipsquote-contenttype=\u0022forums\u0022 data-ipsquote-timestamp=\u00221469539351\u0022 data-ipsquote-userid=\u002257146\u0022 data-ipsquote-username=\u0022sarbian\u0022\u003E\n\u003Cdiv class=\u0022ipsQuote_citation\u0022\u003E\n4 minutes ago, sarbian said:\n\u003C/div\u003E\n\u003Cdiv class=\u0022ipsQuote_contents\u0022\u003E\n\u003Cp\u003E\nNothing in the execution of a Unity Monobehaviour/GameObject is threaded.\n\u003C/p\u003E\n\u003C/div\u003E\n\u003C/blockquote\u003E\n\u003Cp\u003E\nIt uses events though doesn\u0027t it? \u00A0anything that could delete your statics / reset them to a new object needs to be protected.\u00A0\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"},{"CreatedByName":"sarbian","CreatedById":57146,"CreatedDateTime":"2016-07-26T13:35:13Z","Content":"\n\u003Cp\u003E\nNothing will interrupt your code. Using lock is going overboard there.\n\u003C/p\u003E\n"},{"CreatedByName":"Diazo","CreatedById":81549,"CreatedDateTime":"2016-07-26T16:27:20Z","Content":"\n\u003Cp\u003E\n\u003Ca contenteditable=\u0022false\u0022 data-ipshover=\u0022\u0022 data-ipshover-target=\u0022https://forum.kerbalspaceprogram.com/index.php?/profile/149557-genericeventhandler/\u0026amp;do=hovercard\u0022 data-mentionid=\u0022149557\u0022 href=\u0022%7B___base_url___%7D/index.php?/profile/149557-genericeventhandler/\u0022 rel=\u0022\u0022\u003E@genericeventhandler\u003C/a\u003E The issue that I\u0027m using that code to reference singeltons in the stock KSP code which I can\u0027t make changes to so I work around this issue with the try/catch block.\n\u003C/p\u003E\n\u003Cp\u003E\nIt works and I know of no better solution, and I\u0027ve bounced this question off the forum and #KSPModders before (although months, maybe over a year, ago) and no one else had any ideas either.\n\u003C/p\u003E\n\u003Cp\u003E\nD.\n\u003C/p\u003E\n\u003Cp\u003E\n\u00A0\n\u003C/p\u003E\n"}]}